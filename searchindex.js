Search.setIndex({"docnames": ["_version", "assertions", "assertions/check_all", "assertions/check_all_or_any_fn", "assertions/check_any", "assertions/check_dimensions", "assertions/check_elem_in_list", "assertions/check_equal", "assertions/check_exists", "assertions/check_false", "assertions/check_fill_value_and_dtype_are_compatible", "assertions/check_gather_input_valid", "assertions/check_gather_nd_input_valid", "assertions/check_greater", "assertions/check_inplace_sizes_valid", "assertions/check_isinstance", "assertions/check_kernel_padding_size", "assertions/check_less", "assertions/check_one_way_broadcastable", "assertions/check_same_dtype", "assertions/check_shape", "assertions/check_shapes_broadcastable", "assertions/check_true", "backend_handler", "backend_handler/ContextManager", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/convert_from_numpy_to_target_backend", "backend_handler/convert_from_source_backend_to_numpy", "backend_handler/current_backend", "backend_handler/fn_name_from_version_specific_fn_name", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/set_backend_to_specific_version", "backend_handler/set_jax_backend", "backend_handler/set_numpy_backend", "backend_handler/set_tensorflow_backend", "backend_handler/set_torch_backend", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/applied_libraries", "contributing/building_the_docs", "contributing/helpful_resources", "contributing/open_tasks", "contributing/setting_up", "contributing/the_basics", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/array", "data_classes/array/array/Array", "data_classes/array/conversions", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/experimental", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linear_algebra", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/conversions", "data_classes/container/conversions/ContainerWithConversions", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/experimental", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linear_algebra", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/array_api_tests", "deep_dive/arrays", "deep_dive/backend_setting", "deep_dive/containers", "deep_dive/continuous_integration", "deep_dive/data_types", "deep_dive/devices", "deep_dive/docstring_examples", "deep_dive/docstrings", "deep_dive/exception_handling", "deep_dive/formatting", "deep_dive/function_arguments", "deep_dive/function_types", "deep_dive/function_wrapping", "deep_dive/inplace_updates", "deep_dive/ivy_frontends", "deep_dive/ivy_frontends_tests", "deep_dive/ivy_tests", "deep_dive/navigating_the_code", "deep_dive/superset_behaviour", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_array_function", "func_wrapper/handle_array_like_without_promotion", "func_wrapper/handle_nans", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/integer_arrays_to_float", "func_wrapper/output_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_ivy_arrays_and_back", "func_wrapper/to_native_arrays_and_back", "func_wrapper/try_array_function_override", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/deserialize", "functional/ivy/activations/gelu", "functional/ivy/activations/gelu/gelu_array", "functional/ivy/activations/gelu/gelu_container", "functional/ivy/activations/gelu/gelu_functional", "functional/ivy/activations/gelu/static_gelu_container", "functional/ivy/activations/get", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/leaky_relu/leaky_relu_array", "functional/ivy/activations/leaky_relu/leaky_relu_container", "functional/ivy/activations/leaky_relu/leaky_relu_functional", "functional/ivy/activations/leaky_relu/static_leaky_relu_container", "functional/ivy/activations/log_softmax", "functional/ivy/activations/log_softmax/log_softmax_array", "functional/ivy/activations/log_softmax/log_softmax_container", "functional/ivy/activations/log_softmax/log_softmax_functional", "functional/ivy/activations/log_softmax/static_log_softmax_container", "functional/ivy/activations/mish", "functional/ivy/activations/mish/mish_array", "functional/ivy/activations/mish/mish_container", "functional/ivy/activations/mish/mish_functional", "functional/ivy/activations/mish/static_mish_container", "functional/ivy/activations/relu", "functional/ivy/activations/relu/relu_array", "functional/ivy/activations/relu/relu_container", "functional/ivy/activations/relu/relu_functional", "functional/ivy/activations/relu/static_relu_container", "functional/ivy/activations/sigmoid", "functional/ivy/activations/sigmoid/sigmoid_array", "functional/ivy/activations/sigmoid/sigmoid_container", "functional/ivy/activations/sigmoid/sigmoid_functional", "functional/ivy/activations/sigmoid/static_sigmoid_container", "functional/ivy/activations/softmax", "functional/ivy/activations/softmax/softmax_array", "functional/ivy/activations/softmax/softmax_container", "functional/ivy/activations/softmax/softmax_functional", "functional/ivy/activations/softmax/static_softmax_container", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/compilation", "functional/ivy/constants", "functional/ivy/control_flow_ops", "functional/ivy/control_flow_ops/IfElse", "functional/ivy/control_flow_ops/WhileLoop", "functional/ivy/control_flow_ops/if_else", "functional/ivy/control_flow_ops/while_loop", "functional/ivy/creation", "functional/ivy/creation/NestedSequence", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/asarray_handle_nestable", "functional/ivy/creation/asarray_infer_device", "functional/ivy/creation/asarray_to_native_arrays_and_back", "functional/ivy/creation/copy_array", "functional/ivy/creation/copy_array/copy_array_array", "functional/ivy/creation/copy_array/copy_array_functional", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_array", "functional/ivy/creation/linspace/linspace_container", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_array", "functional/ivy/creation/logspace/logspace_container", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/one_hot", "functional/ivy/creation/one_hot/one_hot_array", "functional/ivy/creation/one_hot/one_hot_container", "functional/ivy/creation/one_hot/one_hot_functional", "functional/ivy/creation/one_hot/static_one_hot_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/DefaultComplexDtype", "functional/ivy/data_type/DefaultDtype", "functional/ivy/data_type/DefaultFloatDtype", "functional/ivy/data_type/DefaultIntDtype", "functional/ivy/data_type/DefaultUintDtype", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_array", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_array", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/check_float", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_complex_dtype", "functional/ivy/data_type/default_complex_dtype/default_complex_dtype_functional", "functional/ivy/data_type/default_complex_dtype/static_default_complex_dtype_container", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/default_uint_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype/static_dtype_container", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_array", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_array", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/infer_default_dtype", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_bool_dtype", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container", "functional/ivy/data_type/is_complex_dtype", "functional/ivy/data_type/is_complex_dtype/is_complex_dtype_container", "functional/ivy/data_type/is_complex_dtype/is_complex_dtype_functional", "functional/ivy/data_type/is_complex_dtype/static_is_complex_dtype_container", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/is_uint_dtype", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/promote_types_of_inputs", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_array", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_complex_dtype", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/set_default_uint_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_complex_dtype", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/unset_default_uint_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev/dev_array", "functional/ivy/device/dev/dev_container", "functional/ivy/device/dev/dev_functional", "functional/ivy/device/dev/static_dev_container", "functional/ivy/device/dev_util", "functional/ivy/device/function_supported_devices", "functional/ivy/device/function_unsupported_devices", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/to_device/static_to_device_container", "functional/ivy/device/to_device/to_device_array", "functional/ivy/device/to_device/to_device_container", "functional/ivy/device/to_device/to_device_functional", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acos/static_acos_container", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/acosh/static_acosh_container", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asin/static_asin_container", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan/static_atan_container", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atan2/static_atan2_container", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/atanh/static_atanh_container", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/ceil/static_ceil_container", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cos/static_cos_container", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/cosh/static_cosh_container", "functional/ivy/elementwise/deg2rad", "functional/ivy/elementwise/deg2rad/deg2rad_array", "functional/ivy/elementwise/deg2rad/deg2rad_container", "functional/ivy/elementwise/deg2rad/deg2rad_functional", "functional/ivy/elementwise/deg2rad/static_deg2rad_container", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/equal/static_equal_container", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/erf/static_erf_container", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/exp/static_exp_container", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/expm1/static_expm1_container", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor/static_floor_container", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/floor_divide/static_floor_divide_container", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater/static_greater_container", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/greater_equal/static_greater_equal_container", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isfinite/static_isfinite_container", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isinf/static_isinf_container", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/isnan/static_isnan_container", "functional/ivy/elementwise/isreal", "functional/ivy/elementwise/isreal/isreal_array", "functional/ivy/elementwise/isreal/isreal_container", "functional/ivy/elementwise/isreal/isreal_functional", "functional/ivy/elementwise/isreal/static_isreal_container", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less/static_less_container", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/less_equal/static_less_equal_container", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log/static_log_container", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log10/static_log10_container", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log1p/static_log1p_container", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/log2/static_log2_container", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logaddexp/static_logaddexp_container", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_and/static_logical_and_container", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_not/static_logical_not_container", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_or/static_logical_or_container", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/logical_xor/static_logical_xor_container", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/maximum/maximum_array", "functional/ivy/elementwise/maximum/maximum_container", "functional/ivy/elementwise/maximum/maximum_functional", "functional/ivy/elementwise/maximum/static_maximum_container", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/minimum/minimum_array", "functional/ivy/elementwise/minimum/minimum_container", "functional/ivy/elementwise/minimum/minimum_functional", "functional/ivy/elementwise/minimum/static_minimum_container", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/negative/static_negative_container", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/not_equal/static_not_equal_container", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/positive/static_positive_container", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/pow/static_pow_container", "functional/ivy/elementwise/rad2deg", "functional/ivy/elementwise/rad2deg/rad2deg_array", "functional/ivy/elementwise/rad2deg/rad2deg_container", "functional/ivy/elementwise/rad2deg/rad2deg_functional", "functional/ivy/elementwise/rad2deg/static_rad2deg_container", "functional/ivy/elementwise/reciprocal", "functional/ivy/elementwise/reciprocal/reciprocal_array", "functional/ivy/elementwise/reciprocal/reciprocal_container", "functional/ivy/elementwise/reciprocal/reciprocal_functional", "functional/ivy/elementwise/reciprocal/static_reciprocal_container", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/remainder/static_remainder_container", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/round/static_round_container", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sin/static_sin_container", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sinh/static_sinh_container", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/sqrt/static_sqrt_container", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/square/static_square_container", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/tanh/static_tanh_container", "functional/ivy/elementwise/tanh/tanh_array", "functional/ivy/elementwise/tanh/tanh_container", "functional/ivy/elementwise/tanh/tanh_functional", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/static_trunc_container", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/elementwise/trunc_divide", "functional/ivy/elementwise/trunc_divide/static_trunc_divide_container", "functional/ivy/elementwise/trunc_divide/trunc_divide_array", "functional/ivy/elementwise/trunc_divide/trunc_divide_container", "functional/ivy/elementwise/trunc_divide/trunc_divide_functional", "functional/ivy/experimental", "functional/ivy/experimental/NativeSparseArray", "functional/ivy/experimental/SparseArray", "functional/ivy/experimental/activations", "functional/ivy/experimental/activations/logit", "functional/ivy/experimental/activations/prelu", "functional/ivy/experimental/activations/thresholded_relu", "functional/ivy/experimental/adjoint", "functional/ivy/experimental/adjoint/adjoint_array", "functional/ivy/experimental/adjoint/adjoint_container", "functional/ivy/experimental/adjoint/adjoint_functional", "functional/ivy/experimental/adjoint/static_adjoint_container", "functional/ivy/experimental/allclose", "functional/ivy/experimental/allclose/allclose_array", "functional/ivy/experimental/allclose/allclose_container", "functional/ivy/experimental/allclose/allclose_functional", "functional/ivy/experimental/allclose/static_allclose_container", "functional/ivy/experimental/angle", "functional/ivy/experimental/angle/angle_array", "functional/ivy/experimental/angle/angle_container", "functional/ivy/experimental/angle/angle_functional", "functional/ivy/experimental/angle/static_angle_container", "functional/ivy/experimental/atleast_1d", "functional/ivy/experimental/atleast_1d/atleast_1d_array", "functional/ivy/experimental/atleast_1d/atleast_1d_container", "functional/ivy/experimental/atleast_1d/atleast_1d_functional", "functional/ivy/experimental/atleast_1d/static_atleast_1d_container", "functional/ivy/experimental/atleast_2d", "functional/ivy/experimental/atleast_2d/atleast_2d_array", "functional/ivy/experimental/atleast_2d/atleast_2d_container", "functional/ivy/experimental/atleast_2d/atleast_2d_functional", "functional/ivy/experimental/atleast_2d/static_atleast_2d_container", "functional/ivy/experimental/atleast_3d", "functional/ivy/experimental/atleast_3d/atleast_3d_array", "functional/ivy/experimental/atleast_3d/atleast_3d_container", "functional/ivy/experimental/atleast_3d/atleast_3d_functional", "functional/ivy/experimental/atleast_3d/static_atleast_3d_container", "functional/ivy/experimental/avg_pool1d", "functional/ivy/experimental/avg_pool1d/avg_pool1d_array", "functional/ivy/experimental/avg_pool1d/avg_pool1d_container", "functional/ivy/experimental/avg_pool1d/avg_pool1d_functional", "functional/ivy/experimental/avg_pool1d/static_avg_pool1d_container", "functional/ivy/experimental/avg_pool2d", "functional/ivy/experimental/avg_pool2d/avg_pool2d_array", "functional/ivy/experimental/avg_pool2d/avg_pool2d_container", "functional/ivy/experimental/avg_pool2d/avg_pool2d_functional", "functional/ivy/experimental/avg_pool2d/static_avg_pool2d_container", "functional/ivy/experimental/avg_pool3d", "functional/ivy/experimental/avg_pool3d/avg_pool3d_array", "functional/ivy/experimental/avg_pool3d/avg_pool3d_container", "functional/ivy/experimental/avg_pool3d/avg_pool3d_functional", "functional/ivy/experimental/avg_pool3d/static_avg_pool3d_container", "functional/ivy/experimental/bernoulli", "functional/ivy/experimental/bernoulli/bernoulli_array", "functional/ivy/experimental/bernoulli/bernoulli_container", "functional/ivy/experimental/bernoulli/bernoulli_functional", "functional/ivy/experimental/bernoulli/static_bernoulli_container", "functional/ivy/experimental/beta", "functional/ivy/experimental/beta/beta_array", "functional/ivy/experimental/beta/beta_container", "functional/ivy/experimental/beta/beta_functional", "functional/ivy/experimental/beta/static_beta_container", "functional/ivy/experimental/binarizer", "functional/ivy/experimental/binarizer/binarizer_array", "functional/ivy/experimental/binarizer/binarizer_container", "functional/ivy/experimental/binarizer/binarizer_functional", "functional/ivy/experimental/binarizer/static_binarizer_container", "functional/ivy/experimental/binary_cross_entropy_with_logits", "functional/ivy/experimental/binary_cross_entropy_with_logits/binary_cross_entropy_with_logits_container", "functional/ivy/experimental/binary_cross_entropy_with_logits/binary_cross_entropy_with_logits_functional", "functional/ivy/experimental/binary_cross_entropy_with_logits/static_binary_cross_entropy_with_logits_container", "functional/ivy/experimental/bind_custom_gradient_function", "functional/ivy/experimental/broadcast_shapes", "functional/ivy/experimental/broadcast_shapes/broadcast_shapes_container", "functional/ivy/experimental/broadcast_shapes/broadcast_shapes_functional", "functional/ivy/experimental/broadcast_shapes/static_broadcast_shapes_container", "functional/ivy/experimental/compilation", "functional/ivy/experimental/compute_weight_mat", "functional/ivy/experimental/constants", "functional/ivy/experimental/copysign", "functional/ivy/experimental/copysign/copysign_array", "functional/ivy/experimental/copysign/copysign_container", "functional/ivy/experimental/copysign/copysign_functional", "functional/ivy/experimental/copysign/static_copysign_container", "functional/ivy/experimental/corrcoef", "functional/ivy/experimental/corrcoef/corrcoef_array", "functional/ivy/experimental/corrcoef/corrcoef_container", "functional/ivy/experimental/corrcoef/corrcoef_functional", "functional/ivy/experimental/corrcoef/static_corrcoef_container", "functional/ivy/experimental/count_nonzero", "functional/ivy/experimental/count_nonzero/count_nonzero_array", "functional/ivy/experimental/count_nonzero/count_nonzero_container", "functional/ivy/experimental/count_nonzero/count_nonzero_functional", "functional/ivy/experimental/count_nonzero/static_count_nonzero_container", "functional/ivy/experimental/creation", "functional/ivy/experimental/creation/eye_like", "functional/ivy/experimental/creation/hamming_window", "functional/ivy/experimental/creation/hann_window", "functional/ivy/experimental/creation/kaiser_bessel_derived_window", "functional/ivy/experimental/creation/kaiser_window", "functional/ivy/experimental/creation/tril_indices", "functional/ivy/experimental/creation/triu_indices", "functional/ivy/experimental/creation/vorbis_window", "functional/ivy/experimental/data_type", "functional/ivy/experimental/data_type/is_native_dtype", "functional/ivy/experimental/dct", "functional/ivy/experimental/dct/dct_array", "functional/ivy/experimental/dct/dct_container", "functional/ivy/experimental/dct/dct_functional", "functional/ivy/experimental/dct/static_dct_container", "functional/ivy/experimental/device", "functional/ivy/experimental/dft", "functional/ivy/experimental/dft/dft_container", "functional/ivy/experimental/dft/dft_functional", "functional/ivy/experimental/dft/static_dft_container", "functional/ivy/experimental/diagflat", "functional/ivy/experimental/diagflat/diagflat_array", "functional/ivy/experimental/diagflat/diagflat_container", "functional/ivy/experimental/diagflat/diagflat_functional", "functional/ivy/experimental/diagflat/static_diagflat_container", "functional/ivy/experimental/diff", "functional/ivy/experimental/diff/diff_array", "functional/ivy/experimental/diff/diff_container", "functional/ivy/experimental/diff/diff_functional", "functional/ivy/experimental/diff/static_diff_container", "functional/ivy/experimental/dirichlet", "functional/ivy/experimental/dirichlet/dirichlet_array", "functional/ivy/experimental/dirichlet/dirichlet_container", "functional/ivy/experimental/dirichlet/dirichlet_functional", "functional/ivy/experimental/dirichlet/static_dirichlet_container", "functional/ivy/experimental/dropout1d", "functional/ivy/experimental/dsplit", "functional/ivy/experimental/dsplit/dsplit_array", "functional/ivy/experimental/dsplit/dsplit_container", "functional/ivy/experimental/dsplit/dsplit_functional", "functional/ivy/experimental/dsplit/static_dsplit_container", "functional/ivy/experimental/dstack", "functional/ivy/experimental/dstack/dstack_array", "functional/ivy/experimental/dstack/dstack_container", "functional/ivy/experimental/dstack/dstack_functional", "functional/ivy/experimental/dstack/static_dstack_container", "functional/ivy/experimental/eig", "functional/ivy/experimental/eig/eig_array", "functional/ivy/experimental/eig/eig_container", "functional/ivy/experimental/eig/eig_functional", "functional/ivy/experimental/eig/static_eig_container", "functional/ivy/experimental/eigvals", "functional/ivy/experimental/eigvals/eigvals_array", "functional/ivy/experimental/eigvals/eigvals_container", "functional/ivy/experimental/eigvals/eigvals_functional", "functional/ivy/experimental/eigvals/static_eigvals_container", "functional/ivy/experimental/elementwise", "functional/ivy/experimental/elementwise/allclose", "functional/ivy/experimental/elementwise/angle", "functional/ivy/experimental/elementwise/binarizer", "functional/ivy/experimental/elementwise/copysign", "functional/ivy/experimental/elementwise/count_nonzero", "functional/ivy/experimental/elementwise/diff", "functional/ivy/experimental/elementwise/exp2", "functional/ivy/experimental/elementwise/fix", "functional/ivy/experimental/elementwise/float_power", "functional/ivy/experimental/elementwise/fmax", "functional/ivy/experimental/elementwise/fmin", "functional/ivy/experimental/elementwise/fmod", "functional/ivy/experimental/elementwise/gcd", "functional/ivy/experimental/elementwise/gradient", "functional/ivy/experimental/elementwise/hypot", "functional/ivy/experimental/elementwise/imag", "functional/ivy/experimental/elementwise/isclose", "functional/ivy/experimental/elementwise/lcm", "functional/ivy/experimental/elementwise/logaddexp2", "functional/ivy/experimental/elementwise/nan_to_num", "functional/ivy/experimental/elementwise/nansum", "functional/ivy/experimental/elementwise/nextafter", "functional/ivy/experimental/elementwise/real", "functional/ivy/experimental/elementwise/signbit", "functional/ivy/experimental/elementwise/sinc", "functional/ivy/experimental/elementwise/trapz", "functional/ivy/experimental/elementwise/xlogy", "functional/ivy/experimental/elementwise/zeta", "functional/ivy/experimental/embedding", "functional/ivy/experimental/embedding/embedding_array", "functional/ivy/experimental/embedding/embedding_container", "functional/ivy/experimental/embedding/embedding_functional", "functional/ivy/experimental/embedding/static_embedding_container", "functional/ivy/experimental/exp2", "functional/ivy/experimental/exp2/exp2_array", "functional/ivy/experimental/exp2/exp2_container", "functional/ivy/experimental/exp2/exp2_functional", "functional/ivy/experimental/exp2/static_exp2_container", "functional/ivy/experimental/expand", "functional/ivy/experimental/expand/expand_array", "functional/ivy/experimental/expand/expand_container", "functional/ivy/experimental/expand/expand_functional", "functional/ivy/experimental/expand/static_expand_container", "functional/ivy/experimental/eye_like", "functional/ivy/experimental/eye_like/eye_like_array", "functional/ivy/experimental/eye_like/eye_like_container", "functional/ivy/experimental/eye_like/eye_like_functional", "functional/ivy/experimental/eye_like/static_eye_like_container", "functional/ivy/experimental/fft", "functional/ivy/experimental/fft/fft_array", "functional/ivy/experimental/fft/fft_container", "functional/ivy/experimental/fft/fft_functional", "functional/ivy/experimental/fft/static_fft_container", "functional/ivy/experimental/fix", "functional/ivy/experimental/fix/fix_array", "functional/ivy/experimental/fix/fix_container", "functional/ivy/experimental/fix/fix_functional", "functional/ivy/experimental/fix/static_fix_container", "functional/ivy/experimental/flatten", "functional/ivy/experimental/flatten/flatten_array", "functional/ivy/experimental/flatten/flatten_container", "functional/ivy/experimental/flatten/flatten_functional", "functional/ivy/experimental/flatten/static_flatten_container", "functional/ivy/experimental/fliplr", "functional/ivy/experimental/fliplr/fliplr_array", "functional/ivy/experimental/fliplr/fliplr_container", "functional/ivy/experimental/fliplr/fliplr_functional", "functional/ivy/experimental/fliplr/static_fliplr_container", "functional/ivy/experimental/flipud", "functional/ivy/experimental/flipud/flipud_array", "functional/ivy/experimental/flipud/flipud_container", "functional/ivy/experimental/flipud/flipud_functional", "functional/ivy/experimental/flipud/static_flipud_container", "functional/ivy/experimental/float_power", "functional/ivy/experimental/float_power/float_power_array", "functional/ivy/experimental/float_power/float_power_container", "functional/ivy/experimental/float_power/float_power_functional", "functional/ivy/experimental/float_power/static_float_power_container", "functional/ivy/experimental/fmax", "functional/ivy/experimental/fmax/fmax_array", "functional/ivy/experimental/fmax/fmax_container", "functional/ivy/experimental/fmax/fmax_functional", "functional/ivy/experimental/fmax/static_fmax_container", "functional/ivy/experimental/fmin", "functional/ivy/experimental/fmin/fmin_array", "functional/ivy/experimental/fmin/fmin_container", "functional/ivy/experimental/fmin/fmin_functional", "functional/ivy/experimental/fmin/static_fmin_container", "functional/ivy/experimental/fmod", "functional/ivy/experimental/fmod/fmod_array", "functional/ivy/experimental/fmod/fmod_container", "functional/ivy/experimental/fmod/fmod_functional", "functional/ivy/experimental/fmod/static_fmod_container", "functional/ivy/experimental/gamma", "functional/ivy/experimental/gamma/gamma_array", "functional/ivy/experimental/gamma/gamma_functional", "functional/ivy/experimental/gcd", "functional/ivy/experimental/gcd/gcd_array", "functional/ivy/experimental/gcd/gcd_container", "functional/ivy/experimental/gcd/gcd_functional", "functional/ivy/experimental/gcd/static_gcd_container", "functional/ivy/experimental/general", "functional/ivy/experimental/general/isin", "functional/ivy/experimental/gradient", "functional/ivy/experimental/gradient/gradient_array", "functional/ivy/experimental/gradient/gradient_container", "functional/ivy/experimental/gradient/gradient_functional", "functional/ivy/experimental/gradient/static_gradient_container", "functional/ivy/experimental/gradients", "functional/ivy/experimental/gradients/bind_custom_gradient_function", "functional/ivy/experimental/hamming_window", "functional/ivy/experimental/hamming_window/hamming_window_container", "functional/ivy/experimental/hamming_window/hamming_window_functional", "functional/ivy/experimental/hamming_window/static_hamming_window_container", "functional/ivy/experimental/hann_window", "functional/ivy/experimental/hann_window/hann_window_container", "functional/ivy/experimental/hann_window/hann_window_functional", "functional/ivy/experimental/hann_window/static_hann_window_container", "functional/ivy/experimental/heaviside", "functional/ivy/experimental/heaviside/heaviside_array", "functional/ivy/experimental/heaviside/heaviside_container", "functional/ivy/experimental/heaviside/heaviside_functional", "functional/ivy/experimental/heaviside/static_heaviside_container", "functional/ivy/experimental/hsplit", "functional/ivy/experimental/hsplit/hsplit_array", "functional/ivy/experimental/hsplit/hsplit_container", "functional/ivy/experimental/hsplit/hsplit_functional", "functional/ivy/experimental/hsplit/static_hsplit_container", "functional/ivy/experimental/hstack", "functional/ivy/experimental/hstack/hstack_array", "functional/ivy/experimental/hstack/hstack_container", "functional/ivy/experimental/hstack/hstack_functional", "functional/ivy/experimental/hstack/static_hstack_container", "functional/ivy/experimental/hypot", "functional/ivy/experimental/hypot/hypot_array", "functional/ivy/experimental/hypot/hypot_container", "functional/ivy/experimental/hypot/hypot_functional", "functional/ivy/experimental/hypot/static_hypot_container", "functional/ivy/experimental/i0", "functional/ivy/experimental/i0/i0_array", "functional/ivy/experimental/i0/i0_container", "functional/ivy/experimental/i0/i0_functional", "functional/ivy/experimental/i0/static_i0_container", "functional/ivy/experimental/ifft", "functional/ivy/experimental/ifft/ifft_array", "functional/ivy/experimental/ifft/ifft_container", "functional/ivy/experimental/ifft/ifft_functional", "functional/ivy/experimental/ifft/static_ifft_container", "functional/ivy/experimental/imag", "functional/ivy/experimental/imag/imag_array", "functional/ivy/experimental/imag/imag_container", "functional/ivy/experimental/imag/imag_functional", "functional/ivy/experimental/imag/static_imag_container", "functional/ivy/experimental/instance_norm", "functional/ivy/experimental/instance_norm/instance_norm_array", "functional/ivy/experimental/instance_norm/instance_norm_container", "functional/ivy/experimental/instance_norm/instance_norm_functional", "functional/ivy/experimental/instance_norm/static_instance_norm_container", "functional/ivy/experimental/interp", "functional/ivy/experimental/interpolate", "functional/ivy/experimental/interpolate/interpolate_array", "functional/ivy/experimental/interpolate/interpolate_container", "functional/ivy/experimental/interpolate/interpolate_functional", "functional/ivy/experimental/interpolate/static_interpolate_container", "functional/ivy/experimental/is_ivy_sparse_array", "functional/ivy/experimental/is_native_dtype", "functional/ivy/experimental/is_native_sparse_array", "functional/ivy/experimental/isclose", "functional/ivy/experimental/isclose/isclose_array", "functional/ivy/experimental/isclose/isclose_container", "functional/ivy/experimental/isclose/isclose_functional", "functional/ivy/experimental/isclose/static_isclose_container", "functional/ivy/experimental/isin", "functional/ivy/experimental/isin/isin_array", "functional/ivy/experimental/isin/isin_container", "functional/ivy/experimental/isin/isin_functional", "functional/ivy/experimental/isin/static_isin_container", "functional/ivy/experimental/kaiser_bessel_derived_window", "functional/ivy/experimental/kaiser_bessel_derived_window/kaiser_bessel_derived_window_container", "functional/ivy/experimental/kaiser_bessel_derived_window/kaiser_bessel_derived_window_functional", "functional/ivy/experimental/kaiser_bessel_derived_window/static_kaiser_bessel_derived_window_container", "functional/ivy/experimental/kaiser_window", "functional/ivy/experimental/kaiser_window/kaiser_window_container", "functional/ivy/experimental/kaiser_window/kaiser_window_functional", "functional/ivy/experimental/kaiser_window/static_kaiser_window_container", "functional/ivy/experimental/kron", "functional/ivy/experimental/kron/kron_array", "functional/ivy/experimental/kron/kron_container", "functional/ivy/experimental/kron/kron_functional", "functional/ivy/experimental/kron/static_kron_container", "functional/ivy/experimental/l2_normalize", "functional/ivy/experimental/l2_normalize/l2_normalize_array", "functional/ivy/experimental/l2_normalize/l2_normalize_container", "functional/ivy/experimental/l2_normalize/l2_normalize_functional", "functional/ivy/experimental/l2_normalize/static_l2_normalize_container", "functional/ivy/experimental/layers", "functional/ivy/experimental/layers/avg_pool1d", "functional/ivy/experimental/layers/avg_pool2d", "functional/ivy/experimental/layers/avg_pool3d", "functional/ivy/experimental/layers/compute_weight_mat", "functional/ivy/experimental/layers/dct", "functional/ivy/experimental/layers/dft", "functional/ivy/experimental/layers/dropout1d", "functional/ivy/experimental/layers/embedding", "functional/ivy/experimental/layers/fft", "functional/ivy/experimental/layers/ifft", "functional/ivy/experimental/layers/interp", "functional/ivy/experimental/layers/interpolate", "functional/ivy/experimental/layers/max_pool1d", "functional/ivy/experimental/layers/max_pool2d", "functional/ivy/experimental/layers/max_pool3d", "functional/ivy/experimental/layers/padding_ceil_mode", "functional/ivy/experimental/lcm", "functional/ivy/experimental/lcm/lcm_array", "functional/ivy/experimental/lcm/lcm_container", "functional/ivy/experimental/lcm/lcm_functional", "functional/ivy/experimental/lcm/static_lcm_container", "functional/ivy/experimental/lexsort", "functional/ivy/experimental/lexsort/lexsort_array", "functional/ivy/experimental/lexsort/lexsort_container", "functional/ivy/experimental/lexsort/lexsort_functional", "functional/ivy/experimental/lexsort/static_lexsort_container", "functional/ivy/experimental/linear_algebra", "functional/ivy/experimental/linear_algebra/adjoint", "functional/ivy/experimental/linear_algebra/diagflat", "functional/ivy/experimental/linear_algebra/eig", "functional/ivy/experimental/linear_algebra/eigvals", "functional/ivy/experimental/linear_algebra/kron", "functional/ivy/experimental/linear_algebra/matrix_exp", "functional/ivy/experimental/logaddexp2", "functional/ivy/experimental/logaddexp2/logaddexp2_array", "functional/ivy/experimental/logaddexp2/logaddexp2_container", "functional/ivy/experimental/logaddexp2/logaddexp2_functional", "functional/ivy/experimental/logaddexp2/static_logaddexp2_container", "functional/ivy/experimental/logit", "functional/ivy/experimental/logit/logit_array", "functional/ivy/experimental/logit/logit_container", "functional/ivy/experimental/logit/logit_functional", "functional/ivy/experimental/logit/static_logit_container", "functional/ivy/experimental/losses", "functional/ivy/experimental/losses/binary_cross_entropy_with_logits", "functional/ivy/experimental/lp_normalize", "functional/ivy/experimental/lp_normalize/lp_normalize_array", "functional/ivy/experimental/lp_normalize/lp_normalize_container", "functional/ivy/experimental/lp_normalize/lp_normalize_functional", "functional/ivy/experimental/lp_normalize/static_lp_normalize_container", "functional/ivy/experimental/manipulation", "functional/ivy/experimental/manipulation/atleast_1d", "functional/ivy/experimental/manipulation/atleast_2d", "functional/ivy/experimental/manipulation/atleast_3d", "functional/ivy/experimental/manipulation/broadcast_shapes", "functional/ivy/experimental/manipulation/dsplit", "functional/ivy/experimental/manipulation/dstack", "functional/ivy/experimental/manipulation/expand", "functional/ivy/experimental/manipulation/flatten", "functional/ivy/experimental/manipulation/fliplr", "functional/ivy/experimental/manipulation/flipud", "functional/ivy/experimental/manipulation/heaviside", "functional/ivy/experimental/manipulation/hsplit", "functional/ivy/experimental/manipulation/hstack", "functional/ivy/experimental/manipulation/i0", "functional/ivy/experimental/manipulation/moveaxis", "functional/ivy/experimental/manipulation/ndenumerate", "functional/ivy/experimental/manipulation/ndindex", "functional/ivy/experimental/manipulation/pad", "functional/ivy/experimental/manipulation/rot90", "functional/ivy/experimental/manipulation/take_along_axis", "functional/ivy/experimental/manipulation/top_k", "functional/ivy/experimental/manipulation/vsplit", "functional/ivy/experimental/manipulation/vstack", "functional/ivy/experimental/matrix_exp", "functional/ivy/experimental/matrix_exp/matrix_exp_array", "functional/ivy/experimental/matrix_exp/matrix_exp_container", "functional/ivy/experimental/matrix_exp/matrix_exp_functional", "functional/ivy/experimental/matrix_exp/static_matrix_exp_container", "functional/ivy/experimental/max_pool1d", "functional/ivy/experimental/max_pool1d/max_pool1d_array", "functional/ivy/experimental/max_pool1d/max_pool1d_container", "functional/ivy/experimental/max_pool1d/max_pool1d_functional", "functional/ivy/experimental/max_pool1d/static_max_pool1d_container", "functional/ivy/experimental/max_pool2d", "functional/ivy/experimental/max_pool2d/max_pool2d_array", "functional/ivy/experimental/max_pool2d/max_pool2d_container", "functional/ivy/experimental/max_pool2d/max_pool2d_functional", "functional/ivy/experimental/max_pool2d/static_max_pool2d_container", "functional/ivy/experimental/max_pool3d", "functional/ivy/experimental/max_pool3d/max_pool3d_array", "functional/ivy/experimental/max_pool3d/max_pool3d_container", "functional/ivy/experimental/max_pool3d/max_pool3d_functional", "functional/ivy/experimental/max_pool3d/static_max_pool3d_container", "functional/ivy/experimental/median", "functional/ivy/experimental/median/median_array", "functional/ivy/experimental/median/median_container", "functional/ivy/experimental/median/median_functional", "functional/ivy/experimental/median/static_median_container", "functional/ivy/experimental/meta", "functional/ivy/experimental/moveaxis", "functional/ivy/experimental/moveaxis/moveaxis_array", "functional/ivy/experimental/moveaxis/moveaxis_container", "functional/ivy/experimental/moveaxis/moveaxis_functional", "functional/ivy/experimental/moveaxis/static_moveaxis_container", "functional/ivy/experimental/msort", "functional/ivy/experimental/msort/msort_array", "functional/ivy/experimental/msort/msort_container", "functional/ivy/experimental/msort/msort_functional", "functional/ivy/experimental/msort/static_msort_container", "functional/ivy/experimental/nan_to_num", "functional/ivy/experimental/nan_to_num/nan_to_num_array", "functional/ivy/experimental/nan_to_num/nan_to_num_container", "functional/ivy/experimental/nan_to_num/nan_to_num_functional", "functional/ivy/experimental/nan_to_num/static_nan_to_num_container", "functional/ivy/experimental/nanmean", "functional/ivy/experimental/nanmean/nanmean_array", "functional/ivy/experimental/nanmean/nanmean_container", "functional/ivy/experimental/nanmean/nanmean_functional", "functional/ivy/experimental/nanmean/static_nanmean_container", "functional/ivy/experimental/nanmedian", "functional/ivy/experimental/nanmedian/nanmedian_array", "functional/ivy/experimental/nanmedian/nanmedian_container", "functional/ivy/experimental/nanmedian/nanmedian_functional", "functional/ivy/experimental/nanmedian/static_nanmedian_container", "functional/ivy/experimental/nansum", "functional/ivy/experimental/nansum/nansum_array", "functional/ivy/experimental/nansum/nansum_container", "functional/ivy/experimental/nansum/nansum_functional", "functional/ivy/experimental/nansum/static_nansum_container", "functional/ivy/experimental/native_sparse_array", "functional/ivy/experimental/native_sparse_array_to_indices_values_and_shape", "functional/ivy/experimental/ndenumerate", "functional/ivy/experimental/ndindex", "functional/ivy/experimental/nest", "functional/ivy/experimental/nextafter", "functional/ivy/experimental/nextafter/nextafter_array", "functional/ivy/experimental/nextafter/nextafter_container", "functional/ivy/experimental/nextafter/nextafter_functional", "functional/ivy/experimental/nextafter/static_nextafter_container", "functional/ivy/experimental/norms", "functional/ivy/experimental/norms/instance_norm", "functional/ivy/experimental/norms/l2_normalize", "functional/ivy/experimental/norms/lp_normalize", "functional/ivy/experimental/pad", "functional/ivy/experimental/pad/pad_array", "functional/ivy/experimental/pad/pad_container", "functional/ivy/experimental/pad/pad_functional", "functional/ivy/experimental/pad/static_pad_container", "functional/ivy/experimental/padding_ceil_mode", "functional/ivy/experimental/poisson", "functional/ivy/experimental/poisson/poisson_array", "functional/ivy/experimental/poisson/poisson_container", "functional/ivy/experimental/poisson/poisson_functional", "functional/ivy/experimental/poisson/static_poisson_container", "functional/ivy/experimental/prelu", "functional/ivy/experimental/prelu/prelu_array", "functional/ivy/experimental/prelu/prelu_container", "functional/ivy/experimental/prelu/prelu_functional", "functional/ivy/experimental/prelu/static_prelu_container", "functional/ivy/experimental/quantile", "functional/ivy/experimental/quantile/quantile_array", "functional/ivy/experimental/quantile/quantile_container", "functional/ivy/experimental/quantile/quantile_functional", "functional/ivy/experimental/quantile/static_quantile_container", "functional/ivy/experimental/random", "functional/ivy/experimental/random/bernoulli", "functional/ivy/experimental/random/beta", "functional/ivy/experimental/random/dirichlet", "functional/ivy/experimental/random/gamma", "functional/ivy/experimental/random/poisson", "functional/ivy/experimental/real", "functional/ivy/experimental/real/real_array", "functional/ivy/experimental/real/real_container", "functional/ivy/experimental/real/real_functional", "functional/ivy/experimental/real/static_real_container", "functional/ivy/experimental/rot90", "functional/ivy/experimental/rot90/rot90_array", "functional/ivy/experimental/rot90/rot90_container", "functional/ivy/experimental/rot90/rot90_functional", "functional/ivy/experimental/rot90/static_rot90_container", "functional/ivy/experimental/searching", "functional/ivy/experimental/set", "functional/ivy/experimental/signbit", "functional/ivy/experimental/signbit/signbit_array", "functional/ivy/experimental/signbit/signbit_container", "functional/ivy/experimental/signbit/signbit_functional", "functional/ivy/experimental/signbit/static_signbit_container", "functional/ivy/experimental/sinc", "functional/ivy/experimental/sinc/sinc_array", "functional/ivy/experimental/sinc/sinc_container", "functional/ivy/experimental/sinc/sinc_functional", "functional/ivy/experimental/sinc/static_sinc_container", "functional/ivy/experimental/sorting", "functional/ivy/experimental/sorting/lexsort", "functional/ivy/experimental/sorting/msort", "functional/ivy/experimental/sparse_array", "functional/ivy/experimental/sparse_array/NativeSparseArray", "functional/ivy/experimental/sparse_array/SparseArray", "functional/ivy/experimental/sparse_array/is_ivy_sparse_array", "functional/ivy/experimental/sparse_array/is_native_sparse_array", "functional/ivy/experimental/sparse_array/native_sparse_array", "functional/ivy/experimental/sparse_array/native_sparse_array_to_indices_values_and_shape", "functional/ivy/experimental/statistical", "functional/ivy/experimental/statistical/corrcoef", "functional/ivy/experimental/statistical/median", "functional/ivy/experimental/statistical/nanmean", "functional/ivy/experimental/statistical/nanmedian", "functional/ivy/experimental/statistical/quantile", "functional/ivy/experimental/statistical/unravel_index", "functional/ivy/experimental/take_along_axis", "functional/ivy/experimental/take_along_axis/static_take_along_axis_container", "functional/ivy/experimental/take_along_axis/take_along_axis_array", "functional/ivy/experimental/take_along_axis/take_along_axis_container", "functional/ivy/experimental/take_along_axis/take_along_axis_functional", "functional/ivy/experimental/thresholded_relu", "functional/ivy/experimental/thresholded_relu/static_thresholded_relu_container", "functional/ivy/experimental/thresholded_relu/thresholded_relu_array", "functional/ivy/experimental/thresholded_relu/thresholded_relu_container", "functional/ivy/experimental/thresholded_relu/thresholded_relu_functional", "functional/ivy/experimental/top_k", "functional/ivy/experimental/top_k/static_top_k_container", "functional/ivy/experimental/top_k/top_k_array", "functional/ivy/experimental/top_k/top_k_container", "functional/ivy/experimental/top_k/top_k_functional", "functional/ivy/experimental/trapz", "functional/ivy/experimental/trapz/trapz_array", "functional/ivy/experimental/trapz/trapz_functional", "functional/ivy/experimental/tril_indices", "functional/ivy/experimental/tril_indices/static_tril_indices_container", "functional/ivy/experimental/tril_indices/tril_indices_container", "functional/ivy/experimental/tril_indices/tril_indices_functional", "functional/ivy/experimental/triu_indices", "functional/ivy/experimental/triu_indices/static_triu_indices_container", "functional/ivy/experimental/triu_indices/triu_indices_container", "functional/ivy/experimental/triu_indices/triu_indices_functional", "functional/ivy/experimental/unravel_index", "functional/ivy/experimental/unravel_index/static_unravel_index_container", "functional/ivy/experimental/unravel_index/unravel_index_array", "functional/ivy/experimental/unravel_index/unravel_index_container", "functional/ivy/experimental/unravel_index/unravel_index_functional", "functional/ivy/experimental/utility", "functional/ivy/experimental/vorbis_window", "functional/ivy/experimental/vorbis_window/static_vorbis_window_container", "functional/ivy/experimental/vorbis_window/vorbis_window_container", "functional/ivy/experimental/vorbis_window/vorbis_window_functional", "functional/ivy/experimental/vsplit", "functional/ivy/experimental/vsplit/static_vsplit_container", "functional/ivy/experimental/vsplit/vsplit_array", "functional/ivy/experimental/vsplit/vsplit_container", "functional/ivy/experimental/vsplit/vsplit_functional", "functional/ivy/experimental/vstack", "functional/ivy/experimental/vstack/static_vstack_container", "functional/ivy/experimental/vstack/vstack_array", "functional/ivy/experimental/vstack/vstack_container", "functional/ivy/experimental/vstack/vstack_functional", "functional/ivy/experimental/xlogy", "functional/ivy/experimental/xlogy/static_xlogy_container", "functional/ivy/experimental/xlogy/xlogy_array", "functional/ivy/experimental/xlogy/xlogy_container", "functional/ivy/experimental/xlogy/xlogy_functional", "functional/ivy/experimental/zeta", "functional/ivy/experimental/zeta/static_zeta_container", "functional/ivy/experimental/zeta/zeta_array", "functional/ivy/experimental/zeta/zeta_container", "functional/ivy/experimental/zeta/zeta_functional", "functional/ivy/extensions", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/array_equal/array_equal_array", "functional/ivy/general/array_equal/array_equal_container", "functional/ivy/general/array_equal/array_equal_functional", "functional/ivy/general/array_equal/static_array_equal_container", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_array", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_container", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_functional", "functional/ivy/general/assert_supports_inplace/static_assert_supports_inplace_container", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_array", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container", "functional/ivy/general/container_types", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/default/default_array", "functional/ivy/general/default/default_functional", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_rearrange/einops_rearrange_array", "functional/ivy/general/einops_rearrange/einops_rearrange_container", "functional/ivy/general/einops_rearrange/einops_rearrange_functional", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_reduce/einops_reduce_array", "functional/ivy/general/einops_reduce/einops_reduce_container", "functional/ivy/general/einops_reduce/einops_reduce_functional", "functional/ivy/general/einops_reduce/static_einops_reduce_container", "functional/ivy/general/einops_repeat", "functional/ivy/general/einops_repeat/einops_repeat_array", "functional/ivy/general/einops_repeat/einops_repeat_container", "functional/ivy/general/einops_repeat/einops_repeat_functional", "functional/ivy/general/einops_repeat/static_einops_repeat_container", "functional/ivy/general/exists", "functional/ivy/general/exists/exists_array", "functional/ivy/general/exists/exists_functional", "functional/ivy/general/fourier_encode", "functional/ivy/general/fourier_encode/fourier_encode_array", "functional/ivy/general/fourier_encode/fourier_encode_container", "functional/ivy/general/fourier_encode/fourier_encode_functional", "functional/ivy/general/fourier_encode/static_fourier_encode_container", "functional/ivy/general/function_supported_devices_and_dtypes", "functional/ivy/general/function_unsupported_devices_and_dtypes", "functional/ivy/general/gather", "functional/ivy/general/gather/gather_array", "functional/ivy/general/gather/gather_container", "functional/ivy/general/gather/gather_functional", "functional/ivy/general/gather/static_gather_container", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_array_mode", "functional/ivy/general/get_exception_trace_mode", "functional/ivy/general/get_item", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_nestable_mode", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_num_dims/get_num_dims_array", "functional/ivy/general/get_num_dims/get_num_dims_container", "functional/ivy/general/get_num_dims/get_num_dims_functional", "functional/ivy/general/get_num_dims/static_get_num_dims_container", "functional/ivy/general/get_queue_timeout", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/get_show_func_wrapper_trace_mode", "functional/ivy/general/get_tmp_dir", "functional/ivy/general/has_nans", "functional/ivy/general/has_nans/has_nans_array", "functional/ivy/general/has_nans/has_nans_container", "functional/ivy/general/has_nans/has_nans_functional", "functional/ivy/general/has_nans/static_has_nans_container", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_decrement/inplace_decrement_array", "functional/ivy/general/inplace_decrement/inplace_decrement_container", "functional/ivy/general/inplace_decrement/inplace_decrement_functional", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_increment/inplace_increment_array", "functional/ivy/general/inplace_increment/inplace_increment_container", "functional/ivy/general/inplace_increment/inplace_increment_functional", "functional/ivy/general/inplace_increment/static_inplace_increment_container", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_update/inplace_update_array", "functional/ivy/general/inplace_update/inplace_update_container", "functional/ivy/general/inplace_update/inplace_update_functional", "functional/ivy/general/inplace_update/static_inplace_update_container", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_array/is_array_array", "functional/ivy/general/is_array/is_array_container", "functional/ivy/general/is_array/is_array_functional", "functional/ivy/general/is_array/static_is_array_container", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_array/is_ivy_array_array", "functional/ivy/general/is_ivy_array/is_ivy_array_container", "functional/ivy/general/is_ivy_array/is_ivy_array_functional", "functional/ivy/general/is_ivy_array/static_is_ivy_array_container", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_ivy_container/is_ivy_container_array", "functional/ivy/general/is_ivy_container/is_ivy_container_functional", "functional/ivy/general/is_native_array", "functional/ivy/general/is_native_array/is_native_array_array", "functional/ivy/general/is_native_array/is_native_array_container", "functional/ivy/general/is_native_array/is_native_array_functional", "functional/ivy/general/is_native_array/static_is_native_array_container", "functional/ivy/general/isscalar", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_flat/scatter_flat_array", "functional/ivy/general/scatter_flat/scatter_flat_container", "functional/ivy/general/scatter_flat/scatter_flat_functional", "functional/ivy/general/scatter_flat/static_scatter_flat_container", "functional/ivy/general/scatter_nd", "functional/ivy/general/scatter_nd/scatter_nd_array", "functional/ivy/general/scatter_nd/scatter_nd_container", "functional/ivy/general/scatter_nd/scatter_nd_functional", "functional/ivy/general/scatter_nd/static_scatter_nd_container", "functional/ivy/general/set_array_mode", "functional/ivy/general/set_exception_trace_mode", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_nestable_mode", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_show_func_wrapper_trace_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_divide/stable_divide_array", "functional/ivy/general/stable_divide/stable_divide_container", "functional/ivy/general/stable_divide/stable_divide_functional", "functional/ivy/general/stable_divide/static_stable_divide_container", "functional/ivy/general/stable_pow", "functional/ivy/general/stable_pow/stable_pow_array", "functional/ivy/general/stable_pow/stable_pow_container", "functional/ivy/general/stable_pow/stable_pow_functional", "functional/ivy/general/stable_pow/static_stable_pow_container", "functional/ivy/general/supports_inplace_updates", "functional/ivy/general/supports_inplace_updates/static_supports_inplace_updates_container", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_array", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_container", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_functional", "functional/ivy/general/to_ivy_shape", "functional/ivy/general/to_list", "functional/ivy/general/to_list/static_to_list_container", "functional/ivy/general/to_list/to_list_array", "functional/ivy/general/to_list/to_list_functional", "functional/ivy/general/to_native_shape", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_array", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/to_scalar/static_to_scalar_container", "functional/ivy/general/to_scalar/to_scalar_array", "functional/ivy/general/to_scalar/to_scalar_container", "functional/ivy/general/to_scalar/to_scalar_functional", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_array_mode", "functional/ivy/general/unset_exception_trace_mode", "functional/ivy/general/unset_nestable_mode", "functional/ivy/general/unset_queue_timeout", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/unset_show_func_wrapper_trace_mode", "functional/ivy/general/value_is_nan", "functional/ivy/general/value_is_nan/static_value_is_nan_container", "functional/ivy/general/value_is_nan/value_is_nan_array", "functional/ivy/general/value_is_nan/value_is_nan_container", "functional/ivy/general/value_is_nan/value_is_nan_functional", "functional/ivy/general/vmap", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_array", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/grad", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_array", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/jac", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_array", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_array", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_array", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_array", "functional/ivy/gradients/stop_gradient/stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_functional", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/value_and_grad", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d/conv1d_array", "functional/ivy/layers/conv1d/conv1d_container", "functional/ivy/layers/conv1d/conv1d_functional", "functional/ivy/layers/conv1d/static_conv1d_container", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_array", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_container", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_functional", "functional/ivy/layers/conv1d_transpose/static_conv1d_transpose_container", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d/conv2d_array", "functional/ivy/layers/conv2d/conv2d_container", "functional/ivy/layers/conv2d/conv2d_functional", "functional/ivy/layers/conv2d/static_conv2d_container", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_array", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_container", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_functional", "functional/ivy/layers/conv2d_transpose/static_conv2d_transpose_container", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d/conv3d_array", "functional/ivy/layers/conv3d/conv3d_container", "functional/ivy/layers/conv3d/conv3d_functional", "functional/ivy/layers/conv3d/static_conv3d_container", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_array", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_container", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_functional", "functional/ivy/layers/conv3d_transpose/static_conv3d_transpose_container", "functional/ivy/layers/conv_general_dilated", "functional/ivy/layers/conv_general_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container", "functional/ivy/layers/dropout", "functional/ivy/layers/dropout/dropout_array", "functional/ivy/layers/dropout/dropout_container", "functional/ivy/layers/dropout/dropout_functional", "functional/ivy/layers/dropout/static_dropout_container", "functional/ivy/layers/linear", "functional/ivy/layers/linear/linear_array", "functional/ivy/layers/linear/linear_container", "functional/ivy/layers/linear/linear_functional", "functional/ivy/layers/linear/static_linear_container", "functional/ivy/layers/lstm_update", "functional/ivy/layers/lstm_update/lstm_update_array", "functional/ivy/layers/lstm_update/lstm_update_container", "functional/ivy/layers/lstm_update/lstm_update_functional", "functional/ivy/layers/lstm_update/static_lstm_update_container", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/multi_head_attention/multi_head_attention_array", "functional/ivy/layers/multi_head_attention/multi_head_attention_container", "functional/ivy/layers/multi_head_attention/multi_head_attention_functional", "functional/ivy/layers/multi_head_attention/static_multi_head_attention_container", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_array", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_container", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_functional", "functional/ivy/layers/scaled_dot_product_attention/static_scaled_dot_product_attention_container", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_container", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/cross/static_cross_container", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_container", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/det/static_det_container", "functional/ivy/linear_algebra/diag", "functional/ivy/linear_algebra/diag/diag_array", "functional/ivy/linear_algebra/diag/diag_container", "functional/ivy/linear_algebra/diag/diag_functional", "functional/ivy/linear_algebra/diag/static_diag_container", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_container", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/diagonal/static_diagonal_container", "functional/ivy/linear_algebra/eig", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_container", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigh/static_eigh_container", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_container", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/eigvalsh/static_eigvalsh_container", "functional/ivy/linear_algebra/inner", "functional/ivy/linear_algebra/inner/inner_array", "functional/ivy/linear_algebra/inner/inner_container", "functional/ivy/linear_algebra/inner/inner_functional", "functional/ivy/linear_algebra/inner/static_inner_container", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_container", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/inv/static_inv_container", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matmul/static_matmul_container", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_power/matrix_power_array", "functional/ivy/linear_algebra/matrix_power/matrix_power_container", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_container", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/outer/static_outer_container", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_container", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/pinv/static_pinv_container", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_container", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/qr/static_qr_container", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/slogdet/slogdet_array", "functional/ivy/linear_algebra/slogdet/slogdet_container", "functional/ivy/linear_algebra/slogdet/slogdet_functional", "functional/ivy/linear_algebra/slogdet/static_slogdet_container", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_container", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/solve/static_solve_container", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/static_svd_container", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_container", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/static_svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/static_tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/tensorsolve", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_array", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_container", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/static_trace_container", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_container", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vander", "functional/ivy/linear_algebra/vander/static_vander_container", "functional/ivy/linear_algebra/vander/vander_array", "functional/ivy/linear_algebra/vander/vander_container", "functional/ivy/linear_algebra/vander/vander_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/static_vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/concat/static_concat_container", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/constant_pad/static_constant_pad_container", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/expand_dims/static_expand_dims_container", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/flip/static_flip_container", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/permute_dims/static_permute_dims_container", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/repeat/static_repeat_container", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/reshape/static_reshape_container", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/split/split_array", "functional/ivy/manipulation/split/split_container", "functional/ivy/manipulation/split/split_functional", "functional/ivy/manipulation/split/static_split_container", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/squeeze/static_squeeze_container", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/stack/static_stack_container", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/static_swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/static_tile_container", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/unstack", "functional/ivy/manipulation/unstack/static_unstack_container", "functional/ivy/manipulation/unstack/unstack_array", "functional/ivy/manipulation/unstack/unstack_container", "functional/ivy/manipulation/unstack/unstack_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/static_zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/duplicate_array_index_chains", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_argwhere", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_empty", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/multinomial/multinomial_array", "functional/ivy/random/multinomial/multinomial_container", "functional/ivy/random/multinomial/multinomial_functional", "functional/ivy/random/multinomial/static_multinomial_container", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_array", "functional/ivy/random/randint/randint_container", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_normal/random_normal_array", "functional/ivy/random/random_normal/random_normal_container", "functional/ivy/random/random_normal/random_normal_functional", "functional/ivy/random/random_normal/static_random_normal_container", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_array", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/random/shuffle/shuffle_array", "functional/ivy/random/shuffle/shuffle_container", "functional/ivy/random/shuffle/shuffle_functional", "functional/ivy/random/shuffle/static_shuffle_container", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmax/argmax_array", "functional/ivy/searching/argmax/argmax_container", "functional/ivy/searching/argmax/argmax_functional", "functional/ivy/searching/argmax/static_argmax_container", "functional/ivy/searching/argmin", "functional/ivy/searching/argmin/argmin_array", "functional/ivy/searching/argmin/argmin_container", "functional/ivy/searching/argmin/argmin_functional", "functional/ivy/searching/argmin/static_argmin_container", "functional/ivy/searching/argwhere", "functional/ivy/searching/argwhere/argwhere_array", "functional/ivy/searching/argwhere/argwhere_container", "functional/ivy/searching/argwhere/argwhere_functional", "functional/ivy/searching/argwhere/static_argwhere_container", "functional/ivy/searching/nonzero", "functional/ivy/searching/nonzero/nonzero_array", "functional/ivy/searching/nonzero/nonzero_container", "functional/ivy/searching/nonzero/nonzero_functional", "functional/ivy/searching/nonzero/static_nonzero_container", "functional/ivy/searching/where", "functional/ivy/searching/where/static_where_container", "functional/ivy/searching/where/where_array", "functional/ivy/searching/where/where_container", "functional/ivy/searching/where/where_functional", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_all/static_unique_all_container", "functional/ivy/set/unique_all/unique_all_array", "functional/ivy/set/unique_all/unique_all_container", "functional/ivy/set/unique_all/unique_all_functional", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_inverse/static_unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_array", "functional/ivy/set/unique_inverse/unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_functional", "functional/ivy/set/unique_values", "functional/ivy/set/unique_values/static_unique_values_container", "functional/ivy/set/unique_values/unique_values_array", "functional/ivy/set/unique_values/unique_values_container", "functional/ivy/set/unique_values/unique_values_functional", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/searchsorted", "functional/ivy/sorting/searchsorted/searchsorted_array", "functional/ivy/sorting/searchsorted/searchsorted_container", "functional/ivy/sorting/searchsorted/searchsorted_functional", "functional/ivy/sorting/searchsorted/static_searchsorted_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/cumprod", "functional/ivy/statistical/cumprod/cumprod_array", "functional/ivy/statistical/cumprod/cumprod_container", "functional/ivy/statistical/cumprod/cumprod_functional", "functional/ivy/statistical/cumprod/static_cumprod_container", "functional/ivy/statistical/cumsum", "functional/ivy/statistical/cumsum/cumsum_array", "functional/ivy/statistical/cumsum/cumsum_container", "functional/ivy/statistical/cumsum/cumsum_functional", "functional/ivy/statistical/cumsum/static_cumsum_container", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/prod/static_prod_container", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/static_sum_container", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/static_var_container", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "glossary", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "nested_array/nested_array", "nested_array/nested_array/NestedArray", "related_work", "related_work/api_standards", "related_work/compiler_infrastructure", "related_work/exchange_formats", "related_work/frameworks", "related_work/graph_tracers", "related_work/ml_unifying_companies", "related_work/multi_vendor_compiler_frameworks", "related_work/vendor_specific_apis", "related_work/vendor_specific_compilers", "related_work/what_does_ivy_add", "related_work/wrapper_frameworks", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/ModuleConverters", "stateful/converters/MyTFModule", "stateful/converters/MyTorchModule", "stateful/converters/to_ivy_module", "stateful/helpers", "stateful/helpers/ModuleHelpers", "stateful/initializers", "stateful/initializers/Constant", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/Initializer", "stateful/initializers/KaimingNormal", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "testing/assertions", "testing/assertions/assert_all_close", "testing/assertions/assert_same_type_and_shape", "testing/assertions/check_unsupported_device", "testing/assertions/check_unsupported_device_and_dtype", "testing/assertions/check_unsupported_dtype", "testing/assertions/test_unsupported_function", "testing/assertions/value_test", "testing/available_frameworks", "testing/available_frameworks/available_frameworks", "testing/available_frameworks/ground_truth", "testing/function_testing", "testing/function_testing/args_to_container", "testing/function_testing/as_cont", "testing/function_testing/as_lists", "testing/function_testing/convtrue", "testing/function_testing/create_args_kwargs", "testing/function_testing/empty_func", "testing/function_testing/flatten", "testing/function_testing/flatten_and_to_np", "testing/function_testing/flatten_fw_and_to_np", "testing/function_testing/framework_comparator", "testing/function_testing/get_frontend_ret", "testing/function_testing/get_ret_and_flattened_np_array", "testing/function_testing/gradient_incompatible_function", "testing/function_testing/gradient_test", "testing/function_testing/gradient_unsupported_dtypes", "testing/function_testing/kwargs_to_args_n_kwargs", "testing/function_testing/make_json_pickable", "testing/function_testing/test_frontend_function", "testing/function_testing/test_frontend_method", "testing/function_testing/test_function", "testing/function_testing/test_method", "testing/function_testing/var_fn", "testing/globals", "testing/globals/InterruptedTest", "testing/globals/TestData", "testing/globals/remove_all_current_framework", "testing/globals/setup_api_test", "testing/globals/setup_frontend_test", "testing/globals/teardown_api_test", "testing/globals/teardown_frontend_test", "testing/hypothesis_helpers", "testing/hypothesis_helpers/array_helpers", "testing/hypothesis_helpers/array_helpers/array_and_broadcastable_shape", "testing/hypothesis_helpers/array_helpers/array_bools", "testing/hypothesis_helpers/array_helpers/array_indices_axis", "testing/hypothesis_helpers/array_helpers/array_values", "testing/hypothesis_helpers/array_helpers/arrays_and_axes", "testing/hypothesis_helpers/array_helpers/arrays_for_pooling", "testing/hypothesis_helpers/array_helpers/broadcast_shapes", "testing/hypothesis_helpers/array_helpers/dtype_and_values", "testing/hypothesis_helpers/array_helpers/dtype_values_axis", "testing/hypothesis_helpers/array_helpers/list_of_length", "testing/hypothesis_helpers/array_helpers/lists", "testing/hypothesis_helpers/array_helpers/mutually_broadcastable_shapes", "testing/hypothesis_helpers/array_helpers/prod", "testing/hypothesis_helpers/dtype_helpers", "testing/hypothesis_helpers/dtype_helpers/array_dtypes", "testing/hypothesis_helpers/dtype_helpers/get_castable_dtype", "testing/hypothesis_helpers/dtype_helpers/get_dtypes", "testing/hypothesis_helpers/general_helpers", "testing/hypothesis_helpers/general_helpers/apply_safety_factor", "testing/hypothesis_helpers/general_helpers/embedding_helper", "testing/hypothesis_helpers/general_helpers/get_axis", "testing/hypothesis_helpers/general_helpers/get_bounds", "testing/hypothesis_helpers/general_helpers/get_mean_std", "testing/hypothesis_helpers/general_helpers/get_shape", "testing/hypothesis_helpers/general_helpers/matrix_is_stable", "testing/hypothesis_helpers/general_helpers/reshape_shapes", "testing/hypothesis_helpers/general_helpers/subsets", "testing/hypothesis_helpers/general_helpers/x_and_filters", "testing/hypothesis_helpers/number_helpers", "testing/hypothesis_helpers/number_helpers/floats", "testing/hypothesis_helpers/number_helpers/ints", "testing/hypothesis_helpers/number_helpers/number", "testing/structs", "testing/structs/FrontendMethodData", "testing/test_parameter_flags", "testing/test_parameter_flags/FrontendFunctionTestFlags", "testing/test_parameter_flags/FrontendMethodTestFlags", "testing/test_parameter_flags/FunctionTestFlags", "testing/test_parameter_flags/MethodTestFlags", "testing/test_parameter_flags/build_flag", "testing/test_parameter_flags/frontend_function_flags", "testing/test_parameter_flags/frontend_method_flags", "testing/test_parameter_flags/function_flags", "testing/test_parameter_flags/method_flags", "testing/testing_helpers", "testing/testing_helpers/handle_frontend_method", "testing/testing_helpers/handle_frontend_test", "testing/testing_helpers/handle_method", "testing/testing_helpers/handle_test", "testing/testing_helpers/num_positional_args", "testing/testing_helpers/num_positional_args_method", "testing/testing_helpers/seed", "verbosity", "verbosity/cprint"], "filenames": ["_version.rst", "assertions.rst", "assertions/check_all.rst", "assertions/check_all_or_any_fn.rst", "assertions/check_any.rst", "assertions/check_dimensions.rst", "assertions/check_elem_in_list.rst", "assertions/check_equal.rst", "assertions/check_exists.rst", "assertions/check_false.rst", "assertions/check_fill_value_and_dtype_are_compatible.rst", "assertions/check_gather_input_valid.rst", "assertions/check_gather_nd_input_valid.rst", "assertions/check_greater.rst", "assertions/check_inplace_sizes_valid.rst", "assertions/check_isinstance.rst", "assertions/check_kernel_padding_size.rst", "assertions/check_less.rst", "assertions/check_one_way_broadcastable.rst", "assertions/check_same_dtype.rst", "assertions/check_shape.rst", "assertions/check_shapes_broadcastable.rst", "assertions/check_true.rst", "backend_handler.rst", "backend_handler/ContextManager.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/convert_from_numpy_to_target_backend.rst", "backend_handler/convert_from_source_backend_to_numpy.rst", "backend_handler/current_backend.rst", "backend_handler/fn_name_from_version_specific_fn_name.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/set_backend_to_specific_version.rst", "backend_handler/set_jax_backend.rst", "backend_handler/set_numpy_backend.rst", "backend_handler/set_tensorflow_backend.rst", "backend_handler/set_torch_backend.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/applied_libraries.rst", "contributing/building_the_docs.rst", "contributing/helpful_resources.rst", "contributing/open_tasks.rst", "contributing/setting_up.rst", "contributing/the_basics.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/array.rst", "data_classes/array/array/Array.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/experimental.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linear_algebra.rst", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/conversions.rst", "data_classes/container/conversions/ContainerWithConversions.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/experimental.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linear_algebra.rst", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/array_api_tests.rst", "deep_dive/arrays.rst", "deep_dive/backend_setting.rst", "deep_dive/containers.rst", "deep_dive/continuous_integration.rst", "deep_dive/data_types.rst", "deep_dive/devices.rst", "deep_dive/docstring_examples.rst", "deep_dive/docstrings.rst", "deep_dive/exception_handling.rst", "deep_dive/formatting.rst", "deep_dive/function_arguments.rst", "deep_dive/function_types.rst", "deep_dive/function_wrapping.rst", "deep_dive/inplace_updates.rst", "deep_dive/ivy_frontends.rst", "deep_dive/ivy_frontends_tests.rst", "deep_dive/ivy_tests.rst", "deep_dive/navigating_the_code.rst", "deep_dive/superset_behaviour.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_array_function.rst", "func_wrapper/handle_array_like_without_promotion.rst", "func_wrapper/handle_nans.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/integer_arrays_to_float.rst", "func_wrapper/output_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_ivy_arrays_and_back.rst", "func_wrapper/to_native_arrays_and_back.rst", "func_wrapper/try_array_function_override.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/deserialize.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/gelu/gelu_array.rst", "functional/ivy/activations/gelu/gelu_container.rst", "functional/ivy/activations/gelu/gelu_functional.rst", "functional/ivy/activations/gelu/static_gelu_container.rst", "functional/ivy/activations/get.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/leaky_relu/leaky_relu_array.rst", "functional/ivy/activations/leaky_relu/leaky_relu_container.rst", "functional/ivy/activations/leaky_relu/leaky_relu_functional.rst", "functional/ivy/activations/leaky_relu/static_leaky_relu_container.rst", "functional/ivy/activations/log_softmax.rst", "functional/ivy/activations/log_softmax/log_softmax_array.rst", "functional/ivy/activations/log_softmax/log_softmax_container.rst", "functional/ivy/activations/log_softmax/log_softmax_functional.rst", "functional/ivy/activations/log_softmax/static_log_softmax_container.rst", "functional/ivy/activations/mish.rst", "functional/ivy/activations/mish/mish_array.rst", "functional/ivy/activations/mish/mish_container.rst", "functional/ivy/activations/mish/mish_functional.rst", "functional/ivy/activations/mish/static_mish_container.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/relu/relu_array.rst", "functional/ivy/activations/relu/relu_container.rst", "functional/ivy/activations/relu/relu_functional.rst", "functional/ivy/activations/relu/static_relu_container.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/sigmoid/sigmoid_array.rst", "functional/ivy/activations/sigmoid/sigmoid_container.rst", "functional/ivy/activations/sigmoid/sigmoid_functional.rst", "functional/ivy/activations/sigmoid/static_sigmoid_container.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softmax/softmax_array.rst", "functional/ivy/activations/softmax/softmax_container.rst", "functional/ivy/activations/softmax/softmax_functional.rst", "functional/ivy/activations/softmax/static_softmax_container.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/compilation.rst", "functional/ivy/constants.rst", "functional/ivy/control_flow_ops.rst", "functional/ivy/control_flow_ops/IfElse.rst", "functional/ivy/control_flow_ops/WhileLoop.rst", "functional/ivy/control_flow_ops/if_else.rst", "functional/ivy/control_flow_ops/while_loop.rst", "functional/ivy/creation.rst", "functional/ivy/creation/NestedSequence.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/asarray_handle_nestable.rst", "functional/ivy/creation/asarray_infer_device.rst", "functional/ivy/creation/asarray_to_native_arrays_and_back.rst", "functional/ivy/creation/copy_array.rst", "functional/ivy/creation/copy_array/copy_array_array.rst", "functional/ivy/creation/copy_array/copy_array_functional.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_array.rst", "functional/ivy/creation/linspace/linspace_container.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_array.rst", "functional/ivy/creation/logspace/logspace_container.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/one_hot.rst", "functional/ivy/creation/one_hot/one_hot_array.rst", "functional/ivy/creation/one_hot/one_hot_container.rst", "functional/ivy/creation/one_hot/one_hot_functional.rst", "functional/ivy/creation/one_hot/static_one_hot_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultComplexDtype.rst", "functional/ivy/data_type/DefaultDtype.rst", "functional/ivy/data_type/DefaultFloatDtype.rst", "functional/ivy/data_type/DefaultIntDtype.rst", "functional/ivy/data_type/DefaultUintDtype.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_array.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_array.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/check_float.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_complex_dtype.rst", "functional/ivy/data_type/default_complex_dtype/default_complex_dtype_functional.rst", "functional/ivy/data_type/default_complex_dtype/static_default_complex_dtype_container.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional.rst", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/default_uint_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype/static_dtype_container.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_array.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional.rst", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional.rst", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_array.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/infer_default_dtype.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_bool_dtype.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional.rst", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container.rst", "functional/ivy/data_type/is_complex_dtype.rst", "functional/ivy/data_type/is_complex_dtype/is_complex_dtype_container.rst", "functional/ivy/data_type/is_complex_dtype/is_complex_dtype_functional.rst", "functional/ivy/data_type/is_complex_dtype/static_is_complex_dtype_container.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional.rst", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/promote_types_of_inputs.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_array.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_complex_dtype.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/set_default_uint_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_complex_dtype.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/unset_default_uint_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev/dev_array.rst", "functional/ivy/device/dev/dev_container.rst", "functional/ivy/device/dev/dev_functional.rst", "functional/ivy/device/dev/static_dev_container.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/function_supported_devices.rst", "functional/ivy/device/function_unsupported_devices.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/to_device/static_to_device_container.rst", "functional/ivy/device/to_device/to_device_array.rst", "functional/ivy/device/to_device/to_device_container.rst", "functional/ivy/device/to_device/to_device_functional.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acos/static_acos_container.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/acosh/static_acosh_container.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asin/static_asin_container.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan/static_atan_container.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atan2/static_atan2_container.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/atanh/static_atanh_container.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/ceil/static_ceil_container.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cos/static_cos_container.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/cosh/static_cosh_container.rst", "functional/ivy/elementwise/deg2rad.rst", "functional/ivy/elementwise/deg2rad/deg2rad_array.rst", "functional/ivy/elementwise/deg2rad/deg2rad_container.rst", "functional/ivy/elementwise/deg2rad/deg2rad_functional.rst", "functional/ivy/elementwise/deg2rad/static_deg2rad_container.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/equal/static_equal_container.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/erf/static_erf_container.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/exp/static_exp_container.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/expm1/static_expm1_container.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor/static_floor_container.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/floor_divide/static_floor_divide_container.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater/static_greater_container.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/greater_equal/static_greater_equal_container.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isfinite/static_isfinite_container.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isinf/static_isinf_container.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/isnan/static_isnan_container.rst", "functional/ivy/elementwise/isreal.rst", "functional/ivy/elementwise/isreal/isreal_array.rst", "functional/ivy/elementwise/isreal/isreal_container.rst", "functional/ivy/elementwise/isreal/isreal_functional.rst", "functional/ivy/elementwise/isreal/static_isreal_container.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less/static_less_container.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/less_equal/static_less_equal_container.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log/static_log_container.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log10/static_log10_container.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log1p/static_log1p_container.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/log2/static_log2_container.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logaddexp/static_logaddexp_container.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_and/static_logical_and_container.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_not/static_logical_not_container.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_or/static_logical_or_container.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/logical_xor/static_logical_xor_container.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/maximum/maximum_array.rst", "functional/ivy/elementwise/maximum/maximum_container.rst", "functional/ivy/elementwise/maximum/maximum_functional.rst", "functional/ivy/elementwise/maximum/static_maximum_container.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/minimum/minimum_array.rst", "functional/ivy/elementwise/minimum/minimum_container.rst", "functional/ivy/elementwise/minimum/minimum_functional.rst", "functional/ivy/elementwise/minimum/static_minimum_container.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/negative/static_negative_container.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/not_equal/static_not_equal_container.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/positive/static_positive_container.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/pow/static_pow_container.rst", "functional/ivy/elementwise/rad2deg.rst", "functional/ivy/elementwise/rad2deg/rad2deg_array.rst", "functional/ivy/elementwise/rad2deg/rad2deg_container.rst", "functional/ivy/elementwise/rad2deg/rad2deg_functional.rst", "functional/ivy/elementwise/rad2deg/static_rad2deg_container.rst", "functional/ivy/elementwise/reciprocal.rst", "functional/ivy/elementwise/reciprocal/reciprocal_array.rst", "functional/ivy/elementwise/reciprocal/reciprocal_container.rst", "functional/ivy/elementwise/reciprocal/reciprocal_functional.rst", "functional/ivy/elementwise/reciprocal/static_reciprocal_container.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/remainder/static_remainder_container.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/round/static_round_container.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sin/static_sin_container.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sinh/static_sinh_container.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/sqrt/static_sqrt_container.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/square/static_square_container.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/tanh/static_tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_array.rst", "functional/ivy/elementwise/tanh/tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_functional.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/static_trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/elementwise/trunc_divide.rst", "functional/ivy/elementwise/trunc_divide/static_trunc_divide_container.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_array.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_container.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_functional.rst", "functional/ivy/experimental.rst", "functional/ivy/experimental/NativeSparseArray.rst", "functional/ivy/experimental/SparseArray.rst", "functional/ivy/experimental/activations.rst", "functional/ivy/experimental/activations/logit.rst", "functional/ivy/experimental/activations/prelu.rst", "functional/ivy/experimental/activations/thresholded_relu.rst", "functional/ivy/experimental/adjoint.rst", "functional/ivy/experimental/adjoint/adjoint_array.rst", "functional/ivy/experimental/adjoint/adjoint_container.rst", "functional/ivy/experimental/adjoint/adjoint_functional.rst", "functional/ivy/experimental/adjoint/static_adjoint_container.rst", "functional/ivy/experimental/allclose.rst", "functional/ivy/experimental/allclose/allclose_array.rst", "functional/ivy/experimental/allclose/allclose_container.rst", "functional/ivy/experimental/allclose/allclose_functional.rst", "functional/ivy/experimental/allclose/static_allclose_container.rst", "functional/ivy/experimental/angle.rst", "functional/ivy/experimental/angle/angle_array.rst", "functional/ivy/experimental/angle/angle_container.rst", "functional/ivy/experimental/angle/angle_functional.rst", "functional/ivy/experimental/angle/static_angle_container.rst", "functional/ivy/experimental/atleast_1d.rst", "functional/ivy/experimental/atleast_1d/atleast_1d_array.rst", "functional/ivy/experimental/atleast_1d/atleast_1d_container.rst", "functional/ivy/experimental/atleast_1d/atleast_1d_functional.rst", "functional/ivy/experimental/atleast_1d/static_atleast_1d_container.rst", "functional/ivy/experimental/atleast_2d.rst", "functional/ivy/experimental/atleast_2d/atleast_2d_array.rst", "functional/ivy/experimental/atleast_2d/atleast_2d_container.rst", "functional/ivy/experimental/atleast_2d/atleast_2d_functional.rst", "functional/ivy/experimental/atleast_2d/static_atleast_2d_container.rst", "functional/ivy/experimental/atleast_3d.rst", "functional/ivy/experimental/atleast_3d/atleast_3d_array.rst", "functional/ivy/experimental/atleast_3d/atleast_3d_container.rst", "functional/ivy/experimental/atleast_3d/atleast_3d_functional.rst", "functional/ivy/experimental/atleast_3d/static_atleast_3d_container.rst", "functional/ivy/experimental/avg_pool1d.rst", "functional/ivy/experimental/avg_pool1d/avg_pool1d_array.rst", "functional/ivy/experimental/avg_pool1d/avg_pool1d_container.rst", "functional/ivy/experimental/avg_pool1d/avg_pool1d_functional.rst", "functional/ivy/experimental/avg_pool1d/static_avg_pool1d_container.rst", "functional/ivy/experimental/avg_pool2d.rst", "functional/ivy/experimental/avg_pool2d/avg_pool2d_array.rst", "functional/ivy/experimental/avg_pool2d/avg_pool2d_container.rst", "functional/ivy/experimental/avg_pool2d/avg_pool2d_functional.rst", "functional/ivy/experimental/avg_pool2d/static_avg_pool2d_container.rst", "functional/ivy/experimental/avg_pool3d.rst", "functional/ivy/experimental/avg_pool3d/avg_pool3d_array.rst", "functional/ivy/experimental/avg_pool3d/avg_pool3d_container.rst", "functional/ivy/experimental/avg_pool3d/avg_pool3d_functional.rst", "functional/ivy/experimental/avg_pool3d/static_avg_pool3d_container.rst", "functional/ivy/experimental/bernoulli.rst", "functional/ivy/experimental/bernoulli/bernoulli_array.rst", "functional/ivy/experimental/bernoulli/bernoulli_container.rst", "functional/ivy/experimental/bernoulli/bernoulli_functional.rst", "functional/ivy/experimental/bernoulli/static_bernoulli_container.rst", "functional/ivy/experimental/beta.rst", "functional/ivy/experimental/beta/beta_array.rst", "functional/ivy/experimental/beta/beta_container.rst", "functional/ivy/experimental/beta/beta_functional.rst", "functional/ivy/experimental/beta/static_beta_container.rst", "functional/ivy/experimental/binarizer.rst", "functional/ivy/experimental/binarizer/binarizer_array.rst", "functional/ivy/experimental/binarizer/binarizer_container.rst", "functional/ivy/experimental/binarizer/binarizer_functional.rst", "functional/ivy/experimental/binarizer/static_binarizer_container.rst", "functional/ivy/experimental/binary_cross_entropy_with_logits.rst", "functional/ivy/experimental/binary_cross_entropy_with_logits/binary_cross_entropy_with_logits_container.rst", "functional/ivy/experimental/binary_cross_entropy_with_logits/binary_cross_entropy_with_logits_functional.rst", "functional/ivy/experimental/binary_cross_entropy_with_logits/static_binary_cross_entropy_with_logits_container.rst", "functional/ivy/experimental/bind_custom_gradient_function.rst", "functional/ivy/experimental/broadcast_shapes.rst", "functional/ivy/experimental/broadcast_shapes/broadcast_shapes_container.rst", "functional/ivy/experimental/broadcast_shapes/broadcast_shapes_functional.rst", "functional/ivy/experimental/broadcast_shapes/static_broadcast_shapes_container.rst", "functional/ivy/experimental/compilation.rst", "functional/ivy/experimental/compute_weight_mat.rst", "functional/ivy/experimental/constants.rst", "functional/ivy/experimental/copysign.rst", "functional/ivy/experimental/copysign/copysign_array.rst", "functional/ivy/experimental/copysign/copysign_container.rst", "functional/ivy/experimental/copysign/copysign_functional.rst", "functional/ivy/experimental/copysign/static_copysign_container.rst", "functional/ivy/experimental/corrcoef.rst", "functional/ivy/experimental/corrcoef/corrcoef_array.rst", "functional/ivy/experimental/corrcoef/corrcoef_container.rst", "functional/ivy/experimental/corrcoef/corrcoef_functional.rst", "functional/ivy/experimental/corrcoef/static_corrcoef_container.rst", "functional/ivy/experimental/count_nonzero.rst", "functional/ivy/experimental/count_nonzero/count_nonzero_array.rst", "functional/ivy/experimental/count_nonzero/count_nonzero_container.rst", "functional/ivy/experimental/count_nonzero/count_nonzero_functional.rst", "functional/ivy/experimental/count_nonzero/static_count_nonzero_container.rst", "functional/ivy/experimental/creation.rst", "functional/ivy/experimental/creation/eye_like.rst", "functional/ivy/experimental/creation/hamming_window.rst", "functional/ivy/experimental/creation/hann_window.rst", "functional/ivy/experimental/creation/kaiser_bessel_derived_window.rst", "functional/ivy/experimental/creation/kaiser_window.rst", "functional/ivy/experimental/creation/tril_indices.rst", "functional/ivy/experimental/creation/triu_indices.rst", "functional/ivy/experimental/creation/vorbis_window.rst", "functional/ivy/experimental/data_type.rst", "functional/ivy/experimental/data_type/is_native_dtype.rst", "functional/ivy/experimental/dct.rst", "functional/ivy/experimental/dct/dct_array.rst", "functional/ivy/experimental/dct/dct_container.rst", "functional/ivy/experimental/dct/dct_functional.rst", "functional/ivy/experimental/dct/static_dct_container.rst", "functional/ivy/experimental/device.rst", "functional/ivy/experimental/dft.rst", "functional/ivy/experimental/dft/dft_container.rst", "functional/ivy/experimental/dft/dft_functional.rst", "functional/ivy/experimental/dft/static_dft_container.rst", "functional/ivy/experimental/diagflat.rst", "functional/ivy/experimental/diagflat/diagflat_array.rst", "functional/ivy/experimental/diagflat/diagflat_container.rst", "functional/ivy/experimental/diagflat/diagflat_functional.rst", "functional/ivy/experimental/diagflat/static_diagflat_container.rst", "functional/ivy/experimental/diff.rst", "functional/ivy/experimental/diff/diff_array.rst", "functional/ivy/experimental/diff/diff_container.rst", "functional/ivy/experimental/diff/diff_functional.rst", "functional/ivy/experimental/diff/static_diff_container.rst", "functional/ivy/experimental/dirichlet.rst", "functional/ivy/experimental/dirichlet/dirichlet_array.rst", "functional/ivy/experimental/dirichlet/dirichlet_container.rst", "functional/ivy/experimental/dirichlet/dirichlet_functional.rst", "functional/ivy/experimental/dirichlet/static_dirichlet_container.rst", "functional/ivy/experimental/dropout1d.rst", "functional/ivy/experimental/dsplit.rst", "functional/ivy/experimental/dsplit/dsplit_array.rst", "functional/ivy/experimental/dsplit/dsplit_container.rst", "functional/ivy/experimental/dsplit/dsplit_functional.rst", "functional/ivy/experimental/dsplit/static_dsplit_container.rst", "functional/ivy/experimental/dstack.rst", "functional/ivy/experimental/dstack/dstack_array.rst", "functional/ivy/experimental/dstack/dstack_container.rst", "functional/ivy/experimental/dstack/dstack_functional.rst", "functional/ivy/experimental/dstack/static_dstack_container.rst", "functional/ivy/experimental/eig.rst", "functional/ivy/experimental/eig/eig_array.rst", "functional/ivy/experimental/eig/eig_container.rst", "functional/ivy/experimental/eig/eig_functional.rst", "functional/ivy/experimental/eig/static_eig_container.rst", "functional/ivy/experimental/eigvals.rst", "functional/ivy/experimental/eigvals/eigvals_array.rst", "functional/ivy/experimental/eigvals/eigvals_container.rst", "functional/ivy/experimental/eigvals/eigvals_functional.rst", "functional/ivy/experimental/eigvals/static_eigvals_container.rst", "functional/ivy/experimental/elementwise.rst", "functional/ivy/experimental/elementwise/allclose.rst", "functional/ivy/experimental/elementwise/angle.rst", "functional/ivy/experimental/elementwise/binarizer.rst", "functional/ivy/experimental/elementwise/copysign.rst", "functional/ivy/experimental/elementwise/count_nonzero.rst", "functional/ivy/experimental/elementwise/diff.rst", "functional/ivy/experimental/elementwise/exp2.rst", "functional/ivy/experimental/elementwise/fix.rst", "functional/ivy/experimental/elementwise/float_power.rst", "functional/ivy/experimental/elementwise/fmax.rst", "functional/ivy/experimental/elementwise/fmin.rst", "functional/ivy/experimental/elementwise/fmod.rst", "functional/ivy/experimental/elementwise/gcd.rst", "functional/ivy/experimental/elementwise/gradient.rst", "functional/ivy/experimental/elementwise/hypot.rst", "functional/ivy/experimental/elementwise/imag.rst", "functional/ivy/experimental/elementwise/isclose.rst", "functional/ivy/experimental/elementwise/lcm.rst", "functional/ivy/experimental/elementwise/logaddexp2.rst", "functional/ivy/experimental/elementwise/nan_to_num.rst", "functional/ivy/experimental/elementwise/nansum.rst", "functional/ivy/experimental/elementwise/nextafter.rst", "functional/ivy/experimental/elementwise/real.rst", "functional/ivy/experimental/elementwise/signbit.rst", "functional/ivy/experimental/elementwise/sinc.rst", "functional/ivy/experimental/elementwise/trapz.rst", "functional/ivy/experimental/elementwise/xlogy.rst", "functional/ivy/experimental/elementwise/zeta.rst", "functional/ivy/experimental/embedding.rst", "functional/ivy/experimental/embedding/embedding_array.rst", "functional/ivy/experimental/embedding/embedding_container.rst", "functional/ivy/experimental/embedding/embedding_functional.rst", "functional/ivy/experimental/embedding/static_embedding_container.rst", "functional/ivy/experimental/exp2.rst", "functional/ivy/experimental/exp2/exp2_array.rst", "functional/ivy/experimental/exp2/exp2_container.rst", "functional/ivy/experimental/exp2/exp2_functional.rst", "functional/ivy/experimental/exp2/static_exp2_container.rst", "functional/ivy/experimental/expand.rst", "functional/ivy/experimental/expand/expand_array.rst", "functional/ivy/experimental/expand/expand_container.rst", "functional/ivy/experimental/expand/expand_functional.rst", "functional/ivy/experimental/expand/static_expand_container.rst", "functional/ivy/experimental/eye_like.rst", "functional/ivy/experimental/eye_like/eye_like_array.rst", "functional/ivy/experimental/eye_like/eye_like_container.rst", "functional/ivy/experimental/eye_like/eye_like_functional.rst", "functional/ivy/experimental/eye_like/static_eye_like_container.rst", "functional/ivy/experimental/fft.rst", "functional/ivy/experimental/fft/fft_array.rst", "functional/ivy/experimental/fft/fft_container.rst", "functional/ivy/experimental/fft/fft_functional.rst", "functional/ivy/experimental/fft/static_fft_container.rst", "functional/ivy/experimental/fix.rst", "functional/ivy/experimental/fix/fix_array.rst", "functional/ivy/experimental/fix/fix_container.rst", "functional/ivy/experimental/fix/fix_functional.rst", "functional/ivy/experimental/fix/static_fix_container.rst", "functional/ivy/experimental/flatten.rst", "functional/ivy/experimental/flatten/flatten_array.rst", "functional/ivy/experimental/flatten/flatten_container.rst", "functional/ivy/experimental/flatten/flatten_functional.rst", "functional/ivy/experimental/flatten/static_flatten_container.rst", "functional/ivy/experimental/fliplr.rst", "functional/ivy/experimental/fliplr/fliplr_array.rst", "functional/ivy/experimental/fliplr/fliplr_container.rst", "functional/ivy/experimental/fliplr/fliplr_functional.rst", "functional/ivy/experimental/fliplr/static_fliplr_container.rst", "functional/ivy/experimental/flipud.rst", "functional/ivy/experimental/flipud/flipud_array.rst", "functional/ivy/experimental/flipud/flipud_container.rst", "functional/ivy/experimental/flipud/flipud_functional.rst", "functional/ivy/experimental/flipud/static_flipud_container.rst", "functional/ivy/experimental/float_power.rst", "functional/ivy/experimental/float_power/float_power_array.rst", "functional/ivy/experimental/float_power/float_power_container.rst", "functional/ivy/experimental/float_power/float_power_functional.rst", "functional/ivy/experimental/float_power/static_float_power_container.rst", "functional/ivy/experimental/fmax.rst", "functional/ivy/experimental/fmax/fmax_array.rst", "functional/ivy/experimental/fmax/fmax_container.rst", "functional/ivy/experimental/fmax/fmax_functional.rst", "functional/ivy/experimental/fmax/static_fmax_container.rst", "functional/ivy/experimental/fmin.rst", "functional/ivy/experimental/fmin/fmin_array.rst", "functional/ivy/experimental/fmin/fmin_container.rst", "functional/ivy/experimental/fmin/fmin_functional.rst", "functional/ivy/experimental/fmin/static_fmin_container.rst", "functional/ivy/experimental/fmod.rst", "functional/ivy/experimental/fmod/fmod_array.rst", "functional/ivy/experimental/fmod/fmod_container.rst", "functional/ivy/experimental/fmod/fmod_functional.rst", "functional/ivy/experimental/fmod/static_fmod_container.rst", "functional/ivy/experimental/gamma.rst", "functional/ivy/experimental/gamma/gamma_array.rst", "functional/ivy/experimental/gamma/gamma_functional.rst", "functional/ivy/experimental/gcd.rst", "functional/ivy/experimental/gcd/gcd_array.rst", "functional/ivy/experimental/gcd/gcd_container.rst", "functional/ivy/experimental/gcd/gcd_functional.rst", "functional/ivy/experimental/gcd/static_gcd_container.rst", "functional/ivy/experimental/general.rst", "functional/ivy/experimental/general/isin.rst", "functional/ivy/experimental/gradient.rst", "functional/ivy/experimental/gradient/gradient_array.rst", "functional/ivy/experimental/gradient/gradient_container.rst", "functional/ivy/experimental/gradient/gradient_functional.rst", "functional/ivy/experimental/gradient/static_gradient_container.rst", "functional/ivy/experimental/gradients.rst", "functional/ivy/experimental/gradients/bind_custom_gradient_function.rst", "functional/ivy/experimental/hamming_window.rst", "functional/ivy/experimental/hamming_window/hamming_window_container.rst", "functional/ivy/experimental/hamming_window/hamming_window_functional.rst", "functional/ivy/experimental/hamming_window/static_hamming_window_container.rst", "functional/ivy/experimental/hann_window.rst", "functional/ivy/experimental/hann_window/hann_window_container.rst", "functional/ivy/experimental/hann_window/hann_window_functional.rst", "functional/ivy/experimental/hann_window/static_hann_window_container.rst", "functional/ivy/experimental/heaviside.rst", "functional/ivy/experimental/heaviside/heaviside_array.rst", "functional/ivy/experimental/heaviside/heaviside_container.rst", "functional/ivy/experimental/heaviside/heaviside_functional.rst", "functional/ivy/experimental/heaviside/static_heaviside_container.rst", "functional/ivy/experimental/hsplit.rst", "functional/ivy/experimental/hsplit/hsplit_array.rst", "functional/ivy/experimental/hsplit/hsplit_container.rst", "functional/ivy/experimental/hsplit/hsplit_functional.rst", "functional/ivy/experimental/hsplit/static_hsplit_container.rst", "functional/ivy/experimental/hstack.rst", "functional/ivy/experimental/hstack/hstack_array.rst", "functional/ivy/experimental/hstack/hstack_container.rst", "functional/ivy/experimental/hstack/hstack_functional.rst", "functional/ivy/experimental/hstack/static_hstack_container.rst", "functional/ivy/experimental/hypot.rst", "functional/ivy/experimental/hypot/hypot_array.rst", "functional/ivy/experimental/hypot/hypot_container.rst", "functional/ivy/experimental/hypot/hypot_functional.rst", "functional/ivy/experimental/hypot/static_hypot_container.rst", "functional/ivy/experimental/i0.rst", "functional/ivy/experimental/i0/i0_array.rst", "functional/ivy/experimental/i0/i0_container.rst", "functional/ivy/experimental/i0/i0_functional.rst", "functional/ivy/experimental/i0/static_i0_container.rst", "functional/ivy/experimental/ifft.rst", "functional/ivy/experimental/ifft/ifft_array.rst", "functional/ivy/experimental/ifft/ifft_container.rst", "functional/ivy/experimental/ifft/ifft_functional.rst", "functional/ivy/experimental/ifft/static_ifft_container.rst", "functional/ivy/experimental/imag.rst", "functional/ivy/experimental/imag/imag_array.rst", "functional/ivy/experimental/imag/imag_container.rst", "functional/ivy/experimental/imag/imag_functional.rst", "functional/ivy/experimental/imag/static_imag_container.rst", "functional/ivy/experimental/instance_norm.rst", "functional/ivy/experimental/instance_norm/instance_norm_array.rst", "functional/ivy/experimental/instance_norm/instance_norm_container.rst", "functional/ivy/experimental/instance_norm/instance_norm_functional.rst", "functional/ivy/experimental/instance_norm/static_instance_norm_container.rst", "functional/ivy/experimental/interp.rst", "functional/ivy/experimental/interpolate.rst", "functional/ivy/experimental/interpolate/interpolate_array.rst", "functional/ivy/experimental/interpolate/interpolate_container.rst", "functional/ivy/experimental/interpolate/interpolate_functional.rst", "functional/ivy/experimental/interpolate/static_interpolate_container.rst", "functional/ivy/experimental/is_ivy_sparse_array.rst", "functional/ivy/experimental/is_native_dtype.rst", "functional/ivy/experimental/is_native_sparse_array.rst", "functional/ivy/experimental/isclose.rst", "functional/ivy/experimental/isclose/isclose_array.rst", "functional/ivy/experimental/isclose/isclose_container.rst", "functional/ivy/experimental/isclose/isclose_functional.rst", "functional/ivy/experimental/isclose/static_isclose_container.rst", "functional/ivy/experimental/isin.rst", "functional/ivy/experimental/isin/isin_array.rst", "functional/ivy/experimental/isin/isin_container.rst", "functional/ivy/experimental/isin/isin_functional.rst", "functional/ivy/experimental/isin/static_isin_container.rst", "functional/ivy/experimental/kaiser_bessel_derived_window.rst", "functional/ivy/experimental/kaiser_bessel_derived_window/kaiser_bessel_derived_window_container.rst", "functional/ivy/experimental/kaiser_bessel_derived_window/kaiser_bessel_derived_window_functional.rst", "functional/ivy/experimental/kaiser_bessel_derived_window/static_kaiser_bessel_derived_window_container.rst", "functional/ivy/experimental/kaiser_window.rst", "functional/ivy/experimental/kaiser_window/kaiser_window_container.rst", "functional/ivy/experimental/kaiser_window/kaiser_window_functional.rst", "functional/ivy/experimental/kaiser_window/static_kaiser_window_container.rst", "functional/ivy/experimental/kron.rst", "functional/ivy/experimental/kron/kron_array.rst", "functional/ivy/experimental/kron/kron_container.rst", "functional/ivy/experimental/kron/kron_functional.rst", "functional/ivy/experimental/kron/static_kron_container.rst", "functional/ivy/experimental/l2_normalize.rst", "functional/ivy/experimental/l2_normalize/l2_normalize_array.rst", "functional/ivy/experimental/l2_normalize/l2_normalize_container.rst", "functional/ivy/experimental/l2_normalize/l2_normalize_functional.rst", "functional/ivy/experimental/l2_normalize/static_l2_normalize_container.rst", "functional/ivy/experimental/layers.rst", "functional/ivy/experimental/layers/avg_pool1d.rst", "functional/ivy/experimental/layers/avg_pool2d.rst", "functional/ivy/experimental/layers/avg_pool3d.rst", "functional/ivy/experimental/layers/compute_weight_mat.rst", "functional/ivy/experimental/layers/dct.rst", "functional/ivy/experimental/layers/dft.rst", "functional/ivy/experimental/layers/dropout1d.rst", "functional/ivy/experimental/layers/embedding.rst", "functional/ivy/experimental/layers/fft.rst", "functional/ivy/experimental/layers/ifft.rst", "functional/ivy/experimental/layers/interp.rst", "functional/ivy/experimental/layers/interpolate.rst", "functional/ivy/experimental/layers/max_pool1d.rst", "functional/ivy/experimental/layers/max_pool2d.rst", "functional/ivy/experimental/layers/max_pool3d.rst", "functional/ivy/experimental/layers/padding_ceil_mode.rst", "functional/ivy/experimental/lcm.rst", "functional/ivy/experimental/lcm/lcm_array.rst", "functional/ivy/experimental/lcm/lcm_container.rst", "functional/ivy/experimental/lcm/lcm_functional.rst", "functional/ivy/experimental/lcm/static_lcm_container.rst", "functional/ivy/experimental/lexsort.rst", "functional/ivy/experimental/lexsort/lexsort_array.rst", "functional/ivy/experimental/lexsort/lexsort_container.rst", "functional/ivy/experimental/lexsort/lexsort_functional.rst", "functional/ivy/experimental/lexsort/static_lexsort_container.rst", "functional/ivy/experimental/linear_algebra.rst", "functional/ivy/experimental/linear_algebra/adjoint.rst", "functional/ivy/experimental/linear_algebra/diagflat.rst", "functional/ivy/experimental/linear_algebra/eig.rst", "functional/ivy/experimental/linear_algebra/eigvals.rst", "functional/ivy/experimental/linear_algebra/kron.rst", "functional/ivy/experimental/linear_algebra/matrix_exp.rst", "functional/ivy/experimental/logaddexp2.rst", "functional/ivy/experimental/logaddexp2/logaddexp2_array.rst", "functional/ivy/experimental/logaddexp2/logaddexp2_container.rst", "functional/ivy/experimental/logaddexp2/logaddexp2_functional.rst", "functional/ivy/experimental/logaddexp2/static_logaddexp2_container.rst", "functional/ivy/experimental/logit.rst", "functional/ivy/experimental/logit/logit_array.rst", "functional/ivy/experimental/logit/logit_container.rst", "functional/ivy/experimental/logit/logit_functional.rst", "functional/ivy/experimental/logit/static_logit_container.rst", "functional/ivy/experimental/losses.rst", "functional/ivy/experimental/losses/binary_cross_entropy_with_logits.rst", "functional/ivy/experimental/lp_normalize.rst", "functional/ivy/experimental/lp_normalize/lp_normalize_array.rst", "functional/ivy/experimental/lp_normalize/lp_normalize_container.rst", "functional/ivy/experimental/lp_normalize/lp_normalize_functional.rst", "functional/ivy/experimental/lp_normalize/static_lp_normalize_container.rst", "functional/ivy/experimental/manipulation.rst", "functional/ivy/experimental/manipulation/atleast_1d.rst", "functional/ivy/experimental/manipulation/atleast_2d.rst", "functional/ivy/experimental/manipulation/atleast_3d.rst", "functional/ivy/experimental/manipulation/broadcast_shapes.rst", "functional/ivy/experimental/manipulation/dsplit.rst", "functional/ivy/experimental/manipulation/dstack.rst", "functional/ivy/experimental/manipulation/expand.rst", "functional/ivy/experimental/manipulation/flatten.rst", "functional/ivy/experimental/manipulation/fliplr.rst", "functional/ivy/experimental/manipulation/flipud.rst", "functional/ivy/experimental/manipulation/heaviside.rst", "functional/ivy/experimental/manipulation/hsplit.rst", "functional/ivy/experimental/manipulation/hstack.rst", "functional/ivy/experimental/manipulation/i0.rst", "functional/ivy/experimental/manipulation/moveaxis.rst", "functional/ivy/experimental/manipulation/ndenumerate.rst", "functional/ivy/experimental/manipulation/ndindex.rst", "functional/ivy/experimental/manipulation/pad.rst", "functional/ivy/experimental/manipulation/rot90.rst", "functional/ivy/experimental/manipulation/take_along_axis.rst", "functional/ivy/experimental/manipulation/top_k.rst", "functional/ivy/experimental/manipulation/vsplit.rst", "functional/ivy/experimental/manipulation/vstack.rst", "functional/ivy/experimental/matrix_exp.rst", "functional/ivy/experimental/matrix_exp/matrix_exp_array.rst", "functional/ivy/experimental/matrix_exp/matrix_exp_container.rst", "functional/ivy/experimental/matrix_exp/matrix_exp_functional.rst", "functional/ivy/experimental/matrix_exp/static_matrix_exp_container.rst", "functional/ivy/experimental/max_pool1d.rst", "functional/ivy/experimental/max_pool1d/max_pool1d_array.rst", "functional/ivy/experimental/max_pool1d/max_pool1d_container.rst", "functional/ivy/experimental/max_pool1d/max_pool1d_functional.rst", "functional/ivy/experimental/max_pool1d/static_max_pool1d_container.rst", "functional/ivy/experimental/max_pool2d.rst", "functional/ivy/experimental/max_pool2d/max_pool2d_array.rst", "functional/ivy/experimental/max_pool2d/max_pool2d_container.rst", "functional/ivy/experimental/max_pool2d/max_pool2d_functional.rst", "functional/ivy/experimental/max_pool2d/static_max_pool2d_container.rst", "functional/ivy/experimental/max_pool3d.rst", "functional/ivy/experimental/max_pool3d/max_pool3d_array.rst", "functional/ivy/experimental/max_pool3d/max_pool3d_container.rst", "functional/ivy/experimental/max_pool3d/max_pool3d_functional.rst", "functional/ivy/experimental/max_pool3d/static_max_pool3d_container.rst", "functional/ivy/experimental/median.rst", "functional/ivy/experimental/median/median_array.rst", "functional/ivy/experimental/median/median_container.rst", "functional/ivy/experimental/median/median_functional.rst", "functional/ivy/experimental/median/static_median_container.rst", "functional/ivy/experimental/meta.rst", "functional/ivy/experimental/moveaxis.rst", "functional/ivy/experimental/moveaxis/moveaxis_array.rst", "functional/ivy/experimental/moveaxis/moveaxis_container.rst", "functional/ivy/experimental/moveaxis/moveaxis_functional.rst", "functional/ivy/experimental/moveaxis/static_moveaxis_container.rst", "functional/ivy/experimental/msort.rst", "functional/ivy/experimental/msort/msort_array.rst", "functional/ivy/experimental/msort/msort_container.rst", "functional/ivy/experimental/msort/msort_functional.rst", "functional/ivy/experimental/msort/static_msort_container.rst", "functional/ivy/experimental/nan_to_num.rst", "functional/ivy/experimental/nan_to_num/nan_to_num_array.rst", "functional/ivy/experimental/nan_to_num/nan_to_num_container.rst", "functional/ivy/experimental/nan_to_num/nan_to_num_functional.rst", "functional/ivy/experimental/nan_to_num/static_nan_to_num_container.rst", "functional/ivy/experimental/nanmean.rst", "functional/ivy/experimental/nanmean/nanmean_array.rst", "functional/ivy/experimental/nanmean/nanmean_container.rst", "functional/ivy/experimental/nanmean/nanmean_functional.rst", "functional/ivy/experimental/nanmean/static_nanmean_container.rst", "functional/ivy/experimental/nanmedian.rst", "functional/ivy/experimental/nanmedian/nanmedian_array.rst", "functional/ivy/experimental/nanmedian/nanmedian_container.rst", "functional/ivy/experimental/nanmedian/nanmedian_functional.rst", "functional/ivy/experimental/nanmedian/static_nanmedian_container.rst", "functional/ivy/experimental/nansum.rst", "functional/ivy/experimental/nansum/nansum_array.rst", "functional/ivy/experimental/nansum/nansum_container.rst", "functional/ivy/experimental/nansum/nansum_functional.rst", "functional/ivy/experimental/nansum/static_nansum_container.rst", "functional/ivy/experimental/native_sparse_array.rst", "functional/ivy/experimental/native_sparse_array_to_indices_values_and_shape.rst", "functional/ivy/experimental/ndenumerate.rst", "functional/ivy/experimental/ndindex.rst", "functional/ivy/experimental/nest.rst", "functional/ivy/experimental/nextafter.rst", "functional/ivy/experimental/nextafter/nextafter_array.rst", "functional/ivy/experimental/nextafter/nextafter_container.rst", "functional/ivy/experimental/nextafter/nextafter_functional.rst", "functional/ivy/experimental/nextafter/static_nextafter_container.rst", "functional/ivy/experimental/norms.rst", "functional/ivy/experimental/norms/instance_norm.rst", "functional/ivy/experimental/norms/l2_normalize.rst", "functional/ivy/experimental/norms/lp_normalize.rst", "functional/ivy/experimental/pad.rst", "functional/ivy/experimental/pad/pad_array.rst", "functional/ivy/experimental/pad/pad_container.rst", "functional/ivy/experimental/pad/pad_functional.rst", "functional/ivy/experimental/pad/static_pad_container.rst", "functional/ivy/experimental/padding_ceil_mode.rst", "functional/ivy/experimental/poisson.rst", "functional/ivy/experimental/poisson/poisson_array.rst", "functional/ivy/experimental/poisson/poisson_container.rst", "functional/ivy/experimental/poisson/poisson_functional.rst", "functional/ivy/experimental/poisson/static_poisson_container.rst", "functional/ivy/experimental/prelu.rst", "functional/ivy/experimental/prelu/prelu_array.rst", "functional/ivy/experimental/prelu/prelu_container.rst", "functional/ivy/experimental/prelu/prelu_functional.rst", "functional/ivy/experimental/prelu/static_prelu_container.rst", "functional/ivy/experimental/quantile.rst", "functional/ivy/experimental/quantile/quantile_array.rst", "functional/ivy/experimental/quantile/quantile_container.rst", "functional/ivy/experimental/quantile/quantile_functional.rst", "functional/ivy/experimental/quantile/static_quantile_container.rst", "functional/ivy/experimental/random.rst", "functional/ivy/experimental/random/bernoulli.rst", "functional/ivy/experimental/random/beta.rst", "functional/ivy/experimental/random/dirichlet.rst", "functional/ivy/experimental/random/gamma.rst", "functional/ivy/experimental/random/poisson.rst", "functional/ivy/experimental/real.rst", "functional/ivy/experimental/real/real_array.rst", "functional/ivy/experimental/real/real_container.rst", "functional/ivy/experimental/real/real_functional.rst", "functional/ivy/experimental/real/static_real_container.rst", "functional/ivy/experimental/rot90.rst", "functional/ivy/experimental/rot90/rot90_array.rst", "functional/ivy/experimental/rot90/rot90_container.rst", "functional/ivy/experimental/rot90/rot90_functional.rst", "functional/ivy/experimental/rot90/static_rot90_container.rst", "functional/ivy/experimental/searching.rst", "functional/ivy/experimental/set.rst", "functional/ivy/experimental/signbit.rst", "functional/ivy/experimental/signbit/signbit_array.rst", "functional/ivy/experimental/signbit/signbit_container.rst", "functional/ivy/experimental/signbit/signbit_functional.rst", "functional/ivy/experimental/signbit/static_signbit_container.rst", "functional/ivy/experimental/sinc.rst", "functional/ivy/experimental/sinc/sinc_array.rst", "functional/ivy/experimental/sinc/sinc_container.rst", "functional/ivy/experimental/sinc/sinc_functional.rst", "functional/ivy/experimental/sinc/static_sinc_container.rst", "functional/ivy/experimental/sorting.rst", "functional/ivy/experimental/sorting/lexsort.rst", "functional/ivy/experimental/sorting/msort.rst", "functional/ivy/experimental/sparse_array.rst", "functional/ivy/experimental/sparse_array/NativeSparseArray.rst", "functional/ivy/experimental/sparse_array/SparseArray.rst", "functional/ivy/experimental/sparse_array/is_ivy_sparse_array.rst", "functional/ivy/experimental/sparse_array/is_native_sparse_array.rst", "functional/ivy/experimental/sparse_array/native_sparse_array.rst", "functional/ivy/experimental/sparse_array/native_sparse_array_to_indices_values_and_shape.rst", "functional/ivy/experimental/statistical.rst", "functional/ivy/experimental/statistical/corrcoef.rst", "functional/ivy/experimental/statistical/median.rst", "functional/ivy/experimental/statistical/nanmean.rst", "functional/ivy/experimental/statistical/nanmedian.rst", "functional/ivy/experimental/statistical/quantile.rst", "functional/ivy/experimental/statistical/unravel_index.rst", "functional/ivy/experimental/take_along_axis.rst", "functional/ivy/experimental/take_along_axis/static_take_along_axis_container.rst", "functional/ivy/experimental/take_along_axis/take_along_axis_array.rst", "functional/ivy/experimental/take_along_axis/take_along_axis_container.rst", "functional/ivy/experimental/take_along_axis/take_along_axis_functional.rst", "functional/ivy/experimental/thresholded_relu.rst", "functional/ivy/experimental/thresholded_relu/static_thresholded_relu_container.rst", "functional/ivy/experimental/thresholded_relu/thresholded_relu_array.rst", "functional/ivy/experimental/thresholded_relu/thresholded_relu_container.rst", "functional/ivy/experimental/thresholded_relu/thresholded_relu_functional.rst", "functional/ivy/experimental/top_k.rst", "functional/ivy/experimental/top_k/static_top_k_container.rst", "functional/ivy/experimental/top_k/top_k_array.rst", "functional/ivy/experimental/top_k/top_k_container.rst", "functional/ivy/experimental/top_k/top_k_functional.rst", "functional/ivy/experimental/trapz.rst", "functional/ivy/experimental/trapz/trapz_array.rst", "functional/ivy/experimental/trapz/trapz_functional.rst", "functional/ivy/experimental/tril_indices.rst", "functional/ivy/experimental/tril_indices/static_tril_indices_container.rst", "functional/ivy/experimental/tril_indices/tril_indices_container.rst", "functional/ivy/experimental/tril_indices/tril_indices_functional.rst", "functional/ivy/experimental/triu_indices.rst", "functional/ivy/experimental/triu_indices/static_triu_indices_container.rst", "functional/ivy/experimental/triu_indices/triu_indices_container.rst", "functional/ivy/experimental/triu_indices/triu_indices_functional.rst", "functional/ivy/experimental/unravel_index.rst", "functional/ivy/experimental/unravel_index/static_unravel_index_container.rst", "functional/ivy/experimental/unravel_index/unravel_index_array.rst", "functional/ivy/experimental/unravel_index/unravel_index_container.rst", "functional/ivy/experimental/unravel_index/unravel_index_functional.rst", "functional/ivy/experimental/utility.rst", "functional/ivy/experimental/vorbis_window.rst", "functional/ivy/experimental/vorbis_window/static_vorbis_window_container.rst", "functional/ivy/experimental/vorbis_window/vorbis_window_container.rst", "functional/ivy/experimental/vorbis_window/vorbis_window_functional.rst", "functional/ivy/experimental/vsplit.rst", "functional/ivy/experimental/vsplit/static_vsplit_container.rst", "functional/ivy/experimental/vsplit/vsplit_array.rst", "functional/ivy/experimental/vsplit/vsplit_container.rst", "functional/ivy/experimental/vsplit/vsplit_functional.rst", "functional/ivy/experimental/vstack.rst", "functional/ivy/experimental/vstack/static_vstack_container.rst", "functional/ivy/experimental/vstack/vstack_array.rst", "functional/ivy/experimental/vstack/vstack_container.rst", "functional/ivy/experimental/vstack/vstack_functional.rst", "functional/ivy/experimental/xlogy.rst", "functional/ivy/experimental/xlogy/static_xlogy_container.rst", "functional/ivy/experimental/xlogy/xlogy_array.rst", "functional/ivy/experimental/xlogy/xlogy_container.rst", "functional/ivy/experimental/xlogy/xlogy_functional.rst", "functional/ivy/experimental/zeta.rst", "functional/ivy/experimental/zeta/static_zeta_container.rst", "functional/ivy/experimental/zeta/zeta_array.rst", "functional/ivy/experimental/zeta/zeta_container.rst", "functional/ivy/experimental/zeta/zeta_functional.rst", "functional/ivy/extensions.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/array_equal/array_equal_array.rst", "functional/ivy/general/array_equal/array_equal_container.rst", "functional/ivy/general/array_equal/array_equal_functional.rst", "functional/ivy/general/array_equal/static_array_equal_container.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_array.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_container.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_functional.rst", "functional/ivy/general/assert_supports_inplace/static_assert_supports_inplace_container.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_array.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional.rst", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/default/default_array.rst", "functional/ivy/general/default/default_functional.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_array.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_container.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_functional.rst", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_reduce/einops_reduce_array.rst", "functional/ivy/general/einops_reduce/einops_reduce_container.rst", "functional/ivy/general/einops_reduce/einops_reduce_functional.rst", "functional/ivy/general/einops_reduce/static_einops_reduce_container.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/einops_repeat/einops_repeat_array.rst", "functional/ivy/general/einops_repeat/einops_repeat_container.rst", "functional/ivy/general/einops_repeat/einops_repeat_functional.rst", "functional/ivy/general/einops_repeat/static_einops_repeat_container.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/exists/exists_array.rst", "functional/ivy/general/exists/exists_functional.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/fourier_encode/fourier_encode_array.rst", "functional/ivy/general/fourier_encode/fourier_encode_container.rst", "functional/ivy/general/fourier_encode/fourier_encode_functional.rst", "functional/ivy/general/fourier_encode/static_fourier_encode_container.rst", "functional/ivy/general/function_supported_devices_and_dtypes.rst", "functional/ivy/general/function_unsupported_devices_and_dtypes.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather/gather_array.rst", "functional/ivy/general/gather/gather_container.rst", "functional/ivy/general/gather/gather_functional.rst", "functional/ivy/general/gather/static_gather_container.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_array_mode.rst", "functional/ivy/general/get_exception_trace_mode.rst", "functional/ivy/general/get_item.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_nestable_mode.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_num_dims/get_num_dims_array.rst", "functional/ivy/general/get_num_dims/get_num_dims_container.rst", "functional/ivy/general/get_num_dims/get_num_dims_functional.rst", "functional/ivy/general/get_num_dims/static_get_num_dims_container.rst", "functional/ivy/general/get_queue_timeout.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/get_show_func_wrapper_trace_mode.rst", "functional/ivy/general/get_tmp_dir.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/has_nans/has_nans_array.rst", "functional/ivy/general/has_nans/has_nans_container.rst", "functional/ivy/general/has_nans/has_nans_functional.rst", "functional/ivy/general/has_nans/static_has_nans_container.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_array.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_container.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_functional.rst", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_increment/inplace_increment_array.rst", "functional/ivy/general/inplace_increment/inplace_increment_container.rst", "functional/ivy/general/inplace_increment/inplace_increment_functional.rst", "functional/ivy/general/inplace_increment/static_inplace_increment_container.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_update/inplace_update_array.rst", "functional/ivy/general/inplace_update/inplace_update_container.rst", "functional/ivy/general/inplace_update/inplace_update_functional.rst", "functional/ivy/general/inplace_update/static_inplace_update_container.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_array/is_array_array.rst", "functional/ivy/general/is_array/is_array_container.rst", "functional/ivy/general/is_array/is_array_functional.rst", "functional/ivy/general/is_array/static_is_array_container.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_array.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_container.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_functional.rst", "functional/ivy/general/is_ivy_array/static_is_ivy_array_container.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_array.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_functional.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/is_native_array/is_native_array_array.rst", "functional/ivy/general/is_native_array/is_native_array_container.rst", "functional/ivy/general/is_native_array/is_native_array_functional.rst", "functional/ivy/general/is_native_array/static_is_native_array_container.rst", "functional/ivy/general/isscalar.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_flat/scatter_flat_array.rst", "functional/ivy/general/scatter_flat/scatter_flat_container.rst", "functional/ivy/general/scatter_flat/scatter_flat_functional.rst", "functional/ivy/general/scatter_flat/static_scatter_flat_container.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/scatter_nd/scatter_nd_array.rst", "functional/ivy/general/scatter_nd/scatter_nd_container.rst", "functional/ivy/general/scatter_nd/scatter_nd_functional.rst", "functional/ivy/general/scatter_nd/static_scatter_nd_container.rst", "functional/ivy/general/set_array_mode.rst", "functional/ivy/general/set_exception_trace_mode.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_nestable_mode.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_show_func_wrapper_trace_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_divide/stable_divide_array.rst", "functional/ivy/general/stable_divide/stable_divide_container.rst", "functional/ivy/general/stable_divide/stable_divide_functional.rst", "functional/ivy/general/stable_divide/static_stable_divide_container.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/stable_pow/stable_pow_array.rst", "functional/ivy/general/stable_pow/stable_pow_container.rst", "functional/ivy/general/stable_pow/stable_pow_functional.rst", "functional/ivy/general/stable_pow/static_stable_pow_container.rst", "functional/ivy/general/supports_inplace_updates.rst", "functional/ivy/general/supports_inplace_updates/static_supports_inplace_updates_container.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_array.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_container.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_functional.rst", "functional/ivy/general/to_ivy_shape.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_list/static_to_list_container.rst", "functional/ivy/general/to_list/to_list_array.rst", "functional/ivy/general/to_list/to_list_functional.rst", "functional/ivy/general/to_native_shape.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_array.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/to_scalar/static_to_scalar_container.rst", "functional/ivy/general/to_scalar/to_scalar_array.rst", "functional/ivy/general/to_scalar/to_scalar_container.rst", "functional/ivy/general/to_scalar/to_scalar_functional.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_array_mode.rst", "functional/ivy/general/unset_exception_trace_mode.rst", "functional/ivy/general/unset_nestable_mode.rst", "functional/ivy/general/unset_queue_timeout.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/unset_show_func_wrapper_trace_mode.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/general/value_is_nan/static_value_is_nan_container.rst", "functional/ivy/general/value_is_nan/value_is_nan_array.rst", "functional/ivy/general/value_is_nan/value_is_nan_container.rst", "functional/ivy/general/value_is_nan/value_is_nan_functional.rst", "functional/ivy/general/vmap.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_array.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/grad.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_array.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/jac.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_array.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_array.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_array.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_array.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_functional.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/value_and_grad.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d/conv1d_array.rst", "functional/ivy/layers/conv1d/conv1d_container.rst", "functional/ivy/layers/conv1d/conv1d_functional.rst", "functional/ivy/layers/conv1d/static_conv1d_container.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_array.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_container.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_functional.rst", "functional/ivy/layers/conv1d_transpose/static_conv1d_transpose_container.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d/conv2d_array.rst", "functional/ivy/layers/conv2d/conv2d_container.rst", "functional/ivy/layers/conv2d/conv2d_functional.rst", "functional/ivy/layers/conv2d/static_conv2d_container.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_array.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_container.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_functional.rst", "functional/ivy/layers/conv2d_transpose/static_conv2d_transpose_container.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d/conv3d_array.rst", "functional/ivy/layers/conv3d/conv3d_container.rst", "functional/ivy/layers/conv3d/conv3d_functional.rst", "functional/ivy/layers/conv3d/static_conv3d_container.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_array.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_container.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_functional.rst", "functional/ivy/layers/conv3d_transpose/static_conv3d_transpose_container.rst", "functional/ivy/layers/conv_general_dilated.rst", "functional/ivy/layers/conv_general_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional.rst", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/dropout/dropout_array.rst", "functional/ivy/layers/dropout/dropout_container.rst", "functional/ivy/layers/dropout/dropout_functional.rst", "functional/ivy/layers/dropout/static_dropout_container.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/linear/linear_array.rst", "functional/ivy/layers/linear/linear_container.rst", "functional/ivy/layers/linear/linear_functional.rst", "functional/ivy/layers/linear/static_linear_container.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/lstm_update/lstm_update_array.rst", "functional/ivy/layers/lstm_update/lstm_update_container.rst", "functional/ivy/layers/lstm_update/lstm_update_functional.rst", "functional/ivy/layers/lstm_update/static_lstm_update_container.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_array.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_container.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_functional.rst", "functional/ivy/layers/multi_head_attention/static_multi_head_attention_container.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_array.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_container.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_functional.rst", "functional/ivy/layers/scaled_dot_product_attention/static_scaled_dot_product_attention_container.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_container.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/cross/static_cross_container.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_container.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/det/static_det_container.rst", "functional/ivy/linear_algebra/diag.rst", "functional/ivy/linear_algebra/diag/diag_array.rst", "functional/ivy/linear_algebra/diag/diag_container.rst", "functional/ivy/linear_algebra/diag/diag_functional.rst", "functional/ivy/linear_algebra/diag/static_diag_container.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_container.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/diagonal/static_diagonal_container.rst", "functional/ivy/linear_algebra/eig.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_container.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigh/static_eigh_container.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_container.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/eigvalsh/static_eigvalsh_container.rst", "functional/ivy/linear_algebra/inner.rst", "functional/ivy/linear_algebra/inner/inner_array.rst", "functional/ivy/linear_algebra/inner/inner_container.rst", "functional/ivy/linear_algebra/inner/inner_functional.rst", "functional/ivy/linear_algebra/inner/static_inner_container.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_container.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/inv/static_inv_container.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matmul/static_matmul_container.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_array.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional.rst", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_container.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/outer/static_outer_container.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_container.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/pinv/static_pinv_container.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_container.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/qr/static_qr_container.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/slogdet/slogdet_array.rst", "functional/ivy/linear_algebra/slogdet/slogdet_container.rst", "functional/ivy/linear_algebra/slogdet/slogdet_functional.rst", "functional/ivy/linear_algebra/slogdet/static_slogdet_container.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_container.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/solve/static_solve_container.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/static_svd_container.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_container.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/static_svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/static_tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/tensorsolve.rst", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_array.rst", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_container.rst", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/static_trace_container.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_container.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vander.rst", "functional/ivy/linear_algebra/vander/static_vander_container.rst", "functional/ivy/linear_algebra/vander/vander_array.rst", "functional/ivy/linear_algebra/vander/vander_container.rst", "functional/ivy/linear_algebra/vander/vander_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/static_vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/concat/static_concat_container.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/constant_pad/static_constant_pad_container.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/expand_dims/static_expand_dims_container.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/flip/static_flip_container.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/permute_dims/static_permute_dims_container.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/repeat/static_repeat_container.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/reshape/static_reshape_container.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/split/split_array.rst", "functional/ivy/manipulation/split/split_container.rst", "functional/ivy/manipulation/split/split_functional.rst", "functional/ivy/manipulation/split/static_split_container.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/squeeze/static_squeeze_container.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/stack/static_stack_container.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/static_swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/static_tile_container.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/unstack.rst", "functional/ivy/manipulation/unstack/static_unstack_container.rst", "functional/ivy/manipulation/unstack/unstack_array.rst", "functional/ivy/manipulation/unstack/unstack_container.rst", "functional/ivy/manipulation/unstack/unstack_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/static_zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/duplicate_array_index_chains.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_argwhere.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_empty.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/multinomial/multinomial_array.rst", "functional/ivy/random/multinomial/multinomial_container.rst", "functional/ivy/random/multinomial/multinomial_functional.rst", "functional/ivy/random/multinomial/static_multinomial_container.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_array.rst", "functional/ivy/random/randint/randint_container.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_normal/random_normal_array.rst", "functional/ivy/random/random_normal/random_normal_container.rst", "functional/ivy/random/random_normal/random_normal_functional.rst", "functional/ivy/random/random_normal/static_random_normal_container.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_array.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/random/shuffle/shuffle_array.rst", "functional/ivy/random/shuffle/shuffle_container.rst", "functional/ivy/random/shuffle/shuffle_functional.rst", "functional/ivy/random/shuffle/static_shuffle_container.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmax/argmax_array.rst", "functional/ivy/searching/argmax/argmax_container.rst", "functional/ivy/searching/argmax/argmax_functional.rst", "functional/ivy/searching/argmax/static_argmax_container.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/argmin/argmin_array.rst", "functional/ivy/searching/argmin/argmin_container.rst", "functional/ivy/searching/argmin/argmin_functional.rst", "functional/ivy/searching/argmin/static_argmin_container.rst", "functional/ivy/searching/argwhere.rst", "functional/ivy/searching/argwhere/argwhere_array.rst", "functional/ivy/searching/argwhere/argwhere_container.rst", "functional/ivy/searching/argwhere/argwhere_functional.rst", "functional/ivy/searching/argwhere/static_argwhere_container.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/nonzero/nonzero_array.rst", "functional/ivy/searching/nonzero/nonzero_container.rst", "functional/ivy/searching/nonzero/nonzero_functional.rst", "functional/ivy/searching/nonzero/static_nonzero_container.rst", "functional/ivy/searching/where.rst", "functional/ivy/searching/where/static_where_container.rst", "functional/ivy/searching/where/where_array.rst", "functional/ivy/searching/where/where_container.rst", "functional/ivy/searching/where/where_functional.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_all/static_unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_array.rst", "functional/ivy/set/unique_all/unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_functional.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_inverse/static_unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_array.rst", "functional/ivy/set/unique_inverse/unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_functional.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/set/unique_values/static_unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_array.rst", "functional/ivy/set/unique_values/unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_functional.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/searchsorted.rst", "functional/ivy/sorting/searchsorted/searchsorted_array.rst", "functional/ivy/sorting/searchsorted/searchsorted_container.rst", "functional/ivy/sorting/searchsorted/searchsorted_functional.rst", "functional/ivy/sorting/searchsorted/static_searchsorted_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/cumprod.rst", "functional/ivy/statistical/cumprod/cumprod_array.rst", "functional/ivy/statistical/cumprod/cumprod_container.rst", "functional/ivy/statistical/cumprod/cumprod_functional.rst", "functional/ivy/statistical/cumprod/static_cumprod_container.rst", "functional/ivy/statistical/cumsum.rst", "functional/ivy/statistical/cumsum/cumsum_array.rst", "functional/ivy/statistical/cumsum/cumsum_container.rst", "functional/ivy/statistical/cumsum/cumsum_functional.rst", "functional/ivy/statistical/cumsum/static_cumsum_container.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/prod/static_prod_container.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/static_sum_container.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/static_var_container.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "glossary.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "nested_array/nested_array.rst", "nested_array/nested_array/NestedArray.rst", "related_work.rst", "related_work/api_standards.rst", "related_work/compiler_infrastructure.rst", "related_work/exchange_formats.rst", "related_work/frameworks.rst", "related_work/graph_tracers.rst", "related_work/ml_unifying_companies.rst", "related_work/multi_vendor_compiler_frameworks.rst", "related_work/vendor_specific_apis.rst", "related_work/vendor_specific_compilers.rst", "related_work/what_does_ivy_add.rst", "related_work/wrapper_frameworks.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/ModuleConverters.rst", "stateful/converters/MyTFModule.rst", "stateful/converters/MyTorchModule.rst", "stateful/converters/to_ivy_module.rst", "stateful/helpers.rst", "stateful/helpers/ModuleHelpers.rst", "stateful/initializers.rst", "stateful/initializers/Constant.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/Initializer.rst", "stateful/initializers/KaimingNormal.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "testing/assertions.rst", "testing/assertions/assert_all_close.rst", "testing/assertions/assert_same_type_and_shape.rst", "testing/assertions/check_unsupported_device.rst", "testing/assertions/check_unsupported_device_and_dtype.rst", "testing/assertions/check_unsupported_dtype.rst", "testing/assertions/test_unsupported_function.rst", "testing/assertions/value_test.rst", "testing/available_frameworks.rst", "testing/available_frameworks/available_frameworks.rst", "testing/available_frameworks/ground_truth.rst", "testing/function_testing.rst", "testing/function_testing/args_to_container.rst", "testing/function_testing/as_cont.rst", "testing/function_testing/as_lists.rst", "testing/function_testing/convtrue.rst", "testing/function_testing/create_args_kwargs.rst", "testing/function_testing/empty_func.rst", "testing/function_testing/flatten.rst", "testing/function_testing/flatten_and_to_np.rst", "testing/function_testing/flatten_fw_and_to_np.rst", "testing/function_testing/framework_comparator.rst", "testing/function_testing/get_frontend_ret.rst", "testing/function_testing/get_ret_and_flattened_np_array.rst", "testing/function_testing/gradient_incompatible_function.rst", "testing/function_testing/gradient_test.rst", "testing/function_testing/gradient_unsupported_dtypes.rst", "testing/function_testing/kwargs_to_args_n_kwargs.rst", "testing/function_testing/make_json_pickable.rst", "testing/function_testing/test_frontend_function.rst", "testing/function_testing/test_frontend_method.rst", "testing/function_testing/test_function.rst", "testing/function_testing/test_method.rst", "testing/function_testing/var_fn.rst", "testing/globals.rst", "testing/globals/InterruptedTest.rst", "testing/globals/TestData.rst", "testing/globals/remove_all_current_framework.rst", "testing/globals/setup_api_test.rst", "testing/globals/setup_frontend_test.rst", "testing/globals/teardown_api_test.rst", "testing/globals/teardown_frontend_test.rst", "testing/hypothesis_helpers.rst", "testing/hypothesis_helpers/array_helpers.rst", "testing/hypothesis_helpers/array_helpers/array_and_broadcastable_shape.rst", "testing/hypothesis_helpers/array_helpers/array_bools.rst", "testing/hypothesis_helpers/array_helpers/array_indices_axis.rst", "testing/hypothesis_helpers/array_helpers/array_values.rst", "testing/hypothesis_helpers/array_helpers/arrays_and_axes.rst", "testing/hypothesis_helpers/array_helpers/arrays_for_pooling.rst", "testing/hypothesis_helpers/array_helpers/broadcast_shapes.rst", "testing/hypothesis_helpers/array_helpers/dtype_and_values.rst", "testing/hypothesis_helpers/array_helpers/dtype_values_axis.rst", "testing/hypothesis_helpers/array_helpers/list_of_length.rst", "testing/hypothesis_helpers/array_helpers/lists.rst", "testing/hypothesis_helpers/array_helpers/mutually_broadcastable_shapes.rst", "testing/hypothesis_helpers/array_helpers/prod.rst", "testing/hypothesis_helpers/dtype_helpers.rst", "testing/hypothesis_helpers/dtype_helpers/array_dtypes.rst", "testing/hypothesis_helpers/dtype_helpers/get_castable_dtype.rst", "testing/hypothesis_helpers/dtype_helpers/get_dtypes.rst", "testing/hypothesis_helpers/general_helpers.rst", "testing/hypothesis_helpers/general_helpers/apply_safety_factor.rst", "testing/hypothesis_helpers/general_helpers/embedding_helper.rst", "testing/hypothesis_helpers/general_helpers/get_axis.rst", "testing/hypothesis_helpers/general_helpers/get_bounds.rst", "testing/hypothesis_helpers/general_helpers/get_mean_std.rst", "testing/hypothesis_helpers/general_helpers/get_shape.rst", "testing/hypothesis_helpers/general_helpers/matrix_is_stable.rst", "testing/hypothesis_helpers/general_helpers/reshape_shapes.rst", "testing/hypothesis_helpers/general_helpers/subsets.rst", "testing/hypothesis_helpers/general_helpers/x_and_filters.rst", "testing/hypothesis_helpers/number_helpers.rst", "testing/hypothesis_helpers/number_helpers/floats.rst", "testing/hypothesis_helpers/number_helpers/ints.rst", "testing/hypothesis_helpers/number_helpers/number.rst", "testing/structs.rst", "testing/structs/FrontendMethodData.rst", "testing/test_parameter_flags.rst", "testing/test_parameter_flags/FrontendFunctionTestFlags.rst", "testing/test_parameter_flags/FrontendMethodTestFlags.rst", "testing/test_parameter_flags/FunctionTestFlags.rst", "testing/test_parameter_flags/MethodTestFlags.rst", "testing/test_parameter_flags/build_flag.rst", "testing/test_parameter_flags/frontend_function_flags.rst", "testing/test_parameter_flags/frontend_method_flags.rst", "testing/test_parameter_flags/function_flags.rst", "testing/test_parameter_flags/method_flags.rst", "testing/testing_helpers.rst", "testing/testing_helpers/handle_frontend_method.rst", "testing/testing_helpers/handle_frontend_test.rst", "testing/testing_helpers/handle_method.rst", "testing/testing_helpers/handle_test.rst", "testing/testing_helpers/num_positional_args.rst", "testing/testing_helpers/num_positional_args_method.rst", "testing/testing_helpers/seed.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["&lt;no title&gt;", "Assertions", "check_all", "check_all_or_any_fn", "check_any", "check_dimensions", "check_elem_in_list", "check_equal", "check_exists", "check_false", "check_fill_value_and_dtype_are_compatible", "check_gather_input_valid", "check_gather_nd_input_valid", "check_greater", "check_inplace_sizes_valid", "check_isinstance", "check_kernel_padding_size", "check_less", "check_one_way_broadcastable", "check_same_dtype", "check_shape", "check_shapes_broadcastable", "check_true", "Backend handler", "ContextManager", "choose_random_backend", "clear_backend_stack", "convert_from_numpy_to_target_backend", "convert_from_source_backend_to_numpy", "current_backend", "fn_name_from_version_specific_fn_name", "get_backend", "set_backend", "set_backend_to_specific_version", "set_jax_backend", "set_numpy_backend", "set_tensorflow_backend", "set_torch_backend", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Applied Libraries", "Building the Docs", "Helpful Resources", "Open Tasks", "Setting Up", "The Basics", "Data classes", "Array", "Activations", "ArrayWithActivations", "Array", "&lt;no title&gt;", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "Experimental", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "&lt;no title&gt;", "Conversions", "ContainerWithConversions", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "Experimental", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Array API Tests", "Arrays", "Backend Setting", "Containers", "Continuous Integration", "Data Types", "Devices", "Docstring Examples", "Docstrings", "Exception Handling", "Formatting", "Function Arguments", "Function Types", "Function Wrapping", "Inplace Updates", "Ivy Frontends", "Ivy Frontend Tests", "Ivy Tests", "Navigating the Code", "Superset Behaviour", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_array_function", "handle_array_like_without_promotion", "handle_nans", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "integer_arrays_to_float", "output_to_native_arrays", "outputs_to_ivy_arrays", "to_ivy_arrays_and_back", "to_native_arrays_and_back", "try_array_function_override", "&lt;no title&gt;", "Activations", "deserialize", "gelu", "ivy.Array.gelu", "ivy.Container.gelu", "ivy.gelu", "ivy.Container.static_gelu", "get", "leaky_relu", "ivy.Array.leaky_relu", "ivy.Container.leaky_relu", "ivy.leaky_relu", "ivy.Container.static_leaky_relu", "log_softmax", "ivy.Array.log_softmax", "ivy.Container.log_softmax", "ivy.log_softmax", "ivy.Container.static_log_softmax", "mish", "ivy.Array.mish", "ivy.Container.mish", "ivy.mish", "ivy.Container.static_mish", "relu", "ivy.Array.relu", "ivy.Container.relu", "ivy.relu", "ivy.Container.static_relu", "sigmoid", "ivy.Array.sigmoid", "ivy.Container.sigmoid", "ivy.sigmoid", "ivy.Container.static_sigmoid", "softmax", "ivy.Array.softmax", "ivy.Container.softmax", "ivy.softmax", "ivy.Container.static_softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "&lt;no title&gt;", "Constants", "Control flow ops", "IfElse", "WhileLoop", "if_else", "while_loop", "Creation", "NestedSequence", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "ivy.Container.static_asarray", "asarray_handle_nestable", "asarray_infer_device", "asarray_to_native_arrays_and_back", "copy_array", "ivy.Array.copy_array", "ivy.copy_array", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.Array.linspace", "ivy.Container.linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.Array.logspace", "ivy.Container.logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "one_hot", "ivy.Array.one_hot", "ivy.Container.one_hot", "ivy.one_hot", "ivy.Container.static_one_hot", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "DefaultComplexDtype", "DefaultDtype", "DefaultFloatDtype", "DefaultIntDtype", "DefaultUintDtype", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Array.astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Array.broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Array.broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "check_float", "closest_valid_dtype", "default_complex_dtype", "ivy.default_complex_dtype", "ivy.Container.static_default_complex_dtype", "default_dtype", "default_float_dtype", "ivy.default_float_dtype", "ivy.Container.static_default_float_dtype", "default_int_dtype", "default_uint_dtype", "dtype", "ivy.Container.dtype", "ivy.dtype", "ivy.Container.static_dtype", "dtype_bits", "finfo", "ivy.Array.finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "ivy.function_supported_dtypes", "ivy.Container.static_function_supported_dtypes", "function_unsupported_dtypes", "ivy.function_unsupported_dtypes", "ivy.Container.static_function_unsupported_dtypes", "iinfo", "ivy.Array.iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "infer_default_dtype", "invalid_dtype", "is_bool_dtype", "ivy.Array.is_bool_dtype", "ivy.Container.is_bool_dtype", "ivy.is_bool_dtype", "ivy.Container.static_is_bool_dtype", "is_complex_dtype", "ivy.Container.is_complex_dtype", "ivy.is_complex_dtype", "ivy.Container.static_is_complex_dtype", "is_float_dtype", "ivy.Array.is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Array.is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "is_uint_dtype", "ivy.Array.is_uint_dtype", "ivy.Container.is_uint_dtype", "ivy.is_uint_dtype", "ivy.Container.static_is_uint_dtype", "promote_types", "promote_types_of_inputs", "result_type", "ivy.Array.result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_complex_dtype", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "set_default_uint_dtype", "type_promote_arrays", "unset_default_complex_dtype", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "unset_default_uint_dtype", "valid_dtype", "Device", "DefaultDevice", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "ivy.Array.dev", "ivy.Container.dev", "ivy.dev", "ivy.Container.static_dev", "dev_util", "function_supported_devices", "function_unsupported_devices", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "ivy.Container.static_to_device", "ivy.Array.to_device", "ivy.Container.to_device", "ivy.to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "ivy.Container.static_acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "ivy.Container.static_acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "ivy.Container.static_asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "ivy.Container.static_atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "ivy.Container.static_atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "ivy.Container.static_atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "ivy.Container.static_bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "ivy.Container.static_bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "ivy.Container.static_bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "ivy.Container.static_bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "ivy.Container.static_bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ivy.Container.static_bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "ivy.Container.static_ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "ivy.Container.static_cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "ivy.Container.static_cosh", "deg2rad", "ivy.Array.deg2rad", "ivy.Container.deg2rad", "ivy.deg2rad", "ivy.Container.static_deg2rad", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "ivy.Container.static_equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "ivy.Container.static_erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "ivy.Container.static_exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "ivy.Container.static_expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "ivy.Container.static_floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "ivy.Container.static_floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "ivy.Container.static_greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "ivy.Container.static_greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "ivy.Container.static_isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "ivy.Container.static_isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "ivy.Container.static_isnan", "isreal", "ivy.Array.isreal", "ivy.Container.isreal", "ivy.isreal", "ivy.Container.static_isreal", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "ivy.Container.static_less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "ivy.Container.static_less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "ivy.Container.static_log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "ivy.Container.static_log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "ivy.Container.static_log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "ivy.Container.static_log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "ivy.Container.static_logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "ivy.Container.static_logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "ivy.Container.static_logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "ivy.Container.static_logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "ivy.Container.static_logical_xor", "maximum", "ivy.Array.maximum", "ivy.Container.maximum", "ivy.maximum", "ivy.Container.static_maximum", "minimum", "ivy.Array.minimum", "ivy.Container.minimum", "ivy.minimum", "ivy.Container.static_minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "ivy.Container.static_negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "ivy.Container.static_not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "ivy.Container.static_positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "ivy.Container.static_pow", "rad2deg", "ivy.Array.rad2deg", "ivy.Container.rad2deg", "ivy.rad2deg", "ivy.Container.static_rad2deg", "reciprocal", "ivy.Array.reciprocal", "ivy.Container.reciprocal", "ivy.reciprocal", "ivy.Container.static_reciprocal", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "ivy.Container.static_remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "ivy.Container.static_round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "ivy.Container.static_sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "ivy.Container.static_sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "ivy.Container.static_sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "ivy.Container.static_square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "trunc", "ivy.Container.static_trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "trunc_divide", "ivy.Container.static_trunc_divide", "ivy.Array.trunc_divide", "ivy.Container.trunc_divide", "ivy.trunc_divide", "Experimental", "NativeSparseArray", "SparseArray", "Activations", "logit", "prelu", "thresholded_relu", "adjoint", "ivy.Array.adjoint", "ivy.Container.adjoint", "ivy.adjoint", "ivy.Container.static_adjoint", "allclose", "ivy.Array.allclose", "ivy.Container.allclose", "ivy.allclose", "ivy.Container.static_allclose", "angle", "ivy.Array.angle", "ivy.Container.angle", "ivy.angle", "ivy.Container.static_angle", "atleast_1d", "ivy.Array.atleast_1d", "ivy.Container.atleast_1d", "ivy.atleast_1d", "ivy.Container.static_atleast_1d", "atleast_2d", "ivy.Array.atleast_2d", "ivy.Container.atleast_2d", "ivy.atleast_2d", "ivy.Container.static_atleast_2d", "atleast_3d", "ivy.Array.atleast_3d", "ivy.Container.atleast_3d", "ivy.atleast_3d", "ivy.Container.static_atleast_3d", "avg_pool1d", "ivy.Array.avg_pool1d", "ivy.Container.avg_pool1d", "ivy.avg_pool1d", "ivy.Container.static_avg_pool1d", "avg_pool2d", "ivy.Array.avg_pool2d", "ivy.Container.avg_pool2d", "ivy.avg_pool2d", "ivy.Container.static_avg_pool2d", "avg_pool3d", "ivy.Array.avg_pool3d", "ivy.Container.avg_pool3d", "ivy.avg_pool3d", "ivy.Container.static_avg_pool3d", "bernoulli", "ivy.Array.bernoulli", "ivy.Container.bernoulli", "ivy.bernoulli", "ivy.Container.static_bernoulli", "beta", "ivy.Array.beta", "ivy.Container.beta", "ivy.beta", "ivy.Container.static_beta", "binarizer", "ivy.Array.binarizer", "ivy.Container.binarizer", "ivy.binarizer", "ivy.Container.static_binarizer", "binary_cross_entropy_with_logits", "ivy.Container.binary_cross_entropy_with_logits", "ivy.binary_cross_entropy_with_logits", "ivy.Container.static_binary_cross_entropy_with_logits", "bind_custom_gradient_function", "broadcast_shapes", "ivy.Container.broadcast_shapes", "ivy.broadcast_shapes", "ivy.Container.static_broadcast_shapes", "Compilation", "compute_weight_mat", "Constants", "copysign", "ivy.Array.copysign", "ivy.Container.copysign", "ivy.copysign", "ivy.Container.static_copysign", "corrcoef", "ivy.Array.corrcoef", "ivy.Container.corrcoef", "ivy.corrcoef", "ivy.Container.static_corrcoef", "count_nonzero", "ivy.Array.count_nonzero", "ivy.Container.count_nonzero", "ivy.count_nonzero", "ivy.Container.static_count_nonzero", "Creation", "eye_like", "hamming_window", "hann_window", "kaiser_bessel_derived_window", "kaiser_window", "tril_indices", "triu_indices", "vorbis_window", "Data type", "is_native_dtype", "dct", "ivy.Array.dct", "ivy.Container.dct", "ivy.dct", "ivy.Container.static_dct", "Device", "dft", "ivy.Container.dft", "ivy.dft", "ivy.Container.static_dft", "diagflat", "ivy.Array.diagflat", "ivy.Container.diagflat", "ivy.diagflat", "ivy.Container.static_diagflat", "diff", "ivy.Array.diff", "ivy.Container.diff", "ivy.diff", "ivy.Container.static_diff", "dirichlet", "ivy.Array.dirichlet", "ivy.Container.dirichlet", "ivy.dirichlet", "ivy.Container.static_dirichlet", "dropout1d", "dsplit", "ivy.Array.dsplit", "ivy.Container.dsplit", "ivy.dsplit", "ivy.Container.static_dsplit", "dstack", "ivy.Array.dstack", "ivy.Container.dstack", "ivy.dstack", "ivy.Container.static_dstack", "eig", "ivy.Array.eig", "ivy.Container.eig", "ivy.eig", "ivy.Container.static_eig", "eigvals", "ivy.Array.eigvals", "ivy.Container.eigvals", "ivy.eigvals", "ivy.Container.static_eigvals", "Elementwise", "allclose", "angle", "binarizer", "copysign", "count_nonzero", "diff", "exp2", "fix", "float_power", "fmax", "fmin", "fmod", "gcd", "gradient", "hypot", "imag", "isclose", "lcm", "logaddexp2", "nan_to_num", "nansum", "nextafter", "real", "signbit", "sinc", "trapz", "xlogy", "zeta", "embedding", "ivy.Array.embedding", "ivy.Container.embedding", "ivy.embedding", "ivy.Container.static_embedding", "exp2", "ivy.Array.exp2", "ivy.Container.exp2", "ivy.exp2", "ivy.Container.static_exp2", "expand", "ivy.Array.expand", "ivy.Container.expand", "ivy.expand", "ivy.Container.static_expand", "eye_like", "ivy.Array.eye_like", "ivy.Container.eye_like", "ivy.eye_like", "ivy.Container.static_eye_like", "fft", "ivy.Array.fft", "ivy.Container.fft", "ivy.fft", "ivy.Container.static_fft", "fix", "ivy.Array.fix", "ivy.Container.fix", "ivy.fix", "ivy.Container.static_fix", "flatten", "ivy.Array.flatten", "ivy.Container.flatten", "ivy.flatten", "ivy.Container.static_flatten", "fliplr", "ivy.Array.fliplr", "ivy.Container.fliplr", "ivy.fliplr", "ivy.Container.static_fliplr", "flipud", "ivy.Array.flipud", "ivy.Container.flipud", "ivy.flipud", "ivy.Container.static_flipud", "float_power", "ivy.Array.float_power", "ivy.Container.float_power", "ivy.float_power", "ivy.Container.static_float_power", "fmax", "ivy.Array.fmax", "ivy.Container.fmax", "ivy.fmax", "ivy.Container.static_fmax", "fmin", "ivy.Array.fmin", "ivy.Container.fmin", "ivy.fmin", "ivy.Container.static_fmin", "fmod", "ivy.Array.fmod", "ivy.Container.fmod", "ivy.fmod", "ivy.Container.static_fmod", "gamma", "ivy.Array.gamma", "ivy.gamma", "gcd", "ivy.Array.gcd", "ivy.Container.gcd", "ivy.gcd", "ivy.Container.static_gcd", "General", "isin", "gradient", "ivy.Array.gradient", "ivy.Container.gradient", "ivy.gradient", "ivy.Container.static_gradient", "Gradients", "bind_custom_gradient_function", "hamming_window", "ivy.Container.hamming_window", "ivy.hamming_window", "ivy.Container.static_hamming_window", "hann_window", "ivy.Container.hann_window", "ivy.hann_window", "ivy.Container.static_hann_window", "heaviside", "ivy.Array.heaviside", "ivy.Container.heaviside", "ivy.heaviside", "ivy.Container.static_heaviside", "hsplit", "ivy.Array.hsplit", "ivy.Container.hsplit", "ivy.hsplit", "ivy.Container.static_hsplit", "hstack", "ivy.Array.hstack", "ivy.Container.hstack", "ivy.hstack", "ivy.Container.static_hstack", "hypot", "ivy.Array.hypot", "ivy.Container.hypot", "ivy.hypot", "ivy.Container.static_hypot", "i0", "ivy.Array.i0", "ivy.Container.i0", "ivy.i0", "ivy.Container.static_i0", "ifft", "ivy.Array.ifft", "ivy.Container.ifft", "ivy.ifft", "ivy.Container.static_ifft", "imag", "ivy.Array.imag", "ivy.Container.imag", "ivy.imag", "ivy.Container.static_imag", "instance_norm", "ivy.Array.instance_norm", "ivy.Container.instance_norm", "ivy.instance_norm", "ivy.Container.static_instance_norm", "interp", "interpolate", "ivy.Array.interpolate", "ivy.Container.interpolate", "ivy.interpolate", "ivy.Container.static_interpolate", "is_ivy_sparse_array", "is_native_dtype", "is_native_sparse_array", "isclose", "ivy.Array.isclose", "ivy.Container.isclose", "ivy.isclose", "ivy.Container.static_isclose", "isin", "ivy.Array.isin", "ivy.Container.isin", "ivy.isin", "ivy.Container.static_isin", "kaiser_bessel_derived_window", "ivy.Container.kaiser_bessel_derived_window", "ivy.kaiser_bessel_derived_window", "ivy.Container.static_kaiser_bessel_derived_window", "kaiser_window", "ivy.Container.kaiser_window", "ivy.kaiser_window", "ivy.Container.static_kaiser_window", "kron", "ivy.Array.kron", "ivy.Container.kron", "ivy.kron", "ivy.Container.static_kron", "l2_normalize", "ivy.Array.l2_normalize", "ivy.Container.l2_normalize", "ivy.l2_normalize", "ivy.Container.static_l2_normalize", "Layers", "avg_pool1d", "avg_pool2d", "avg_pool3d", "compute_weight_mat", "dct", "dft", "dropout1d", "embedding", "fft", "ifft", "interp", "interpolate", "max_pool1d", "max_pool2d", "max_pool3d", "padding_ceil_mode", "lcm", "ivy.Array.lcm", "ivy.Container.lcm", "ivy.lcm", "ivy.Container.static_lcm", "lexsort", "ivy.Array.lexsort", "ivy.Container.lexsort", "ivy.lexsort", "ivy.Container.static_lexsort", "Linear algebra", "adjoint", "diagflat", "eig", "eigvals", "kron", "matrix_exp", "logaddexp2", "ivy.Array.logaddexp2", "ivy.Container.logaddexp2", "ivy.logaddexp2", "ivy.Container.static_logaddexp2", "logit", "ivy.Array.logit", "ivy.Container.logit", "ivy.logit", "ivy.Container.static_logit", "Losses", "binary_cross_entropy_with_logits", "lp_normalize", "ivy.Array.lp_normalize", "ivy.Container.lp_normalize", "ivy.lp_normalize", "ivy.Container.static_lp_normalize", "Manipulation", "atleast_1d", "atleast_2d", "atleast_3d", "broadcast_shapes", "dsplit", "dstack", "expand", "flatten", "fliplr", "flipud", "heaviside", "hsplit", "hstack", "i0", "moveaxis", "ndenumerate", "ndindex", "pad", "rot90", "take_along_axis", "top_k", "vsplit", "vstack", "matrix_exp", "ivy.Array.matrix_exp", "ivy.Container.matrix_exp", "ivy.matrix_exp", "ivy.Container.static_matrix_exp", "max_pool1d", "ivy.Array.max_pool1d", "ivy.Container.max_pool1d", "ivy.max_pool1d", "ivy.Container.static_max_pool1d", "max_pool2d", "ivy.Array.max_pool2d", "ivy.Container.max_pool2d", "ivy.max_pool2d", "ivy.Container.static_max_pool2d", "max_pool3d", "ivy.Array.max_pool3d", "ivy.Container.max_pool3d", "ivy.max_pool3d", "ivy.Container.static_max_pool3d", "median", "ivy.Array.median", "ivy.Container.median", "ivy.median", "ivy.Container.static_median", "Meta", "moveaxis", "ivy.Array.moveaxis", "ivy.Container.moveaxis", "ivy.moveaxis", "ivy.Container.static_moveaxis", "msort", "ivy.Array.msort", "ivy.Container.msort", "ivy.msort", "ivy.Container.static_msort", "nan_to_num", "ivy.Array.nan_to_num", "ivy.Container.nan_to_num", "ivy.nan_to_num", "ivy.Container.static_nan_to_num", "nanmean", "ivy.Array.nanmean", "ivy.Container.nanmean", "ivy.nanmean", "ivy.Container.static_nanmean", "nanmedian", "ivy.Array.nanmedian", "ivy.Container.nanmedian", "ivy.nanmedian", "ivy.Container.static_nanmedian", "nansum", "ivy.Array.nansum", "ivy.Container.nansum", "ivy.nansum", "ivy.Container.static_nansum", "native_sparse_array", "native_sparse_array_to_indices_values_and_shape", "ndenumerate", "ndindex", "Nest", "nextafter", "ivy.Array.nextafter", "ivy.Container.nextafter", "ivy.nextafter", "ivy.Container.static_nextafter", "Norms", "instance_norm", "l2_normalize", "lp_normalize", "pad", "ivy.Array.pad", "ivy.Container.pad", "ivy.pad", "ivy.Container.static_pad", "padding_ceil_mode", "poisson", "ivy.Array.poisson", "ivy.Container.poisson", "ivy.poisson", "ivy.Container.static_poisson", "prelu", "ivy.Array.prelu", "ivy.Container.prelu", "ivy.prelu", "ivy.Container.static_prelu", "quantile", "ivy.Array.quantile", "ivy.Container.quantile", "ivy.quantile", "ivy.Container.static_quantile", "Random", "bernoulli", "beta", "dirichlet", "gamma", "poisson", "real", "ivy.Array.real", "ivy.Container.real", "ivy.real", "ivy.Container.static_real", "rot90", "ivy.Array.rot90", "ivy.Container.rot90", "ivy.rot90", "ivy.Container.static_rot90", "Searching", "Set", "signbit", "ivy.Array.signbit", "ivy.Container.signbit", "ivy.signbit", "ivy.Container.static_signbit", "sinc", "ivy.Array.sinc", "ivy.Container.sinc", "ivy.sinc", "ivy.Container.static_sinc", "Sorting", "lexsort", "msort", "Sparse array", "NativeSparseArray", "SparseArray", "is_ivy_sparse_array", "is_native_sparse_array", "native_sparse_array", "native_sparse_array_to_indices_values_and_shape", "Statistical", "corrcoef", "median", "nanmean", "nanmedian", "quantile", "unravel_index", "take_along_axis", "ivy.Container.static_take_along_axis", "ivy.Array.take_along_axis", "ivy.Container.take_along_axis", "ivy.take_along_axis", "thresholded_relu", "ivy.Container.static_thresholded_relu", "ivy.Array.thresholded_relu", "ivy.Container.thresholded_relu", "ivy.thresholded_relu", "top_k", "ivy.Container.static_top_k", "ivy.Array.top_k", "ivy.Container.top_k", "ivy.top_k", "trapz", "ivy.Array.trapz", "ivy.trapz", "tril_indices", "ivy.Container.static_tril_indices", "ivy.Container.tril_indices", "ivy.tril_indices", "triu_indices", "ivy.Container.static_triu_indices", "ivy.Container.triu_indices", "ivy.triu_indices", "unravel_index", "ivy.Container.static_unravel_index", "ivy.Array.unravel_index", "ivy.Container.unravel_index", "ivy.unravel_index", "Utility", "vorbis_window", "ivy.Container.static_vorbis_window", "ivy.Container.vorbis_window", "ivy.vorbis_window", "vsplit", "ivy.Container.static_vsplit", "ivy.Array.vsplit", "ivy.Container.vsplit", "ivy.vsplit", "vstack", "ivy.Container.static_vstack", "ivy.Array.vstack", "ivy.Container.vstack", "ivy.vstack", "xlogy", "ivy.Container.static_xlogy", "ivy.Array.xlogy", "ivy.Container.xlogy", "ivy.xlogy", "zeta", "ivy.Container.static_zeta", "ivy.Array.zeta", "ivy.Container.zeta", "ivy.zeta", "&lt;no title&gt;", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "ivy.Array.array_equal", "ivy.Container.array_equal", "ivy.array_equal", "ivy.Container.static_array_equal", "assert_supports_inplace", "ivy.Array.assert_supports_inplace", "ivy.Container.assert_supports_inplace", "ivy.assert_supports_inplace", "ivy.Container.static_assert_supports_inplace", "cache_fn", "clip_matrix_norm", "ivy.Array.clip_matrix_norm", "ivy.Container.clip_matrix_norm", "ivy.clip_matrix_norm", "ivy.Container.static_clip_matrix_norm", "clip_vector_norm", "ivy.Array.clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "ivy.Container.static_clip_vector_norm", "container_types", "current_backend_str", "default", "ivy.Array.default", "ivy.default", "einops_rearrange", "ivy.Array.einops_rearrange", "ivy.Container.einops_rearrange", "ivy.einops_rearrange", "ivy.Container.static_einops_rearrange", "einops_reduce", "ivy.Array.einops_reduce", "ivy.Container.einops_reduce", "ivy.einops_reduce", "ivy.Container.static_einops_reduce", "einops_repeat", "ivy.Array.einops_repeat", "ivy.Container.einops_repeat", "ivy.einops_repeat", "ivy.Container.static_einops_repeat", "exists", "ivy.Array.exists", "ivy.exists", "fourier_encode", "ivy.Array.fourier_encode", "ivy.Container.fourier_encode", "ivy.fourier_encode", "ivy.Container.static_fourier_encode", "function_supported_devices_and_dtypes", "function_unsupported_devices_and_dtypes", "gather", "ivy.Array.gather", "ivy.Container.gather", "ivy.gather", "ivy.Container.static_gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_array_mode", "get_exception_trace_mode", "get_item", "get_min_base", "get_min_denominator", "get_nestable_mode", "get_num_dims", "ivy.Array.get_num_dims", "ivy.Container.get_num_dims", "ivy.get_num_dims", "ivy.Container.static_get_num_dims", "get_queue_timeout", "get_referrers_recursive", "get_show_func_wrapper_trace_mode", "get_tmp_dir", "has_nans", "ivy.Array.has_nans", "ivy.Container.has_nans", "ivy.has_nans", "ivy.Container.static_has_nans", "inplace_arrays_supported", "inplace_decrement", "ivy.Array.inplace_decrement", "ivy.Container.inplace_decrement", "ivy.inplace_decrement", "ivy.Container.static_inplace_decrement", "inplace_increment", "ivy.Array.inplace_increment", "ivy.Container.inplace_increment", "ivy.inplace_increment", "ivy.Container.static_inplace_increment", "inplace_update", "ivy.Array.inplace_update", "ivy.Container.inplace_update", "ivy.inplace_update", "ivy.Container.static_inplace_update", "inplace_variables_supported", "is_array", "ivy.Array.is_array", "ivy.Container.is_array", "ivy.is_array", "ivy.Container.static_is_array", "is_ivy_array", "ivy.Array.is_ivy_array", "ivy.Container.is_ivy_array", "ivy.is_ivy_array", "ivy.Container.static_is_ivy_array", "is_ivy_container", "ivy.Array.is_ivy_container", "ivy.is_ivy_container", "is_native_array", "ivy.Array.is_native_array", "ivy.Container.is_native_array", "ivy.is_native_array", "ivy.Container.static_is_native_array", "isscalar", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "print_all_arrays_in_memory", "scatter_flat", "ivy.Array.scatter_flat", "ivy.Container.scatter_flat", "ivy.scatter_flat", "ivy.Container.static_scatter_flat", "scatter_nd", "ivy.Array.scatter_nd", "ivy.Container.scatter_nd", "ivy.scatter_nd", "ivy.Container.static_scatter_nd", "set_array_mode", "set_exception_trace_mode", "set_min_base", "set_min_denominator", "set_nestable_mode", "set_queue_timeout", "set_shape_array_mode", "set_show_func_wrapper_trace_mode", "set_tmp_dir", "shape", "shape_array_mode", "stable_divide", "ivy.Array.stable_divide", "ivy.Container.stable_divide", "ivy.stable_divide", "ivy.Container.static_stable_divide", "stable_pow", "ivy.Array.stable_pow", "ivy.Container.stable_pow", "ivy.stable_pow", "ivy.Container.static_stable_pow", "supports_inplace_updates", "ivy.Container.static_supports_inplace_updates", "ivy.Array.supports_inplace_updates", "ivy.Container.supports_inplace_updates", "ivy.supports_inplace_updates", "to_ivy_shape", "to_list", "ivy.Container.static_to_list", "ivy.Array.to_list", "ivy.to_list", "to_native_shape", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Array.to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "ivy.Container.static_to_scalar", "ivy.Array.to_scalar", "ivy.Container.to_scalar", "ivy.to_scalar", "try_else_none", "unset_array_mode", "unset_exception_trace_mode", "unset_nestable_mode", "unset_queue_timeout", "unset_shape_array_mode", "unset_show_func_wrapper_trace_mode", "value_is_nan", "ivy.Container.static_value_is_nan", "ivy.Array.value_is_nan", "ivy.Container.value_is_nan", "ivy.value_is_nan", "vmap", "Gradients", "GradientTracking", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "adam_update", "ivy.Array.adam_update", "ivy.Container.adam_update", "ivy.adam_update", "execute_with_gradients", "grad", "gradient_descent_update", "ivy.Array.gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "jac", "lamb_update", "ivy.Array.lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "lars_update", "ivy.Array.lars_update", "ivy.Container.lars_update", "ivy.lars_update", "optimizer_update", "ivy.Array.optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "set_with_grads", "stop_gradient", "ivy.Container.static_stop_gradient", "ivy.Array.stop_gradient", "ivy.Container.stop_gradient", "ivy.stop_gradient", "unset_with_grads", "value_and_grad", "with_grads", "Layers", "conv", "conv1d", "ivy.Array.conv1d", "ivy.Container.conv1d", "ivy.conv1d", "ivy.Container.static_conv1d", "conv1d_transpose", "ivy.Array.conv1d_transpose", "ivy.Container.conv1d_transpose", "ivy.conv1d_transpose", "ivy.Container.static_conv1d_transpose", "conv2d", "ivy.Array.conv2d", "ivy.Container.conv2d", "ivy.conv2d", "ivy.Container.static_conv2d", "conv2d_transpose", "ivy.Array.conv2d_transpose", "ivy.Container.conv2d_transpose", "ivy.conv2d_transpose", "ivy.Container.static_conv2d_transpose", "conv3d", "ivy.Array.conv3d", "ivy.Container.conv3d", "ivy.conv3d", "ivy.Container.static_conv3d", "conv3d_transpose", "ivy.Array.conv3d_transpose", "ivy.Container.conv3d_transpose", "ivy.conv3d_transpose", "ivy.Container.static_conv3d_transpose", "conv_general_dilated", "conv_general_transpose", "depthwise_conv2d", "ivy.Array.depthwise_conv2d", "ivy.Container.depthwise_conv2d", "ivy.depthwise_conv2d", "ivy.Container.static_depthwise_conv2d", "dropout", "ivy.Array.dropout", "ivy.Container.dropout", "ivy.dropout", "ivy.Container.static_dropout", "linear", "ivy.Array.linear", "ivy.Container.linear", "ivy.linear", "ivy.Container.static_linear", "lstm_update", "ivy.Array.lstm_update", "ivy.Container.lstm_update", "ivy.lstm_update", "ivy.Container.static_lstm_update", "multi_head_attention", "ivy.Array.multi_head_attention", "ivy.Container.multi_head_attention", "ivy.multi_head_attention", "ivy.Container.static_multi_head_attention", "scaled_dot_product_attention", "ivy.Array.scaled_dot_product_attention", "ivy.Container.scaled_dot_product_attention", "ivy.scaled_dot_product_attention", "ivy.Container.static_scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.Container.cross", "ivy.cross", "ivy.Container.static_cross", "det", "ivy.Array.det", "ivy.Container.det", "ivy.det", "ivy.Container.static_det", "diag", "ivy.Array.diag", "ivy.Container.diag", "ivy.diag", "ivy.Container.static_diag", "diagonal", "ivy.Array.diagonal", "ivy.Container.diagonal", "ivy.diagonal", "ivy.Container.static_diagonal", "eig", "eigh", "ivy.Array.eigh", "ivy.Container.eigh", "ivy.eigh", "ivy.Container.static_eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.Container.eigvalsh", "ivy.eigvalsh", "ivy.Container.static_eigvalsh", "inner", "ivy.Array.inner", "ivy.Container.inner", "ivy.inner", "ivy.Container.static_inner", "inv", "ivy.Array.inv", "ivy.Container.inv", "ivy.inv", "ivy.Container.static_inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "ivy.Container.static_matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.Container.matrix_norm", "ivy.matrix_norm", "ivy.Container.static_matrix_norm", "matrix_power", "ivy.Array.matrix_power", "ivy.Container.matrix_power", "ivy.matrix_power", "ivy.Container.static_matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.Container.matrix_rank", "ivy.matrix_rank", "ivy.Container.static_matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.Container.matrix_transpose", "ivy.matrix_transpose", "ivy.Container.static_matrix_transpose", "outer", "ivy.Array.outer", "ivy.Container.outer", "ivy.outer", "ivy.Container.static_outer", "pinv", "ivy.Array.pinv", "ivy.Container.pinv", "ivy.pinv", "ivy.Container.static_pinv", "qr", "ivy.Array.qr", "ivy.Container.qr", "ivy.qr", "ivy.Container.static_qr", "slogdet", "ivy.Array.slogdet", "ivy.Container.slogdet", "ivy.slogdet", "ivy.Container.static_slogdet", "solve", "ivy.Array.solve", "ivy.Container.solve", "ivy.solve", "ivy.Container.static_solve", "svd", "ivy.Container.static_svd", "ivy.Array.svd", "ivy.Container.svd", "ivy.svd", "svdvals", "ivy.Container.static_svdvals", "ivy.Array.svdvals", "ivy.Container.svdvals", "ivy.svdvals", "tensordot", "ivy.Container.static_tensordot", "ivy.Container.tensordot", "ivy.tensordot", "tensorsolve", "ivy.Array.tensorsolve", "ivy.Container.tensorsolve", "ivy.tensorsolve", "trace", "ivy.Container.static_trace", "ivy.Array.trace", "ivy.Container.trace", "ivy.trace", "vander", "ivy.Container.static_vander", "ivy.Array.vander", "ivy.Container.vander", "ivy.vander", "vecdot", "ivy.Container.static_vecdot", "ivy.Array.vecdot", "ivy.Container.vecdot", "ivy.vecdot", "vector_norm", "ivy.Container.static_vector_norm", "ivy.Array.vector_norm", "ivy.Container.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Container.static_vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.Container.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "ivy.Container.static_concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "ivy.Container.static_constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "ivy.Container.static_expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "ivy.Container.static_flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "ivy.Container.static_permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "ivy.Container.static_repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "ivy.Container.static_reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "ivy.Array.split", "ivy.Container.split", "ivy.split", "ivy.Container.static_split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "ivy.Container.static_squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "ivy.Container.static_stack", "swapaxes", "ivy.Container.static_swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Container.static_tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "unstack", "ivy.Container.static_unstack", "ivy.Array.unstack", "ivy.Container.unstack", "ivy.unstack", "zero_pad", "ivy.Container.static_zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "duplicate_array_index_chains", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_argwhere", "nested_map", "nested_multi_map", "prune_empty", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "Random", "multinomial", "ivy.Array.multinomial", "ivy.Container.multinomial", "ivy.multinomial", "ivy.Container.static_multinomial", "randint", "ivy.Array.randint", "ivy.Container.randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "ivy.Array.random_normal", "ivy.Container.random_normal", "ivy.random_normal", "ivy.Container.static_random_normal", "random_uniform", "ivy.Array.random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "ivy.Array.shuffle", "ivy.Container.shuffle", "ivy.shuffle", "ivy.Container.static_shuffle", "Searching", "argmax", "ivy.Array.argmax", "ivy.Container.argmax", "ivy.argmax", "ivy.Container.static_argmax", "argmin", "ivy.Array.argmin", "ivy.Container.argmin", "ivy.argmin", "ivy.Container.static_argmin", "argwhere", "ivy.Array.argwhere", "ivy.Container.argwhere", "ivy.argwhere", "ivy.Container.static_argwhere", "nonzero", "ivy.Array.nonzero", "ivy.Container.nonzero", "ivy.nonzero", "ivy.Container.static_nonzero", "where", "ivy.Container.static_where", "ivy.Array.where", "ivy.Container.where", "ivy.where", "Set", "unique_all", "ivy.Container.static_unique_all", "ivy.Array.unique_all", "ivy.Container.unique_all", "ivy.unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "ivy.Container.static_unique_inverse", "ivy.Array.unique_inverse", "ivy.Container.unique_inverse", "ivy.unique_inverse", "unique_values", "ivy.Container.static_unique_values", "ivy.Array.unique_values", "ivy.Container.unique_values", "ivy.unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "searchsorted", "ivy.Array.searchsorted", "ivy.Container.searchsorted", "ivy.searchsorted", "ivy.Container.static_searchsorted", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "cumprod", "ivy.Array.cumprod", "ivy.Container.cumprod", "ivy.cumprod", "ivy.Container.static_cumprod", "cumsum", "ivy.Array.cumsum", "ivy.Container.cumsum", "ivy.cumsum", "ivy.Container.static_cumsum", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "ivy.Container.static_prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Container.static_sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Container.static_var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Glossary", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Nested array", "NestedArray", "Related Work", "API Standards", "Compiler Infrastructure", "Exchange Formats", "Frameworks", "Graph Tracers", "ML-Unifying Companies", "Multi-Vendor Compiler Frameworks", "Vendor-Specific APIs", "Vendor-Specific Compilers", "What does Ivy Add?", "Wrapper Frameworks", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "ModuleConverters", "MyTFModule", "MyTorchModule", "to_ivy_module", "Helpers", "ModuleHelpers", "Initializers", "Constant", "FirstLayerSiren", "GlorotUniform", "Initializer", "KaimingNormal", "Ones", "Siren", "Uniform", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Assertions", "assert_all_close", "assert_same_type_and_shape", "check_unsupported_device", "check_unsupported_device_and_dtype", "check_unsupported_dtype", "test_unsupported_function", "value_test", "Available frameworks", "available_frameworks", "ground_truth", "Function testing", "args_to_container", "as_cont", "as_lists", "convtrue", "create_args_kwargs", "empty_func", "flatten", "flatten_and_to_np", "flatten_fw_and_to_np", "framework_comparator", "get_frontend_ret", "get_ret_and_flattened_np_array", "gradient_incompatible_function", "gradient_test", "gradient_unsupported_dtypes", "kwargs_to_args_n_kwargs", "make_json_pickable", "test_frontend_function", "test_frontend_method", "test_function", "test_method", "var_fn", "Globals", "InterruptedTest", "TestData", "remove_all_current_framework", "setup_api_test", "setup_frontend_test", "teardown_api_test", "teardown_frontend_test", "Hypothesis helpers", "Array helpers", "array_and_broadcastable_shape", "array_bools", "array_indices_axis", "array_values", "arrays_and_axes", "arrays_for_pooling", "broadcast_shapes", "dtype_and_values", "dtype_values_axis", "list_of_length", "lists", "mutually_broadcastable_shapes", "prod", "Dtype helpers", "array_dtypes", "get_castable_dtype", "get_dtypes", "General helpers", "apply_safety_factor", "embedding_helper", "get_axis", "get_bounds", "get_mean_std", "get_shape", "matrix_is_stable", "reshape_shapes", "subsets", "x_and_filters", "Number helpers", "floats", "ints", "number", "Structs", "FrontendMethodData", "Test parameter flags", "FrontendFunctionTestFlags", "FrontendMethodTestFlags", "FunctionTestFlags", "MethodTestFlags", "build_flag", "frontend_function_flags", "frontend_method_flags", "function_flags", "method_flags", "Testing helpers", "handle_frontend_method", "handle_frontend_test", "handle_method", "handle_test", "num_positional_args", "num_positional_args_method", "seed", "Verbosity", "cprint"], "terms": {"version": [0, 23, 30, 33, 40, 41, 42, 48, 49, 52, 53, 69, 117, 153, 154, 157, 165, 170, 188, 207, 208, 891, 892, 893, 894, 895, 953, 958, 1244, 1245, 1246, 1247, 1248, 1270, 1274, 1310, 1311, 1312, 1313, 1314, 1353, 1355, 1358, 1417, 1611, 1714, 1741, 1744, 1746, 1749, 2128, 2146, 2147, 2205, 2212, 2214, 2217], "ivi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 157, 159, 160, 161, 162, 163, 168, 169, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 212, 213, 218, 223, 228, 233, 238, 243, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 264, 265, 266, 267, 270, 271, 276, 279, 284, 285, 290, 295, 300, 305, 310, 315, 318, 323, 328, 333, 336, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 359, 364, 369, 370, 371, 374, 375, 378, 379, 380, 384, 385, 390, 393, 396, 401, 402, 403, 408, 412, 417, 422, 427, 428, 429, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 477, 478, 479, 480, 481, 482, 487, 492, 497, 502, 507, 512, 517, 522, 527, 532, 537, 542, 547, 552, 557, 562, 567, 572, 577, 582, 587, 592, 597, 602, 607, 612, 617, 622, 627, 632, 637, 642, 647, 652, 657, 662, 667, 672, 677, 682, 687, 692, 697, 702, 707, 712, 717, 722, 727, 732, 737, 742, 747, 752, 757, 762, 767, 772, 777, 782, 787, 792, 797, 803, 804, 805, 806, 807, 808, 809, 814, 819, 824, 829, 834, 839, 844, 849, 854, 859, 864, 869, 873, 874, 879, 881, 886, 891, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 913, 917, 922, 927, 932, 933, 938, 943, 948, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 987, 992, 997, 1002, 1007, 1012, 1017, 1022, 1027, 1032, 1037, 1042, 1047, 1050, 1055, 1056, 1057, 1062, 1063, 1064, 1068, 1072, 1077, 1082, 1087, 1092, 1097, 1102, 1107, 1112, 1113, 1118, 1119, 1120, 1121, 1126, 1131, 1135, 1139, 1144, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1171, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1188, 1193, 1194, 1195, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1229, 1234, 1239, 1244, 1250, 1255, 1260, 1265, 1270, 1275, 1280, 1281, 1282, 1283, 1285, 1290, 1291, 1292, 1293, 1294, 1299, 1300, 1305, 1310, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1326, 1333, 1338, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1365, 1370, 1375, 1378, 1382, 1386, 1392, 1396, 1401, 1406, 1411, 1417, 1418, 1423, 1424, 1425, 1430, 1435, 1436, 1441, 1446, 1447, 1448, 1451, 1456, 1461, 1466, 1469, 1474, 1475, 1476, 1481, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1498, 1499, 1500, 1501, 1502, 1507, 1508, 1513, 1518, 1523, 1524, 1529, 1534, 1537, 1542, 1543, 1544, 1545, 1546, 1547, 1552, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1573, 1578, 1583, 1584, 1588, 1589, 1594, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1611, 1612, 1613, 1614, 1618, 1622, 1623, 1624, 1628, 1629, 1633, 1637, 1641, 1642, 1647, 1648, 1649, 1650, 1651, 1652, 1657, 1662, 1667, 1672, 1677, 1682, 1683, 1684, 1689, 1694, 1699, 1704, 1709, 1714, 1715, 1720, 1725, 1730, 1735, 1740, 1741, 1746, 1751, 1756, 1761, 1766, 1771, 1776, 1781, 1786, 1791, 1796, 1801, 1806, 1811, 1816, 1821, 1825, 1829, 1834, 1839, 1844, 1849, 1854, 1855, 1860, 1865, 1870, 1871, 1876, 1881, 1886, 1891, 1896, 1901, 1906, 1911, 1916, 1921, 1926, 1931, 1936, 1941, 1946, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1980, 1981, 1986, 1991, 1996, 2001, 2002, 2007, 2008, 2013, 2018, 2023, 2028, 2033, 2034, 2039, 2044, 2049, 2054, 2055, 2060, 2065, 2070, 2071, 2076, 2081, 2085, 2089, 2093, 2097, 2102, 2106, 2111, 2116, 2117, 2122, 2127, 2128, 2131, 2132, 2133, 2134, 2135, 2136, 2147, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2194, 2195, 2205, 2207, 2210, 2224, 2226, 2227, 2282, 2283, 2284, 2285, 2286, 2290, 2291], "check_al": 1, "result": [1, 2, 4, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 149, 150, 152, 153, 154, 156, 157, 160, 162, 163, 164, 165, 166, 167, 170, 173, 187, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 255, 257, 258, 260, 261, 262, 267, 268, 269, 270, 271, 272, 274, 276, 277, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 310, 311, 312, 313, 315, 316, 318, 319, 320, 321, 322, 323, 325, 327, 328, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 349, 350, 351, 352, 353, 359, 362, 428, 429, 430, 431, 432, 433, 446, 472, 473, 474, 475, 476, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805, 808, 809, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 881, 882, 883, 884, 885, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 904, 907, 908, 909, 910, 911, 913, 915, 917, 920, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 985, 987, 988, 989, 990, 991, 992, 995, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1207, 1208, 1209, 1210, 1211, 1214, 1215, 1219, 1221, 1224, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1300, 1301, 1302, 1303, 1304, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1451, 1452, 1454, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1518, 1520, 1522, 1524, 1528, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1612, 1614, 1615, 1616, 1618, 1619, 1620, 1622, 1624, 1626, 1627, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1642, 1643, 1644, 1645, 1646, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1730, 1733, 1735, 1736, 1737, 1738, 1739, 1746, 1747, 1748, 1749, 1750, 1751, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1804, 1806, 1809, 1811, 1813, 1815, 1816, 1820, 1821, 1824, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1843, 1844, 1845, 1847, 1848, 1849, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1921, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1946, 1947, 1948, 1949, 1950, 1955, 1959, 1962, 1963, 1965, 1969, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2021, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2036, 2038, 2039, 2041, 2043, 2044, 2046, 2048, 2049, 2053, 2054, 2055, 2057, 2058, 2059, 2060, 2063, 2065, 2068, 2070, 2071, 2072, 2074, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2128, 2141, 2143, 2205, 2217, 2223, 2224, 2225, 2226, 2255, 2256, 2261, 2262, 2282, 2285, 2286], "messag": [1, 2, 3, 4, 6, 7, 8, 9, 13, 15, 17, 19, 20, 22, 41, 49, 153, 156, 158, 159, 164, 170, 172, 2290, 2291], "one": [1, 2, 23, 31, 33, 41, 42, 47, 48, 49, 61, 62, 69, 70, 71, 76, 77, 78, 79, 82, 83, 88, 89, 90, 91, 94, 95, 103, 104, 109, 110, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 149, 150, 151, 152, 154, 156, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 172, 173, 175, 187, 255, 257, 258, 267, 269, 300, 301, 303, 310, 311, 312, 313, 314, 341, 354, 357, 364, 367, 446, 471, 481, 497, 501, 527, 531, 542, 546, 547, 550, 551, 672, 675, 692, 696, 697, 699, 700, 701, 702, 705, 805, 807, 809, 812, 814, 817, 824, 826, 827, 828, 829, 831, 833, 834, 836, 838, 854, 855, 856, 857, 858, 891, 892, 893, 894, 895, 907, 910, 911, 932, 938, 942, 953, 954, 958, 963, 964, 970, 974, 1002, 1003, 1004, 1005, 1006, 1012, 1014, 1015, 1016, 1017, 1019, 1021, 1022, 1024, 1026, 1032, 1035, 1037, 1040, 1068, 1069, 1071, 1082, 1086, 1092, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1113, 1114, 1115, 1116, 1117, 1121, 1123, 1124, 1125, 1149, 1154, 1156, 1158, 1159, 1161, 1176, 1177, 1200, 1201, 1208, 1244, 1245, 1246, 1247, 1248, 1250, 1252, 1254, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1305, 1306, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1353, 1355, 1356, 1357, 1358, 1386, 1387, 1389, 1401, 1402, 1417, 1418, 1420, 1421, 1422, 1543, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1558, 1584, 1585, 1589, 1590, 1592, 1594, 1595, 1597, 1606, 1608, 1612, 1614, 1616, 1617, 1618, 1620, 1621, 1624, 1626, 1627, 1629, 1631, 1632, 1637, 1639, 1640, 1642, 1643, 1645, 1646, 1650, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1668, 1670, 1672, 1675, 1677, 1678, 1679, 1680, 1681, 1684, 1687, 1714, 1715, 1719, 1720, 1724, 1751, 1754, 1761, 1762, 1764, 1766, 1767, 1768, 1769, 1770, 1786, 1789, 1796, 1797, 1798, 1799, 1800, 1839, 1843, 1844, 1845, 1847, 1848, 1870, 1871, 1875, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1899, 1906, 1910, 1911, 1914, 1915, 1921, 1924, 1941, 1942, 1944, 1975, 1976, 1978, 1979, 2007, 2008, 2009, 2010, 2011, 2012, 2023, 2024, 2025, 2026, 2027, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2053, 2065, 2069, 2070, 2071, 2073, 2075, 2081, 2082, 2084, 2128, 2140, 2141, 2143, 2146, 2152, 2154, 2155, 2237, 2246, 2255, 2258], "arg": [1, 2, 3, 4, 23, 29, 45, 51, 54, 55, 56, 57, 58, 94, 95, 103, 104, 150, 158, 164, 170, 174, 188, 199, 203, 255, 256, 446, 471, 1417, 1599, 2081, 2082, 2152, 2154, 2155, 2156, 2181, 2182, 2194, 2200, 2205, 2208, 2211, 2216, 2217, 2221, 2237, 2248], "i": [1, 2, 23, 29, 30, 31, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 186, 187, 205, 207, 209, 210, 211, 213, 215, 217, 218, 220, 221, 222, 223, 225, 227, 228, 230, 232, 233, 235, 237, 238, 240, 241, 242, 243, 245, 247, 249, 255, 257, 258, 260, 261, 262, 267, 268, 269, 270, 271, 272, 274, 276, 277, 279, 282, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 325, 327, 328, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 349, 350, 351, 352, 353, 354, 356, 358, 359, 362, 364, 366, 367, 368, 369, 371, 372, 374, 375, 376, 378, 379, 380, 382, 385, 388, 390, 391, 393, 394, 396, 398, 399, 400, 402, 403, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 422, 425, 429, 431, 432, 433, 445, 446, 447, 448, 450, 452, 453, 454, 455, 456, 459, 460, 462, 463, 466, 470, 471, 472, 473, 475, 477, 478, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 497, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 544, 546, 547, 549, 550, 551, 552, 554, 555, 556, 557, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 574, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 589, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 669, 670, 671, 672, 674, 675, 676, 677, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 710, 711, 712, 714, 715, 716, 717, 719, 720, 721, 722, 724, 725, 726, 727, 729, 730, 731, 732, 734, 736, 737, 739, 741, 742, 743, 744, 745, 746, 747, 749, 750, 751, 752, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 769, 770, 771, 772, 774, 775, 776, 777, 778, 780, 781, 782, 783, 785, 786, 787, 788, 790, 791, 792, 793, 795, 796, 797, 798, 800, 805, 806, 807, 808, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 826, 828, 829, 831, 833, 834, 836, 838, 839, 841, 842, 843, 844, 847, 849, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 866, 868, 869, 870, 871, 872, 881, 882, 883, 884, 885, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 897, 899, 902, 903, 905, 906, 907, 908, 909, 910, 911, 913, 915, 917, 920, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 943, 946, 953, 954, 955, 957, 958, 959, 960, 962, 963, 964, 967, 970, 973, 974, 975, 976, 977, 978, 979, 980, 981, 987, 988, 990, 997, 998, 999, 1000, 1001, 1012, 1013, 1014, 1015, 1016, 1017, 1021, 1027, 1028, 1030, 1032, 1035, 1037, 1040, 1047, 1048, 1049, 1055, 1056, 1057, 1058, 1059, 1060, 1068, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1087, 1089, 1091, 1113, 1114, 1115, 1116, 1117, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1161, 1162, 1163, 1164, 1171, 1174, 1176, 1178, 1179, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1205, 1208, 1211, 1212, 1215, 1218, 1219, 1221, 1222, 1229, 1231, 1232, 1233, 1234, 1237, 1239, 1242, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1253, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1285, 1286, 1287, 1288, 1289, 1290, 1292, 1293, 1294, 1297, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1333, 1336, 1338, 1340, 1341, 1342, 1343, 1344, 1353, 1355, 1356, 1357, 1358, 1360, 1361, 1363, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1381, 1382, 1385, 1396, 1397, 1398, 1399, 1400, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1425, 1427, 1428, 1429, 1430, 1432, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1448, 1449, 1450, 1451, 1453, 1455, 1456, 1458, 1460, 1461, 1463, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1485, 1492, 1493, 1495, 1496, 1497, 1498, 1500, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1515, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1543, 1544, 1547, 1549, 1551, 1552, 1553, 1554, 1555, 1556, 1562, 1568, 1570, 1572, 1573, 1575, 1577, 1578, 1579, 1580, 1581, 1582, 1584, 1585, 1589, 1590, 1592, 1593, 1594, 1595, 1597, 1598, 1599, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1649, 1650, 1652, 1653, 1654, 1655, 1656, 1662, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1684, 1687, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1723, 1724, 1725, 1728, 1730, 1733, 1735, 1736, 1738, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1754, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1784, 1786, 1789, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1804, 1805, 1806, 1809, 1811, 1813, 1815, 1816, 1820, 1821, 1824, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1843, 1844, 1845, 1847, 1848, 1849, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1873, 1874, 1875, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1935, 1936, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2004, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2016, 2018, 2019, 2020, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2047, 2048, 2049, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2063, 2065, 2068, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2084, 2085, 2088, 2089, 2090, 2091, 2092, 2093, 2096, 2097, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2152, 2153, 2154, 2156, 2157, 2158, 2159, 2160, 2161, 2163, 2164, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2205, 2210, 2224, 2225, 2226, 2228, 2229, 2237, 2239, 2240, 2241, 2245, 2246, 2248, 2251, 2252, 2253, 2254, 2255, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2266, 2267, 2268, 2269, 2282, 2287, 2288], "fals": [1, 2, 4, 6, 7, 8, 9, 13, 17, 23, 32, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 82, 83, 88, 89, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 154, 156, 158, 163, 164, 165, 166, 170, 173, 174, 175, 205, 207, 208, 209, 210, 211, 213, 215, 217, 218, 220, 222, 223, 225, 227, 228, 230, 232, 233, 235, 237, 238, 240, 242, 243, 245, 247, 255, 257, 259, 260, 263, 271, 273, 275, 276, 278, 279, 281, 283, 284, 285, 287, 289, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 309, 310, 312, 314, 315, 317, 318, 320, 322, 323, 324, 326, 328, 329, 331, 333, 334, 336, 337, 339, 341, 349, 350, 351, 352, 353, 354, 356, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 387, 389, 390, 392, 393, 395, 396, 398, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 433, 446, 452, 453, 454, 455, 456, 457, 462, 463, 466, 467, 471, 472, 473, 475, 478, 480, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 583, 584, 585, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 607, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 669, 671, 672, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 711, 712, 714, 716, 717, 718, 719, 720, 721, 722, 724, 726, 727, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 778, 780, 782, 783, 785, 787, 788, 790, 792, 793, 795, 797, 798, 800, 804, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 826, 828, 829, 831, 833, 834, 836, 838, 839, 841, 843, 844, 846, 848, 849, 851, 853, 854, 858, 859, 861, 863, 864, 866, 868, 869, 870, 872, 874, 877, 881, 885, 886, 887, 890, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 905, 906, 907, 911, 913, 914, 915, 916, 917, 919, 921, 922, 926, 927, 931, 932, 933, 937, 938, 940, 942, 943, 945, 947, 948, 950, 952, 953, 954, 955, 958, 970, 973, 974, 977, 982, 984, 986, 987, 991, 992, 996, 997, 999, 1001, 1002, 1006, 1007, 1011, 1012, 1016, 1017, 1021, 1022, 1026, 1027, 1031, 1032, 1036, 1037, 1041, 1042, 1046, 1050, 1054, 1055, 1056, 1057, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1076, 1077, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1092, 1096, 1097, 1101, 1102, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1141, 1143, 1144, 1146, 1148, 1149, 1155, 1156, 1161, 1163, 1166, 1168, 1170, 1171, 1173, 1175, 1183, 1187, 1195, 1197, 1199, 1200, 1221, 1229, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1254, 1255, 1257, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1285, 1287, 1289, 1290, 1291, 1294, 1296, 1298, 1300, 1304, 1305, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1321, 1323, 1325, 1326, 1328, 1330, 1333, 1334, 1335, 1336, 1337, 1338, 1340, 1342, 1346, 1348, 1353, 1355, 1356, 1357, 1358, 1360, 1361, 1363, 1365, 1366, 1368, 1370, 1371, 1372, 1373, 1374, 1378, 1379, 1380, 1382, 1383, 1384, 1386, 1387, 1392, 1393, 1394, 1396, 1397, 1401, 1402, 1404, 1406, 1407, 1409, 1411, 1412, 1414, 1417, 1418, 1419, 1420, 1421, 1422, 1425, 1426, 1427, 1428, 1429, 1430, 1432, 1434, 1436, 1438, 1440, 1441, 1443, 1445, 1448, 1449, 1450, 1451, 1453, 1455, 1456, 1458, 1460, 1461, 1463, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1476, 1478, 1480, 1481, 1483, 1485, 1487, 1489, 1492, 1493, 1494, 1495, 1496, 1497, 1500, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1512, 1513, 1515, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1543, 1547, 1549, 1551, 1552, 1554, 1556, 1557, 1561, 1563, 1564, 1566, 1567, 1568, 1570, 1572, 1573, 1575, 1577, 1578, 1579, 1580, 1581, 1582, 1584, 1585, 1589, 1590, 1592, 1594, 1595, 1597, 1600, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1612, 1618, 1620, 1621, 1622, 1624, 1625, 1626, 1637, 1639, 1640, 1641, 1642, 1643, 1645, 1646, 1647, 1649, 1650, 1651, 1652, 1654, 1656, 1657, 1659, 1661, 1662, 1664, 1666, 1667, 1669, 1671, 1672, 1674, 1676, 1677, 1679, 1681, 1684, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1696, 1698, 1699, 1701, 1703, 1704, 1706, 1708, 1709, 1711, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1724, 1725, 1727, 1729, 1730, 1732, 1734, 1735, 1737, 1739, 1741, 1743, 1745, 1746, 1748, 1750, 1751, 1753, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1775, 1776, 1778, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1788, 1790, 1796, 1798, 1800, 1801, 1803, 1805, 1806, 1808, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1819, 1821, 1822, 1823, 1829, 1830, 1832, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1842, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1852, 1855, 1857, 1859, 1860, 1862, 1864, 1865, 1867, 1869, 1870, 1871, 1873, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1890, 1891, 1893, 1895, 1896, 1898, 1900, 1901, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1925, 1926, 1928, 1930, 1931, 1932, 1934, 1936, 1937, 1939, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1962, 1966, 1967, 1968, 1969, 1980, 1981, 1983, 1984, 1985, 1986, 1988, 1990, 1991, 1993, 1995, 1996, 1998, 2000, 2002, 2004, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2020, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2047, 2048, 2049, 2050, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2062, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2083, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2134, 2135, 2149, 2151, 2152, 2153, 2156, 2157, 2158, 2181, 2182, 2185, 2186, 2187, 2188, 2189, 2190, 2194, 2197, 2198, 2199, 2205, 2225, 2226, 2237, 2240, 2241, 2242, 2243, 2245, 2246, 2251, 2252, 2254, 2255, 2258, 2261, 2262, 2265, 2266, 2267, 2282, 2284], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 164, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 879, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2128, 2131, 2132, 2133, 2134, 2135, 2139, 2140, 2141, 2142, 2143, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291], "check_all_or_any_fn": 1, "fn": [1, 3, 103, 104, 111, 112, 158, 164, 170, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 255, 264, 265, 266, 341, 390, 391, 392, 393, 394, 395, 446, 459, 460, 1417, 1423, 1474, 1475, 1599, 1955, 1962, 1963, 1964, 1966, 1967, 1968, 2131, 2133, 2194, 2197, 2198, 2199, 2200, 2205, 2216, 2217, 2218, 2219, 2220], "type": [1, 3, 23, 32, 38, 44, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 155, 156, 157, 159, 160, 162, 163, 165, 166, 167, 168, 170, 172, 173, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805, 806, 807, 808, 809, 810, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 906, 907, 908, 909, 910, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1005, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1102, 1103, 1104, 1105, 1106, 1113, 1114, 1115, 1116, 1117, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1502, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1559, 1560, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1640, 1642, 1643, 1644, 1645, 1646, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1959, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2128, 2134, 2135, 2140, 2141, 2144, 2159, 2160, 2163, 2164, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2194, 2198, 2199, 2205, 2208, 2210, 2223, 2224, 2225, 2226, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2245, 2246, 2248, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2272, 2278, 2279, 2280, 2281, 2282, 2287, 2288, 2289], "all": [1, 3, 4, 23, 32, 40, 41, 42, 43, 44, 45, 47, 48, 49, 56, 57, 58, 59, 60, 61, 62, 69, 70, 71, 76, 77, 78, 79, 82, 83, 86, 87, 96, 97, 98, 99, 103, 104, 107, 108, 115, 116, 117, 118, 119, 124, 125, 126, 127, 130, 131, 134, 135, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 186, 187, 188, 199, 201, 202, 255, 257, 258, 310, 313, 323, 325, 327, 328, 330, 332, 446, 461, 467, 702, 704, 706, 896, 902, 903, 922, 923, 924, 925, 926, 953, 959, 960, 987, 990, 1200, 1218, 1265, 1268, 1294, 1297, 1353, 1356, 1378, 1381, 1382, 1385, 1417, 1418, 1421, 1425, 1428, 1481, 1485, 1486, 1546, 1568, 1570, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1597, 1611, 1612, 1622, 1650, 1689, 1692, 1699, 1700, 1701, 1702, 1714, 1776, 1777, 1779, 1801, 1804, 1806, 1809, 1821, 1824, 1844, 1845, 1847, 1848, 1870, 1891, 1892, 1893, 1894, 1895, 1911, 1912, 1913, 1914, 1915, 1921, 1924, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1967, 1968, 1969, 1970, 1980, 1981, 1982, 1983, 1984, 1985, 1996, 1997, 1998, 1999, 2000, 2007, 2018, 2021, 2116, 2121, 2127, 2128, 2131, 2133, 2136, 2137, 2138, 2139, 2140, 2141, 2143, 2146, 2147, 2152, 2154, 2155, 2157, 2158, 2159, 2160, 2167, 2194, 2197, 2198, 2199, 2205, 2207, 2223, 2225, 2226, 2237, 2241, 2245, 2246, 2251, 2252, 2255, 2258, 2266, 2267, 2268, 2269], "limit": [1, 3, 48, 49, 100, 103, 104, 105, 106, 153, 156, 158, 159, 164, 166, 168, 173, 187, 341, 385, 388, 396, 399, 1417, 1436, 1439, 1441, 1444, 1870, 1871, 1874, 2139, 2140, 2141, 2159, 2161, 2162, 2166, 2237, 2241, 2245, 2246, 2255, 2262, 2266, 2267, 2268, 2269], "0": [1, 3, 23, 29, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 151, 152, 153, 154, 156, 157, 158, 163, 164, 165, 166, 167, 170, 172, 173, 174, 175, 187, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 255, 257, 258, 267, 269, 276, 277, 278, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 310, 311, 312, 313, 314, 318, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 340, 341, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 364, 366, 367, 368, 380, 382, 385, 386, 387, 388, 389, 396, 399, 401, 412, 414, 416, 417, 420, 429, 430, 433, 446, 449, 452, 458, 461, 465, 466, 467, 468, 469, 470, 471, 477, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 537, 540, 547, 548, 549, 550, 551, 552, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 595, 597, 598, 599, 600, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 615, 617, 620, 622, 623, 624, 625, 626, 627, 628, 630, 632, 633, 635, 637, 639, 641, 642, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 670, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 707, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 772, 774, 775, 776, 777, 778, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 805, 806, 807, 808, 809, 813, 814, 815, 817, 819, 820, 822, 839, 840, 842, 844, 848, 849, 851, 853, 854, 855, 856, 857, 859, 862, 864, 865, 866, 867, 868, 869, 870, 871, 872, 881, 882, 883, 884, 885, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 913, 915, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 942, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 963, 964, 965, 967, 968, 970, 973, 974, 975, 976, 978, 979, 980, 981, 982, 985, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1055, 1056, 1057, 1058, 1059, 1060, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1097, 1098, 1099, 1100, 1101, 1107, 1108, 1109, 1110, 1111, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1154, 1155, 1156, 1157, 1158, 1159, 1162, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1182, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1205, 1208, 1209, 1210, 1211, 1212, 1213, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1229, 1230, 1232, 1239, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1268, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1353, 1355, 1356, 1357, 1358, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1404, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1425, 1426, 1427, 1428, 1429, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1448, 1449, 1451, 1454, 1456, 1458, 1459, 1460, 1466, 1468, 1469, 1470, 1472, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1489, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1502, 1505, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1524, 1525, 1527, 1529, 1530, 1532, 1534, 1535, 1537, 1538, 1540, 1543, 1552, 1553, 1554, 1555, 1556, 1562, 1566, 1568, 1569, 1570, 1571, 1572, 1578, 1579, 1581, 1582, 1584, 1585, 1586, 1587, 1589, 1590, 1591, 1592, 1593, 1594, 1597, 1598, 1603, 1606, 1607, 1609, 1610, 1611, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1639, 1640, 1642, 1643, 1645, 1646, 1648, 1650, 1652, 1653, 1654, 1655, 1656, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1746, 1747, 1749, 1750, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1769, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1791, 1792, 1793, 1794, 1795, 1801, 1802, 1803, 1804, 1805, 1811, 1813, 1815, 1816, 1820, 1821, 1824, 1829, 1830, 1831, 1832, 1833, 1834, 1838, 1844, 1845, 1847, 1848, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1955, 1957, 1959, 1962, 1963, 1964, 1965, 1967, 1968, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2063, 2065, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2128, 2157, 2158, 2159, 2160, 2163, 2164, 2165, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2205, 2225, 2237, 2241, 2245, 2246, 2248, 2251, 2254, 2255, 2261, 2266, 2267, 2269], "must": [1, 3, 9, 22, 40, 42, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 153, 154, 155, 156, 157, 158, 160, 161, 164, 166, 167, 168, 170, 174, 175, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 255, 257, 258, 260, 261, 262, 267, 268, 269, 270, 271, 272, 274, 276, 277, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 300, 301, 303, 310, 311, 312, 313, 315, 316, 318, 319, 320, 321, 322, 323, 325, 327, 328, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 446, 471, 472, 473, 474, 475, 476, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805, 807, 808, 809, 812, 839, 840, 844, 845, 846, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 881, 884, 896, 897, 899, 907, 908, 909, 910, 911, 913, 915, 917, 920, 922, 923, 924, 925, 926, 932, 933, 934, 935, 937, 953, 956, 957, 959, 962, 971, 976, 978, 981, 982, 985, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1017, 1018, 1019, 1020, 1021, 1027, 1028, 1030, 1047, 1048, 1049, 1068, 1069, 1070, 1071, 1077, 1078, 1079, 1080, 1081, 1087, 1088, 1097, 1098, 1099, 1100, 1101, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1139, 1142, 1144, 1145, 1146, 1147, 1148, 1149, 1152, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1164, 1166, 1169, 1171, 1174, 1176, 1177, 1178, 1181, 1182, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1209, 1212, 1215, 1219, 1221, 1222, 1224, 1227, 1229, 1230, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1250, 1251, 1252, 1253, 1254, 1290, 1291, 1292, 1293, 1300, 1301, 1303, 1305, 1306, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1353, 1358, 1360, 1361, 1363, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1396, 1397, 1398, 1399, 1400, 1411, 1415, 1417, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1451, 1452, 1454, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1518, 1520, 1522, 1524, 1528, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1611, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1624, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1642, 1643, 1644, 1645, 1646, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1730, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1804, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1821, 1824, 1829, 1830, 1831, 1832, 1833, 1839, 1843, 1844, 1845, 1847, 1848, 1849, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1921, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1946, 1947, 1948, 1949, 1950, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2021, 2023, 2026, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2063, 2065, 2068, 2070, 2071, 2074, 2076, 2079, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2141, 2147, 2159, 2163, 2185, 2189, 2205, 2224, 2226], "exist": [1, 3, 40, 41, 45, 47, 48, 70, 71, 82, 83, 100, 103, 104, 105, 106, 130, 131, 149, 151, 156, 157, 161, 162, 163, 164, 166, 168, 170, 187, 1417, 1448, 1449, 1450, 1870, 1876, 1879, 1906, 1907, 1908, 1909, 1910, 2127, 2138, 2140, 2143, 2146, 2185, 2189], "accord": [1, 3, 45, 47, 48, 63, 64, 70, 71, 82, 83, 94, 95, 111, 112, 130, 131, 142, 143, 149, 154, 161, 164, 166, 341, 364, 365, 366, 367, 368, 385, 388, 481, 497, 500, 547, 550, 1200, 1218, 1294, 1297, 1417, 1476, 1479, 1489, 1547, 1550, 1552, 1553, 1555, 1714, 1839, 1843, 1870, 1881, 1882, 1883, 1884, 1885, 1946, 1947, 1948, 1949, 1950, 2070, 2102, 2103, 2104, 2105, 2111, 2113, 2114, 2115, 2255, 2262], "given": [1, 3, 41, 42, 45, 47, 48, 49, 51, 69, 70, 71, 80, 81, 82, 83, 86, 87, 100, 103, 104, 117, 118, 119, 120, 121, 128, 129, 130, 131, 134, 135, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 174, 186, 205, 206, 212, 248, 249, 255, 257, 258, 270, 290, 293, 295, 298, 341, 371, 372, 374, 375, 376, 378, 379, 428, 446, 458, 466, 468, 469, 470, 471, 477, 480, 481, 814, 815, 817, 839, 842, 844, 847, 849, 850, 852, 854, 855, 856, 857, 858, 859, 862, 869, 870, 871, 872, 891, 892, 893, 894, 895, 907, 910, 922, 923, 924, 925, 926, 927, 928, 930, 938, 941, 953, 954, 958, 959, 967, 968, 970, 974, 979, 982, 985, 992, 995, 1002, 1003, 1004, 1005, 1006, 1057, 1058, 1059, 1060, 1082, 1085, 1087, 1090, 1097, 1098, 1099, 1100, 1101, 1113, 1114, 1115, 1116, 1117, 1121, 1124, 1144, 1147, 1149, 1150, 1151, 1152, 1154, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1193, 1194, 1195, 1198, 1200, 1206, 1207, 1213, 1221, 1223, 1229, 1232, 1234, 1237, 1239, 1240, 1242, 1275, 1278, 1290, 1292, 1293, 1300, 1301, 1303, 1315, 1316, 1317, 1318, 1320, 1370, 1374, 1375, 1377, 1401, 1405, 1416, 1417, 1481, 1482, 1483, 1484, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1563, 1612, 1614, 1617, 1618, 1620, 1621, 1624, 1627, 1629, 1631, 1632, 1633, 1635, 1636, 1637, 1639, 1640, 1650, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1683, 1684, 1687, 1714, 1849, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1874, 1886, 1887, 1888, 1889, 1890, 1891, 1894, 1896, 1898, 1900, 1901, 1902, 1903, 1904, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1936, 1940, 1941, 1945, 1951, 1955, 1963, 1964, 1973, 1974, 1975, 1980, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2005, 2007, 2054, 2060, 2063, 2065, 2068, 2070, 2071, 2074, 2076, 2079, 2116, 2137, 2142, 2143, 2146, 2147, 2149, 2152, 2156, 2159, 2169, 2181, 2182, 2183, 2185, 2191, 2194, 2197, 2198, 2199, 2205, 2214, 2227, 2237, 2239, 2240, 2241, 2245, 2246, 2247, 2248, 2251, 2252, 2253, 2254, 2255, 2258, 2259, 2260, 2261, 2263, 2264, 2266, 2267, 2268, 2269, 2282, 2287, 2288], "check_ani": 1, "ar": [1, 4, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 54, 55, 56, 57, 58, 61, 62, 67, 68, 69, 70, 71, 78, 79, 82, 83, 86, 87, 88, 89, 100, 103, 104, 105, 106, 109, 110, 115, 116, 117, 118, 119, 126, 127, 130, 131, 134, 135, 136, 137, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 186, 187, 188, 201, 202, 255, 257, 258, 285, 287, 289, 295, 296, 297, 298, 299, 310, 312, 314, 446, 461, 465, 467, 471, 481, 562, 563, 564, 565, 566, 572, 575, 682, 685, 687, 690, 732, 735, 747, 750, 757, 758, 759, 760, 761, 782, 783, 784, 785, 786, 814, 815, 817, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 854, 855, 856, 857, 858, 859, 862, 864, 865, 866, 867, 868, 881, 882, 883, 884, 885, 891, 892, 893, 894, 895, 896, 897, 902, 903, 913, 915, 922, 923, 924, 925, 926, 927, 928, 930, 932, 953, 954, 956, 957, 958, 959, 961, 962, 970, 974, 979, 997, 1000, 1007, 1010, 1012, 1015, 1017, 1020, 1022, 1025, 1027, 1028, 1030, 1072, 1073, 1075, 1113, 1114, 1115, 1116, 1117, 1121, 1124, 1149, 1155, 1156, 1161, 1200, 1201, 1202, 1203, 1208, 1209, 1210, 1211, 1218, 1244, 1245, 1246, 1247, 1248, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1294, 1297, 1300, 1301, 1303, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1320, 1338, 1339, 1340, 1342, 1353, 1355, 1356, 1357, 1358, 1375, 1376, 1377, 1378, 1381, 1382, 1385, 1417, 1418, 1419, 1420, 1421, 1422, 1425, 1426, 1427, 1428, 1429, 1430, 1432, 1433, 1435, 1486, 1492, 1500, 1507, 1523, 1545, 1546, 1561, 1578, 1581, 1582, 1602, 1612, 1622, 1641, 1647, 1649, 1650, 1689, 1692, 1694, 1697, 1714, 1720, 1723, 1740, 1741, 1744, 1746, 1749, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1776, 1777, 1778, 1779, 1780, 1791, 1793, 1794, 1795, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1834, 1835, 1836, 1837, 1838, 1839, 1843, 1844, 1848, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1879, 1891, 1892, 1893, 1894, 1895, 1911, 1912, 1913, 1914, 1915, 1921, 1924, 1955, 1957, 1962, 1967, 1968, 1969, 1980, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2016, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2033, 2034, 2038, 2044, 2048, 2127, 2128, 2136, 2137, 2138, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2152, 2154, 2157, 2158, 2159, 2162, 2163, 2181, 2182, 2191, 2192, 2194, 2195, 2205, 2224, 2225, 2226, 2237, 2240, 2241, 2245, 2246, 2251, 2252, 2253, 2254, 2255, 2258, 2266, 2267, 2268, 2269, 2282, 2285, 2286], "check_dimens": 1, "x": [1, 5, 8, 15, 23, 29, 38, 45, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 255, 260, 262, 263, 267, 268, 269, 271, 274, 275, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 300, 303, 305, 308, 309, 310, 311, 312, 313, 314, 318, 321, 322, 323, 324, 327, 328, 329, 332, 333, 335, 336, 337, 339, 340, 341, 349, 350, 351, 352, 353, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 396, 397, 398, 399, 400, 401, 408, 409, 411, 412, 413, 414, 415, 416, 417, 420, 429, 430, 431, 432, 433, 446, 447, 452, 453, 454, 455, 456, 457, 461, 465, 466, 467, 470, 472, 473, 474, 475, 476, 477, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 542, 543, 544, 545, 546, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 712, 713, 714, 715, 716, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 805, 806, 807, 808, 809, 810, 811, 812, 813, 819, 821, 822, 823, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 859, 863, 864, 867, 868, 869, 870, 871, 872, 874, 876, 886, 887, 889, 890, 891, 892, 893, 895, 896, 897, 902, 903, 907, 908, 909, 910, 911, 913, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 932, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 955, 956, 959, 960, 961, 967, 969, 973, 974, 976, 977, 978, 979, 980, 981, 987, 988, 989, 990, 991, 992, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1064, 1065, 1067, 1068, 1069, 1071, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1138, 1139, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1171, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1204, 1206, 1207, 1208, 1213, 1214, 1215, 1216, 1218, 1221, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1257, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1267, 1269, 1270, 1274, 1275, 1277, 1278, 1279, 1281, 1282, 1290, 1291, 1292, 1293, 1294, 1297, 1305, 1306, 1308, 1309, 1310, 1312, 1314, 1321, 1322, 1323, 1324, 1325, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1346, 1349, 1350, 1352, 1353, 1354, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1381, 1382, 1385, 1392, 1393, 1394, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1489, 1490, 1491, 1493, 1494, 1496, 1497, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1521, 1522, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1559, 1560, 1562, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1578, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1618, 1620, 1621, 1622, 1623, 1628, 1642, 1643, 1644, 1645, 1646, 1648, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1707, 1708, 1709, 1712, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1820, 1821, 1824, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1844, 1845, 1847, 1848, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1955, 1959, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2026, 2027, 2028, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2063, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2128, 2169, 2180, 2205, 2207, 2225, 2227, 2237, 2240, 2247, 2251, 2253, 2255, 2262], "check_elem_in_list": [1, 164], "elem": [1, 6], "list": [1, 6, 45, 46, 47, 48, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 76, 77, 82, 83, 84, 85, 98, 99, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 164, 165, 166, 167, 170, 173, 174, 175, 187, 205, 206, 207, 209, 211, 212, 213, 215, 217, 218, 220, 222, 223, 225, 227, 228, 230, 232, 233, 235, 237, 238, 240, 242, 243, 245, 247, 255, 257, 258, 260, 261, 262, 285, 287, 289, 300, 301, 303, 305, 308, 310, 312, 314, 318, 320, 322, 336, 337, 339, 341, 354, 355, 356, 357, 358, 364, 366, 368, 396, 398, 400, 408, 409, 411, 412, 414, 416, 429, 431, 433, 446, 452, 471, 472, 473, 475, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 669, 671, 672, 674, 676, 677, 679, 681, 682, 684, 686, 687, 689, 691, 692, 694, 696, 697, 699, 701, 702, 704, 706, 707, 709, 711, 712, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 778, 780, 782, 783, 785, 787, 788, 790, 792, 793, 795, 797, 798, 800, 814, 816, 818, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 858, 859, 861, 863, 864, 866, 868, 874, 876, 877, 891, 893, 895, 913, 914, 916, 922, 923, 924, 925, 926, 933, 934, 935, 936, 937, 953, 959, 960, 961, 962, 966, 967, 972, 977, 987, 988, 990, 991, 992, 996, 997, 999, 1001, 1007, 1010, 1017, 1021, 1027, 1028, 1030, 1031, 1050, 1051, 1053, 1054, 1057, 1058, 1059, 1060, 1077, 1078, 1079, 1080, 1081, 1087, 1089, 1091, 1121, 1123, 1125, 1144, 1146, 1148, 1149, 1150, 1151, 1152, 1162, 1163, 1164, 1183, 1184, 1186, 1187, 1195, 1197, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1212, 1222, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1255, 1258, 1259, 1285, 1287, 1289, 1305, 1307, 1309, 1321, 1323, 1325, 1326, 1328, 1330, 1333, 1334, 1336, 1337, 1338, 1340, 1342, 1343, 1345, 1360, 1361, 1363, 1365, 1366, 1368, 1370, 1371, 1373, 1396, 1397, 1398, 1399, 1400, 1406, 1407, 1409, 1411, 1412, 1414, 1417, 1418, 1420, 1422, 1424, 1425, 1427, 1429, 1430, 1432, 1434, 1436, 1438, 1440, 1441, 1443, 1445, 1451, 1453, 1455, 1456, 1458, 1460, 1461, 1463, 1465, 1469, 1471, 1473, 1476, 1478, 1480, 1481, 1483, 1485, 1486, 1493, 1495, 1497, 1508, 1510, 1512, 1513, 1515, 1517, 1518, 1520, 1522, 1524, 1526, 1528, 1529, 1531, 1533, 1537, 1539, 1541, 1543, 1547, 1549, 1551, 1552, 1554, 1556, 1568, 1570, 1572, 1573, 1575, 1577, 1578, 1579, 1581, 1584, 1585, 1586, 1587, 1589, 1590, 1592, 1594, 1595, 1597, 1599, 1606, 1607, 1609, 1611, 1612, 1624, 1626, 1641, 1642, 1643, 1645, 1647, 1649, 1652, 1653, 1654, 1656, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1681, 1684, 1685, 1686, 1688, 1689, 1691, 1693, 1694, 1696, 1698, 1709, 1711, 1713, 1714, 1715, 1717, 1719, 1720, 1722, 1724, 1746, 1748, 1750, 1756, 1758, 1760, 1761, 1763, 1765, 1766, 1768, 1770, 1776, 1778, 1780, 1796, 1798, 1800, 1801, 1803, 1805, 1821, 1824, 1829, 1830, 1832, 1855, 1857, 1859, 1860, 1862, 1864, 1865, 1867, 1869, 1870, 1871, 1873, 1875, 1876, 1877, 1879, 1886, 1890, 1891, 1893, 1895, 1906, 1908, 1910, 1911, 1913, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1955, 1956, 1957, 1958, 1959, 1962, 1963, 1964, 1965, 1967, 1968, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1981, 1983, 1985, 1986, 1988, 1990, 1991, 1993, 1995, 1996, 1998, 2000, 2002, 2004, 2006, 2007, 2018, 2020, 2022, 2023, 2026, 2033, 2034, 2035, 2037, 2039, 2040, 2042, 2043, 2044, 2045, 2047, 2048, 2055, 2057, 2059, 2071, 2073, 2075, 2076, 2078, 2080, 2089, 2091, 2097, 2099, 2101, 2102, 2104, 2111, 2112, 2114, 2117, 2119, 2121, 2122, 2124, 2126, 2128, 2134, 2135, 2140, 2141, 2146, 2152, 2153, 2154, 2157, 2158, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2194, 2201, 2205, 2208, 2210, 2223, 2224, 2225, 2226, 2237, 2239, 2240, 2241, 2245, 2246, 2247, 2251, 2252, 2253, 2254, 2255, 2258, 2259, 2260, 2261, 2263, 2264, 2266, 2267, 2268, 2269, 2282, 2283, 2284, 2285, 2286, 2287, 2288], "invers": [1, 6, 7, 8, 67, 68, 69, 78, 79, 115, 116, 117, 126, 127, 154, 186, 481, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 913, 914, 915, 916, 1149, 1155, 1714, 1756, 1757, 1758, 1759, 1760, 1771, 1774, 1791, 1792, 1793, 1794, 1795], "check_equ": [1, 164], "x1": [1, 7, 13, 17, 18, 19, 20, 51, 54, 55, 63, 64, 67, 68, 69, 70, 71, 78, 79, 88, 89, 100, 105, 106, 111, 112, 115, 116, 117, 118, 119, 126, 127, 136, 137, 140, 141, 149, 154, 156, 158, 160, 163, 164, 255, 276, 277, 318, 321, 336, 340, 341, 354, 355, 356, 357, 358, 380, 382, 428, 439, 446, 465, 481, 497, 500, 501, 517, 520, 521, 527, 530, 531, 537, 540, 541, 542, 545, 546, 547, 550, 551, 552, 555, 556, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 607, 608, 609, 610, 611, 612, 613, 615, 616, 617, 620, 621, 642, 643, 645, 646, 647, 648, 649, 650, 651, 672, 675, 676, 677, 680, 681, 687, 690, 691, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 717, 718, 719, 720, 721, 727, 730, 731, 742, 743, 744, 745, 746, 777, 778, 781, 797, 798, 799, 800, 801, 814, 815, 816, 817, 818, 881, 882, 883, 884, 885, 896, 897, 953, 954, 957, 962, 963, 964, 965, 966, 968, 971, 972, 975, 980, 997, 1000, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1050, 1051, 1052, 1053, 1054, 1072, 1073, 1074, 1075, 1076, 1087, 1090, 1091, 1166, 1167, 1168, 1169, 1170, 1183, 1184, 1185, 1186, 1187, 1200, 1211, 1285, 1286, 1287, 1288, 1289, 1406, 1408, 1410, 1411, 1412, 1417, 1418, 1419, 1420, 1421, 1422, 1425, 1428, 1429, 1714, 1720, 1721, 1722, 1723, 1724, 1751, 1754, 1755, 1761, 1762, 1764, 1765, 1786, 1789, 1790, 1806, 1809, 1810, 1821, 1822, 1824, 1825, 1828, 1839, 1840, 1843, 2007, 2028, 2029, 2030, 2031, 2032, 2054, 2060, 2063, 2064, 2205, 2225], "x2": [1, 7, 13, 17, 18, 19, 20, 51, 54, 55, 63, 64, 67, 68, 69, 70, 71, 78, 79, 88, 89, 100, 105, 106, 111, 112, 115, 116, 117, 118, 119, 126, 127, 136, 137, 149, 154, 156, 158, 160, 163, 164, 255, 318, 321, 336, 340, 341, 354, 355, 356, 357, 358, 428, 439, 446, 465, 481, 497, 498, 499, 500, 501, 517, 518, 519, 520, 521, 527, 528, 529, 530, 531, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 717, 718, 719, 720, 721, 727, 728, 729, 730, 731, 742, 743, 744, 745, 746, 777, 778, 779, 780, 781, 797, 798, 799, 800, 801, 814, 815, 816, 817, 818, 881, 882, 883, 884, 885, 953, 954, 957, 962, 963, 964, 965, 966, 968, 971, 972, 975, 980, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1050, 1051, 1052, 1053, 1054, 1072, 1073, 1074, 1075, 1076, 1087, 1088, 1089, 1090, 1091, 1166, 1167, 1168, 1169, 1170, 1183, 1184, 1185, 1186, 1187, 1200, 1211, 1285, 1286, 1287, 1288, 1289, 1333, 1334, 1406, 1408, 1410, 1411, 1412, 1413, 1417, 1418, 1419, 1420, 1421, 1422, 1714, 1720, 1721, 1722, 1723, 1724, 1751, 1752, 1753, 1754, 1755, 1761, 1762, 1763, 1764, 1765, 1786, 1787, 1788, 1789, 1790, 1806, 1807, 1808, 1809, 1810, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1839, 1840, 1841, 1842, 1843, 2007, 2028, 2029, 2030, 2031, 2032, 2205, 2225], "check_exist": 1, "check_fals": 1, "express": [1, 9, 22, 67, 68, 69, 115, 116, 117, 157, 159, 164, 170, 175, 481, 487, 490, 502, 505, 512, 515, 517, 520, 562, 563, 564, 565, 566, 572, 575, 732, 735, 757, 758, 759, 760, 761, 782, 783, 784, 785, 786, 953, 978, 1338, 1339, 1340, 1341, 1342, 2140, 2141], "check_fill_value_and_dtype_are_compat": 1, "fill_valu": [1, 10, 61, 62, 88, 89, 109, 110, 136, 137, 154, 165, 167, 255, 284, 285, 286, 287, 288, 289, 481, 617, 620, 647, 650, 2007, 2023, 2024, 2025, 2026, 2027], "dtype": [1, 10, 51, 54, 55, 61, 62, 63, 64, 69, 76, 77, 78, 79, 86, 87, 88, 89, 94, 95, 109, 110, 111, 112, 117, 118, 119, 124, 125, 126, 127, 134, 135, 136, 137, 142, 143, 149, 151, 154, 155, 156, 159, 161, 162, 163, 164, 165, 166, 167, 170, 172, 255, 257, 258, 259, 260, 261, 262, 263, 270, 271, 272, 273, 274, 275, 276, 277, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 364, 365, 366, 367, 368, 370, 371, 372, 374, 375, 376, 378, 379, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 422, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 467, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 904, 905, 906, 907, 910, 927, 928, 929, 930, 931, 953, 958, 974, 997, 998, 999, 1000, 1001, 1047, 1048, 1049, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1119, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1149, 1154, 1260, 1262, 1265, 1266, 1267, 1268, 1269, 1275, 1276, 1277, 1278, 1279, 1300, 1301, 1302, 1303, 1304, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1353, 1356, 1358, 1392, 1393, 1394, 1395, 1417, 1469, 1471, 1474, 1475, 1481, 1484, 1578, 1579, 1589, 1590, 1592, 1593, 1650, 1662, 1664, 1665, 1689, 1690, 1691, 1692, 1693, 1714, 1766, 1767, 1768, 1769, 1770, 1844, 1845, 1846, 1847, 1848, 1980, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2018, 2021, 2054, 2065, 2068, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2097, 2098, 2099, 2100, 2101, 2106, 2107, 2108, 2109, 2110, 2116, 2117, 2120, 2122, 2125, 2128, 2134, 2135, 2159, 2160, 2163, 2164, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2191, 2192, 2194, 2197, 2198, 2199, 2205, 2223, 2224, 2225, 2226, 2227, 2237, 2238, 2240, 2241, 2245, 2246, 2253, 2254, 2255, 2256, 2259, 2260, 2266, 2267], "check_gather_input_valid": 1, "param": [1, 11, 12, 69, 100, 103, 104, 105, 106, 117, 118, 119, 175, 481, 707, 710, 864, 867, 953, 956, 1417, 1423, 1476, 1479, 1480, 1481, 1484, 1485, 1844, 1847], "indic": [1, 11, 12, 45, 61, 62, 69, 70, 71, 76, 77, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 103, 104, 109, 110, 111, 112, 117, 118, 119, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 153, 159, 160, 164, 175, 255, 260, 261, 262, 310, 311, 312, 313, 314, 396, 398, 400, 408, 409, 411, 412, 414, 416, 481, 752, 755, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 896, 902, 903, 913, 915, 933, 934, 935, 936, 937, 953, 967, 982, 983, 984, 985, 986, 992, 995, 1002, 1003, 1004, 1005, 1006, 1057, 1058, 1059, 1060, 1077, 1078, 1079, 1080, 1081, 1097, 1098, 1099, 1100, 1101, 1149, 1150, 1151, 1152, 1155, 1157, 1158, 1159, 1162, 1163, 1164, 1171, 1172, 1174, 1200, 1205, 1207, 1212, 1220, 1221, 1222, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1343, 1344, 1353, 1359, 1360, 1361, 1362, 1363, 1364, 1370, 1371, 1372, 1373, 1374, 1378, 1381, 1382, 1385, 1386, 1387, 1388, 1389, 1390, 1396, 1397, 1398, 1400, 1417, 1425, 1427, 1429, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1611, 1612, 1622, 1652, 1653, 1654, 1656, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1681, 1684, 1685, 1686, 1688, 1714, 1844, 1845, 1847, 1848, 1870, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1955, 1956, 1959, 1961, 1963, 1964, 1965, 1967, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1984, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2033, 2034, 2035, 2036, 2037, 2038, 2044, 2045, 2046, 2047, 2048, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2063, 2065, 2068, 2128, 2131, 2133, 2152, 2154, 2157, 2158, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2181, 2182, 2205, 2224, 2225, 2226, 2228, 2229, 2237, 2240], "axi": [1, 11, 52, 53, 61, 62, 69, 70, 71, 78, 79, 80, 81, 82, 83, 88, 89, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 109, 110, 115, 116, 117, 118, 119, 126, 127, 128, 129, 130, 131, 136, 137, 140, 141, 142, 143, 144, 145, 152, 154, 156, 158, 160, 161, 163, 164, 166, 168, 170, 172, 175, 186, 205, 218, 219, 220, 221, 222, 238, 239, 240, 241, 242, 255, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 310, 311, 312, 313, 314, 446, 471, 891, 892, 893, 894, 895, 907, 908, 909, 910, 911, 913, 914, 915, 916, 922, 923, 924, 925, 926, 933, 934, 935, 936, 937, 938, 941, 953, 958, 959, 967, 974, 979, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1057, 1058, 1059, 1060, 1061, 1077, 1078, 1079, 1080, 1081, 1144, 1145, 1146, 1147, 1148, 1149, 1154, 1155, 1171, 1172, 1173, 1174, 1175, 1195, 1196, 1197, 1198, 1199, 1200, 1205, 1206, 1208, 1209, 1210, 1212, 1218, 1219, 1220, 1221, 1222, 1244, 1245, 1246, 1247, 1248, 1255, 1258, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1290, 1292, 1293, 1294, 1297, 1310, 1311, 1312, 1313, 1314, 1326, 1329, 1343, 1344, 1345, 1353, 1355, 1356, 1357, 1358, 1360, 1361, 1362, 1363, 1364, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1396, 1397, 1398, 1399, 1400, 1417, 1451, 1454, 1476, 1477, 1478, 1479, 1480, 1611, 1650, 1684, 1687, 1704, 1707, 1714, 1720, 1721, 1722, 1723, 1724, 1735, 1736, 1737, 1738, 1739, 1766, 1767, 1768, 1769, 1770, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1854, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1898, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1980, 2002, 2005, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2054, 2055, 2056, 2057, 2058, 2059, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2237, 2240, 2246, 2255, 2258], "batch_dim": [1, 11, 12, 70, 71, 118, 119, 1417, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485], "check_gather_nd_input_valid": 1, "check_great": 1, "allow_equ": [1, 13, 17, 158], "check_inplace_sizes_valid": 1, "var": [1, 14, 21, 94, 95, 142, 143, 146, 147, 156, 170, 250, 251, 252, 253, 254, 1951, 1952, 1953, 2070, 2112], "data": [1, 14, 21, 39, 41, 48, 51, 54, 55, 61, 62, 64, 67, 68, 69, 70, 71, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 103, 104, 105, 106, 109, 110, 112, 115, 116, 117, 118, 119, 124, 125, 126, 127, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 160, 161, 162, 163, 165, 167, 168, 170, 172, 255, 257, 258, 260, 261, 262, 270, 271, 272, 274, 276, 277, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 308, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 325, 327, 328, 330, 332, 333, 335, 336, 337, 338, 339, 340, 347, 348, 349, 350, 351, 352, 353, 359, 362, 364, 365, 366, 367, 368, 370, 380, 382, 384, 385, 386, 388, 390, 391, 393, 394, 396, 397, 399, 401, 402, 403, 406, 408, 410, 412, 415, 417, 420, 422, 425, 427, 434, 435, 436, 437, 439, 445, 446, 448, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 707, 708, 709, 710, 711, 712, 713, 714, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 804, 805, 806, 807, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 896, 897, 898, 899, 900, 901, 904, 906, 917, 920, 927, 928, 929, 930, 931, 932, 943, 946, 953, 956, 976, 978, 997, 998, 999, 1000, 1001, 1047, 1048, 1049, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1107, 1108, 1109, 1110, 1111, 1119, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1149, 1156, 1176, 1178, 1179, 1188, 1191, 1200, 1220, 1265, 1266, 1267, 1268, 1269, 1280, 1290, 1291, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1338, 1339, 1340, 1341, 1342, 1346, 1348, 1351, 1353, 1356, 1358, 1360, 1364, 1392, 1393, 1394, 1395, 1417, 1469, 1471, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1537, 1538, 1539, 1540, 1541, 1578, 1580, 1581, 1582, 1650, 1651, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1694, 1697, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1735, 1736, 1738, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1821, 1824, 1829, 1830, 1831, 1832, 1833, 1839, 1843, 1844, 1845, 1847, 1848, 1870, 1876, 1879, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1906, 1907, 1908, 1909, 1911, 1912, 1913, 1914, 1915, 1921, 1924, 1926, 1929, 1946, 1950, 1980, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2040, 2041, 2042, 2045, 2046, 2047, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2063, 2070, 2071, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2134, 2135, 2140, 2141, 2142, 2144, 2145, 2146, 2159, 2160, 2163, 2164, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2194, 2198, 2199, 2205, 2210, 2223, 2224, 2225, 2226, 2228, 2237, 2239, 2240, 2241, 2245, 2246, 2248, 2251, 2252, 2253, 2254, 2255, 2256, 2258, 2259, 2260, 2261, 2263, 2264, 2266, 2267, 2268, 2269, 2282, 2287, 2288], "check_isinst": 1, "allowed_typ": [1, 15], "check_kernel_padding_s": 1, "kernel_s": [1, 16], "padding_s": [1, 16], "check_less": [1, 158], "check_one_way_broadcast": 1, "check_same_dtyp": 1, "check_shap": [1, 103, 104], "check_shapes_broadcast": 1, "check_tru": 1, "true": [1, 22, 23, 32, 51, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 156, 158, 159, 160, 161, 163, 164, 165, 166, 168, 170, 173, 174, 175, 205, 207, 209, 210, 211, 213, 215, 217, 218, 220, 222, 223, 225, 227, 228, 230, 232, 233, 235, 237, 238, 240, 242, 243, 245, 247, 255, 257, 259, 260, 263, 267, 268, 269, 271, 273, 275, 276, 278, 279, 281, 283, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 307, 309, 310, 312, 314, 315, 317, 318, 320, 322, 323, 324, 326, 328, 329, 331, 333, 334, 336, 337, 339, 341, 349, 350, 351, 352, 353, 354, 356, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 371, 373, 375, 377, 380, 381, 383, 385, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 403, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 421, 422, 424, 425, 426, 429, 431, 433, 445, 446, 452, 453, 454, 455, 456, 457, 459, 460, 463, 466, 467, 468, 472, 473, 475, 480, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 583, 584, 585, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 607, 609, 611, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 669, 671, 672, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 711, 712, 714, 716, 717, 718, 719, 720, 721, 722, 724, 726, 727, 729, 731, 732, 734, 736, 737, 739, 741, 742, 743, 744, 745, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 778, 780, 782, 783, 785, 787, 788, 790, 792, 793, 795, 797, 798, 800, 809, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 826, 828, 829, 831, 833, 834, 836, 838, 839, 841, 843, 844, 846, 848, 849, 851, 853, 854, 858, 859, 861, 863, 864, 866, 868, 869, 870, 871, 872, 874, 877, 881, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 905, 906, 907, 911, 913, 914, 915, 916, 917, 919, 921, 922, 926, 927, 931, 932, 933, 937, 938, 940, 942, 943, 945, 947, 948, 950, 952, 953, 954, 955, 958, 970, 973, 974, 977, 982, 984, 986, 987, 991, 992, 996, 997, 999, 1001, 1002, 1006, 1007, 1011, 1012, 1016, 1017, 1021, 1022, 1026, 1027, 1031, 1032, 1036, 1037, 1041, 1042, 1046, 1050, 1054, 1055, 1056, 1057, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1076, 1077, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1092, 1096, 1097, 1101, 1102, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1141, 1143, 1144, 1146, 1148, 1149, 1155, 1156, 1161, 1166, 1168, 1170, 1171, 1173, 1175, 1183, 1187, 1193, 1194, 1195, 1197, 1199, 1200, 1221, 1224, 1226, 1228, 1229, 1231, 1233, 1234, 1236, 1238, 1239, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1254, 1255, 1257, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1285, 1287, 1289, 1290, 1291, 1294, 1296, 1298, 1300, 1304, 1305, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1321, 1323, 1325, 1326, 1328, 1330, 1333, 1334, 1335, 1336, 1337, 1338, 1340, 1342, 1353, 1354, 1355, 1356, 1357, 1358, 1360, 1361, 1363, 1365, 1366, 1368, 1370, 1371, 1372, 1373, 1374, 1378, 1379, 1380, 1382, 1383, 1384, 1386, 1387, 1392, 1393, 1394, 1396, 1397, 1401, 1402, 1404, 1406, 1407, 1409, 1411, 1412, 1414, 1417, 1418, 1419, 1420, 1421, 1422, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1436, 1438, 1440, 1441, 1443, 1445, 1448, 1450, 1451, 1453, 1455, 1456, 1458, 1460, 1461, 1463, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1478, 1480, 1481, 1483, 1485, 1487, 1489, 1492, 1493, 1494, 1495, 1496, 1497, 1500, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1512, 1513, 1515, 1517, 1518, 1520, 1522, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1536, 1537, 1538, 1539, 1540, 1541, 1547, 1549, 1551, 1552, 1554, 1556, 1557, 1561, 1563, 1564, 1566, 1567, 1568, 1570, 1572, 1573, 1575, 1577, 1578, 1579, 1581, 1584, 1585, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1597, 1600, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1612, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1649, 1650, 1651, 1652, 1654, 1656, 1657, 1659, 1661, 1662, 1664, 1666, 1667, 1669, 1671, 1672, 1674, 1676, 1677, 1679, 1681, 1684, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1696, 1698, 1699, 1701, 1703, 1704, 1706, 1708, 1709, 1711, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1724, 1725, 1727, 1729, 1730, 1732, 1734, 1735, 1737, 1739, 1741, 1743, 1745, 1746, 1748, 1750, 1751, 1753, 1755, 1756, 1758, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1775, 1776, 1778, 1780, 1781, 1783, 1784, 1785, 1786, 1788, 1790, 1796, 1798, 1800, 1801, 1803, 1805, 1806, 1808, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1819, 1821, 1822, 1823, 1829, 1830, 1832, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1842, 1844, 1845, 1847, 1848, 1849, 1850, 1852, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1873, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1890, 1891, 1893, 1895, 1896, 1898, 1900, 1901, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1915, 1916, 1918, 1919, 1920, 1921, 1923, 1925, 1926, 1928, 1930, 1931, 1932, 1934, 1936, 1937, 1939, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1973, 1974, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1988, 1990, 1991, 1993, 1995, 1996, 1998, 2000, 2002, 2004, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2047, 2048, 2049, 2050, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2062, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2083, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2157, 2158, 2169, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2194, 2197, 2198, 2199, 2205, 2209, 2210, 2223, 2224, 2225, 2226, 2237, 2240, 2241, 2245, 2246, 2251, 2252, 2254, 2255, 2258, 2261, 2262, 2266, 2267], "assert": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 103, 104, 148, 149, 159, 164, 165, 166, 167, 172, 173, 1417, 1430, 1433, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2282, 2285, 2286], "support": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 48, 53, 55, 57, 58, 59, 60, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 102, 104, 106, 108, 110, 112, 113, 114, 116, 117, 118, 119, 121, 123, 125, 126, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 150, 152, 155, 156, 157, 160, 161, 162, 163, 165, 166, 168, 169, 170, 172, 173, 175, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 879, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 906, 907, 908, 909, 910, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1194, 1195, 1196, 1197, 1198, 1199, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1952, 1953, 1954, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1976, 1977, 1978, 1979, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2132, 2133, 2135, 2137, 2139, 2140, 2143, 2145, 2146, 2147, 2150, 2151, 2153, 2154, 2155, 2156, 2158, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2182, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2192, 2193, 2194, 2197, 2198, 2199, 2251, 2254, 2291], "framework": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 47, 48, 53, 55, 56, 57, 58, 59, 60, 62, 64, 66, 68, 69, 70, 71, 72, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 102, 104, 106, 108, 110, 112, 114, 116, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 175, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 879, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 906, 907, 908, 909, 910, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1194, 1195, 1196, 1197, 1198, 1199, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1976, 1977, 1978, 1979, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2132, 2133, 2135, 2136, 2137, 2138, 2139, 2141, 2144, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2158, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2182, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2192, 2193, 2194, 2195, 2201, 2205, 2209, 2214, 2223, 2224, 2225, 2228, 2231, 2251, 2254, 2282, 2285, 2286, 2291], "class": [23, 24, 32, 38, 45, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 154, 155, 156, 157, 160, 165, 166, 168, 170, 171, 173, 174, 175, 185, 186, 187, 255, 256, 285, 286, 318, 321, 336, 340, 341, 342, 343, 344, 345, 346, 354, 355, 356, 358, 385, 386, 396, 397, 399, 434, 436, 437, 446, 447, 448, 577, 578, 582, 583, 607, 608, 609, 611, 717, 718, 719, 742, 743, 744, 746, 803, 804, 844, 846, 848, 869, 870, 871, 872, 943, 945, 947, 953, 976, 1107, 1109, 1111, 1193, 1194, 1234, 1236, 1238, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1321, 1324, 1346, 1347, 1348, 1353, 1356, 1357, 1417, 1418, 1420, 1424, 1451, 1453, 1455, 1476, 1480, 1518, 1521, 1543, 1578, 1579, 1582, 1606, 1607, 1612, 1613, 1650, 1699, 1701, 1709, 1712, 1714, 1766, 1769, 1855, 1859, 1860, 1864, 1865, 1869, 1955, 1957, 1968, 1986, 1990, 1991, 1995, 1996, 2000, 2007, 2023, 2026, 2033, 2044, 2048, 2055, 2059, 2097, 2098, 2102, 2103, 2127, 2128, 2134, 2135, 2138, 2140, 2141, 2147, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2205, 2224, 2226, 2228, 2229, 2230, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2282, 2283], "backend_handl": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 151, 170, 2128], "contextmanag": 23, "modul": [23, 24, 29, 31, 33, 42, 45, 48, 98, 99, 100, 103, 104, 105, 106, 146, 147, 150, 151, 158, 159, 161, 163, 164, 166, 170, 171, 173, 175, 186, 187, 1417, 1544, 2128, 2140, 2141, 2143, 2149, 2150, 2151, 2152, 2153, 2155, 2156, 2157, 2158, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2183, 2184, 2191, 2192, 2205, 2226], "base": [23, 24, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 152, 153, 154, 158, 160, 162, 165, 166, 167, 170, 186, 255, 256, 295, 296, 297, 298, 299, 341, 342, 343, 344, 345, 346, 428, 446, 447, 448, 481, 592, 595, 652, 655, 657, 658, 659, 660, 661, 662, 665, 667, 668, 669, 670, 671, 727, 728, 730, 803, 804, 864, 865, 866, 867, 868, 891, 893, 895, 896, 902, 903, 953, 956, 962, 987, 989, 991, 1027, 1028, 1029, 1030, 1031, 1346, 1347, 1348, 1378, 1381, 1382, 1385, 1417, 1490, 1559, 1573, 1574, 1575, 1576, 1577, 1612, 1613, 1870, 1886, 1889, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2070, 2081, 2084, 2134, 2135, 2140, 2145, 2147, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2228, 2229, 2230, 2251, 2253, 2270, 2271, 2272, 2273, 2274, 2275, 2276], "object": [23, 24, 32, 61, 62, 65, 66, 86, 87, 100, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 134, 135, 150, 152, 153, 162, 164, 165, 166, 172, 175, 205, 206, 212, 255, 267, 268, 269, 279, 282, 315, 316, 341, 342, 343, 344, 345, 346, 369, 385, 387, 388, 389, 396, 398, 400, 428, 446, 447, 472, 473, 474, 475, 476, 702, 704, 706, 803, 804, 859, 861, 863, 905, 906, 1119, 1346, 1347, 1348, 1481, 1485, 1612, 1613, 1955, 1959, 1961, 1963, 1964, 1965, 1971, 1972, 1973, 1974, 1980, 2002, 2003, 2004, 2005, 2006, 2134, 2135, 2140, 2146, 2152, 2153, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2178, 2179, 2181, 2182, 2205, 2225, 2228, 2230, 2270, 2271, 2272, 2273, 2274, 2275, 2276], "__init__": [23, 24, 29, 31, 47, 51, 54, 55, 100, 103, 104, 105, 106, 150, 151, 154, 158, 164, 167, 170, 172, 173, 174, 175, 255, 256, 341, 342, 343, 344, 345, 346, 446, 447, 448, 804, 1346, 1348, 1612, 1613, 2128, 2134, 2135, 2149, 2150, 2151, 2152, 2154, 2155, 2159, 2160, 2161, 2162, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2228, 2229, 2230, 2270, 2271, 2272, 2273, 2274, 2275, 2276], "choose_random_backend": 23, "exclud": [23, 25, 94, 95, 142, 143, 156, 170, 255, 257, 258, 896, 902, 903, 1378, 1381, 1382, 1385, 1980, 1996, 1999, 2071, 2072, 2073, 2075, 2237, 2241, 2245, 2246, 2266, 2267], "none": [23, 25, 31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 172, 174, 175, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 255, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 363, 364, 366, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 385, 386, 387, 388, 389, 390, 392, 393, 395, 396, 397, 398, 399, 400, 402, 403, 405, 407, 408, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 429, 431, 433, 443, 445, 446, 451, 452, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 826, 828, 829, 831, 833, 834, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 877, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 937, 938, 939, 940, 941, 942, 943, 944, 945, 947, 948, 950, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1057, 1058, 1059, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1121, 1122, 1123, 1124, 1125, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1206, 1207, 1208, 1209, 1210, 1211, 1213, 1214, 1215, 1218, 1219, 1220, 1221, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1348, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1420, 1422, 1423, 1425, 1427, 1429, 1430, 1432, 1434, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1471, 1473, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1493, 1495, 1497, 1499, 1502, 1504, 1506, 1507, 1508, 1510, 1512, 1513, 1515, 1517, 1518, 1520, 1522, 1523, 1524, 1526, 1528, 1529, 1531, 1533, 1537, 1539, 1541, 1544, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1563, 1564, 1565, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1581, 1584, 1585, 1589, 1590, 1592, 1594, 1595, 1597, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1609, 1611, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1814, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1944, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1962, 1963, 1966, 1967, 1968, 1969, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2039, 2040, 2042, 2044, 2045, 2047, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2134, 2135, 2152, 2153, 2154, 2156, 2157, 2158, 2159, 2160, 2163, 2164, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2189, 2191, 2192, 2194, 2195, 2196, 2201, 2205, 2210, 2219, 2223, 2224, 2225, 2226, 2227, 2228, 2230, 2237, 2241, 2245, 2246, 2248, 2251, 2253, 2254, 2255, 2256, 2258, 2261, 2266, 2267, 2268, 2269, 2282, 2283, 2284, 2285, 2286, 2287], "clear_backend_stack": 23, "convert_from_numpy_to_target_backend": 23, "variable_id": [23, 27, 28], "numpy_obj": [23, 27, 28], "convert_from_source_backend_to_numpi": 23, "current_backend": [23, 51, 54, 55, 100, 105, 106, 158, 161, 167, 170], "kwarg": [23, 29, 51, 54, 55, 56, 57, 58, 69, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 158, 164, 170, 174, 188, 199, 203, 255, 256, 1200, 1218, 1294, 1295, 1296, 1297, 1298, 1417, 1543, 1599, 2152, 2154, 2155, 2156, 2181, 2182, 2194, 2200, 2205, 2211, 2216, 2217, 2221], "return": [23, 29, 30, 31, 38, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 439, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1559, 1560, 1563, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2128, 2131, 2133, 2134, 2135, 2141, 2152, 2153, 2154, 2156, 2157, 2158, 2159, 2160, 2163, 2169, 2178, 2179, 2181, 2182, 2185, 2189, 2194, 2195, 2197, 2198, 2199, 2201, 2205, 2207, 2210, 2212, 2214, 2217, 2223, 2224, 2225, 2226, 2227, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2245, 2246, 2247, 2248, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2272, 2278, 2279, 2280, 2281, 2282, 2287, 2288, 2289], "current": [23, 29, 30, 31, 38, 42, 45, 47, 48, 49, 51, 54, 55, 70, 71, 100, 103, 104, 105, 106, 149, 151, 152, 153, 154, 155, 158, 161, 162, 164, 165, 166, 168, 170, 175, 186, 187, 341, 390, 391, 393, 394, 402, 440, 441, 442, 443, 444, 445, 446, 458, 459, 460, 461, 465, 467, 480, 1200, 1218, 1294, 1297, 1417, 1474, 1475, 1486, 1487, 1488, 1492, 1500, 1507, 1523, 1545, 1546, 1567, 1578, 1580, 1582, 1612, 1641, 1649, 1714, 1740, 1955, 1956, 1966, 1967, 2128, 2140, 2146, 2147, 2157, 2158, 2181, 2182, 2205, 2223, 2224, 2225, 2226, 2251, 2253], "prioriti": [23, 29, 49, 103, 104, 163], "global_backend": [23, 29], "argument": [23, 29, 31, 40, 47, 56, 57, 58, 59, 60, 61, 62, 67, 68, 69, 70, 71, 78, 79, 100, 103, 104, 105, 106, 107, 108, 115, 116, 117, 118, 119, 148, 149, 150, 151, 152, 156, 157, 159, 161, 162, 165, 166, 167, 168, 170, 172, 173, 188, 189, 199, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 296, 298, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 403, 406, 417, 420, 429, 432, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 688, 689, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 839, 842, 844, 847, 849, 852, 896, 897, 902, 903, 907, 910, 913, 915, 917, 920, 922, 925, 932, 943, 946, 953, 959, 997, 1000, 1002, 1003, 1004, 1005, 1006, 1097, 1098, 1099, 1100, 1101, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1158, 1159, 1162, 1163, 1164, 1176, 1178, 1179, 1200, 1218, 1229, 1232, 1234, 1237, 1239, 1242, 1294, 1297, 1378, 1381, 1382, 1385, 1417, 1423, 1424, 1435, 1448, 1449, 1450, 1476, 1479, 1493, 1496, 1502, 1505, 1508, 1511, 1543, 1552, 1553, 1554, 1555, 1556, 1578, 1580, 1582, 1594, 1598, 1599, 1611, 1612, 1642, 1646, 1650, 1652, 1655, 1662, 1665, 1667, 1670, 1672, 1675, 1684, 1687, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1712, 1714, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1733, 1735, 1738, 1740, 1741, 1744, 1746, 1747, 1749, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1804, 1806, 1809, 1811, 1815, 1816, 1820, 1821, 1824, 1839, 1843, 1844, 1848, 1849, 1853, 1870, 1871, 1874, 1876, 1879, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1899, 1901, 1904, 1906, 1909, 1911, 1914, 1916, 1919, 1921, 1924, 1926, 1929, 1931, 1935, 1936, 1940, 1941, 1945, 1946, 1950, 1955, 1962, 1975, 1976, 1979, 2007, 2008, 2011, 2013, 2016, 2023, 2026, 2028, 2032, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2054, 2055, 2058, 2065, 2068, 2070, 2085, 2088, 2089, 2092, 2093, 2096, 2097, 2100, 2102, 2105, 2106, 2110, 2111, 2115, 2116, 2117, 2120, 2122, 2125, 2127, 2131, 2133, 2140, 2152, 2153, 2156, 2181, 2182, 2194, 2197, 2198, 2199, 2200, 2205, 2209, 2210, 2223, 2224, 2225, 2226, 2237, 2240, 2282, 2284, 2286, 2287, 2288], "": [23, 29, 31, 32, 38, 41, 42, 43, 44, 45, 47, 48, 49, 61, 62, 69, 70, 71, 72, 73, 78, 79, 94, 95, 117, 118, 119, 120, 121, 126, 127, 142, 143, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 186, 187, 249, 255, 300, 301, 303, 323, 325, 327, 328, 330, 332, 341, 342, 343, 344, 345, 346, 390, 391, 393, 394, 446, 452, 459, 460, 470, 481, 742, 745, 814, 815, 816, 817, 818, 913, 915, 953, 954, 967, 970, 1017, 1019, 1021, 1022, 1024, 1026, 1057, 1058, 1059, 1060, 1121, 1122, 1123, 1124, 1125, 1149, 1155, 1165, 1200, 1218, 1285, 1287, 1289, 1294, 1297, 1299, 1300, 1301, 1302, 1303, 1304, 1310, 1311, 1312, 1313, 1314, 1315, 1320, 1353, 1358, 1406, 1407, 1409, 1417, 1474, 1475, 1578, 1579, 1580, 1582, 1612, 1618, 1619, 1620, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1637, 1638, 1639, 1640, 1714, 1730, 1733, 1776, 1777, 1778, 1779, 1780, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1844, 1845, 1847, 1848, 1955, 1968, 2070, 2102, 2103, 2104, 2105, 2111, 2113, 2114, 2115, 2127, 2128, 2136, 2139, 2140, 2141, 2143, 2144, 2145, 2146, 2157, 2158, 2159, 2160, 2163, 2164, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2189, 2191, 2192, 2205, 2222, 2251, 2254], "paramet": [23, 29, 30, 31, 33, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 157, 158, 160, 162, 164, 165, 166, 167, 170, 172, 173, 186, 188, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 255, 257, 258, 260, 261, 262, 267, 268, 269, 270, 271, 272, 274, 276, 277, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 325, 327, 328, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 422, 425, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805, 806, 807, 808, 809, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 881, 882, 883, 884, 885, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 914, 915, 916, 917, 920, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 941, 943, 945, 946, 947, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 985, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1297, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1381, 1382, 1385, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1493, 1494, 1495, 1496, 1497, 1499, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1543, 1544, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1559, 1560, 1562, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1730, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1821, 1824, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1843, 1844, 1845, 1847, 1848, 1849, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2063, 2065, 2068, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2131, 2133, 2141, 2152, 2153, 2156, 2157, 2158, 2159, 2160, 2163, 2164, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2194, 2195, 2197, 2198, 2199, 2200, 2201, 2205, 2210, 2223, 2224, 2225, 2226, 2237, 2239, 2240, 2241, 2245, 2246, 2248, 2251, 2252, 2253, 2254, 2255, 2256, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2266, 2267, 2268, 2269, 2282, 2283, 2284, 2285, 2286, 2287, 2288], "from": [23, 29, 31, 32, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 134, 135, 136, 137, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 186, 187, 255, 257, 258, 260, 261, 271, 272, 274, 279, 282, 284, 285, 286, 287, 288, 289, 300, 303, 305, 306, 308, 318, 319, 320, 321, 322, 336, 337, 338, 339, 340, 341, 364, 365, 366, 367, 368, 412, 413, 428, 429, 430, 431, 432, 433, 446, 452, 461, 465, 470, 471, 481, 572, 573, 574, 575, 576, 732, 733, 734, 735, 736, 767, 770, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 881, 882, 883, 884, 885, 896, 897, 902, 903, 927, 930, 932, 933, 935, 937, 953, 957, 962, 963, 964, 967, 976, 981, 997, 998, 999, 1000, 1001, 1027, 1030, 1032, 1035, 1037, 1040, 1047, 1048, 1049, 1057, 1058, 1059, 1060, 1077, 1078, 1079, 1081, 1087, 1088, 1149, 1156, 1200, 1218, 1219, 1220, 1294, 1297, 1300, 1301, 1303, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1324, 1326, 1329, 1360, 1364, 1378, 1381, 1382, 1385, 1396, 1397, 1399, 1411, 1413, 1415, 1417, 1435, 1448, 1449, 1450, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1546, 1562, 1584, 1587, 1611, 1612, 1618, 1619, 1620, 1621, 1629, 1630, 1631, 1632, 1647, 1650, 1652, 1654, 1656, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1704, 1707, 1714, 1735, 1736, 1737, 1738, 1739, 1811, 1813, 1815, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1839, 1843, 1870, 1876, 1877, 1879, 1891, 1892, 1893, 1894, 1895, 1906, 1907, 1908, 1909, 1910, 1921, 1924, 1951, 1952, 1953, 1954, 1955, 1957, 1968, 1969, 1970, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2007, 2013, 2014, 2015, 2016, 2017, 2028, 2030, 2032, 2033, 2034, 2038, 2044, 2048, 2070, 2071, 2072, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2097, 2100, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2136, 2138, 2139, 2140, 2141, 2142, 2144, 2145, 2146, 2147, 2152, 2154, 2156, 2157, 2158, 2159, 2161, 2162, 2163, 2166, 2167, 2169, 2177, 2180, 2181, 2182, 2185, 2189, 2194, 2195, 2201, 2205, 2223, 2224, 2225, 2226, 2237, 2239, 2240, 2241, 2245, 2246, 2247, 2248, 2251, 2252, 2253, 2254, 2255, 2258, 2259, 2260, 2261, 2263, 2264, 2266, 2267, 2268, 2269, 2282, 2287, 2288], "which": [23, 29, 30, 31, 33, 40, 41, 42, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 186, 187, 207, 209, 211, 213, 215, 217, 218, 219, 220, 222, 223, 225, 227, 228, 230, 232, 233, 235, 237, 238, 239, 240, 242, 243, 245, 247, 249, 255, 257, 258, 260, 261, 262, 270, 271, 272, 274, 276, 277, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 305, 306, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 325, 327, 328, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 354, 356, 358, 364, 365, 366, 367, 368, 370, 380, 382, 385, 388, 396, 399, 402, 412, 413, 429, 430, 431, 433, 445, 446, 453, 454, 455, 456, 461, 465, 467, 469, 470, 471, 472, 473, 475, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 669, 671, 672, 674, 676, 677, 679, 681, 682, 684, 686, 687, 689, 691, 692, 694, 696, 697, 699, 701, 702, 704, 706, 707, 709, 711, 712, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 745, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 778, 780, 782, 783, 785, 787, 788, 790, 792, 793, 795, 797, 798, 800, 805, 808, 814, 815, 816, 817, 818, 824, 826, 828, 829, 831, 833, 834, 836, 838, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 866, 868, 873, 881, 882, 883, 884, 885, 891, 892, 893, 894, 895, 896, 897, 902, 903, 913, 915, 917, 920, 922, 923, 924, 925, 926, 927, 928, 930, 933, 937, 953, 954, 957, 958, 959, 962, 970, 974, 975, 979, 980, 981, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1017, 1021, 1027, 1028, 1030, 1047, 1048, 1049, 1055, 1056, 1062, 1063, 1077, 1081, 1087, 1089, 1091, 1097, 1098, 1099, 1100, 1101, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1144, 1145, 1146, 1147, 1148, 1149, 1155, 1158, 1159, 1171, 1174, 1176, 1178, 1195, 1196, 1197, 1198, 1199, 1200, 1220, 1221, 1244, 1245, 1246, 1247, 1248, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1285, 1286, 1287, 1288, 1289, 1290, 1292, 1293, 1300, 1301, 1302, 1303, 1304, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1323, 1325, 1326, 1328, 1330, 1338, 1340, 1342, 1343, 1344, 1353, 1355, 1356, 1357, 1358, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1381, 1382, 1385, 1396, 1397, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1420, 1422, 1423, 1425, 1427, 1429, 1430, 1432, 1434, 1436, 1438, 1440, 1441, 1443, 1445, 1448, 1450, 1451, 1453, 1455, 1456, 1458, 1460, 1461, 1463, 1465, 1469, 1471, 1473, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1489, 1493, 1495, 1497, 1508, 1510, 1512, 1513, 1515, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1526, 1528, 1529, 1531, 1533, 1537, 1539, 1541, 1545, 1546, 1547, 1549, 1551, 1552, 1553, 1554, 1555, 1556, 1568, 1570, 1572, 1573, 1575, 1577, 1578, 1579, 1581, 1584, 1585, 1589, 1590, 1592, 1594, 1595, 1597, 1606, 1607, 1609, 1611, 1612, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1642, 1643, 1644, 1645, 1646, 1648, 1650, 1652, 1654, 1656, 1662, 1664, 1666, 1667, 1669, 1671, 1689, 1691, 1693, 1694, 1696, 1698, 1704, 1707, 1709, 1711, 1713, 1714, 1715, 1717, 1719, 1720, 1721, 1722, 1723, 1724, 1730, 1733, 1735, 1736, 1737, 1738, 1739, 1746, 1748, 1750, 1756, 1758, 1760, 1761, 1763, 1765, 1766, 1767, 1768, 1769, 1770, 1776, 1778, 1780, 1781, 1783, 1785, 1796, 1798, 1800, 1801, 1803, 1805, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1829, 1830, 1832, 1839, 1843, 1844, 1845, 1847, 1848, 1854, 1855, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1873, 1875, 1876, 1877, 1879, 1886, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1901, 1902, 1903, 1904, 1906, 1908, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1955, 1961, 1962, 1963, 1964, 1969, 1971, 1972, 1973, 1974, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2004, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2026, 2028, 2030, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2047, 2048, 2049, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2065, 2068, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2131, 2133, 2136, 2137, 2138, 2139, 2140, 2141, 2143, 2145, 2146, 2147, 2152, 2153, 2154, 2156, 2157, 2158, 2159, 2160, 2163, 2164, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2189, 2191, 2192, 2205, 2225, 2226, 2237, 2240, 2251, 2253, 2255, 2258, 2262], "try": [23, 29, 39, 41, 42, 45, 47, 48, 49, 103, 104, 149, 150, 152, 153, 154, 158, 159, 163, 164, 165, 170, 172, 187, 1417, 1599, 2128, 2159, 2167], "infer": [23, 29, 30, 61, 62, 69, 70, 71, 76, 77, 82, 83, 109, 110, 117, 118, 119, 124, 125, 130, 131, 148, 151, 154, 155, 162, 166, 170, 175, 255, 257, 258, 260, 261, 271, 272, 274, 284, 285, 286, 287, 288, 289, 305, 306, 308, 318, 319, 320, 321, 322, 336, 337, 338, 339, 340, 341, 371, 372, 374, 375, 376, 378, 379, 927, 930, 997, 998, 999, 1001, 1315, 1318, 1417, 1493, 1494, 1495, 1496, 1497, 1566, 1650, 1689, 1690, 1691, 1692, 1693, 1870, 1906, 1907, 1908, 1909, 1910, 2138, 2139, 2142, 2144, 2152, 2154], "when": [23, 29, 40, 41, 43, 44, 46, 47, 48, 49, 61, 62, 63, 64, 69, 78, 79, 80, 81, 86, 87, 88, 89, 94, 95, 100, 103, 104, 105, 106, 109, 110, 111, 112, 115, 116, 117, 126, 127, 128, 129, 134, 135, 136, 137, 142, 143, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 173, 175, 187, 255, 310, 311, 312, 313, 314, 341, 349, 350, 351, 352, 353, 408, 411, 412, 416, 481, 497, 500, 597, 600, 662, 665, 727, 730, 805, 806, 859, 862, 869, 870, 871, 872, 913, 915, 953, 979, 1113, 1114, 1115, 1116, 1117, 1149, 1155, 1161, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1270, 1271, 1272, 1273, 1310, 1311, 1312, 1313, 1314, 1315, 1317, 1353, 1357, 1358, 1375, 1376, 1377, 1417, 1518, 1521, 1562, 1573, 1576, 1650, 1651, 1714, 1776, 1777, 1778, 1779, 1780, 1801, 1804, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1955, 1956, 1957, 1966, 1967, 1968, 1980, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2007, 2008, 2011, 2013, 2016, 2023, 2024, 2025, 2026, 2027, 2028, 2030, 2032, 2070, 2085, 2088, 2093, 2096, 2102, 2103, 2104, 2105, 2111, 2113, 2114, 2115, 2138, 2140, 2143, 2144, 2145, 2146, 2152, 2154, 2157, 2158, 2159, 2164, 2167, 2181, 2182, 2237, 2240, 2241, 2245, 2246, 2266, 2267, 2268, 2269], "global": [23, 29, 31, 32, 34, 35, 36, 37, 38, 48, 70, 71, 84, 85, 100, 103, 104, 105, 106, 118, 119, 132, 133, 150, 151, 153, 154, 155, 158, 161, 164, 170, 341, 371, 372, 374, 375, 376, 378, 379, 446, 469, 470, 471, 1417, 1490, 1491, 1498, 1559, 1560, 1562, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1603, 1612, 1641, 1647, 1649, 1975, 1976, 1977, 1978, 1979, 2140, 2183, 2184, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2282, 2283, 2284, 2285, 2286], "set": [23, 29, 31, 32, 34, 35, 36, 37, 38, 40, 43, 45, 49, 56, 59, 60, 69, 70, 71, 72, 73, 76, 77, 78, 79, 88, 89, 91, 92, 93, 94, 95, 103, 104, 117, 118, 119, 124, 125, 126, 127, 136, 137, 139, 140, 141, 142, 143, 148, 149, 150, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 167, 170, 172, 173, 341, 434, 435, 436, 437, 438, 446, 452, 468, 469, 470, 471, 481, 517, 520, 891, 892, 893, 894, 895, 896, 902, 903, 913, 915, 917, 920, 943, 946, 948, 951, 953, 958, 974, 977, 1012, 1013, 1014, 1015, 1016, 1149, 1155, 1176, 1178, 1179, 1180, 1200, 1208, 1218, 1221, 1244, 1245, 1246, 1247, 1248, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1294, 1297, 1310, 1311, 1312, 1313, 1314, 1333, 1336, 1353, 1355, 1356, 1357, 1358, 1370, 1371, 1372, 1373, 1374, 1378, 1381, 1382, 1385, 1417, 1418, 1419, 1420, 1421, 1422, 1451, 1454, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1578, 1579, 1580, 1581, 1582, 1601, 1624, 1625, 1650, 1689, 1690, 1691, 1692, 1693, 1714, 1720, 1721, 1722, 1723, 1724, 1766, 1767, 1768, 1769, 1770, 1776, 1777, 1778, 1779, 1780, 1791, 1793, 1794, 1795, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1955, 1956, 1963, 1966, 1967, 1968, 1973, 1974, 1980, 2001, 2007, 2008, 2009, 2010, 2011, 2012, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2065, 2068, 2070, 2102, 2103, 2104, 2105, 2111, 2113, 2114, 2115, 2138, 2139, 2140, 2141, 2142, 2144, 2147, 2157, 2158, 2159, 2164, 2167, 2169, 2178, 2185, 2186, 2187, 2188, 2189, 2190, 2205, 2226, 2237, 2239, 2240, 2241, 2245, 2246, 2248, 2251, 2252, 2253, 2254, 2255, 2258, 2259, 2260, 2261, 2263, 2264, 2266, 2267, 2268, 2269, 2282, 2283, 2284, 2285, 2286, 2287, 2288], "ret": [23, 29, 31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 157, 158, 163, 164, 165, 167, 170, 175, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 255, 257, 258, 260, 261, 262, 267, 268, 269, 270, 271, 272, 274, 276, 277, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 325, 327, 328, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 380, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 396, 397, 398, 399, 400, 402, 403, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 422, 425, 427, 429, 430, 431, 432, 433, 445, 446, 447, 449, 450, 452, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 470, 471, 472, 473, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805, 806, 807, 808, 809, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 881, 882, 883, 884, 885, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 915, 917, 920, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 941, 943, 945, 947, 948, 950, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 985, 987, 988, 989, 990, 991, 992, 995, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1158, 1159, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1297, 1300, 1301, 1302, 1303, 1304, 1305, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1381, 1382, 1385, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1486, 1489, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1501, 1502, 1503, 1505, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1543, 1544, 1547, 1548, 1549, 1550, 1552, 1553, 1554, 1555, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1730, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1821, 1824, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1843, 1844, 1845, 1847, 1848, 1849, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1919, 1921, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1959, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2053, 2054, 2055, 2057, 2058, 2059, 2060, 2063, 2065, 2068, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2131, 2133, 2152, 2153, 2156, 2157, 2158, 2181, 2182, 2185, 2189, 2205, 2212, 2213, 2214, 2223, 2224, 2225, 2226, 2251, 2253, 2254, 2266, 2267, 2268, 2269], "exampl": [23, 29, 31, 32, 38, 42, 47, 48, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 166, 167, 170, 172, 173, 174, 175, 186, 187, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 255, 267, 269, 276, 277, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 300, 303, 310, 311, 312, 313, 314, 315, 316, 318, 321, 333, 335, 336, 340, 341, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 375, 376, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 396, 397, 398, 399, 400, 401, 402, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 422, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805, 806, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 869, 870, 871, 872, 874, 875, 876, 877, 881, 882, 883, 884, 885, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 985, 987, 988, 989, 990, 991, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1156, 1157, 1158, 1159, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1297, 1300, 1301, 1302, 1303, 1304, 1310, 1311, 1312, 1313, 1314, 1315, 1318, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1381, 1382, 1385, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1532, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1543, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1578, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1652, 1653, 1654, 1655, 1656, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1680, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1731, 1732, 1733, 1735, 1736, 1737, 1738, 1739, 1746, 1747, 1748, 1749, 1750, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1801, 1802, 1803, 1804, 1805, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1821, 1824, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1955, 1957, 1959, 1962, 1963, 1964, 1965, 1967, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1984, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2026, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2063, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2128, 2137, 2138, 2141, 2143, 2146, 2147, 2205, 2225, 2237, 2240, 2282, 2287], "Ifimport": [23, 29, 30, 41, 44, 46, 47, 48, 49, 98, 99, 109, 110, 146, 147, 149, 150, 151, 152, 154, 155, 156, 157, 159, 163, 164, 165, 166, 167, 170, 172, 173, 175, 187, 295, 299, 446, 450, 451, 459, 460, 468, 469, 2128, 2136, 2138, 2140, 2143, 2144, 2146, 2282, 2283, 2284, 2285, 2286], "numpi": [23, 29, 31, 32, 35, 40, 41, 46, 47, 48, 49, 69, 70, 71, 94, 95, 117, 118, 119, 149, 150, 151, 153, 154, 155, 158, 160, 163, 165, 166, 167, 168, 170, 172, 175, 446, 450, 819, 820, 821, 822, 823, 896, 902, 903, 905, 906, 953, 955, 1119, 1378, 1381, 1382, 1385, 1417, 1568, 1569, 1570, 1578, 1579, 1581, 1582, 1589, 1590, 1591, 1592, 1593, 2070, 2081, 2082, 2084, 2127, 2128, 2142, 2147, 2194, 2195, 2197, 2198, 2199, 2201, 2205, 2210, 2212, 2214, 2223, 2224, 2225, 2226], "np": [23, 29, 47, 61, 62, 69, 115, 116, 117, 118, 119, 150, 154, 155, 158, 160, 163, 164, 165, 166, 167, 168, 170, 172, 173, 175, 255, 267, 268, 269, 481, 637, 639, 640, 809, 810, 811, 812, 813, 905, 906, 953, 969, 1002, 1003, 1004, 1005, 1006, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1119, 1149, 1158, 1159, 1176, 1177, 1417, 1568, 1571, 1572, 1955, 1962, 2127, 2128, 2205, 2225], "arraiprint": [23, 29, 31, 32, 38, 48, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 156, 165, 166, 170, 172, 173, 174, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 255, 267, 269, 276, 277, 284, 285, 286, 287, 288, 289, 290, 293, 295, 298, 300, 303, 310, 311, 312, 313, 314, 315, 316, 318, 321, 333, 335, 336, 340, 341, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 396, 400, 402, 408, 409, 411, 412, 414, 415, 416, 417, 420, 429, 430, 431, 432, 433, 445, 446, 447, 449, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805, 806, 808, 814, 815, 816, 817, 818, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 869, 870, 871, 872, 874, 875, 876, 877, 896, 897, 902, 903, 907, 910, 932, 953, 954, 976, 978, 982, 985, 997, 998, 999, 1000, 1001, 1082, 1083, 1085, 1144, 1146, 1148, 1149, 1150, 1151, 1152, 1154, 1156, 1157, 1162, 1163, 1164, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1197, 1199, 1200, 1204, 1213, 1216, 1217, 1218, 1220, 1221, 1223, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1260, 1262, 1282, 1283, 1294, 1297, 1310, 1312, 1314, 1321, 1324, 1325, 1338, 1339, 1340, 1341, 1342, 1360, 1362, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1378, 1381, 1382, 1385, 1401, 1403, 1405, 1417, 1418, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1476, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1490, 1491, 1493, 1494, 1496, 1498, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1541, 1543, 1546, 1552, 1553, 1554, 1555, 1556, 1559, 1560, 1562, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1578, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1603, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1652, 1653, 1654, 1655, 1656, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1735, 1736, 1737, 1738, 1739, 1746, 1747, 1748, 1749, 1750, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1776, 1778, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1801, 1802, 1803, 1804, 1805, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1821, 1824, 1829, 1830, 1831, 1832, 1833, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1949, 1950, 1955, 1957, 1959, 1962, 1963, 1964, 1965, 1967, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1984, 1986, 1989, 2002, 2003, 2005, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2026, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2063, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2128, 2157, 2158], "function": [23, 29, 30, 31, 32, 33, 40, 45, 48, 49, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 159, 163, 168, 169, 171, 172, 173, 174, 185, 186, 188, 189, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 277, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 325, 327, 328, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 382, 384, 385, 388, 390, 391, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 406, 408, 409, 410, 411, 412, 414, 415, 416, 417, 420, 422, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 851, 852, 853, 854, 857, 858, 859, 860, 861, 862, 863, 864, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 879, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 915, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 985, 987, 988, 989, 990, 991, 992, 995, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1381, 1382, 1385, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1505, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1730, 1731, 1732, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1778, 1779, 1780, 1781, 1784, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1821, 1824, 1825, 1828, 1829, 1830, 1832, 1833, 1834, 1835, 1838, 1839, 1843, 1844, 1845, 1847, 1848, 1849, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2131, 2133, 2137, 2138, 2139, 2140, 2141, 2146, 2147, 2149, 2150, 2151, 2152, 2155, 2159, 2163, 2164, 2194, 2197, 2198, 2199, 2200, 2210, 2223, 2224, 2225, 2226, 2228, 2237, 2239, 2240, 2241, 2245, 2246, 2248, 2251, 2252, 2253, 2254, 2255, 2258, 2259, 2260, 2261, 2263, 2264, 2266, 2267, 2268, 2269, 2282, 2283, 2284, 2286, 2287, 2288], "py": [23, 29, 31, 47, 48, 49, 149, 151, 153, 154, 155, 157, 158, 159, 160, 161, 164, 165, 166, 167, 170, 172, 174, 175], "noqa": [23, 29, 31, 67, 68, 78, 79, 115, 116, 165, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 385, 388, 396, 399, 429, 432, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 627, 630, 632, 635, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 688, 689, 690, 692, 695, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 917, 920, 1176, 1178, 1417, 1611, 1714, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1733, 1735, 1738, 1740, 1741, 1744, 1746, 1747, 1749, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1804, 1806, 1809, 1811, 1815, 1816, 1820, 1821, 1824, 1839, 1843, 1844, 1845, 1847, 1848, 1870, 1876, 1879, 1886, 1889, 1891, 1894, 1896, 1899, 1906, 1909, 1911, 1914, 1921, 1924, 1926, 1929, 1946, 1950, 2007, 2008, 2011, 2013, 2016, 2023, 2026, 2028, 2032, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2054, 2055, 2058, 2065, 2068, 2070, 2085, 2088, 2093, 2096, 2097, 2100, 2102, 2105, 2106, 2110, 2111, 2115, 2116, 2117, 2120, 2122, 2125], "The": [23, 29, 31, 39, 40, 42, 43, 44, 45, 47, 48, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 173, 174, 175, 186, 188, 199, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 225, 227, 228, 230, 232, 233, 235, 237, 238, 240, 241, 242, 243, 245, 246, 247, 255, 257, 258, 279, 282, 285, 287, 289, 295, 296, 297, 298, 299, 310, 311, 312, 313, 314, 318, 320, 322, 323, 325, 327, 328, 330, 332, 336, 337, 339, 341, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 364, 366, 368, 370, 371, 372, 374, 375, 376, 378, 379, 384, 390, 391, 393, 394, 396, 398, 400, 402, 408, 409, 410, 411, 412, 414, 415, 416, 422, 425, 427, 429, 431, 433, 434, 436, 437, 438, 439, 445, 446, 447, 448, 449, 450, 451, 452, 458, 459, 460, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 477, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 701, 702, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 736, 737, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 776, 777, 778, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805, 807, 814, 815, 816, 817, 818, 824, 826, 828, 829, 831, 833, 834, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 858, 859, 860, 861, 863, 864, 866, 868, 869, 870, 871, 872, 874, 876, 886, 887, 888, 890, 891, 893, 895, 896, 897, 898, 899, 900, 901, 902, 903, 907, 908, 909, 910, 911, 913, 915, 917, 920, 922, 923, 924, 925, 926, 927, 928, 930, 933, 937, 938, 941, 953, 954, 959, 961, 962, 968, 970, 973, 974, 975, 976, 978, 979, 980, 981, 982, 985, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1012, 1015, 1017, 1018, 1020, 1021, 1022, 1023, 1025, 1027, 1028, 1030, 1047, 1048, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1077, 1081, 1082, 1085, 1087, 1089, 1090, 1091, 1097, 1098, 1099, 1100, 1101, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1121, 1122, 1123, 1124, 1125, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1176, 1178, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1204, 1206, 1208, 1209, 1210, 1213, 1215, 1217, 1218, 1219, 1220, 1221, 1223, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1297, 1305, 1306, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1318, 1321, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1338, 1339, 1340, 1341, 1342, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1368, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1381, 1382, 1385, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1396, 1397, 1401, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1420, 1422, 1423, 1425, 1427, 1428, 1429, 1430, 1432, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1443, 1445, 1447, 1448, 1449, 1450, 1451, 1453, 1455, 1456, 1458, 1460, 1461, 1463, 1465, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1493, 1495, 1497, 1498, 1501, 1502, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1527, 1528, 1529, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1544, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1559, 1560, 1562, 1565, 1568, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1583, 1584, 1585, 1588, 1589, 1590, 1592, 1594, 1595, 1597, 1606, 1607, 1609, 1610, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1642, 1643, 1644, 1645, 1646, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1735, 1736, 1738, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1765, 1766, 1768, 1769, 1770, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1789, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1804, 1805, 1806, 1809, 1811, 1815, 1816, 1820, 1821, 1824, 1829, 1830, 1831, 1832, 1833, 1834, 1838, 1839, 1843, 1844, 1845, 1847, 1848, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1873, 1875, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1910, 1911, 1913, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1925, 1926, 1928, 1930, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1944, 1946, 1947, 1949, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1959, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1988, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1998, 2000, 2002, 2004, 2006, 2007, 2008, 2009, 2011, 2013, 2014, 2016, 2018, 2020, 2022, 2023, 2026, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2063, 2065, 2068, 2070, 2071, 2073, 2075, 2076, 2078, 2080, 2081, 2082, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2134, 2135, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2152, 2153, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2187, 2188, 2189, 2194, 2197, 2198, 2199, 2205, 2225, 2226, 2237, 2240, 2241, 2245, 2246, 2255, 2262, 2266, 2267, 2268, 2269, 2282, 2285, 2286], "set_backend": [23, 29, 31, 34, 35, 36, 37, 38, 69, 117, 149, 151, 154, 161, 162, 170, 172, 175, 341, 393, 394, 446, 450, 451, 468, 469, 819, 820, 821, 822, 823, 905, 906, 953, 955, 1119, 2128], "ha": [23, 29, 31, 40, 41, 42, 47, 49, 61, 62, 69, 78, 79, 82, 83, 90, 91, 94, 95, 103, 104, 111, 112, 117, 118, 119, 126, 127, 130, 131, 138, 139, 142, 143, 149, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 186, 187, 255, 300, 301, 303, 408, 411, 412, 416, 446, 452, 481, 482, 485, 637, 640, 727, 730, 747, 750, 886, 887, 953, 976, 1113, 1114, 1115, 1116, 1117, 1149, 1161, 1200, 1220, 1321, 1324, 1360, 1362, 1364, 1502, 1504, 1506, 1612, 1641, 1649, 1714, 1761, 1764, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1829, 1830, 1831, 1832, 1833, 1870, 1886, 1887, 1888, 1889, 1890, 1921, 1924, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2053, 2070, 2071, 2074, 2076, 2079, 2089, 2092, 2097, 2100, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2113, 2114, 2115, 2136, 2139, 2140, 2142, 2143, 2146, 2157, 2158, 2237, 2241, 2245, 2246, 2266, 2269], "over": [23, 29, 40, 42, 48, 49, 69, 78, 79, 94, 95, 96, 97, 98, 99, 111, 112, 117, 126, 127, 142, 143, 144, 145, 146, 147, 151, 156, 157, 163, 165, 170, 172, 187, 408, 411, 412, 416, 844, 846, 848, 953, 967, 974, 1012, 1013, 1015, 1057, 1058, 1059, 1060, 1107, 1108, 1110, 1171, 1172, 1173, 1174, 1175, 1200, 1208, 1216, 1217, 1220, 1234, 1236, 1238, 1275, 1278, 1282, 1283, 1290, 1291, 1343, 1344, 1360, 1361, 1362, 1363, 1364, 1417, 1611, 1714, 1766, 1767, 1768, 1769, 1770, 1821, 1824, 1839, 1843, 1844, 1845, 1847, 1848, 1975, 1976, 1979, 1980, 1996, 1999, 2070, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2138, 2140, 2183, 2184], "ani": [23, 29, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 54, 55, 56, 57, 58, 61, 62, 65, 66, 67, 68, 69, 70, 71, 78, 79, 96, 97, 98, 99, 100, 105, 106, 113, 114, 115, 116, 117, 118, 119, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 186, 187, 205, 248, 249, 255, 257, 258, 260, 261, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 296, 298, 300, 303, 305, 308, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 369, 403, 406, 417, 420, 428, 446, 472, 473, 474, 475, 476, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 583, 584, 585, 586, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 688, 689, 690, 692, 695, 707, 710, 712, 715, 717, 718, 719, 720, 721, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 839, 842, 844, 847, 849, 852, 896, 897, 902, 903, 907, 910, 917, 920, 922, 925, 932, 943, 946, 953, 959, 997, 1000, 1149, 1150, 1151, 1152, 1154, 1156, 1162, 1163, 1164, 1176, 1178, 1179, 1200, 1218, 1229, 1232, 1234, 1237, 1239, 1242, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1294, 1297, 1353, 1356, 1357, 1378, 1381, 1382, 1385, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1476, 1479, 1493, 1496, 1502, 1504, 1505, 1506, 1508, 1511, 1524, 1527, 1534, 1536, 1573, 1576, 1594, 1598, 1599, 1611, 1612, 1642, 1646, 1650, 1652, 1655, 1662, 1665, 1667, 1670, 1672, 1675, 1684, 1687, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1712, 1714, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1733, 1735, 1738, 1740, 1741, 1744, 1746, 1747, 1749, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1804, 1806, 1809, 1811, 1815, 1816, 1820, 1821, 1824, 1839, 1843, 1844, 1848, 1849, 1853, 1854, 1870, 1871, 1874, 1876, 1879, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1899, 1901, 1904, 1906, 1909, 1911, 1914, 1916, 1919, 1921, 1924, 1926, 1929, 1931, 1935, 1936, 1940, 1941, 1945, 1946, 1950, 1951, 1952, 1953, 1954, 1955, 1959, 1962, 1963, 1965, 1966, 1973, 1975, 1976, 1979, 1980, 1996, 1999, 2007, 2008, 2011, 2013, 2016, 2023, 2026, 2028, 2032, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2054, 2055, 2058, 2065, 2068, 2070, 2085, 2088, 2089, 2092, 2093, 2096, 2097, 2100, 2102, 2105, 2106, 2110, 2111, 2115, 2116, 2117, 2120, 2126, 2127, 2128, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2149, 2152, 2159, 2169, 2181, 2183, 2185, 2191, 2194, 2198, 2228, 2255, 2262], "pass": [23, 29, 47, 49, 69, 98, 99, 100, 103, 104, 105, 106, 117, 146, 147, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 187, 188, 189, 199, 341, 370, 428, 446, 447, 450, 471, 481, 517, 520, 854, 855, 856, 857, 858, 953, 973, 1012, 1015, 1200, 1208, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1315, 1316, 1353, 1356, 1357, 1417, 1518, 1521, 1951, 1952, 1953, 2138, 2152, 2153, 2155, 2156, 2181, 2182, 2185, 2189, 2191, 2192, 2194, 2195, 2201, 2205, 2224, 2226, 2282, 2284, 2286], "jax": [23, 29, 31, 32, 34, 41, 42, 46, 47, 48, 49, 69, 149, 151, 154, 155, 158, 160, 163, 164, 165, 166, 167, 168, 170, 172, 175, 187, 953, 967, 1057, 1058, 1060, 1417, 1611, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2128, 2141, 2143, 2146, 2147], "fn_name_from_version_specific_fn_nam": 23, "name": [23, 30, 33, 45, 47, 48, 49, 51, 54, 55, 69, 78, 79, 90, 91, 126, 127, 138, 139, 151, 152, 153, 156, 157, 158, 159, 160, 164, 165, 166, 167, 168, 170, 173, 175, 205, 206, 212, 1200, 1221, 1370, 1372, 1374, 1417, 1423, 1424, 1714, 1740, 1741, 1744, 1796, 1797, 1798, 1799, 1800, 1801, 1804, 1811, 1815, 1834, 1838, 2033, 2034, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2140, 2205, 2225, 2226, 2282, 2283, 2287], "specif": [23, 30, 33, 40, 47, 48, 49, 65, 66, 70, 71, 113, 114, 118, 119, 149, 150, 151, 152, 154, 155, 158, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 186, 187, 341, 429, 432, 446, 469, 472, 473, 474, 475, 476, 481, 682, 685, 687, 690, 1417, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1544, 1714, 1741, 1744, 1746, 1749, 1821, 1824, 1870, 1926, 1929, 1951, 1952, 1953, 1954, 1980, 1981, 1984, 2054, 2060, 2063, 2070, 2085, 2088, 2089, 2092, 2093, 2096, 2102, 2105, 2127, 2131, 2133, 2136, 2138, 2139, 2141, 2142, 2143, 2147, 2181, 2182], "provid": [23, 30, 33, 40, 48, 49, 61, 62, 69, 70, 71, 72, 73, 82, 83, 88, 89, 94, 95, 96, 97, 103, 104, 109, 110, 117, 118, 119, 130, 131, 136, 137, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 168, 172, 174, 186, 187, 205, 206, 212, 255, 300, 301, 303, 310, 311, 312, 313, 314, 341, 371, 372, 374, 375, 376, 378, 379, 402, 429, 432, 445, 446, 452, 933, 934, 935, 937, 953, 979, 1077, 1078, 1079, 1080, 1081, 1200, 1212, 1222, 1375, 1377, 1396, 1397, 1398, 1399, 1400, 1417, 1435, 1448, 1450, 1552, 1553, 1554, 1555, 1556, 1624, 1625, 1714, 1771, 1774, 1839, 1843, 1870, 1886, 1889, 1891, 1892, 1893, 1894, 1895, 1926, 1929, 2007, 2008, 2009, 2010, 2011, 2012, 2070, 2102, 2103, 2104, 2105, 2111, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2147, 2152, 2154, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2178, 2179, 2180, 2185, 2186, 2187, 2188, 2189, 2190], "origin": [23, 30, 33, 42, 47, 48, 49, 51, 54, 55, 69, 78, 79, 82, 83, 94, 95, 100, 103, 104, 105, 106, 117, 126, 127, 130, 131, 142, 143, 151, 153, 154, 162, 163, 164, 165, 170, 481, 517, 520, 1200, 1215, 1250, 1251, 1252, 1253, 1254, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1310, 1311, 1312, 1313, 1314, 1353, 1356, 1357, 1358, 1714, 1766, 1767, 1768, 1769, 1770, 1870, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 2070, 2076, 2077, 2078, 2079, 2080, 2140, 2141, 2205, 2225, 2226, 2255, 2262], "point": [23, 30, 33, 42, 47, 48, 49, 63, 64, 67, 68, 69, 78, 79, 86, 87, 94, 95, 111, 112, 115, 116, 117, 126, 127, 134, 135, 142, 143, 149, 150, 153, 156, 157, 160, 163, 164, 166, 167, 168, 170, 172, 173, 186, 249, 255, 257, 258, 260, 262, 270, 276, 277, 284, 315, 316, 333, 335, 341, 349, 350, 351, 352, 353, 385, 386, 388, 401, 412, 415, 429, 432, 481, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 552, 555, 557, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 577, 580, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 605, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 727, 730, 742, 745, 747, 750, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 776, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 796, 797, 801, 854, 855, 856, 857, 859, 862, 864, 868, 896, 897, 899, 927, 928, 929, 930, 931, 932, 953, 975, 978, 979, 997, 1000, 1047, 1049, 1068, 1069, 1070, 1071, 1149, 1156, 1285, 1288, 1300, 1301, 1302, 1303, 1304, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1325, 1338, 1339, 1340, 1341, 1342, 1353, 1358, 1375, 1376, 1377, 1714, 1715, 1716, 1717, 1718, 1719, 1725, 1728, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1756, 1757, 1758, 1759, 1760, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1829, 1830, 1831, 1832, 1844, 1845, 1847, 1848, 1980, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2054, 2060, 2063, 2070, 2071, 2074, 2076, 2079, 2085, 2088, 2089, 2090, 2091, 2092, 2093, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2146], "get_backend": [23, 151, 161], "specifi": [23, 31, 49, 61, 62, 63, 64, 69, 70, 71, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 101, 102, 103, 104, 111, 112, 117, 118, 119, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 142, 143, 144, 145, 148, 154, 155, 160, 161, 163, 164, 165, 166, 168, 170, 173, 174, 213, 215, 217, 255, 257, 258, 270, 284, 290, 293, 315, 316, 323, 325, 327, 328, 330, 332, 333, 335, 341, 349, 350, 351, 352, 353, 359, 362, 446, 447, 461, 465, 467, 470, 471, 472, 476, 481, 742, 745, 814, 816, 818, 859, 862, 869, 870, 871, 872, 896, 897, 913, 915, 953, 974, 997, 1000, 1012, 1013, 1015, 1121, 1122, 1123, 1125, 1149, 1155, 1193, 1194, 1200, 1208, 1219, 1244, 1247, 1265, 1268, 1275, 1276, 1277, 1278, 1279, 1310, 1311, 1312, 1313, 1314, 1315, 1317, 1326, 1329, 1353, 1355, 1356, 1358, 1417, 1423, 1476, 1477, 1478, 1479, 1480, 1481, 1484, 1485, 1489, 1502, 1504, 1505, 1506, 1611, 1650, 1704, 1707, 1714, 1730, 1733, 1735, 1736, 1737, 1738, 1739, 1746, 1749, 1766, 1767, 1768, 1769, 1770, 1821, 1824, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1843, 1844, 1845, 1847, 1848, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1874, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1889, 1891, 1892, 1893, 1894, 1895, 1911, 1912, 1913, 1914, 1915, 1921, 1924, 1926, 1927, 1929, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1949, 1950, 1955, 1961, 1963, 1964, 1971, 1972, 1973, 1974, 1980, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2007, 2008, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2023, 2024, 2025, 2026, 2027, 2033, 2034, 2036, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2054, 2055, 2058, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2084, 2097, 2100, 2106, 2110, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2146, 2157, 2158, 2266, 2268], "isn": [23, 31, 49, 118, 119, 162, 173, 187, 1417, 1578, 1579, 1582, 2142], "t": [23, 31, 41, 42, 44, 45, 47, 48, 49, 51, 54, 55, 69, 76, 77, 98, 99, 117, 118, 119, 124, 125, 146, 147, 148, 150, 151, 152, 153, 154, 156, 162, 163, 166, 167, 168, 170, 172, 173, 174, 175, 187, 873, 953, 967, 1057, 1058, 1059, 1060, 1062, 1063, 1417, 1578, 1579, 1582, 1612, 1622, 1650, 1694, 1697, 1699, 1700, 1701, 1702, 1955, 1964, 2138, 2140, 2142], "associ": [23, 31, 49, 78, 79, 126, 127, 154, 161, 162, 164, 165, 166, 187, 481, 497, 500, 1714, 1776, 1777, 1778, 1779, 1780, 1791, 1794, 1849, 1853, 2205, 2223], "option": [23, 31, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 175, 187, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 255, 257, 258, 260, 261, 262, 267, 268, 269, 270, 271, 272, 274, 276, 277, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 305, 306, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 325, 327, 328, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 363, 364, 366, 368, 370, 371, 372, 374, 375, 376, 378, 379, 396, 398, 400, 402, 408, 411, 412, 416, 429, 431, 433, 445, 446, 452, 467, 469, 470, 471, 472, 473, 474, 475, 476, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805, 806, 807, 808, 809, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 826, 828, 829, 831, 833, 834, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 881, 882, 883, 884, 885, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 913, 914, 915, 916, 917, 920, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 937, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 985, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1081, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1207, 1208, 1209, 1210, 1211, 1214, 1215, 1218, 1219, 1220, 1221, 1224, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1297, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1381, 1382, 1385, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1420, 1422, 1423, 1425, 1427, 1429, 1430, 1432, 1434, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1447, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1469, 1471, 1473, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1493, 1495, 1497, 1508, 1510, 1512, 1513, 1515, 1517, 1518, 1520, 1522, 1524, 1526, 1528, 1529, 1530, 1531, 1532, 1533, 1537, 1539, 1541, 1544, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1581, 1584, 1585, 1589, 1590, 1592, 1594, 1595, 1597, 1599, 1606, 1607, 1609, 1610, 1611, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1624, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1642, 1643, 1644, 1645, 1646, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1730, 1733, 1735, 1736, 1737, 1738, 1739, 1746, 1747, 1748, 1749, 1750, 1751, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1809, 1816, 1820, 1821, 1824, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1843, 1844, 1845, 1847, 1848, 1849, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1944, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1962, 1963, 1966, 1967, 1968, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2039, 2040, 2042, 2044, 2045, 2047, 2049, 2053, 2054, 2055, 2057, 2058, 2059, 2060, 2063, 2065, 2068, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2140, 2146, 2152, 2153, 2159, 2160, 2163, 2185, 2186, 2187, 2189, 2191, 2192, 2205, 2223, 2224, 2225, 2226, 2251, 2253, 2282, 2287], "str": [23, 31, 56, 57, 58, 61, 62, 69, 70, 71, 76, 77, 78, 79, 82, 83, 94, 95, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 154, 155, 158, 159, 164, 167, 170, 175, 205, 206, 207, 209, 211, 212, 213, 215, 217, 218, 220, 222, 223, 225, 227, 228, 230, 232, 233, 235, 237, 238, 240, 242, 243, 245, 247, 255, 285, 287, 289, 300, 301, 303, 310, 312, 314, 318, 320, 322, 336, 337, 339, 341, 347, 354, 356, 358, 364, 366, 368, 370, 371, 372, 374, 375, 376, 384, 385, 388, 396, 398, 399, 400, 401, 402, 403, 406, 408, 409, 410, 411, 412, 414, 415, 416, 417, 420, 422, 425, 429, 431, 433, 434, 435, 436, 437, 438, 445, 446, 447, 448, 449, 471, 472, 473, 475, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 669, 671, 672, 674, 676, 677, 679, 681, 682, 684, 686, 687, 689, 691, 692, 694, 696, 697, 699, 701, 702, 704, 706, 707, 709, 711, 712, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 778, 780, 782, 783, 785, 787, 788, 790, 792, 793, 795, 797, 798, 800, 814, 816, 818, 824, 826, 828, 829, 831, 833, 834, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 858, 859, 861, 863, 864, 866, 868, 891, 893, 895, 913, 914, 915, 916, 922, 926, 932, 933, 937, 992, 996, 997, 999, 1001, 1002, 1003, 1004, 1005, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1021, 1077, 1081, 1087, 1089, 1091, 1097, 1098, 1099, 1100, 1101, 1107, 1109, 1110, 1111, 1121, 1123, 1125, 1144, 1146, 1148, 1149, 1150, 1151, 1152, 1155, 1156, 1158, 1159, 1162, 1163, 1164, 1195, 1197, 1199, 1200, 1208, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1285, 1287, 1289, 1290, 1291, 1305, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1321, 1323, 1325, 1326, 1328, 1330, 1338, 1340, 1342, 1353, 1358, 1360, 1361, 1363, 1365, 1366, 1368, 1370, 1371, 1373, 1396, 1397, 1406, 1407, 1409, 1411, 1412, 1414, 1417, 1418, 1420, 1422, 1423, 1425, 1427, 1429, 1430, 1432, 1434, 1436, 1438, 1440, 1441, 1443, 1445, 1447, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1469, 1471, 1473, 1476, 1478, 1480, 1481, 1483, 1485, 1488, 1493, 1495, 1497, 1508, 1510, 1512, 1513, 1515, 1517, 1518, 1520, 1522, 1524, 1526, 1528, 1529, 1531, 1533, 1537, 1539, 1541, 1544, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1558, 1565, 1568, 1570, 1572, 1573, 1575, 1577, 1578, 1579, 1581, 1584, 1585, 1589, 1590, 1592, 1594, 1595, 1597, 1606, 1607, 1609, 1642, 1643, 1645, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1693, 1694, 1696, 1698, 1709, 1711, 1713, 1714, 1715, 1717, 1719, 1720, 1722, 1724, 1746, 1748, 1749, 1750, 1756, 1758, 1760, 1761, 1763, 1765, 1766, 1768, 1770, 1776, 1778, 1780, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1829, 1830, 1832, 1855, 1857, 1859, 1860, 1862, 1864, 1865, 1867, 1869, 1870, 1871, 1873, 1875, 1886, 1890, 1891, 1893, 1895, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1921, 1923, 1925, 1926, 1928, 1930, 1941, 1942, 1944, 1946, 1947, 1949, 1951, 1952, 1953, 1954, 1955, 1962, 1963, 1973, 1981, 1983, 1985, 1986, 1988, 1990, 1991, 1993, 1995, 1996, 1998, 2000, 2002, 2004, 2006, 2018, 2020, 2022, 2034, 2035, 2037, 2039, 2040, 2042, 2044, 2045, 2047, 2055, 2057, 2059, 2070, 2071, 2073, 2075, 2076, 2078, 2080, 2081, 2082, 2084, 2089, 2091, 2097, 2099, 2101, 2102, 2104, 2111, 2112, 2114, 2117, 2119, 2121, 2122, 2124, 2126, 2205, 2223, 2224, 2225, 2226, 2228, 2230, 2251, 2253, 2270, 2271, 2282, 2283, 2284, 2285, 2286, 2287], "we": [23, 31, 32, 33, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 69, 98, 99, 117, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 170, 171, 172, 173, 174, 175, 186, 187, 873, 1062, 1063, 1200, 1221, 1370, 1371, 1372, 1373, 1374, 1417, 1451, 1454, 1578, 1582, 1612, 1622, 1623, 1628, 1648, 2127, 2128, 2136, 2140, 2141, 2145, 2146, 2157, 2158, 2181, 2182], "want": [23, 31, 41, 43, 47, 48, 49, 98, 99, 146, 147, 153, 158, 162, 163, 166, 168, 173, 174, 175, 187, 992, 995, 1200, 1207, 2157, 2158, 2181, 2182], "retriev": [23, 31, 49, 164, 1417, 1423], "e": [23, 31, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 61, 62, 69, 72, 73, 78, 79, 86, 87, 92, 93, 94, 95, 117, 126, 127, 134, 135, 140, 141, 142, 143, 148, 149, 152, 158, 164, 166, 170, 173, 187, 249, 255, 267, 268, 269, 295, 296, 298, 300, 301, 303, 341, 348, 429, 432, 446, 449, 481, 482, 485, 517, 520, 537, 540, 547, 550, 557, 560, 592, 595, 602, 605, 607, 610, 622, 625, 652, 655, 662, 665, 697, 700, 702, 705, 727, 730, 742, 745, 805, 806, 839, 841, 842, 843, 844, 847, 854, 855, 856, 857, 858, 859, 862, 896, 897, 902, 903, 913, 915, 927, 928, 930, 997, 1000, 1149, 1150, 1151, 1155, 1162, 1163, 1188, 1191, 1229, 1231, 1232, 1233, 1234, 1237, 1260, 1262, 1300, 1301, 1303, 1315, 1316, 1317, 1318, 1320, 1378, 1381, 1382, 1385, 1624, 1625, 1714, 1720, 1723, 1746, 1750, 1761, 1764, 1766, 1769, 1776, 1777, 1778, 1779, 1780, 1791, 1793, 1794, 1795, 1806, 1809, 1811, 1815, 1844, 1845, 1847, 1848, 1870, 1886, 1889, 1926, 1929, 1955, 1959, 1963, 1964, 1965, 1973, 1974, 1980, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2065, 2068, 2070, 2071, 2074, 2076, 2079, 2085, 2088, 2089, 2090, 2092, 2093, 2096, 2097, 2100, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2113, 2114, 2115, 2127, 2136, 2152, 2154], "default": [23, 31, 47, 48, 49, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 154, 155, 156, 157, 158, 160, 161, 162, 164, 166, 168, 170, 174, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 255, 257, 258, 260, 261, 262, 267, 268, 269, 270, 271, 272, 274, 276, 277, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 325, 327, 328, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 363, 364, 366, 368, 371, 372, 374, 375, 376, 378, 379, 380, 382, 390, 391, 393, 394, 396, 398, 400, 401, 408, 409, 411, 412, 414, 416, 427, 429, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 452, 453, 454, 455, 456, 459, 460, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805, 806, 807, 808, 809, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 826, 828, 829, 831, 833, 834, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 881, 882, 883, 884, 885, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 913, 914, 915, 916, 917, 920, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 937, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 985, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1081, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1142, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1207, 1208, 1209, 1210, 1211, 1214, 1215, 1218, 1219, 1220, 1221, 1224, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1297, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1381, 1382, 1385, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1427, 1429, 1430, 1432, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1512, 1513, 1515, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1537, 1538, 1539, 1540, 1541, 1543, 1544, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1562, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1581, 1582, 1584, 1585, 1589, 1590, 1592, 1593, 1594, 1595, 1597, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1730, 1733, 1735, 1736, 1737, 1738, 1739, 1746, 1747, 1748, 1749, 1750, 1751, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1821, 1824, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1843, 1844, 1845, 1847, 1848, 1849, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2063, 2065, 2068, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2140, 2152, 2153, 2156, 2157, 2158, 2159, 2160, 2163, 2164, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2205, 2223, 2224, 2225, 2226, 2237, 2241, 2245, 2246, 2251, 2253, 2266, 2267, 2268, 2269, 2282, 2285, 2286, 2287], "torch": [23, 31, 37, 38, 48, 49, 61, 62, 78, 79, 126, 127, 149, 150, 151, 153, 154, 155, 158, 160, 161, 163, 164, 165, 166, 167, 168, 170, 172, 173, 175, 187, 255, 267, 268, 269, 341, 393, 394, 446, 450, 451, 468, 469, 481, 747, 750, 1417, 1578, 1582, 1714, 1811, 1812, 1813, 1814, 1815, 2127, 2128, 2146, 2152, 2153, 2205, 2225], "tensorflow": [23, 31, 36, 38, 41, 42, 46, 47, 48, 49, 69, 70, 71, 117, 118, 119, 149, 153, 154, 155, 160, 163, 164, 165, 166, 167, 168, 170, 175, 187, 446, 450, 819, 820, 821, 822, 823, 896, 902, 903, 953, 955, 1378, 1381, 1382, 1385, 1578, 1579, 1580, 1581, 2127, 2128, 2138, 2141, 2143, 2144, 2146, 2147, 2152, 2154, 2194, 2195, 2201, 2282, 2285, 2286], "either": [23, 31, 38, 45, 47, 48, 49, 67, 68, 69, 70, 71, 103, 104, 115, 116, 117, 118, 119, 151, 152, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 168, 170, 173, 187, 255, 279, 282, 481, 497, 500, 517, 520, 627, 628, 629, 630, 631, 652, 655, 657, 660, 667, 670, 672, 675, 742, 745, 752, 755, 757, 760, 782, 786, 864, 865, 866, 867, 868, 907, 908, 909, 910, 911, 953, 956, 978, 1107, 1108, 1109, 1110, 1111, 1149, 1154, 1290, 1291, 1338, 1341, 1417, 1448, 1449, 1450, 1502, 1506, 1524, 1527, 1543, 1544, 1599, 1650, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1683, 1684, 1687, 1714, 1761, 1764, 1801, 1804, 1951, 1952, 1953, 1954, 2070, 2071, 2074, 2076, 2079, 2097, 2100, 2106, 2110, 2140, 2152, 2154, 2157, 2158, 2169, 2180, 2181, 2182, 2255, 2262], "doesn": [23, 31, 45, 48, 151, 152, 153, 154, 156, 166, 168, 170, 187, 2138], "matter": [23, 31, 40, 156], "been": [23, 31, 47, 49, 70, 71, 86, 87, 118, 119, 134, 135, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 166, 170, 172, 186, 187, 446, 452, 481, 747, 750, 1417, 1451, 1452, 1454, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1980, 1981, 1982, 1983, 1984, 1985, 2127, 2140, 2147], "ivy_np": [23, 31, 166], "us": [23, 31, 38, 42, 43, 44, 46, 47, 49, 52, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 174, 175, 186, 187, 207, 208, 209, 211, 249, 255, 295, 296, 297, 298, 299, 310, 311, 341, 349, 350, 351, 352, 384, 390, 391, 393, 394, 408, 411, 412, 416, 427, 428, 446, 448, 459, 460, 462, 466, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481, 502, 503, 542, 544, 652, 653, 654, 656, 657, 658, 659, 661, 672, 674, 676, 677, 678, 679, 681, 682, 684, 686, 687, 688, 689, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 747, 748, 767, 768, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 896, 897, 898, 899, 900, 901, 913, 915, 927, 928, 929, 930, 931, 932, 953, 967, 973, 974, 979, 982, 985, 997, 1000, 1012, 1013, 1014, 1015, 1016, 1047, 1048, 1049, 1057, 1058, 1059, 1060, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1149, 1155, 1156, 1157, 1161, 1171, 1174, 1195, 1196, 1198, 1200, 1208, 1211, 1218, 1260, 1261, 1262, 1263, 1264, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1290, 1291, 1293, 1294, 1297, 1300, 1301, 1302, 1303, 1304, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1343, 1344, 1353, 1357, 1358, 1359, 1375, 1377, 1386, 1387, 1388, 1389, 1390, 1417, 1435, 1474, 1475, 1490, 1491, 1508, 1510, 1513, 1515, 1543, 1559, 1560, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1612, 1614, 1617, 1618, 1620, 1621, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1650, 1694, 1697, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1735, 1736, 1737, 1738, 1739, 1816, 1820, 1844, 1845, 1847, 1848, 1854, 1855, 1858, 1870, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1931, 1933, 1951, 1952, 1953, 1954, 1955, 1956, 1958, 1959, 1965, 1966, 1967, 1969, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2013, 2014, 2015, 2018, 2019, 2020, 2022, 2023, 2026, 2033, 2034, 2038, 2044, 2048, 2070, 2081, 2082, 2084, 2127, 2128, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2152, 2154, 2157, 2158, 2159, 2164, 2167, 2169, 2177, 2180, 2181, 2182, 2183, 2184, 2185, 2187, 2188, 2228, 2229, 2237, 2240, 2241, 2245, 2246, 2251, 2252, 2255, 2258, 2259, 2260, 2261, 2262, 2266, 2267, 2268, 2269, 2282, 2283, 2287, 2288], "ivy_jax": [23, 31], "dynam": [23, 32, 148, 154, 155, 163, 164, 170, 2140, 2144], "Will": [23, 32, 187, 2157, 2158], "also": [23, 32, 40, 41, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 186, 187, 207, 208, 209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 247, 255, 257, 258, 260, 261, 262, 267, 268, 270, 271, 272, 274, 276, 277, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 310, 311, 312, 314, 315, 316, 318, 319, 320, 321, 322, 323, 325, 327, 328, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 354, 355, 356, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 396, 397, 398, 400, 403, 406, 408, 409, 412, 414, 417, 420, 429, 430, 431, 433, 453, 454, 455, 457, 472, 473, 474, 475, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 809, 810, 811, 813, 814, 815, 816, 818, 819, 820, 821, 823, 824, 825, 826, 828, 829, 830, 831, 833, 834, 835, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 851, 852, 853, 854, 858, 859, 860, 861, 863, 864, 866, 868, 869, 870, 872, 874, 875, 877, 881, 882, 883, 885, 886, 887, 888, 890, 891, 892, 893, 895, 896, 897, 902, 903, 907, 908, 909, 910, 911, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 937, 938, 939, 940, 942, 943, 945, 946, 947, 948, 949, 950, 952, 953, 959, 976, 987, 988, 989, 991, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1050, 1051, 1052, 1054, 1064, 1065, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1106, 1107, 1109, 1111, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1143, 1144, 1146, 1148, 1149, 1150, 1151, 1152, 1154, 1156, 1162, 1163, 1164, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1192, 1195, 1197, 1199, 1200, 1215, 1218, 1224, 1225, 1226, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1241, 1242, 1243, 1244, 1245, 1246, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1262, 1264, 1265, 1266, 1267, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1279, 1285, 1286, 1287, 1289, 1294, 1295, 1296, 1297, 1298, 1300, 1302, 1304, 1310, 1311, 1312, 1314, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1330, 1333, 1334, 1335, 1337, 1338, 1339, 1340, 1342, 1343, 1344, 1353, 1357, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1375, 1376, 1378, 1381, 1382, 1385, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1406, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1417, 1418, 1419, 1420, 1422, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1434, 1436, 1437, 1438, 1440, 1441, 1442, 1443, 1445, 1448, 1449, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1469, 1470, 1471, 1473, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1485, 1493, 1494, 1495, 1496, 1497, 1502, 1503, 1505, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1528, 1529, 1530, 1531, 1533, 1534, 1535, 1537, 1538, 1539, 1541, 1547, 1548, 1549, 1551, 1552, 1554, 1556, 1568, 1569, 1570, 1572, 1573, 1574, 1575, 1577, 1578, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1589, 1590, 1591, 1592, 1594, 1595, 1596, 1597, 1598, 1606, 1607, 1608, 1609, 1612, 1614, 1615, 1616, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1629, 1630, 1633, 1634, 1637, 1638, 1642, 1643, 1644, 1645, 1646, 1650, 1652, 1653, 1654, 1655, 1656, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1681, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1730, 1731, 1732, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1778, 1779, 1780, 1781, 1784, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1821, 1824, 1829, 1830, 1832, 1834, 1835, 1839, 1843, 1844, 1845, 1847, 1848, 1849, 1853, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1864, 1865, 1866, 1867, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1966, 1967, 1968, 1975, 1976, 1977, 1978, 1979, 1981, 1982, 1983, 1985, 1986, 1987, 1988, 1990, 1991, 1992, 1993, 1995, 1996, 1997, 1998, 2000, 2002, 2003, 2004, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2075, 2076, 2077, 2078, 2080, 2081, 2082, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2136, 2137, 2138, 2139, 2140, 2141, 2143, 2145, 2146, 2147, 2159, 2162, 2164, 2169, 2179, 2237, 2245, 2246], "convert": [23, 32, 42, 47, 56, 57, 58, 59, 60, 61, 62, 67, 68, 107, 108, 115, 116, 150, 162, 164, 166, 170, 187, 188, 199, 201, 202, 255, 260, 261, 262, 305, 308, 341, 347, 348, 446, 449, 450, 451, 452, 466, 477, 480, 481, 572, 573, 574, 575, 576, 732, 733, 734, 735, 736, 824, 827, 829, 832, 834, 837, 1200, 1201, 1202, 1203, 1353, 1359, 1386, 1390, 1417, 1557, 1583, 1588, 1589, 1593, 1594, 1598, 1600, 1714, 1849, 1853, 1955, 1957, 1968, 1969, 2127, 2138, 2139, 2146, 2153, 2154, 2155, 2156, 2205, 2209], "contain": [23, 32, 40, 44, 45, 47, 48, 51, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 78, 79, 80, 81, 82, 83, 88, 89, 90, 91, 94, 95, 96, 97, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 156, 157, 160, 161, 162, 163, 166, 169, 170, 171, 174, 187, 205, 207, 210, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 243, 246, 255, 257, 258, 260, 262, 267, 269, 270, 271, 272, 274, 276, 277, 279, 280, 282, 284, 285, 288, 290, 293, 295, 296, 298, 300, 303, 305, 310, 311, 313, 315, 316, 318, 321, 323, 325, 327, 328, 330, 332, 333, 335, 336, 340, 341, 349, 352, 354, 355, 357, 359, 362, 364, 367, 371, 375, 380, 382, 385, 386, 388, 390, 393, 396, 397, 399, 403, 406, 408, 412, 417, 420, 422, 429, 432, 446, 453, 459, 460, 461, 465, 472, 481, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 608, 610, 612, 613, 615, 617, 618, 620, 622, 623, 625, 627, 628, 630, 632, 633, 635, 637, 638, 640, 642, 643, 645, 647, 648, 650, 652, 653, 655, 657, 658, 660, 662, 663, 665, 667, 668, 670, 672, 673, 675, 677, 678, 680, 682, 683, 685, 687, 688, 690, 692, 693, 695, 697, 698, 700, 702, 703, 705, 707, 708, 710, 712, 713, 715, 717, 718, 720, 722, 723, 725, 727, 728, 730, 732, 733, 735, 737, 738, 742, 743, 745, 747, 748, 750, 752, 753, 755, 757, 758, 760, 762, 763, 765, 767, 768, 770, 772, 773, 775, 777, 779, 781, 782, 784, 786, 787, 789, 791, 792, 794, 796, 797, 799, 801, 805, 806, 807, 808, 809, 814, 815, 819, 824, 829, 834, 839, 842, 844, 847, 849, 852, 854, 859, 864, 869, 871, 873, 874, 881, 886, 887, 891, 896, 897, 898, 899, 900, 901, 902, 903, 904, 907, 908, 910, 913, 917, 920, 922, 925, 927, 932, 933, 938, 943, 946, 948, 953, 959, 976, 978, 982, 987, 992, 997, 1000, 1002, 1003, 1007, 1012, 1013, 1015, 1017, 1022, 1027, 1032, 1037, 1042, 1050, 1055, 1056, 1057, 1062, 1063, 1064, 1066, 1068, 1070, 1072, 1077, 1082, 1087, 1088, 1092, 1097, 1098, 1102, 1107, 1113, 1121, 1122, 1126, 1127, 1129, 1131, 1133, 1135, 1137, 1139, 1144, 1149, 1150, 1151, 1152, 1154, 1156, 1162, 1163, 1164, 1166, 1171, 1176, 1178, 1179, 1183, 1188, 1189, 1191, 1193, 1194, 1195, 1200, 1208, 1218, 1219, 1221, 1224, 1229, 1232, 1234, 1237, 1239, 1242, 1244, 1250, 1255, 1260, 1265, 1270, 1271, 1273, 1275, 1276, 1285, 1286, 1294, 1297, 1300, 1305, 1308, 1310, 1321, 1322, 1324, 1326, 1329, 1333, 1338, 1339, 1341, 1353, 1357, 1360, 1365, 1369, 1370, 1374, 1378, 1381, 1382, 1385, 1386, 1392, 1395, 1396, 1401, 1406, 1408, 1411, 1413, 1417, 1418, 1421, 1423, 1424, 1425, 1430, 1436, 1439, 1441, 1444, 1451, 1454, 1456, 1459, 1461, 1464, 1466, 1468, 1469, 1476, 1479, 1481, 1484, 1492, 1493, 1496, 1502, 1503, 1505, 1508, 1511, 1513, 1516, 1518, 1524, 1529, 1534, 1535, 1536, 1537, 1547, 1548, 1552, 1555, 1561, 1562, 1568, 1569, 1571, 1573, 1578, 1582, 1584, 1587, 1589, 1593, 1594, 1598, 1602, 1606, 1611, 1612, 1614, 1617, 1618, 1621, 1624, 1627, 1629, 1632, 1633, 1637, 1640, 1642, 1646, 1650, 1652, 1655, 1657, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1684, 1687, 1689, 1692, 1694, 1697, 1699, 1704, 1707, 1709, 1712, 1714, 1715, 1716, 1718, 1720, 1721, 1723, 1725, 1728, 1730, 1733, 1735, 1736, 1738, 1740, 1741, 1744, 1746, 1747, 1749, 1751, 1754, 1756, 1757, 1759, 1761, 1762, 1764, 1766, 1769, 1771, 1774, 1776, 1777, 1779, 1781, 1782, 1784, 1786, 1789, 1791, 1792, 1794, 1796, 1797, 1799, 1801, 1802, 1804, 1806, 1809, 1811, 1815, 1816, 1820, 1821, 1824, 1825, 1829, 1831, 1833, 1834, 1836, 1839, 1843, 1844, 1848, 1849, 1853, 1854, 1855, 1856, 1858, 1860, 1861, 1863, 1865, 1866, 1868, 1870, 1871, 1872, 1874, 1876, 1877, 1879, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1897, 1899, 1901, 1904, 1906, 1909, 1911, 1914, 1916, 1919, 1921, 1924, 1926, 1929, 1931, 1935, 1936, 1940, 1941, 1945, 1946, 1950, 1951, 1952, 1953, 1954, 1955, 1959, 1963, 1964, 1965, 1969, 1973, 1974, 1975, 1976, 1979, 1980, 1981, 1984, 1986, 1991, 1996, 2002, 2005, 2007, 2008, 2009, 2011, 2013, 2014, 2016, 2018, 2021, 2023, 2024, 2026, 2028, 2032, 2033, 2034, 2038, 2039, 2041, 2043, 2044, 2046, 2048, 2049, 2053, 2054, 2055, 2058, 2060, 2065, 2068, 2070, 2071, 2074, 2076, 2077, 2079, 2081, 2084, 2085, 2086, 2088, 2089, 2090, 2092, 2093, 2094, 2096, 2097, 2098, 2100, 2102, 2103, 2105, 2106, 2110, 2111, 2113, 2115, 2116, 2117, 2118, 2120, 2122, 2123, 2125, 2127, 2128, 2140, 2141, 2146, 2157, 2158, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2178, 2179, 2180, 2181, 2182, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2194, 2195, 2201, 2205, 2207, 2210, 2223, 2225, 2226, 2237, 2241, 2272, 2275, 2282, 2286], "new": [23, 32, 40, 41, 42, 43, 45, 47, 48, 49, 51, 54, 55, 69, 70, 71, 72, 73, 82, 83, 84, 85, 103, 104, 109, 110, 117, 118, 119, 120, 121, 130, 131, 132, 133, 148, 150, 151, 152, 153, 154, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 169, 172, 175, 186, 255, 270, 279, 282, 284, 285, 288, 310, 312, 313, 314, 315, 316, 318, 321, 333, 335, 336, 340, 341, 439, 481, 522, 525, 712, 715, 722, 725, 737, 740, 814, 816, 818, 881, 882, 883, 884, 885, 953, 957, 974, 1121, 1122, 1123, 1125, 1200, 1215, 1250, 1253, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1353, 1357, 1417, 1451, 1452, 1454, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1469, 1470, 1471, 1472, 1473, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1489, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1559, 1565, 1568, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1589, 1593, 1612, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1870, 1886, 1887, 1888, 1889, 1890, 1906, 1907, 1908, 1909, 1910, 1926, 1929, 1955, 1961, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 2127, 2128, 2138, 2142, 2146, 2147, 2152, 2153, 2154, 2156, 2169, 2179, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190], "subsequ": [23, 32, 48, 150, 153, 154, 156, 160, 161, 163, 166, 168, 174, 2141], "call": [23, 32, 38, 41, 45, 49, 69, 100, 105, 106, 111, 112, 117, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 187, 188, 199, 408, 409, 412, 414, 446, 447, 448, 471, 1270, 1271, 1272, 1273, 1353, 1357, 1417, 1498, 1562, 1599, 1612, 1622, 1623, 1628, 1714, 1801, 1804, 1955, 1956, 1962, 1966, 1967, 2140, 2141, 2144, 2152, 2154, 2155, 2157, 2158, 2169, 2180, 2181, 2182, 2185, 2189, 2205, 2210, 2226], "nativ": [23, 32, 51, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 70, 71, 107, 108, 113, 114, 118, 119, 154, 158, 162, 163, 164, 165, 166, 170, 172, 173, 188, 199, 255, 305, 306, 308, 341, 347, 348, 370, 371, 372, 374, 375, 376, 378, 379, 428, 446, 450, 451, 452, 453, 454, 455, 456, 466, 477, 480, 804, 905, 906, 1119, 1346, 1348, 1417, 1518, 1519, 1521, 1524, 1527, 1537, 1538, 1539, 1540, 1541, 1546, 1588, 2127, 2134, 2135, 2138, 2147, 2152, 2153, 2156, 2205, 2210, 2224, 2226, 2282, 2284, 2286], "native_arrai": [23, 32, 38, 61, 62, 63, 64, 67, 68, 70, 71, 109, 110, 113, 114, 115, 116, 118, 119, 140, 141, 162, 165, 166, 205, 207, 210, 218, 221, 255, 285, 288, 300, 303, 310, 312, 313, 314, 318, 321, 336, 340, 341, 349, 352, 354, 355, 357, 359, 362, 364, 367, 380, 382, 396, 399, 417, 420, 446, 453, 455, 456, 457, 465, 472, 473, 475, 481, 527, 528, 547, 550, 552, 555, 572, 574, 575, 576, 577, 578, 580, 582, 583, 585, 607, 608, 610, 612, 615, 617, 620, 642, 645, 647, 648, 682, 684, 685, 707, 708, 710, 717, 718, 720, 732, 734, 735, 736, 742, 743, 744, 745, 746, 767, 769, 771, 869, 871, 1193, 1194, 1200, 1218, 1219, 1221, 1294, 1297, 1326, 1329, 1370, 1374, 1417, 1418, 1420, 1422, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1537, 1538, 1539, 1540, 1541, 1589, 1590, 1592, 1650, 1652, 1655, 1684, 1687, 1704, 1707, 1709, 1712, 1714, 1725, 1728, 1746, 1749, 1771, 1774, 1776, 1779, 1816, 1820, 1821, 1824, 1829, 1833, 1854, 1855, 1858, 1865, 1868, 1870, 1871, 1874, 1906, 1909, 1980, 1981, 1984, 2007, 2023, 2026, 2055, 2059, 2065, 2067, 2070, 2093, 2096, 2106, 2110, 2116, 2117, 2120, 2205, 2225, 2272, 2273, 2274, 2275, 2276, 2278, 2279, 2280, 2281], "1": [23, 32, 38, 41, 42, 45, 48, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 151, 152, 153, 154, 156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 187, 205, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 255, 257, 258, 259, 267, 269, 276, 277, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 300, 303, 310, 311, 312, 313, 314, 315, 316, 318, 321, 336, 340, 341, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 380, 381, 382, 384, 385, 387, 388, 389, 396, 397, 400, 412, 413, 414, 415, 416, 417, 420, 429, 430, 433, 446, 452, 453, 454, 455, 456, 457, 461, 464, 465, 467, 472, 473, 474, 475, 476, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 530, 531, 532, 533, 534, 535, 536, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 621, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 670, 672, 674, 675, 676, 682, 683, 684, 685, 686, 687, 689, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 750, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805, 806, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 833, 834, 835, 836, 837, 838, 839, 841, 842, 843, 844, 845, 846, 847, 848, 849, 851, 853, 854, 855, 856, 857, 858, 859, 862, 864, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 881, 882, 883, 884, 885, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 904, 907, 908, 909, 910, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 969, 970, 972, 973, 974, 975, 976, 977, 978, 979, 980, 982, 985, 987, 988, 989, 990, 991, 992, 995, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1135, 1137, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1154, 1155, 1156, 1157, 1158, 1159, 1162, 1163, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1232, 1234, 1235, 1236, 1237, 1238, 1239, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1297, 1300, 1301, 1302, 1303, 1304, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1381, 1382, 1385, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1417, 1418, 1419, 1420, 1421, 1422, 1425, 1426, 1427, 1428, 1429, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1489, 1493, 1494, 1495, 1496, 1497, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1537, 1538, 1539, 1540, 1541, 1543, 1552, 1553, 1554, 1555, 1556, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1576, 1578, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1597, 1598, 1599, 1611, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1637, 1638, 1639, 1640, 1642, 1643, 1644, 1645, 1646, 1648, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1728, 1730, 1731, 1732, 1733, 1735, 1736, 1737, 1738, 1739, 1746, 1747, 1748, 1749, 1750, 1751, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 1811, 1815, 1816, 1820, 1821, 1824, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1847, 1848, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1924, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1955, 1957, 1959, 1962, 1963, 1964, 1965, 1967, 1968, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2004, 2005, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2026, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2063, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2128, 2157, 2158, 2159, 2160, 2163, 2164, 2165, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2189, 2191, 2192, 2205, 2225, 2237, 2239, 2240, 2241, 2242, 2245, 2246, 2248, 2249, 2251, 2252, 2255, 2256, 2258, 2261, 2262, 2266, 2267, 2268, 2269, 2282, 2283, 2284, 2285, 2286], "ndarrai": [23, 32, 47, 61, 62, 69, 70, 71, 117, 150, 154, 155, 160, 163, 164, 165, 167, 168, 170, 172, 175, 255, 260, 261, 262, 305, 308, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1353, 1356, 1357, 1417, 1589, 1591, 1593, 2127], "Or": [23, 32, 173], "jaxlib": [23, 32, 48, 150, 154, 155, 160, 167, 170, 172], "xla_extens": [23, 32, 150, 154, 155, 160, 167, 170, 172], "devicearrai": [23, 32, 150, 164, 170, 172], "set_backend_to_specific_vers": 23, "updat": [23, 33, 45, 47, 48, 49, 56, 58, 60, 70, 71, 72, 73, 103, 104, 118, 119, 120, 121, 148, 149, 150, 152, 153, 154, 156, 160, 162, 164, 165, 166, 168, 170, 172, 173, 175, 187, 1417, 1518, 1519, 1520, 1521, 1522, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1650, 1689, 1692, 1699, 1702, 1951, 1952, 1953, 1955, 1963, 1964, 1968, 1973, 1974, 2152, 2153, 2156, 2185, 2186, 2187, 2188, 2189, 2190, 2282, 2284], "dict": [23, 33, 38, 56, 57, 58, 59, 60, 70, 71, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 159, 173, 174, 205, 206, 207, 209, 211, 212, 213, 215, 217, 218, 220, 222, 223, 225, 227, 228, 230, 232, 233, 235, 237, 238, 240, 242, 243, 245, 247, 285, 287, 289, 310, 312, 314, 318, 320, 322, 336, 337, 339, 354, 356, 358, 364, 366, 368, 396, 398, 400, 408, 409, 411, 412, 414, 416, 429, 431, 433, 446, 452, 472, 473, 475, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 669, 671, 672, 674, 676, 677, 679, 681, 682, 684, 686, 687, 689, 691, 692, 694, 696, 697, 699, 701, 702, 704, 706, 707, 709, 711, 712, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 778, 780, 782, 783, 785, 787, 788, 790, 792, 793, 795, 797, 798, 800, 814, 816, 818, 824, 826, 828, 829, 831, 833, 834, 836, 838, 854, 858, 859, 861, 863, 864, 866, 868, 891, 893, 895, 913, 914, 916, 922, 926, 933, 937, 992, 996, 997, 999, 1001, 1017, 1021, 1077, 1081, 1087, 1089, 1091, 1121, 1123, 1125, 1144, 1146, 1148, 1195, 1197, 1199, 1200, 1218, 1285, 1287, 1289, 1294, 1297, 1305, 1307, 1309, 1321, 1323, 1325, 1326, 1328, 1330, 1338, 1340, 1342, 1360, 1361, 1363, 1365, 1366, 1368, 1370, 1371, 1373, 1396, 1397, 1406, 1407, 1409, 1411, 1412, 1414, 1417, 1418, 1420, 1422, 1423, 1425, 1427, 1429, 1430, 1432, 1434, 1436, 1438, 1440, 1441, 1443, 1445, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1469, 1471, 1473, 1474, 1475, 1476, 1478, 1480, 1481, 1483, 1485, 1493, 1495, 1497, 1508, 1510, 1512, 1513, 1515, 1517, 1518, 1520, 1522, 1524, 1526, 1528, 1529, 1531, 1533, 1537, 1539, 1541, 1543, 1547, 1549, 1551, 1552, 1554, 1556, 1568, 1570, 1572, 1573, 1575, 1577, 1578, 1579, 1581, 1584, 1585, 1589, 1590, 1592, 1594, 1595, 1597, 1606, 1607, 1609, 1642, 1643, 1645, 1652, 1654, 1656, 1662, 1664, 1666, 1667, 1669, 1671, 1689, 1691, 1693, 1694, 1696, 1698, 1709, 1711, 1713, 1715, 1717, 1719, 1720, 1722, 1724, 1746, 1748, 1750, 1756, 1758, 1760, 1761, 1763, 1765, 1766, 1768, 1770, 1776, 1778, 1780, 1796, 1798, 1800, 1801, 1803, 1805, 1829, 1830, 1832, 1855, 1857, 1859, 1860, 1862, 1864, 1865, 1867, 1869, 1871, 1873, 1875, 1886, 1890, 1891, 1893, 1895, 1906, 1908, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1921, 1923, 1925, 1926, 1928, 1930, 1941, 1942, 1944, 1946, 1947, 1949, 1955, 1957, 1959, 1962, 1963, 1964, 1965, 1967, 1968, 1969, 1973, 1974, 1981, 1983, 1985, 1986, 1988, 1990, 1991, 1993, 1995, 1996, 1998, 2000, 2002, 2004, 2006, 2018, 2020, 2022, 2034, 2035, 2037, 2039, 2040, 2042, 2044, 2045, 2047, 2055, 2057, 2059, 2071, 2073, 2075, 2076, 2078, 2080, 2089, 2091, 2097, 2099, 2101, 2102, 2104, 2111, 2112, 2114, 2117, 2119, 2121, 2122, 2124, 2126, 2127, 2152, 2153, 2154, 2205, 2224, 2226, 2228, 2230], "make": [23, 33, 41, 42, 47, 48, 49, 149, 150, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 175, 2138, 2140, 2141, 2142, 2143, 2146, 2147], "set_jax_backend": 23, "equival": [23, 34, 35, 36, 37, 78, 79, 126, 127, 163, 164, 168, 173, 175, 255, 257, 258, 481, 547, 550, 682, 685, 687, 690, 742, 745, 1714, 1776, 1777, 1778, 1779, 1780, 1791, 1794, 1806, 1809, 1844, 1845, 1847, 1848], "set_numpy_backend": 23, "set_tensorflow_backend": 23, "set_torch_backend": 23, "unset_backend": [23, 151], "unset": [23, 38, 151, 170], "adjust": [23, 38, 94, 95, 142, 143, 2070, 2102, 2103, 2104, 2105, 2111, 2113, 2114, 2115], "previous": [23, 38, 45, 48, 161, 166, 170, 1417, 1601], "otherwis": [23, 38, 49, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 76, 77, 78, 79, 82, 83, 88, 89, 94, 95, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 154, 155, 156, 166, 170, 207, 209, 211, 213, 215, 217, 218, 220, 222, 223, 225, 227, 228, 230, 232, 233, 235, 237, 238, 240, 242, 243, 245, 247, 255, 257, 258, 267, 268, 269, 285, 287, 289, 290, 293, 295, 296, 297, 298, 299, 310, 312, 314, 318, 320, 322, 336, 337, 339, 341, 349, 350, 351, 352, 353, 354, 356, 358, 364, 365, 366, 367, 368, 369, 371, 372, 374, 375, 376, 378, 379, 403, 406, 417, 420, 428, 429, 431, 433, 446, 452, 472, 473, 475, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 669, 671, 672, 674, 676, 677, 679, 681, 682, 684, 686, 687, 689, 691, 692, 694, 696, 697, 699, 701, 702, 704, 706, 707, 709, 711, 712, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 778, 780, 782, 783, 785, 787, 788, 790, 792, 793, 795, 797, 798, 800, 805, 806, 814, 815, 816, 817, 818, 824, 826, 828, 829, 831, 833, 834, 836, 838, 854, 858, 859, 861, 863, 864, 866, 868, 886, 887, 888, 890, 891, 892, 893, 894, 895, 922, 923, 924, 925, 926, 933, 937, 953, 954, 958, 959, 997, 999, 1001, 1017, 1021, 1055, 1056, 1077, 1081, 1087, 1089, 1091, 1121, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1144, 1146, 1148, 1188, 1189, 1190, 1191, 1192, 1195, 1197, 1199, 1285, 1287, 1289, 1321, 1323, 1325, 1326, 1328, 1330, 1338, 1340, 1342, 1360, 1361, 1363, 1365, 1366, 1368, 1370, 1371, 1373, 1396, 1397, 1406, 1407, 1409, 1411, 1412, 1414, 1417, 1418, 1420, 1422, 1425, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1436, 1438, 1440, 1441, 1443, 1445, 1451, 1453, 1455, 1456, 1458, 1460, 1461, 1463, 1465, 1469, 1471, 1473, 1476, 1478, 1480, 1481, 1483, 1485, 1493, 1495, 1497, 1508, 1510, 1512, 1513, 1515, 1517, 1518, 1520, 1522, 1524, 1526, 1528, 1529, 1531, 1533, 1537, 1539, 1541, 1547, 1549, 1551, 1552, 1554, 1556, 1568, 1570, 1572, 1573, 1575, 1577, 1578, 1579, 1581, 1584, 1585, 1589, 1590, 1592, 1594, 1595, 1597, 1599, 1606, 1607, 1609, 1624, 1626, 1642, 1643, 1645, 1650, 1652, 1654, 1656, 1662, 1664, 1666, 1667, 1669, 1671, 1689, 1690, 1691, 1692, 1693, 1694, 1696, 1698, 1709, 1711, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1724, 1725, 1728, 1746, 1748, 1750, 1756, 1758, 1760, 1761, 1763, 1765, 1766, 1768, 1770, 1776, 1778, 1780, 1796, 1798, 1800, 1801, 1803, 1805, 1811, 1812, 1813, 1814, 1815, 1829, 1830, 1832, 1839, 1843, 1844, 1845, 1847, 1848, 1855, 1857, 1859, 1860, 1862, 1864, 1865, 1867, 1869, 1870, 1871, 1873, 1875, 1886, 1890, 1891, 1893, 1895, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1921, 1923, 1925, 1926, 1928, 1930, 1941, 1942, 1944, 1946, 1947, 1949, 1951, 1952, 1953, 1955, 1969, 1981, 1983, 1985, 1986, 1988, 1990, 1991, 1993, 1995, 1996, 1998, 2000, 2002, 2004, 2006, 2007, 2008, 2009, 2011, 2013, 2014, 2015, 2016, 2017, 2018, 2020, 2022, 2028, 2030, 2032, 2034, 2035, 2037, 2039, 2040, 2042, 2044, 2045, 2047, 2054, 2055, 2057, 2059, 2060, 2063, 2070, 2071, 2073, 2075, 2076, 2078, 2080, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2181, 2182, 2194, 2197, 2198, 2199, 2251, 2254], "implement": [23, 38, 47, 63, 64, 65, 66, 69, 90, 91, 92, 93, 111, 112, 113, 114, 117, 140, 141, 148, 149, 150, 151, 152, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 186, 187, 341, 349, 350, 351, 352, 353, 429, 432, 446, 472, 473, 474, 475, 476, 481, 482, 485, 487, 490, 492, 495, 502, 505, 507, 510, 512, 515, 517, 520, 562, 565, 567, 570, 592, 595, 597, 600, 652, 655, 657, 660, 662, 665, 667, 670, 727, 730, 742, 745, 757, 760, 762, 765, 782, 786, 787, 791, 953, 978, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1338, 1341, 1353, 1356, 1357, 1714, 1740, 1741, 1744, 1746, 1749, 2033, 2034, 2036, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2065, 2068, 2070, 2085, 2088, 2089, 2092, 2093, 2096, 2102, 2105, 2127, 2128, 2137, 2138, 2139, 2140, 2143, 2146, 2147], "wa": [23, 38, 41, 49, 94, 95, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 153, 156, 164, 170, 172, 207, 209, 211, 213, 215, 217, 218, 220, 222, 223, 225, 227, 228, 230, 232, 233, 235, 237, 238, 240, 242, 243, 245, 247, 285, 287, 289, 310, 312, 314, 318, 320, 322, 336, 337, 339, 354, 356, 358, 364, 366, 368, 429, 431, 433, 472, 473, 475, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 669, 671, 672, 674, 676, 677, 679, 681, 682, 684, 686, 687, 689, 691, 692, 694, 696, 697, 699, 701, 702, 704, 706, 707, 709, 711, 712, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 778, 780, 782, 783, 785, 787, 788, 790, 792, 793, 795, 797, 798, 800, 814, 816, 818, 824, 826, 828, 829, 831, 833, 834, 836, 838, 854, 858, 859, 861, 863, 864, 866, 868, 891, 893, 895, 922, 926, 933, 937, 953, 977, 997, 999, 1001, 1017, 1021, 1077, 1081, 1087, 1089, 1091, 1121, 1123, 1125, 1144, 1146, 1148, 1195, 1197, 1199, 1285, 1287, 1289, 1321, 1323, 1325, 1326, 1328, 1330, 1333, 1336, 1338, 1340, 1342, 1360, 1361, 1363, 1365, 1366, 1368, 1370, 1371, 1373, 1396, 1397, 1406, 1407, 1409, 1411, 1412, 1414, 1417, 1418, 1420, 1422, 1425, 1427, 1429, 1430, 1432, 1434, 1436, 1438, 1440, 1441, 1443, 1445, 1451, 1453, 1455, 1456, 1458, 1460, 1461, 1463, 1465, 1469, 1471, 1473, 1476, 1478, 1480, 1481, 1483, 1485, 1493, 1495, 1497, 1508, 1510, 1512, 1513, 1515, 1517, 1518, 1520, 1522, 1524, 1526, 1528, 1529, 1531, 1533, 1537, 1539, 1541, 1547, 1549, 1551, 1552, 1554, 1556, 1568, 1570, 1572, 1573, 1575, 1577, 1578, 1579, 1581, 1584, 1585, 1589, 1590, 1592, 1594, 1595, 1597, 1599, 1606, 1607, 1609, 1624, 1626, 1642, 1643, 1645, 1652, 1654, 1656, 1662, 1664, 1666, 1667, 1669, 1671, 1689, 1691, 1693, 1694, 1696, 1698, 1709, 1711, 1713, 1715, 1717, 1719, 1720, 1722, 1724, 1746, 1748, 1750, 1756, 1758, 1760, 1761, 1763, 1765, 1766, 1768, 1770, 1776, 1778, 1780, 1796, 1798, 1800, 1801, 1803, 1805, 1829, 1830, 1832, 1855, 1857, 1859, 1860, 1862, 1864, 1865, 1867, 1869, 1871, 1873, 1875, 1886, 1890, 1891, 1893, 1895, 1906, 1908, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1921, 1923, 1925, 1926, 1928, 1930, 1941, 1942, 1944, 1946, 1947, 1949, 1955, 1969, 1981, 1983, 1985, 1986, 1988, 1990, 1991, 1993, 1995, 1996, 1998, 2000, 2002, 2004, 2006, 2018, 2020, 2022, 2034, 2035, 2037, 2039, 2040, 2042, 2044, 2045, 2047, 2055, 2057, 2059, 2070, 2071, 2073, 2075, 2076, 2078, 2080, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2139, 2140, 2142], "last": [23, 38, 42, 49, 51, 54, 55, 61, 62, 69, 76, 77, 78, 79, 80, 81, 82, 83, 92, 93, 94, 95, 96, 97, 103, 104, 109, 110, 117, 124, 125, 126, 127, 128, 129, 130, 131, 140, 141, 142, 143, 144, 145, 149, 151, 154, 156, 159, 163, 165, 166, 168, 170, 187, 255, 290, 293, 295, 296, 297, 298, 299, 310, 311, 446, 452, 922, 923, 924, 925, 926, 953, 959, 1012, 1013, 1014, 1015, 1016, 1171, 1172, 1173, 1174, 1175, 1200, 1208, 1218, 1294, 1297, 1343, 1344, 1612, 1641, 1647, 1649, 1650, 1699, 1700, 1701, 1702, 1714, 1720, 1721, 1722, 1723, 1724, 1735, 1736, 1738, 1829, 1830, 1831, 1832, 1833, 1839, 1843, 1854, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1876, 1879, 1891, 1892, 1893, 1894, 1895, 1906, 1907, 1908, 1909, 1910, 1911, 1914, 1916, 1917, 1918, 1919, 1920, 1926, 1929, 2007, 2008, 2011, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2063, 2065, 2068, 2070, 2071, 2072, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2140, 2169, 2179], "henc": [23, 38, 48, 152, 153, 166, 1870, 1886, 1889, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053], "first": [23, 38, 40, 41, 44, 45, 46, 47, 48, 49, 51, 54, 55, 61, 62, 67, 68, 69, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 100, 105, 106, 109, 110, 115, 116, 117, 118, 119, 126, 127, 130, 131, 134, 135, 138, 139, 142, 143, 149, 150, 152, 156, 160, 161, 162, 163, 164, 166, 168, 170, 172, 173, 175, 255, 290, 293, 295, 296, 297, 298, 299, 341, 427, 439, 446, 452, 481, 497, 498, 499, 500, 501, 517, 518, 519, 521, 527, 528, 529, 530, 531, 537, 538, 539, 540, 541, 542, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 582, 583, 585, 607, 610, 612, 613, 617, 618, 620, 642, 643, 645, 647, 648, 650, 672, 673, 675, 677, 678, 680, 687, 688, 690, 692, 693, 695, 707, 708, 709, 710, 717, 718, 720, 727, 728, 730, 777, 778, 779, 780, 781, 805, 807, 814, 815, 816, 817, 818, 859, 860, 896, 902, 903, 913, 915, 933, 936, 943, 946, 953, 954, 963, 964, 965, 966, 968, 970, 971, 972, 975, 980, 981, 1012, 1013, 1014, 1015, 1016, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1121, 1122, 1123, 1124, 1125, 1139, 1142, 1143, 1149, 1155, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1174, 1176, 1179, 1181, 1183, 1184, 1185, 1186, 1187, 1200, 1205, 1208, 1218, 1219, 1255, 1258, 1285, 1286, 1287, 1288, 1289, 1294, 1297, 1305, 1306, 1308, 1310, 1311, 1312, 1313, 1314, 1326, 1329, 1343, 1344, 1345, 1353, 1358, 1378, 1381, 1382, 1385, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1425, 1427, 1428, 1429, 1714, 1720, 1721, 1722, 1723, 1724, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1751, 1754, 1761, 1762, 1763, 1764, 1765, 1786, 1789, 1796, 1797, 1798, 1799, 1800, 1801, 1804, 1811, 1815, 1821, 1824, 1839, 1843, 1870, 1906, 1907, 1908, 1909, 1910, 1911, 1914, 1926, 1929, 1931, 1932, 1933, 1934, 1935, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1966, 1967, 1969, 1980, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2011, 2013, 2014, 2016, 2033, 2034, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2054, 2060, 2063, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2138, 2140, 2141, 2145, 2159, 2161, 2166, 2169, 2180, 2181, 2182, 2185, 2189, 2205, 2221], "howev": [23, 38, 41, 47, 48, 49, 78, 79, 126, 127, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 168, 170, 172, 173, 174, 175, 187, 1714, 1801, 1804, 1811, 1812, 1813, 1814, 1815, 2139, 2140, 2146], "seen": [23, 38, 40, 41, 153, 156, 158, 164, 166, 170, 172, 173, 927, 930, 1315, 1318, 2146], "after": [23, 38, 44, 45, 47, 48, 49, 69, 72, 73, 76, 77, 84, 85, 103, 104, 120, 121, 124, 125, 132, 133, 149, 153, 154, 156, 158, 160, 164, 166, 169, 341, 439, 446, 447, 448, 481, 767, 770, 913, 915, 953, 975, 1149, 1155, 1200, 1218, 1285, 1288, 1294, 1297, 1612, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1650, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1683, 1684, 1687, 1689, 1690, 1691, 1692, 1693, 1955, 1967, 1975, 1976, 1977, 1978, 1979, 2140, 2185, 2186, 2187, 2188, 2189, 2190], "befor": [23, 38, 47, 48, 49, 69, 76, 77, 78, 79, 82, 83, 103, 104, 117, 124, 125, 126, 127, 149, 150, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 170, 173, 187, 446, 448, 471, 1002, 1003, 1004, 1005, 1006, 1017, 1020, 1022, 1025, 1097, 1098, 1099, 1100, 1101, 1149, 1158, 1159, 1200, 1209, 1210, 1218, 1294, 1297, 1650, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1683, 1684, 1687, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1761, 1762, 1764, 1844, 1845, 1847, 1848, 1870, 1876, 1877, 1879, 1951, 1952, 1953, 1955, 1968, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2070, 2071, 2074, 2076, 2079, 2097, 2100, 2106, 2110, 2140, 2157, 2158], "becom": [23, 38, 40, 42, 49, 69, 117, 152, 156, 158, 164, 187, 834, 835, 836, 837, 838, 953, 962, 1027, 1028, 1030, 1200, 1203, 1870, 1871, 1874], "swap": [23, 38, 82, 83, 130, 131, 1870, 1931, 1932, 1933, 1934, 1935], "tensor": [23, 38, 40, 61, 62, 67, 68, 69, 70, 71, 76, 77, 82, 83, 86, 87, 103, 104, 109, 110, 115, 116, 117, 118, 119, 124, 125, 130, 131, 134, 135, 150, 151, 154, 155, 160, 161, 163, 164, 165, 166, 167, 168, 170, 172, 173, 175, 187, 255, 267, 268, 269, 290, 293, 295, 296, 297, 298, 299, 310, 311, 312, 313, 314, 341, 380, 382, 428, 481, 697, 698, 699, 700, 701, 702, 703, 705, 805, 807, 839, 840, 844, 845, 864, 865, 866, 867, 868, 896, 897, 902, 903, 913, 915, 953, 956, 982, 985, 997, 1000, 1012, 1015, 1113, 1114, 1115, 1116, 1117, 1149, 1155, 1157, 1161, 1200, 1208, 1229, 1230, 1234, 1235, 1265, 1266, 1267, 1268, 1269, 1305, 1306, 1308, 1353, 1356, 1378, 1381, 1382, 1385, 1417, 1547, 1549, 1551, 1552, 1553, 1554, 1555, 1556, 1650, 1689, 1692, 1699, 1700, 1701, 1702, 1714, 1821, 1824, 1870, 1916, 1917, 1918, 1919, 1920, 1980, 1981, 1982, 1983, 1984, 1985, 2127, 2128, 2137, 2138, 2141, 2143, 2144, 2147, 2152, 2154, 2169, 2177, 2179], "python": [23, 38, 39, 40, 41, 45, 46, 48, 49, 69, 86, 87, 117, 134, 135, 149, 150, 152, 153, 158, 159, 164, 166, 168, 170, 172, 173, 187, 255, 257, 258, 446, 466, 480, 481, 742, 745, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 927, 928, 929, 930, 931, 1047, 1048, 1049, 1300, 1301, 1302, 1303, 1304, 1315, 1316, 1317, 1318, 1319, 1320, 1417, 1611, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2127, 2128, 2137, 2140, 2141, 2142, 2146, 2147], "op": [23, 38, 167, 170, 187, 2152, 2154], "eagertensor": [23, 38, 165], "backend": [29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 46, 47, 48, 49, 56, 58, 60, 61, 62, 70, 71, 72, 73, 78, 79, 103, 104, 118, 119, 126, 127, 148, 149, 150, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 172, 175, 255, 267, 268, 269, 341, 390, 391, 393, 394, 402, 445, 446, 459, 460, 462, 464, 478, 1417, 1474, 1475, 1507, 1518, 1519, 1521, 1523, 1544, 1578, 1579, 1580, 1581, 1582, 1588, 1624, 1625, 1714, 1811, 1812, 1813, 1814, 1815, 2127, 2128, 2140, 2143, 2146, 2147, 2152, 2153, 2156, 2185, 2186, 2187, 2188, 2189, 2190, 2194, 2195, 2197, 2198, 2201, 2205, 2223, 2224, 2225, 2226, 2228, 2232, 2233, 2251, 2253, 2254], "ml": [39, 41, 42, 43, 46, 164, 169, 170, 171, 173, 174, 175, 186, 2128, 2136, 2137, 2138, 2139, 2140, 2143, 2145, 2147], "explos": [39, 41, 2128], "A": [39, 40, 41, 42, 45, 46, 47, 48, 61, 62, 63, 64, 69, 70, 71, 82, 83, 86, 87, 94, 95, 96, 97, 100, 103, 104, 105, 106, 111, 112, 115, 116, 117, 118, 119, 126, 127, 130, 131, 134, 135, 138, 139, 144, 145, 148, 152, 154, 155, 158, 160, 161, 164, 165, 166, 170, 173, 187, 255, 276, 277, 305, 306, 308, 341, 354, 355, 356, 357, 358, 446, 447, 450, 471, 481, 697, 701, 712, 715, 722, 725, 737, 740, 814, 816, 818, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 896, 897, 902, 903, 927, 928, 929, 930, 931, 953, 974, 992, 995, 997, 998, 999, 1000, 1047, 1048, 1049, 1121, 1122, 1123, 1125, 1200, 1207, 1219, 1221, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1300, 1301, 1302, 1303, 1304, 1310, 1311, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1326, 1329, 1353, 1357, 1358, 1370, 1372, 1374, 1378, 1381, 1382, 1385, 1417, 1425, 1427, 1429, 1491, 1508, 1510, 1513, 1515, 1568, 1570, 1572, 1573, 1575, 1577, 1584, 1585, 1586, 1587, 1612, 1648, 1650, 1689, 1692, 1714, 1735, 1737, 1739, 1756, 1758, 1760, 1781, 1783, 1785, 1786, 1789, 1806, 1809, 1811, 1812, 1814, 1815, 1870, 1871, 1873, 1875, 1886, 1888, 1890, 1896, 1898, 1900, 1916, 1917, 1918, 1919, 1920, 1926, 1929, 1955, 1956, 1959, 1961, 1963, 1964, 1965, 1966, 1967, 1971, 1972, 1973, 1974, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2034, 2035, 2037, 2070, 2081, 2082, 2084, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2140, 2141, 2152, 2154, 2157, 2158, 2159, 2163, 2164, 2165, 2167, 2168, 2191, 2192, 2194, 2201, 2205, 2210, 2228, 2237, 2239, 2240, 2241, 2245, 2246, 2248, 2251, 2252, 2253, 2255, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2266, 2267, 2268, 2269, 2282, 2283, 2284, 2285, 2286, 2287, 2288], "huge": [39, 41, 153, 173, 2128, 2140, 2146], "number": [39, 40, 48, 49, 51, 54, 55, 61, 62, 63, 64, 67, 68, 69, 70, 71, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 103, 104, 105, 106, 109, 110, 111, 112, 115, 116, 117, 118, 119, 124, 125, 126, 127, 130, 131, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 152, 153, 154, 155, 156, 163, 166, 168, 170, 173, 249, 255, 257, 258, 276, 277, 285, 288, 290, 293, 295, 296, 297, 298, 299, 300, 301, 303, 305, 308, 310, 311, 312, 313, 314, 341, 354, 355, 356, 357, 358, 371, 372, 374, 375, 376, 378, 379, 384, 385, 388, 396, 399, 403, 406, 408, 410, 412, 415, 417, 420, 422, 425, 429, 430, 431, 432, 433, 446, 463, 464, 465, 481, 497, 500, 517, 520, 557, 560, 577, 579, 602, 605, 607, 610, 637, 638, 639, 640, 641, 697, 700, 702, 704, 706, 727, 730, 742, 745, 747, 750, 752, 755, 792, 796, 814, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 829, 830, 834, 835, 836, 837, 869, 870, 871, 872, 881, 882, 884, 885, 891, 892, 893, 894, 895, 896, 902, 903, 922, 923, 924, 925, 926, 953, 954, 955, 957, 958, 959, 969, 970, 973, 974, 976, 1102, 1103, 1104, 1105, 1106, 1121, 1124, 1193, 1194, 1200, 1201, 1203, 1218, 1219, 1221, 1260, 1261, 1262, 1263, 1264, 1275, 1278, 1294, 1297, 1321, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1370, 1371, 1372, 1373, 1374, 1378, 1381, 1382, 1385, 1417, 1469, 1470, 1471, 1472, 1473, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1545, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1594, 1596, 1598, 1606, 1610, 1611, 1650, 1651, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1704, 1707, 1714, 1740, 1741, 1744, 1746, 1749, 1776, 1777, 1778, 1779, 1780, 1801, 1802, 1803, 1804, 1805, 1811, 1812, 1813, 1814, 1815, 1834, 1835, 1836, 1837, 1838, 1839, 1843, 1870, 1871, 1872, 1873, 1874, 1875, 1881, 1882, 1883, 1884, 1885, 1886, 1889, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1926, 1929, 1936, 1937, 1938, 1939, 1940, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1980, 1981, 1982, 1983, 1984, 1985, 2001, 2007, 2023, 2024, 2025, 2026, 2027, 2033, 2034, 2038, 2039, 2040, 2041, 2042, 2043, 2070, 2071, 2074, 2076, 2079, 2085, 2088, 2089, 2090, 2092, 2093, 2096, 2097, 2100, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2128, 2134, 2135, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2178, 2179, 2180, 2205, 2210, 2224, 2226, 2237, 2240, 2241, 2245, 2246, 2251, 2252, 2255, 2258, 2262, 2263, 2267, 2282, 2284, 2286, 2287, 2288], "tool": [39, 42, 49, 156, 171, 175, 186, 187, 2128, 2138, 2139, 2140, 2141, 2143, 2146, 2147], "have": [39, 40, 41, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 186, 187, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 255, 257, 258, 260, 261, 262, 267, 268, 269, 270, 271, 272, 274, 276, 277, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 300, 301, 303, 310, 311, 312, 313, 315, 316, 318, 319, 320, 321, 322, 323, 325, 327, 328, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 385, 388, 446, 472, 473, 474, 475, 476, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805, 808, 809, 812, 829, 832, 834, 837, 839, 840, 844, 845, 846, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 896, 897, 913, 915, 917, 920, 932, 933, 936, 953, 956, 976, 978, 981, 982, 985, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1047, 1048, 1049, 1087, 1088, 1097, 1098, 1099, 1100, 1101, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1139, 1142, 1144, 1145, 1146, 1147, 1148, 1149, 1152, 1155, 1156, 1157, 1158, 1159, 1161, 1164, 1171, 1174, 1176, 1177, 1178, 1181, 1182, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1202, 1203, 1205, 1219, 1221, 1224, 1227, 1229, 1230, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1290, 1291, 1292, 1293, 1300, 1301, 1303, 1315, 1316, 1317, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1353, 1359, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1386, 1387, 1388, 1389, 1390, 1411, 1415, 1416, 1417, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1518, 1520, 1522, 1524, 1528, 1547, 1548, 1549, 1550, 1551, 1552, 1554, 1555, 1556, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1624, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1642, 1643, 1644, 1645, 1646, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1730, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1821, 1824, 1829, 1830, 1831, 1832, 1833, 1839, 1843, 1844, 1845, 1847, 1848, 1849, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1921, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1946, 1947, 1948, 1949, 1950, 1951, 1955, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2065, 2068, 2070, 2071, 2074, 2076, 2079, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2149, 2152, 2157, 2158, 2159, 2167, 2169, 2181, 2183, 2185, 2191, 2237, 2240], "explod": [39, 40, 2128, 2159, 2163], "onto": [39, 40, 1955, 1962, 1968, 2128, 2140], "scene": [39, 40, 72, 73, 148, 169, 171, 1624, 1625, 2128, 2140], "b": [39, 42, 43, 51, 54, 55, 67, 68, 69, 70, 71, 76, 77, 84, 85, 94, 95, 100, 101, 102, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 151, 152, 153, 156, 161, 165, 169, 170, 171, 173, 174, 175, 185, 205, 207, 209, 210, 213, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 235, 237, 238, 240, 242, 243, 247, 255, 267, 269, 276, 277, 284, 285, 287, 288, 289, 295, 297, 299, 310, 312, 313, 314, 318, 321, 336, 340, 341, 349, 351, 352, 353, 354, 356, 357, 358, 359, 361, 362, 363, 364, 366, 367, 368, 380, 381, 382, 412, 414, 416, 417, 420, 429, 431, 433, 453, 455, 457, 472, 473, 475, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 497, 499, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 534, 535, 536, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 591, 592, 594, 596, 597, 599, 600, 601, 602, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 672, 674, 675, 676, 677, 679, 680, 681, 682, 684, 685, 686, 687, 689, 690, 691, 692, 694, 695, 696, 697, 699, 700, 701, 702, 704, 705, 706, 707, 709, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 729, 730, 731, 732, 734, 735, 736, 737, 739, 741, 742, 744, 745, 746, 747, 749, 750, 751, 752, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 769, 770, 771, 772, 774, 775, 776, 777, 778, 780, 782, 783, 785, 786, 787, 788, 790, 791, 792, 793, 795, 796, 797, 798, 800, 805, 808, 809, 813, 814, 815, 816, 817, 818, 819, 821, 823, 824, 826, 828, 829, 831, 833, 834, 836, 838, 839, 841, 843, 844, 846, 848, 849, 851, 853, 859, 862, 869, 870, 871, 872, 874, 875, 877, 881, 883, 885, 891, 893, 895, 896, 897, 907, 909, 910, 911, 922, 924, 926, 927, 929, 931, 932, 933, 935, 937, 938, 940, 942, 953, 954, 968, 969, 970, 976, 978, 987, 989, 991, 997, 999, 1000, 1001, 1002, 1004, 1006, 1007, 1009, 1011, 1012, 1014, 1016, 1017, 1019, 1021, 1022, 1024, 1026, 1027, 1029, 1031, 1032, 1034, 1036, 1037, 1039, 1041, 1042, 1044, 1046, 1050, 1052, 1054, 1057, 1059, 1064, 1065, 1067, 1068, 1069, 1071, 1072, 1074, 1076, 1077, 1079, 1081, 1082, 1084, 1087, 1089, 1090, 1091, 1092, 1094, 1096, 1097, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1111, 1121, 1122, 1123, 1124, 1125, 1126, 1128, 1130, 1131, 1132, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1146, 1148, 1149, 1154, 1156, 1166, 1168, 1170, 1171, 1172, 1174, 1176, 1181, 1183, 1185, 1187, 1188, 1190, 1192, 1193, 1194, 1195, 1197, 1199, 1200, 1218, 1221, 1229, 1231, 1233, 1234, 1236, 1238, 1239, 1241, 1243, 1244, 1246, 1248, 1250, 1252, 1254, 1260, 1262, 1264, 1270, 1274, 1275, 1277, 1279, 1285, 1287, 1289, 1294, 1297, 1300, 1302, 1304, 1310, 1312, 1314, 1315, 1317, 1321, 1323, 1324, 1325, 1326, 1328, 1330, 1333, 1335, 1337, 1338, 1340, 1341, 1342, 1343, 1344, 1360, 1361, 1363, 1365, 1366, 1368, 1369, 1370, 1371, 1373, 1374, 1386, 1387, 1389, 1392, 1393, 1394, 1396, 1397, 1399, 1401, 1402, 1404, 1406, 1407, 1409, 1411, 1412, 1414, 1417, 1418, 1420, 1421, 1422, 1425, 1426, 1427, 1428, 1429, 1436, 1438, 1439, 1440, 1441, 1443, 1444, 1445, 1448, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1469, 1471, 1473, 1476, 1478, 1479, 1480, 1481, 1483, 1484, 1485, 1493, 1494, 1495, 1496, 1497, 1502, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1524, 1526, 1528, 1529, 1531, 1533, 1537, 1539, 1541, 1552, 1554, 1555, 1556, 1568, 1570, 1571, 1572, 1578, 1579, 1581, 1582, 1589, 1590, 1592, 1593, 1594, 1595, 1597, 1598, 1606, 1607, 1609, 1612, 1614, 1616, 1617, 1618, 1620, 1621, 1624, 1626, 1627, 1629, 1631, 1632, 1637, 1639, 1640, 1642, 1643, 1645, 1646, 1650, 1652, 1654, 1655, 1656, 1662, 1664, 1665, 1666, 1667, 1669, 1670, 1671, 1672, 1674, 1675, 1676, 1677, 1679, 1680, 1681, 1684, 1686, 1687, 1688, 1689, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1704, 1707, 1709, 1711, 1712, 1713, 1714, 1715, 1717, 1718, 1719, 1720, 1722, 1723, 1724, 1725, 1727, 1728, 1735, 1737, 1738, 1739, 1746, 1748, 1749, 1750, 1751, 1754, 1756, 1758, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1768, 1769, 1770, 1771, 1774, 1776, 1778, 1779, 1780, 1781, 1783, 1784, 1785, 1786, 1789, 1801, 1803, 1804, 1805, 1806, 1809, 1811, 1812, 1814, 1815, 1816, 1820, 1821, 1824, 1829, 1830, 1832, 1833, 1834, 1835, 1837, 1854, 1855, 1857, 1858, 1859, 1860, 1862, 1864, 1865, 1867, 1869, 1870, 1871, 1873, 1874, 1875, 1881, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1893, 1895, 1896, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1918, 1920, 1921, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1944, 1945, 1946, 1947, 1949, 1950, 1955, 1959, 1962, 1963, 1964, 1965, 1967, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1986, 1988, 1990, 1991, 1993, 1995, 1996, 1998, 2000, 2002, 2004, 2005, 2006, 2007, 2008, 2010, 2012, 2013, 2015, 2016, 2017, 2018, 2020, 2021, 2022, 2023, 2026, 2028, 2029, 2031, 2032, 2033, 2034, 2035, 2037, 2039, 2040, 2042, 2043, 2044, 2045, 2047, 2048, 2054, 2055, 2057, 2058, 2059, 2065, 2067, 2068, 2069, 2070, 2071, 2073, 2074, 2075, 2076, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2087, 2088, 2089, 2091, 2092, 2093, 2095, 2096, 2097, 2099, 2100, 2101, 2102, 2104, 2105, 2106, 2110, 2111, 2112, 2114, 2115, 2116, 2117, 2119, 2120, 2121, 2122, 2124, 2125, 2126, 2128, 2136], "why": [39, 41, 49, 163, 172, 2128], "unifi": [39, 41, 103, 104, 148, 149, 150, 154, 158, 164, 168, 170, 187, 446, 471, 2128, 2136, 2137, 2138, 2140, 2144, 2147], "should": [39, 41, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 61, 62, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 94, 95, 100, 101, 102, 103, 104, 105, 106, 109, 110, 115, 116, 117, 120, 121, 124, 125, 126, 127, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 205, 218, 219, 220, 222, 238, 239, 240, 242, 248, 249, 255, 300, 301, 303, 310, 311, 312, 313, 314, 323, 325, 327, 328, 330, 332, 341, 359, 362, 428, 446, 448, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 577, 578, 579, 580, 581, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 707, 708, 709, 710, 711, 712, 713, 714, 716, 717, 720, 722, 723, 724, 726, 727, 728, 729, 730, 731, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805, 807, 854, 855, 856, 857, 858, 859, 861, 863, 864, 868, 873, 932, 953, 976, 978, 979, 1002, 1003, 1004, 1005, 1006, 1062, 1063, 1097, 1098, 1099, 1100, 1101, 1149, 1156, 1158, 1159, 1200, 1215, 1218, 1250, 1251, 1252, 1253, 1254, 1294, 1297, 1305, 1306, 1308, 1315, 1316, 1321, 1322, 1323, 1324, 1325, 1338, 1339, 1340, 1341, 1342, 1375, 1376, 1377, 1416, 1417, 1435, 1518, 1519, 1521, 1611, 1612, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1650, 1651, 1682, 1683, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1735, 1736, 1737, 1738, 1739, 1746, 1748, 1750, 1751, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1821, 1824, 1829, 1830, 1831, 1832, 1833, 1839, 1843, 1844, 1845, 1847, 1848, 1854, 1870, 1906, 1907, 1908, 1910, 1951, 1955, 1975, 1980, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2023, 2024, 2025, 2027, 2028, 2029, 2030, 2031, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2054, 2055, 2057, 2059, 2070, 2071, 2074, 2076, 2079, 2081, 2082, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2128, 2136, 2137, 2140, 2142, 2147, 2149, 2152, 2154, 2155, 2157, 2158, 2159, 2164, 2169, 2181, 2183, 2185, 2191, 2205, 2224, 2226, 2228, 2255, 2262], "them": [39, 40, 41, 42, 45, 47, 49, 149, 150, 151, 152, 153, 158, 162, 163, 164, 165, 166, 170, 172, 173, 174, 187, 1417, 1435, 1546, 2127, 2128, 2137, 2138, 2140, 2142, 2146, 2152, 2155, 2237, 2248], "c": [39, 41, 42, 43, 48, 69, 70, 71, 72, 73, 76, 77, 82, 83, 94, 95, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 142, 143, 148, 152, 156, 161, 168, 169, 170, 171, 173, 187, 255, 295, 297, 310, 312, 313, 314, 341, 349, 353, 385, 387, 388, 389, 396, 398, 399, 400, 481, 547, 550, 652, 654, 655, 656, 657, 659, 660, 661, 717, 720, 752, 754, 755, 809, 811, 813, 824, 826, 828, 829, 831, 833, 834, 836, 838, 874, 875, 877, 938, 942, 943, 945, 947, 948, 950, 952, 1002, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1082, 1086, 1097, 1099, 1101, 1107, 1108, 1110, 1200, 1208, 1290, 1291, 1401, 1402, 1417, 1425, 1426, 1427, 1428, 1429, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1461, 1462, 1464, 1493, 1495, 1497, 1508, 1510, 1513, 1515, 1594, 1597, 1598, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1650, 1652, 1653, 1662, 1665, 1667, 1669, 1670, 1671, 1672, 1675, 1677, 1679, 1680, 1681, 1714, 1746, 1749, 1750, 1756, 1759, 1870, 1886, 1890, 1906, 1907, 1908, 1909, 1910, 1926, 1929, 1955, 1959, 1963, 1964, 1965, 1967, 1973, 1974, 2007, 2023, 2026, 2070, 2076, 2078, 2079, 2080, 2081, 2082, 2084, 2102, 2103, 2104, 2105, 2111, 2113, 2114, 2115, 2127, 2128, 2136, 2140, 2144, 2145, 2147], "standard": [39, 67, 68, 69, 78, 79, 84, 85, 86, 87, 94, 95, 115, 116, 117, 132, 133, 134, 135, 142, 143, 148, 149, 150, 152, 154, 157, 160, 163, 166, 167, 187, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 385, 388, 396, 399, 429, 432, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 688, 689, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 917, 920, 943, 946, 1107, 1108, 1109, 1110, 1111, 1176, 1178, 1179, 1290, 1291, 1417, 1611, 1714, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1733, 1735, 1738, 1740, 1741, 1744, 1746, 1747, 1749, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1804, 1806, 1809, 1811, 1815, 1816, 1820, 1821, 1824, 1839, 1843, 1844, 1848, 1870, 1876, 1879, 1886, 1889, 1891, 1894, 1896, 1899, 1906, 1909, 1911, 1914, 1921, 1924, 1926, 1929, 1946, 1950, 1975, 1976, 1977, 1978, 1979, 1980, 1991, 1992, 1993, 1994, 1995, 2007, 2008, 2011, 2013, 2016, 2023, 2026, 2028, 2032, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2054, 2055, 2058, 2065, 2068, 2070, 2085, 2088, 2089, 2092, 2093, 2096, 2097, 2100, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2113, 2114, 2115, 2116, 2117, 2120, 2122, 2125, 2128, 2136, 2138, 2139, 2142, 2143, 2145, 2159, 2164, 2183, 2184, 2255, 2260], "re": [39, 40, 41, 43, 47, 48, 49, 70, 71, 88, 89, 136, 137, 148, 149, 154, 163, 164, 167, 168, 172, 175, 187, 446, 471, 1417, 1435, 1451, 1452, 1454, 1714, 1821, 1824, 1870, 1911, 1914, 2007, 2018, 2019, 2020, 2021, 2022, 2028, 2029, 2030, 2031, 2032, 2128, 2140], "collabor": [39, 40, 41, 2128], "consortium": [39, 41, 2128], "api": [39, 40, 48, 67, 68, 78, 79, 115, 116, 148, 150, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 173, 187, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 385, 388, 396, 399, 427, 429, 432, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 688, 689, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 917, 920, 943, 946, 1176, 1178, 1179, 1714, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1733, 1735, 1738, 1740, 1741, 1744, 1746, 1747, 1749, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1804, 1806, 1809, 1811, 1815, 1816, 1820, 1821, 1824, 1839, 1843, 1844, 1848, 1870, 1876, 1879, 1886, 1889, 1891, 1894, 1896, 1899, 1906, 1909, 1911, 1914, 1921, 1924, 1926, 1929, 1946, 1950, 2007, 2008, 2011, 2013, 2016, 2023, 2026, 2028, 2032, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2054, 2055, 2058, 2065, 2068, 2070, 2085, 2088, 2089, 2092, 2093, 2096, 2097, 2100, 2102, 2105, 2106, 2110, 2111, 2115, 2116, 2117, 2120, 2122, 2125, 2127, 2128, 2136, 2138, 2140, 2142, 2145, 2147], "open": [40, 41, 42, 43, 45, 48, 49, 86, 87, 134, 135, 154, 157, 164, 165, 168, 186, 255, 257, 258, 1980, 1986, 1987, 1988, 1989, 1990, 1996, 1999, 2128, 2138, 2139, 2140, 2142, 2143], "project": [40, 41, 42, 45, 48, 49, 150, 151, 166, 174, 186, 187, 2136, 2138, 2140, 2143, 2147], "grown": 40, "consider": [40, 156, 160, 168, 2137, 2138], "recent": [40, 41, 48, 49, 166], "year": [40, 42, 149, 187, 2128, 2140], "especi": [40, 48, 168, 2140], "deep": [40, 43, 46, 47, 49, 103, 104, 149, 152, 154, 165, 169, 172, 173, 1417, 1451, 1454, 2128, 2138, 2140, 2143, 2144, 2146, 2147], "learn": [40, 41, 43, 46, 47, 48, 72, 73, 120, 121, 148, 149, 161, 169, 186, 1417, 1451, 1454, 1612, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1951, 1952, 1953, 1954, 2127, 2128, 2138, 2142, 2143, 2144, 2145, 2146, 2147, 2185, 2186, 2187, 2188, 2189, 2190], "can": [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 61, 62, 63, 64, 69, 78, 79, 82, 83, 86, 87, 90, 91, 111, 112, 117, 126, 127, 130, 131, 134, 135, 138, 139, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 186, 187, 255, 260, 261, 262, 295, 296, 298, 305, 308, 341, 364, 365, 366, 367, 368, 446, 450, 469, 470, 471, 805, 807, 859, 862, 896, 897, 913, 915, 927, 930, 997, 1000, 1055, 1056, 1113, 1114, 1115, 1116, 1117, 1126, 1127, 1128, 1129, 1130, 1149, 1155, 1161, 1171, 1174, 1305, 1306, 1308, 1315, 1317, 1318, 1343, 1344, 1417, 1611, 1612, 1622, 1714, 1735, 1737, 1739, 1761, 1762, 1764, 1811, 1812, 1813, 1814, 1815, 1829, 1830, 1831, 1832, 1870, 1906, 1907, 1908, 1909, 1910, 1926, 1927, 1928, 1930, 1980, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2034, 2035, 2036, 2037, 2127, 2128, 2137, 2138, 2139, 2140, 2141, 2143, 2144, 2146, 2147, 2152, 2154, 2205, 2224, 2226, 2237, 2238, 2240, 2241, 2245, 2246, 2251, 2252, 2255, 2258, 2259, 2260, 2266, 2267, 2268, 2269, 2282, 2287, 2288], "rapidli": 40, "increas": [40, 78, 79, 82, 83, 126, 127, 130, 131, 154, 158, 164, 167, 168, 1200, 1218, 1294, 1297, 1714, 1834, 1835, 1836, 1837, 1838, 1870, 1881, 1882, 1883, 1884, 1885, 1946, 1947, 1948, 1949, 1950, 1955, 1968, 2140, 2255, 2258, 2262], "github": [40, 44, 46, 47, 49, 149, 153, 154, 156, 157, 166], "repo": [40, 44, 45, 46, 49, 149, 153, 154, 164, 165, 166, 167], "term": [40, 49, 152, 170, 1650, 1699, 1702, 2127, 2140, 2169, 2179], "time": [40, 41, 42, 47, 48, 49, 69, 72, 73, 90, 91, 117, 120, 121, 138, 139, 151, 152, 153, 154, 156, 160, 161, 162, 163, 164, 166, 167, 170, 173, 175, 187, 922, 923, 924, 925, 926, 953, 959, 1200, 1218, 1219, 1294, 1297, 1326, 1327, 1328, 1329, 1330, 1612, 1618, 1619, 1620, 1621, 1629, 1630, 1631, 1632, 1650, 1689, 1692, 1699, 1702, 1714, 1761, 1764, 1870, 1936, 1940, 1951, 1952, 1953, 1954, 2007, 2008, 2011, 2013, 2016, 2033, 2034, 2038, 2039, 2040, 2041, 2042, 2043, 2138, 2140, 2141, 2144, 2145, 2146, 2169, 2180, 2181, 2182], "These": [40, 41, 42, 44, 46, 47, 48, 49, 69, 117, 149, 152, 154, 156, 157, 159, 160, 161, 163, 164, 166, 167, 170, 171, 173, 174, 175, 187, 1200, 1215, 1250, 1251, 1252, 1253, 1254, 1714, 1740, 1741, 1744, 2127, 2140, 2144, 2146, 2147], "written": [40, 48, 149, 150, 157, 160, 163, 164, 167, 170, 172, 175, 187, 2138, 2140, 2144, 2146, 2147], "mani": [40, 41, 42, 47, 48, 49, 82, 83, 103, 104, 130, 131, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 172, 173, 187, 896, 902, 903, 1378, 1381, 1382, 1385, 1870, 1916, 1917, 1918, 1919, 1920, 2136, 2140, 2143, 2146, 2147, 2157, 2158], "differ": [40, 41, 42, 46, 48, 49, 51, 54, 55, 67, 68, 69, 70, 71, 100, 103, 104, 105, 106, 117, 118, 119, 142, 143, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 187, 341, 385, 388, 481, 497, 500, 777, 779, 781, 814, 817, 922, 923, 924, 925, 926, 953, 954, 959, 962, 963, 964, 970, 1017, 1020, 1022, 1025, 1027, 1030, 1032, 1035, 1037, 1040, 1121, 1124, 1200, 1209, 1210, 1219, 1310, 1311, 1312, 1313, 1314, 1326, 1327, 1328, 1329, 1330, 1353, 1358, 1417, 1476, 1477, 1478, 1479, 1480, 1650, 1689, 1692, 1694, 1697, 1714, 1801, 1804, 1870, 1876, 1879, 1926, 1929, 2070, 2071, 2074, 2076, 2079, 2097, 2100, 2106, 2110, 2111, 2114, 2128, 2137, 2138, 2139, 2140, 2143, 2146, 2147, 2181, 2182], "while": [40, 41, 47, 48, 49, 69, 76, 77, 100, 103, 104, 105, 106, 117, 124, 125, 150, 151, 153, 154, 156, 159, 160, 163, 164, 165, 166, 168, 172, 174, 175, 187, 255, 310, 313, 341, 428, 481, 682, 685, 687, 690, 886, 887, 888, 890, 953, 963, 964, 1032, 1035, 1037, 1040, 1650, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1668, 1670, 1672, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1687, 2033, 2034, 2038, 2070, 2089, 2092, 2102, 2105, 2140, 2146, 2147, 2152, 2155, 2228, 2229], "thi": [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 186, 187, 205, 207, 208, 209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 255, 257, 258, 260, 261, 262, 267, 268, 270, 271, 272, 274, 276, 277, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 308, 310, 311, 312, 314, 315, 316, 318, 319, 320, 321, 322, 323, 325, 327, 328, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 354, 355, 356, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 385, 388, 396, 397, 398, 399, 400, 403, 406, 408, 409, 411, 412, 413, 414, 416, 417, 420, 428, 429, 430, 431, 432, 433, 446, 448, 450, 453, 454, 455, 457, 466, 471, 472, 473, 474, 475, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 805, 807, 809, 810, 811, 813, 814, 815, 816, 818, 819, 820, 821, 823, 824, 825, 826, 828, 829, 830, 831, 833, 834, 835, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 851, 852, 853, 859, 860, 861, 863, 864, 865, 866, 867, 868, 869, 870, 872, 874, 875, 877, 881, 882, 883, 884, 885, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 897, 902, 903, 907, 908, 909, 910, 911, 913, 915, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 937, 938, 939, 940, 942, 943, 945, 946, 947, 948, 949, 950, 952, 953, 956, 957, 958, 959, 960, 962, 967, 973, 974, 977, 987, 988, 989, 990, 991, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1050, 1051, 1052, 1054, 1057, 1058, 1059, 1060, 1064, 1065, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1106, 1107, 1109, 1111, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1143, 1144, 1146, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1162, 1163, 1164, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1175, 1176, 1178, 1179, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1192, 1195, 1197, 1199, 1200, 1208, 1211, 1215, 1218, 1224, 1225, 1226, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1285, 1286, 1287, 1289, 1294, 1295, 1296, 1297, 1298, 1300, 1302, 1304, 1305, 1306, 1308, 1310, 1311, 1312, 1313, 1314, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1330, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1342, 1353, 1355, 1356, 1357, 1358, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1375, 1376, 1378, 1381, 1382, 1385, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1406, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1422, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1434, 1436, 1437, 1438, 1440, 1441, 1442, 1443, 1445, 1448, 1449, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 1461, 1462, 1463, 1466, 1467, 1469, 1470, 1471, 1472, 1473, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1493, 1494, 1495, 1496, 1497, 1498, 1502, 1503, 1505, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1528, 1529, 1530, 1531, 1533, 1534, 1535, 1537, 1538, 1539, 1541, 1547, 1548, 1549, 1551, 1552, 1554, 1556, 1562, 1568, 1569, 1570, 1572, 1573, 1574, 1575, 1577, 1578, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1589, 1590, 1591, 1592, 1594, 1595, 1596, 1597, 1598, 1606, 1607, 1608, 1609, 1611, 1612, 1614, 1615, 1616, 1618, 1619, 1622, 1624, 1625, 1626, 1629, 1630, 1633, 1634, 1637, 1638, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1649, 1650, 1652, 1653, 1654, 1655, 1656, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1681, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1730, 1731, 1732, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1784, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1821, 1824, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1839, 1843, 1844, 1845, 1847, 1848, 1849, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1864, 1865, 1866, 1867, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1955, 1958, 1962, 1963, 1968, 1969, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1985, 1986, 1987, 1988, 1990, 1991, 1992, 1993, 1995, 1996, 1997, 1998, 2000, 2002, 2003, 2004, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2075, 2076, 2077, 2078, 2080, 2081, 2082, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2128, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2149, 2152, 2154, 2155, 2159, 2160, 2163, 2164, 2167, 2169, 2181, 2182, 2183, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2205, 2225, 2226, 2228, 2237, 2241, 2245, 2246, 2251, 2253, 2266, 2269], "wonder": [40, 42, 172], "thing": [40, 41, 42, 46, 47, 48, 49, 151, 159, 164, 166, 168, 172, 173, 2140], "research": [40, 186, 2140, 2147], "develop": [40, 41, 42, 43, 44, 46, 47, 48, 49, 149, 153, 167, 186, 187, 2127, 2128, 2138, 2139, 2140, 2141, 2142, 2145, 2146, 2147], "consid": [40, 41, 69, 78, 79, 117, 126, 127, 150, 153, 154, 161, 167, 171, 172, 173, 481, 682, 685, 687, 690, 814, 815, 816, 817, 818, 881, 882, 883, 884, 885, 896, 902, 903, 953, 954, 957, 970, 1121, 1122, 1123, 1124, 1125, 1378, 1381, 1382, 1385, 1714, 1730, 1733, 1776, 1777, 1778, 1779, 1780, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2137, 2141, 2145, 2147, 2159, 2160, 2163, 2164, 2167, 2255, 2262], "speed": [40, 69, 117, 166, 1055, 1056, 1126, 1127, 1128, 1129, 1130, 2143], "evolv": [40, 2140], "shareabl": 40, "code": [40, 41, 42, 45, 46, 47, 48, 49, 65, 66, 67, 68, 100, 103, 104, 105, 106, 113, 114, 115, 116, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 185, 187, 446, 448, 472, 473, 474, 475, 476, 577, 579, 647, 648, 649, 651, 707, 708, 709, 1417, 1578, 1582, 1612, 1641, 1647, 1649, 1650, 1684, 1687, 1714, 1771, 1774, 1776, 1779, 1781, 1784, 1870, 1926, 1929, 2127, 2128, 2136, 2138, 2139, 2140, 2141, 2143, 2144, 2145, 2146, 2147], "significantli": [40, 78, 79, 126, 127, 153, 1714, 1811, 1812, 1813, 1814, 1815, 2138], "hinder": [40, 160], "librari": [40, 41, 42, 43, 47, 48, 65, 66, 113, 114, 149, 168, 175, 185, 187, 446, 472, 473, 474, 475, 476, 481, 597, 600, 662, 665, 682, 685, 687, 690, 1714, 1741, 1744, 1746, 1749, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2070, 2085, 2088, 2089, 2092, 2093, 2096, 2102, 2105, 2127, 2128, 2136, 2137, 2138, 2140, 2144, 2147], "outdat": 40, "month": [40, 48], "rigor": [40, 166], "maintain": [40, 49, 92, 93, 140, 141, 149, 153, 164, 165, 166, 2054, 2055, 2056, 2057, 2058, 2059, 2065, 2068, 2139], "against": [40, 63, 64, 69, 78, 79, 88, 89, 111, 112, 115, 116, 117, 126, 127, 136, 137, 166, 170, 187, 341, 354, 355, 356, 357, 702, 704, 706, 814, 817, 864, 865, 866, 867, 868, 891, 892, 893, 894, 895, 953, 954, 956, 958, 970, 1055, 1056, 1121, 1124, 1126, 1127, 1128, 1129, 1130, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1310, 1311, 1312, 1313, 1314, 1353, 1356, 1357, 1358, 1714, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1776, 1777, 1778, 1779, 1780, 1791, 1794, 2007, 2008, 2009, 2010, 2011, 2012, 2140], "newest": 40, "For": [40, 41, 42, 44, 45, 47, 48, 49, 61, 62, 69, 78, 79, 117, 126, 127, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 186, 187, 255, 257, 258, 300, 301, 303, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 557, 560, 562, 565, 567, 570, 592, 595, 597, 600, 602, 605, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 682, 685, 727, 730, 742, 745, 747, 750, 757, 760, 762, 765, 767, 770, 782, 786, 787, 791, 792, 796, 834, 835, 836, 837, 838, 953, 978, 1200, 1203, 1218, 1294, 1297, 1338, 1341, 1714, 1801, 1804, 1811, 1815, 1829, 1830, 1831, 1832, 1833, 1870, 1871, 1874, 1926, 1929, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2070, 2085, 2088, 2093, 2096, 2106, 2110, 2137, 2138, 2141, 2146, 2147, 2152, 2153, 2154, 2156, 2251, 2254], "softwar": [40, 41, 48, 49, 2138, 2143, 2144, 2145], "pipelin": [40, 149, 150, 165, 175, 2127, 2140, 2141, 2146], "where": [40, 41, 42, 43, 45, 48, 49, 61, 62, 67, 68, 69, 70, 71, 78, 79, 82, 83, 86, 87, 88, 89, 94, 95, 96, 97, 103, 104, 109, 110, 115, 116, 117, 126, 127, 130, 131, 134, 135, 136, 137, 142, 143, 144, 145, 149, 150, 151, 152, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 187, 255, 284, 285, 286, 288, 300, 301, 303, 310, 312, 313, 314, 481, 517, 520, 592, 595, 637, 640, 662, 665, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 727, 730, 805, 806, 807, 824, 826, 828, 829, 831, 833, 834, 836, 837, 838, 854, 855, 856, 857, 858, 859, 862, 896, 902, 903, 913, 915, 953, 963, 964, 970, 976, 977, 1002, 1003, 1004, 1005, 1006, 1032, 1035, 1037, 1040, 1072, 1073, 1074, 1075, 1076, 1097, 1098, 1099, 1100, 1101, 1121, 1124, 1149, 1155, 1158, 1159, 1188, 1189, 1190, 1191, 1192, 1200, 1203, 1211, 1218, 1294, 1297, 1300, 1301, 1303, 1305, 1306, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1320, 1321, 1324, 1333, 1336, 1353, 1358, 1378, 1381, 1382, 1385, 1417, 1518, 1519, 1521, 1547, 1548, 1611, 1612, 1641, 1647, 1649, 1714, 1740, 1741, 1744, 1766, 1769, 1776, 1777, 1778, 1779, 1780, 1791, 1794, 1796, 1797, 1798, 1799, 1800, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1829, 1830, 1831, 1832, 1833, 1839, 1843, 1870, 1871, 1872, 1873, 1874, 1875, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1890, 1896, 1897, 1898, 1899, 1900, 1926, 1929, 1946, 1947, 1948, 1949, 1950, 1955, 1967, 1980, 1981, 1984, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2007, 2018, 2019, 2020, 2022, 2023, 2024, 2025, 2026, 2027, 2029, 2070, 2102, 2103, 2104, 2105, 2111, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2128, 2138, 2147, 2159, 2161, 2162, 2163, 2166], "rapid": [40, 41, 48, 2140], "prototyp": [40, 2140], "vital": [40, 175], "signific": [40, 41, 187, 2140], "bottleneck": 40, "As": [40, 49, 98, 99, 146, 147, 150, 152, 153, 154, 155, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 187, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2140, 2145], "futur": [40, 42, 48, 49, 153, 154, 166, 167, 168, 172, 187, 1714, 1741, 1744, 1746, 1749, 2146], "avail": [40, 48, 49, 70, 71, 118, 119, 152, 153, 155, 157, 158, 164, 166, 187, 446, 452, 462, 463, 464, 478, 1417, 1456, 1457, 1458, 1459, 1460, 2145, 2146, 2251, 2252], "quickli": [40, 42, 48, 49, 153, 173, 174, 2140, 2147], "obsolet": [40, 42], "user": [40, 41, 44, 45, 48, 49, 148, 150, 151, 152, 153, 154, 158, 162, 163, 164, 166, 168, 169, 170, 187, 205, 206, 212, 953, 973, 1200, 1218, 1260, 1263, 1294, 1297, 2138, 2140, 2146, 2147, 2157, 2158, 2169, 2180, 2181, 2182], "constantli": [40, 167, 168], "invent": 40, "wheel": 40, "our": [40, 41, 43, 46, 47, 48, 49, 51, 98, 99, 100, 146, 147, 149, 150, 152, 153, 154, 156, 158, 159, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 187, 205, 248, 249, 255, 341, 446, 481, 1416, 1417, 1612, 1650, 1714, 1854, 1870, 1951, 1955, 1975, 1980, 2007, 2054, 2070, 2116, 2128, 2145, 2146, 2149, 2152, 2159, 2169, 2181, 2183, 2185, 2191, 2255, 2262], "desir": [40, 49, 63, 64, 65, 66, 69, 88, 89, 103, 104, 111, 112, 113, 114, 117, 136, 137, 151, 153, 154, 164, 170, 341, 349, 350, 351, 352, 353, 359, 360, 361, 363, 364, 365, 366, 367, 368, 446, 472, 473, 474, 475, 476, 1265, 1266, 1267, 1268, 1269, 1310, 1311, 1312, 1313, 1314, 1353, 1356, 1358, 2007, 2018, 2019, 2020, 2021, 2022, 2140, 2159, 2160, 2163, 2164, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180], "simultan": [40, 42], "modern": [40, 41, 2145], "simpl": [40, 47, 48, 49, 150, 152, 154, 155, 156, 157, 161, 163, 164, 166, 167, 168, 172, 174, 175, 187, 1417, 1466, 1468, 2127, 2139, 2140, 2141, 2142, 2255, 2262], "scalabl": [40, 170, 2145, 2146], "manner": [40, 48, 56, 59, 60, 107, 108, 155, 157, 164, 167, 173, 186, 187, 1955, 1968, 2136, 2138, 2146, 2147], "determin": [40, 51, 54, 55, 67, 68, 69, 78, 79, 82, 83, 96, 97, 100, 103, 104, 105, 106, 115, 116, 117, 118, 119, 126, 127, 140, 141, 144, 145, 152, 154, 155, 157, 161, 164, 168, 255, 276, 277, 341, 364, 367, 370, 384, 402, 403, 406, 408, 410, 412, 415, 417, 420, 422, 425, 445, 446, 462, 463, 464, 478, 481, 487, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 537, 538, 539, 540, 541, 542, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 577, 578, 579, 580, 581, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 607, 608, 609, 611, 622, 625, 627, 630, 632, 635, 637, 640, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 692, 695, 707, 708, 709, 710, 711, 727, 728, 729, 730, 731, 742, 743, 745, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 776, 777, 778, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 797, 798, 799, 800, 801, 905, 906, 953, 978, 1113, 1114, 1115, 1116, 1117, 1119, 1149, 1161, 1338, 1339, 1340, 1341, 1342, 1417, 1418, 1421, 1425, 1428, 1502, 1504, 1505, 1506, 1507, 1523, 1524, 1527, 1529, 1532, 1534, 1536, 1537, 1540, 1578, 1582, 1606, 1610, 1650, 1704, 1707, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1735, 1736, 1738, 1751, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1764, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1786, 1789, 1791, 1793, 1794, 1795, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 1829, 1830, 1831, 1832, 1833, 1839, 1843, 1844, 1845, 1847, 1848, 1870, 1876, 1877, 1879, 1951, 1952, 1953, 1954, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2055, 2057, 2059, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2159, 2164, 2167, 2255, 2262, 2282, 2284, 2286], "exactli": [40, 42, 152, 153, 154, 155, 156, 166, 168], "common": [40, 47, 69, 103, 104, 117, 152, 154, 155, 156, 159, 161, 162, 164, 167, 168, 187, 341, 428, 881, 884, 953, 957, 962, 966, 971, 1027, 1028, 1030, 1050, 1053, 1166, 1167, 1168, 1169, 1170, 2137, 2140, 2147], "ground": [40, 164, 166, 2194, 2195, 2201, 2205, 2224, 2225, 2226], "li": [40, 69, 117, 1310, 1311, 1312, 1313, 1314, 1353, 1358], "between": [40, 69, 76, 77, 80, 81, 82, 83, 90, 91, 100, 103, 104, 105, 106, 115, 116, 117, 124, 125, 128, 129, 130, 131, 150, 151, 152, 156, 160, 161, 164, 165, 166, 168, 169, 171, 172, 173, 175, 186, 255, 257, 258, 341, 385, 388, 481, 517, 520, 727, 730, 814, 817, 869, 870, 871, 872, 953, 954, 970, 979, 1121, 1124, 1193, 1194, 1200, 1218, 1294, 1297, 1310, 1311, 1312, 1313, 1314, 1353, 1358, 1375, 1376, 1377, 1650, 1689, 1690, 1691, 1692, 1693, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1886, 1887, 1888, 1890, 1926, 1929, 1955, 1962, 1980, 1986, 1989, 2033, 2034, 2036, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2128, 2136, 2137, 2139, 2140, 2141, 2146, 2185, 2187, 2251, 2254], "find": [40, 43, 45, 46, 47, 48, 49, 103, 104, 149, 153, 166, 168, 170, 173, 1955, 1958, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2127, 2128], "essenti": [40, 41, 47, 152, 155, 156, 161, 164, 167, 2146], "order": [40, 45, 47, 48, 49, 51, 54, 55, 69, 72, 73, 76, 77, 78, 79, 82, 83, 90, 91, 92, 93, 100, 103, 104, 105, 106, 117, 124, 125, 126, 127, 130, 131, 140, 141, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 173, 175, 187, 255, 300, 303, 481, 517, 520, 896, 902, 903, 943, 946, 948, 951, 953, 967, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1057, 1058, 1059, 1060, 1092, 1093, 1171, 1174, 1176, 1179, 1180, 1195, 1199, 1200, 1208, 1209, 1210, 1343, 1344, 1378, 1381, 1382, 1385, 1624, 1625, 1650, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1668, 1670, 1672, 1675, 1677, 1678, 1679, 1680, 1681, 1684, 1687, 1714, 1740, 1741, 1744, 1766, 1767, 1768, 1769, 1770, 1811, 1815, 1816, 1820, 1834, 1835, 1836, 1837, 1838, 1844, 1845, 1847, 1848, 1870, 1891, 1894, 1906, 1907, 1908, 1909, 1910, 1951, 1952, 1953, 2007, 2023, 2026, 2033, 2034, 2036, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2063, 2065, 2068, 2136, 2139, 2140, 2141, 2143, 2146, 2157, 2158, 2181, 2182, 2191, 2192, 2205, 2223, 2224, 2225, 2226], "design": [40, 41, 117, 148, 153, 154, 163, 164, 165, 168, 170, 172, 187, 896, 900, 901, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 2136, 2138, 2140, 2143, 2144, 2145], "univers": [40, 164, 2251, 2252], "abstract": [40, 152, 154, 164, 166, 168, 174, 187, 446, 448, 2138, 2140, 2142, 2143, 2147, 2159, 2163, 2185, 2189], "In": [40, 42, 44, 47, 48, 49, 65, 66, 70, 71, 82, 83, 113, 114, 130, 131, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 175, 186, 187, 446, 466, 472, 473, 474, 475, 476, 477, 480, 481, 497, 500, 742, 745, 932, 1149, 1156, 1417, 1423, 1518, 1519, 1521, 1714, 1801, 1804, 1870, 1906, 1907, 1908, 1909, 1910, 1980, 1996, 1999, 2128, 2136, 2138, 2140, 2141, 2143, 2146, 2152, 2154], "search": [40, 46, 48, 56, 59, 60, 89, 107, 108, 137, 152, 156, 166, 167, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2021, 2023, 2026, 2028, 2032, 2282, 2284, 2286], "languag": [40, 42, 164, 168, 170, 2127, 2138, 2141, 2143, 2144, 2145, 2146], "see": [40, 43, 45, 47, 48, 49, 51, 54, 55, 63, 64, 67, 68, 78, 79, 88, 89, 94, 95, 96, 97, 100, 105, 106, 115, 116, 126, 127, 136, 137, 142, 143, 144, 145, 149, 150, 152, 153, 155, 156, 158, 160, 161, 164, 165, 166, 167, 168, 170, 172, 173, 186, 187, 255, 257, 258, 279, 282, 290, 293, 341, 359, 362, 412, 413, 429, 432, 481, 497, 498, 499, 500, 501, 517, 518, 519, 521, 527, 528, 529, 530, 531, 537, 538, 539, 540, 541, 542, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 577, 578, 579, 580, 581, 582, 583, 584, 586, 597, 600, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 621, 642, 643, 644, 645, 646, 647, 648, 649, 651, 662, 665, 672, 673, 674, 675, 676, 677, 678, 679, 681, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 707, 708, 709, 710, 711, 717, 718, 719, 720, 721, 727, 728, 729, 730, 731, 742, 743, 744, 745, 746, 777, 778, 779, 780, 781, 797, 798, 799, 800, 801, 896, 902, 903, 1378, 1381, 1382, 1385, 1714, 1720, 1721, 1722, 1724, 1776, 1777, 1778, 1779, 1780, 1791, 1794, 1806, 1809, 1839, 1843, 1844, 1845, 1847, 1848, 2007, 2013, 2014, 2015, 2016, 2017, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2070, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2128, 2136], "clear": [40, 41, 42, 47, 49, 154, 155, 156, 164, 168, 170, 172, 446, 451, 2140], "front": [40, 164, 169, 170, 173, 2128, 2138, 2140], "runner": 40, "look": [40, 44, 45, 48, 49, 151, 152, 154, 155, 156, 158, 160, 161, 164, 165, 166, 167, 168, 170, 172, 174, 175, 2128, 2136, 2140], "littl": [40, 172, 2142], "deeper": [40, 49, 148, 166, 169, 1955, 1956, 1957, 1966, 1967, 1968], "follow": [40, 41, 45, 47, 48, 49, 69, 70, 71, 72, 73, 76, 77, 78, 79, 103, 104, 117, 118, 119, 120, 121, 124, 125, 126, 127, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 187, 341, 396, 399, 446, 471, 481, 742, 745, 913, 915, 992, 995, 1113, 1114, 1115, 1116, 1117, 1149, 1155, 1161, 1200, 1207, 1218, 1294, 1297, 1417, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1521, 1568, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1612, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1650, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1766, 1769, 1796, 1797, 1798, 1799, 1800, 1844, 1845, 1847, 1848, 1955, 1962, 1968, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2128, 2137, 2140, 2143, 2169, 2179, 2185, 2189], "same": [40, 42, 44, 45, 48, 49, 51, 54, 55, 56, 57, 58, 61, 62, 63, 64, 67, 68, 69, 72, 73, 76, 77, 78, 79, 82, 83, 86, 87, 90, 91, 92, 93, 94, 95, 103, 104, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 134, 135, 138, 139, 142, 143, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 174, 175, 187, 255, 257, 258, 271, 272, 274, 285, 286, 287, 288, 289, 295, 297, 299, 300, 301, 303, 310, 311, 312, 313, 314, 318, 319, 320, 321, 322, 323, 325, 327, 328, 330, 332, 336, 337, 338, 339, 340, 341, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 385, 387, 389, 396, 398, 400, 446, 447, 471, 481, 482, 483, 484, 485, 486, 487, 488, 492, 493, 497, 500, 502, 503, 512, 513, 532, 533, 534, 535, 536, 542, 543, 544, 546, 557, 558, 559, 560, 561, 602, 603, 604, 605, 606, 712, 713, 714, 716, 722, 723, 724, 726, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 792, 793, 794, 795, 796, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 886, 887, 896, 897, 902, 903, 953, 962, 981, 997, 998, 999, 1000, 1001, 1027, 1030, 1055, 1056, 1126, 1127, 1128, 1129, 1130, 1149, 1150, 1151, 1152, 1162, 1163, 1164, 1171, 1174, 1200, 1218, 1220, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1255, 1256, 1258, 1294, 1297, 1310, 1311, 1312, 1313, 1314, 1343, 1344, 1345, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1378, 1381, 1382, 1385, 1386, 1387, 1388, 1389, 1390, 1411, 1415, 1481, 1483, 1612, 1642, 1643, 1644, 1645, 1646, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1692, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1723, 1725, 1728, 1735, 1736, 1738, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1771, 1774, 1781, 1782, 1783, 1784, 1785, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1806, 1809, 1811, 1813, 1815, 1829, 1830, 1831, 1832, 1833, 1839, 1843, 1870, 1876, 1877, 1879, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1906, 1907, 1908, 1909, 1911, 1912, 1913, 1914, 1915, 1921, 1924, 1926, 1927, 1928, 1929, 1930, 1951, 1952, 1953, 1955, 1969, 1980, 1996, 1997, 1998, 1999, 2000, 2033, 2034, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2053, 2054, 2055, 2056, 2058, 2065, 2068, 2070, 2071, 2074, 2076, 2079, 2081, 2082, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2128, 2137, 2139, 2146, 2147, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2194, 2195, 2237, 2240, 2251, 2252, 2255, 2263], "core": [40, 47, 48, 155, 166, 175, 446, 463, 2128, 2138, 2139, 2140, 2141, 2145, 2147], "principl": [40, 2138, 2140, 2143], "oper": [40, 47, 48, 61, 62, 63, 64, 69, 70, 71, 72, 73, 76, 77, 100, 103, 104, 105, 106, 109, 110, 111, 112, 117, 118, 119, 124, 125, 149, 150, 152, 154, 155, 156, 157, 158, 161, 163, 164, 166, 168, 170, 173, 174, 255, 290, 293, 295, 296, 297, 298, 299, 341, 429, 430, 431, 432, 433, 481, 497, 500, 547, 550, 742, 745, 805, 807, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 873, 953, 973, 982, 985, 1002, 1005, 1062, 1063, 1097, 1100, 1149, 1150, 1151, 1152, 1157, 1158, 1159, 1162, 1163, 1164, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1260, 1261, 1262, 1263, 1264, 1305, 1306, 1308, 1417, 1430, 1432, 1433, 1451, 1454, 1456, 1459, 1460, 1461, 1464, 1465, 1578, 1579, 1580, 1581, 1582, 1624, 1625, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1694, 1697, 2127, 2136, 2137, 2138, 2139, 2140, 2141, 2143, 2144, 2145, 2146, 2147, 2237, 2241, 2245, 2246, 2266, 2267, 2268, 2269], "expos": [40, 153, 170, 174, 1417, 1446], "almost": [40, 46, 152, 165, 171, 173], "ident": [40, 42, 103, 104, 152, 161, 162, 164, 165, 167, 168, 172, 173, 187, 255, 276, 277, 446, 461, 1417, 1489, 1714, 1771, 1774, 1955, 1969, 2127, 2128], "uniqu": [40, 69, 90, 91, 117, 138, 139, 149, 152, 161, 164, 165, 168, 187, 1055, 1056, 1126, 1127, 1128, 1129, 1130, 1200, 1215, 1218, 1250, 1251, 1252, 1253, 1254, 1294, 1297, 1951, 1952, 1953, 1954, 1955, 1958, 1962, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2053, 2143, 2255, 2258], "syntax": [40, 41, 154, 159, 2140], "There": [40, 47, 48, 49, 149, 150, 152, 154, 156, 158, 159, 161, 164, 165, 170, 173, 187, 2141, 2142, 2146, 2147, 2255, 2262], "onli": [40, 43, 47, 48, 49, 51, 54, 55, 61, 62, 69, 78, 79, 82, 83, 86, 87, 103, 104, 109, 110, 117, 126, 127, 130, 131, 134, 135, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 185, 187, 255, 295, 296, 297, 298, 299, 341, 427, 428, 446, 467, 480, 481, 682, 685, 687, 690, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 854, 855, 856, 857, 858, 859, 862, 896, 897, 913, 915, 953, 967, 973, 976, 997, 1000, 1012, 1013, 1014, 1015, 1016, 1057, 1058, 1060, 1113, 1114, 1115, 1116, 1117, 1149, 1155, 1161, 1200, 1201, 1202, 1208, 1260, 1261, 1262, 1263, 1264, 1315, 1316, 1317, 1321, 1323, 1324, 1325, 1417, 1435, 1714, 1761, 1764, 1796, 1797, 1798, 1799, 1800, 1811, 1812, 1813, 1814, 1815, 1870, 1891, 1892, 1893, 1894, 1895, 1906, 1907, 1908, 1909, 1910, 1955, 1956, 1957, 1963, 1964, 1966, 1967, 1968, 1973, 1974, 1980, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2007, 2008, 2011, 2013, 2016, 2054, 2060, 2063, 2070, 2089, 2092, 2102, 2105, 2128, 2139, 2140, 2141, 2146, 2147, 2152, 2154, 2181, 2182, 2185, 2186, 2187, 2188, 2189, 2190, 2228, 2237, 2241, 2245, 2246, 2255, 2256, 2266, 2267, 2268, 2269], "sowai": [40, 41, 46, 47, 48, 149, 150, 151, 153, 154, 163, 164, 165, 166, 168, 172, 173, 174, 175, 187, 2142, 2146, 2147], "manipul": [40, 83, 131, 164, 167, 168, 170, 175, 186, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1871, 1874, 1876, 1879, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1899, 1901, 1904, 1906, 1909, 1911, 1914, 1916, 1919, 1921, 1924, 1926, 1929, 1931, 1935, 1936, 1940, 1941, 1945, 1946, 1950, 2140], "unsurprisingli": [40, 156], "fundament": [40, 153, 164, 168, 170, 2140], "consist": [40, 94, 95, 103, 104, 149, 150, 153, 154, 158, 163, 170, 1714, 1740, 1741, 1744, 2070, 2081, 2082, 2084, 2141, 2181, 2182], "each": [40, 41, 42, 44, 47, 48, 49, 51, 54, 55, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 82, 83, 88, 89, 90, 91, 94, 95, 100, 103, 104, 105, 106, 111, 112, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 136, 137, 138, 139, 142, 143, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 175, 186, 187, 205, 223, 226, 228, 231, 233, 236, 243, 246, 255, 300, 301, 303, 341, 354, 355, 356, 357, 358, 385, 387, 389, 396, 398, 400, 446, 471, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 520, 522, 523, 524, 525, 526, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 580, 582, 585, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 675, 677, 680, 682, 684, 685, 686, 687, 690, 692, 695, 707, 710, 712, 713, 714, 715, 716, 717, 720, 722, 723, 724, 725, 726, 727, 730, 732, 734, 735, 736, 737, 740, 742, 743, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 805, 808, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 886, 887, 888, 890, 933, 934, 935, 936, 937, 953, 955, 962, 976, 978, 981, 1017, 1020, 1022, 1025, 1027, 1030, 1055, 1056, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1087, 1088, 1092, 1094, 1095, 1096, 1126, 1127, 1128, 1129, 1130, 1149, 1150, 1151, 1152, 1162, 1163, 1164, 1171, 1172, 1173, 1174, 1175, 1200, 1201, 1202, 1203, 1205, 1209, 1210, 1211, 1212, 1214, 1215, 1218, 1222, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1250, 1251, 1252, 1253, 1254, 1294, 1297, 1315, 1316, 1321, 1324, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1365, 1369, 1396, 1397, 1398, 1399, 1400, 1411, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1425, 1427, 1429, 1451, 1453, 1454, 1455, 1456, 1460, 1461, 1465, 1476, 1477, 1478, 1479, 1480, 1611, 1612, 1618, 1619, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1723, 1725, 1728, 1740, 1741, 1744, 1746, 1749, 1761, 1764, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1791, 1794, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1834, 1838, 1870, 1881, 1882, 1883, 1884, 1885, 1901, 1902, 1903, 1904, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1926, 1927, 1928, 1929, 1930, 1936, 1937, 1938, 1939, 1940, 1946, 1947, 1948, 1949, 1950, 1955, 1962, 1969, 1980, 1981, 1984, 2007, 2023, 2024, 2025, 2026, 2027, 2033, 2034, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2070, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2084, 2111, 2114, 2128, 2136, 2137, 2141, 2143, 2146, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2180, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2237, 2245, 2246, 2255, 2261], "veri": [40, 41, 46, 47, 48, 49, 69, 117, 152, 154, 155, 156, 158, 160, 161, 163, 164, 165, 166, 167, 168, 171, 173, 174, 175, 187, 814, 817, 953, 954, 970, 973, 1121, 1124, 1260, 1261, 1262, 1263, 1264, 1714, 1801, 1804, 2128, 2136, 2137, 2138, 2140, 2141, 2142, 2145, 2146, 2147, 2255, 2262], "similar": [40, 47, 48, 152, 154, 155, 158, 162, 164, 165, 166, 167, 173, 187, 481, 742, 745, 1650, 1704, 1707, 2136, 2137, 2138, 2139, 2146, 2169, 2180], "convent": [40, 151, 160, 167, 186, 1714, 1761, 1764, 2070, 2081, 2084, 2146], "those": [40, 47, 48, 49, 78, 79, 82, 83, 103, 104, 117, 126, 127, 130, 131, 150, 152, 153, 154, 162, 164, 165, 166, 168, 255, 257, 258, 341, 428, 1360, 1361, 1363, 1417, 1611, 1714, 1796, 1797, 1798, 1799, 1800, 1811, 1815, 1870, 1871, 1872, 1873, 1874, 1875, 1955, 1958, 2137], "introduc": [40, 152, 154, 165, 166, 173, 1870, 1911, 1914, 2033, 2034, 2038], "2006": 40, "layer": [40, 77, 84, 85, 125, 132, 133, 157, 164, 167, 168, 170, 171, 174, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1683, 1684, 1687, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1709, 1712, 1975, 1976, 1977, 1978, 1979, 2128, 2138, 2140, 2144, 2147, 2157, 2158, 2159, 2160, 2161, 2163, 2164, 2166, 2167, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2191, 2192], "therefor": [40, 44, 47, 49, 61, 62, 67, 68, 78, 79, 115, 116, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 170, 172, 174, 187, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 296, 298, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 403, 406, 417, 420, 428, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 688, 689, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 839, 842, 844, 847, 849, 852, 896, 897, 902, 903, 907, 910, 917, 920, 922, 925, 932, 943, 946, 953, 959, 997, 1000, 1149, 1150, 1151, 1152, 1154, 1156, 1162, 1163, 1164, 1176, 1178, 1179, 1200, 1218, 1229, 1232, 1234, 1237, 1239, 1242, 1294, 1297, 1378, 1381, 1382, 1385, 1417, 1476, 1479, 1493, 1496, 1502, 1505, 1508, 1511, 1578, 1582, 1594, 1598, 1612, 1642, 1646, 1650, 1652, 1655, 1662, 1665, 1667, 1670, 1672, 1675, 1684, 1687, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1712, 1714, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1733, 1735, 1738, 1740, 1741, 1744, 1746, 1747, 1749, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1804, 1806, 1809, 1811, 1815, 1816, 1820, 1821, 1824, 1839, 1843, 1844, 1848, 1849, 1853, 1870, 1871, 1874, 1876, 1879, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1899, 1901, 1904, 1906, 1909, 1911, 1914, 1916, 1919, 1921, 1924, 1926, 1929, 1931, 1935, 1936, 1940, 1941, 1945, 1946, 1950, 1975, 1976, 1979, 2007, 2008, 2011, 2013, 2016, 2023, 2026, 2028, 2032, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2054, 2055, 2058, 2065, 2068, 2070, 2085, 2088, 2089, 2092, 2093, 2096, 2097, 2100, 2102, 2105, 2106, 2110, 2111, 2115, 2116, 2117, 2120, 2122, 2125, 2137, 2140, 2146], "present": [40, 47, 49, 103, 104, 152, 154, 155, 160, 163, 170, 2137, 2138, 2147], "itself": [40, 48, 49, 69, 149, 152, 153, 158, 163, 164, 174, 186, 187, 953, 973, 1260, 1261, 1263, 1417, 1423, 1599, 1955, 1968, 2139, 2140, 2141, 2146], "cut": [40, 2146], "cloth": 40, "adher": [40, 41, 149, 154, 157, 160, 168, 170, 175, 2136, 2137, 2146], "semant": [40, 170, 175, 481, 742, 745, 2141], "round": [40, 41, 42, 44, 45, 47, 48, 49, 67, 68, 69, 115, 116, 117, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 186, 481, 497, 500, 557, 558, 559, 560, 561, 602, 603, 604, 605, 606, 607, 610, 751, 767, 770, 792, 793, 794, 795, 796, 797, 801, 953, 961, 1007, 1008, 1009, 1010, 1011, 2128, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147], "up": [40, 41, 42, 43, 44, 45, 47, 49, 69, 117, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 186, 187, 913, 915, 1022, 1025, 1055, 1056, 1113, 1114, 1115, 1116, 1117, 1126, 1127, 1128, 1129, 1130, 1149, 1155, 1161, 1200, 1210, 1650, 1689, 1692, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2157, 2158], "hopefulli": [40, 41, 42, 44, 45, 47, 48, 49, 51, 100, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 186, 205, 248, 249, 255, 341, 446, 481, 1416, 1417, 1612, 1650, 1714, 1854, 1870, 1951, 1955, 1975, 1980, 2007, 2054, 2070, 2116, 2149, 2152, 2159, 2169, 2181, 2183, 2185, 2191], "paint": [40, 170], "pictur": [40, 47, 170], "how": [40, 42, 43, 45, 46, 47, 48, 49, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 186, 187, 2128, 2136, 2140, 2157, 2158, 2159, 2164, 2167, 2169, 2180, 2181, 2182], "pleas": [40, 41, 42, 44, 45, 47, 48, 49, 51, 100, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 186, 205, 248, 249, 255, 341, 446, 481, 1416, 1417, 1612, 1650, 1714, 1854, 1870, 1951, 1955, 1975, 1980, 2007, 2054, 2070, 2116, 2128, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2149, 2152, 2159, 2169, 2181, 2183, 2185, 2191], "reach": [40, 41, 42, 44, 45, 47, 48, 49, 51, 100, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 186, 205, 248, 249, 255, 341, 446, 481, 1416, 1417, 1612, 1650, 1714, 1854, 1870, 1951, 1955, 1968, 1975, 1980, 2007, 2054, 2070, 2116, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2149, 2152, 2159, 2169, 2181, 2183, 2185, 2191], "out": [40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 186, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 255, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 305, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 349, 350, 351, 352, 353, 359, 360, 361, 362, 363, 380, 381, 383, 446, 472, 473, 474, 475, 476, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 877, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 904, 907, 908, 909, 910, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 938, 939, 940, 941, 942, 943, 944, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1121, 1122, 1123, 1124, 1125, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1206, 1207, 1208, 1209, 1210, 1211, 1213, 1214, 1215, 1219, 1220, 1221, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1298, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1382, 1383, 1384, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1424, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1469, 1471, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1518, 1520, 1522, 1524, 1528, 1543, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1814, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1946, 1947, 1948, 1949, 1950, 1951, 1955, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2028, 2029, 2030, 2031, 2032, 2033, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2128, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2149, 2152, 2159, 2169, 2177, 2181, 2183, 2185, 2191, 2282, 2284, 2286], "discord": [40, 41, 42, 44, 45, 47, 48, 49, 51, 100, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 186, 205, 248, 249, 255, 341, 446, 481, 1416, 1417, 1612, 1650, 1714, 1854, 1870, 1951, 1955, 1975, 1980, 2007, 2054, 2070, 2116, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2149, 2152, 2159, 2169, 2181, 2183, 2185, 2191], "you": [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 69, 70, 71, 100, 117, 118, 119, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 186, 187, 205, 248, 249, 255, 341, 446, 481, 992, 995, 1200, 1207, 1270, 1271, 1272, 1273, 1353, 1357, 1416, 1417, 1476, 1477, 1478, 1479, 1480, 1612, 1650, 1714, 1854, 1870, 1951, 1955, 1975, 1980, 2007, 2054, 2070, 2116, 2127, 2128, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2149, 2152, 2159, 2169, 2181, 2183, 2185, 2191], "question": [40, 41, 42, 44, 45, 47, 48, 49, 51, 100, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 186, 187, 205, 248, 249, 255, 341, 446, 481, 1416, 1417, 1612, 1650, 1714, 1854, 1870, 1951, 1955, 1975, 1980, 2007, 2054, 2070, 2116, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2149, 2152, 2159, 2169, 2181, 2183, 2185, 2191], "With": [41, 42, 48, 51, 54, 55, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 82, 83, 88, 89, 94, 95, 100, 105, 106, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 156, 162, 164, 166, 168, 170, 205, 206, 207, 210, 212, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 255, 267, 269, 276, 277, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 298, 300, 303, 310, 311, 312, 313, 314, 315, 316, 318, 321, 336, 340, 341, 349, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 370, 380, 382, 384, 385, 388, 396, 399, 417, 420, 429, 432, 434, 435, 436, 437, 446, 450, 453, 456, 481, 482, 485, 487, 490, 492, 495, 497, 500, 501, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 531, 532, 535, 542, 545, 546, 547, 550, 551, 552, 555, 557, 560, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 597, 600, 601, 602, 605, 607, 608, 609, 610, 611, 612, 615, 617, 620, 622, 625, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 640, 642, 645, 647, 648, 649, 650, 651, 652, 655, 657, 660, 662, 665, 672, 675, 677, 680, 682, 683, 685, 687, 690, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 742, 743, 744, 745, 746, 747, 749, 750, 751, 752, 755, 757, 760, 762, 765, 767, 770, 772, 773, 775, 782, 786, 787, 791, 792, 793, 796, 797, 798, 799, 800, 801, 805, 808, 869, 871, 891, 892, 893, 894, 895, 896, 897, 907, 910, 911, 917, 920, 932, 938, 942, 943, 946, 948, 951, 953, 958, 971, 976, 978, 997, 1000, 1012, 1014, 1015, 1016, 1017, 1019, 1021, 1022, 1024, 1026, 1068, 1069, 1071, 1072, 1074, 1075, 1076, 1082, 1086, 1092, 1094, 1096, 1107, 1108, 1109, 1110, 1111, 1121, 1123, 1125, 1149, 1154, 1156, 1166, 1169, 1171, 1175, 1176, 1178, 1179, 1180, 1193, 1194, 1200, 1208, 1211, 1215, 1218, 1219, 1221, 1244, 1246, 1248, 1250, 1252, 1253, 1254, 1255, 1259, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1277, 1279, 1290, 1291, 1294, 1297, 1310, 1311, 1312, 1313, 1314, 1321, 1324, 1326, 1329, 1338, 1341, 1353, 1356, 1357, 1358, 1365, 1369, 1370, 1371, 1372, 1373, 1374, 1386, 1387, 1389, 1401, 1402, 1417, 1418, 1420, 1421, 1422, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1448, 1450, 1451, 1452, 1454, 1455, 1456, 1459, 1461, 1464, 1466, 1468, 1476, 1479, 1480, 1481, 1484, 1493, 1496, 1502, 1505, 1508, 1509, 1511, 1513, 1514, 1516, 1552, 1553, 1554, 1555, 1568, 1569, 1571, 1578, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1606, 1607, 1608, 1611, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1637, 1639, 1640, 1642, 1643, 1645, 1646, 1648, 1650, 1652, 1655, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1684, 1687, 1689, 1690, 1692, 1694, 1697, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1728, 1730, 1733, 1735, 1736, 1737, 1738, 1739, 1746, 1747, 1748, 1749, 1750, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1801, 1804, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1821, 1824, 1829, 1830, 1832, 1833, 1834, 1835, 1837, 1838, 1854, 1855, 1858, 1859, 1860, 1864, 1865, 1868, 1869, 1870, 1871, 1874, 1875, 1881, 1884, 1886, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1899, 1901, 1904, 1906, 1909, 1910, 1911, 1914, 1915, 1916, 1919, 1921, 1924, 1926, 1929, 1931, 1935, 1936, 1940, 1941, 1942, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1955, 1957, 1959, 1962, 1963, 1964, 1965, 1967, 1973, 1974, 1975, 1976, 1978, 1979, 1980, 1981, 1984, 1986, 1990, 1991, 1995, 1996, 2000, 2002, 2005, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2016, 2018, 2021, 2023, 2026, 2028, 2032, 2033, 2034, 2038, 2039, 2042, 2043, 2044, 2048, 2054, 2055, 2058, 2059, 2060, 2063, 2065, 2068, 2069, 2070, 2071, 2073, 2074, 2075, 2076, 2078, 2079, 2080, 2081, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2115, 2116, 2117, 2120, 2122, 2125, 2140, 2143], "central": [41, 47, 168, 2146], "goal": [41, 47, 2140, 2146], "being": [41, 42, 48, 49, 51, 54, 55, 103, 104, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 162, 163, 164, 165, 166, 168, 170, 173, 186, 187, 255, 257, 258, 1200, 1218, 1294, 1297, 1417, 1435, 1498, 1562, 1714, 1746, 1749, 2128, 2134, 2135, 2136, 2138, 2139, 2140, 2141, 2146, 2147, 2157, 2158, 2159, 2167, 2205, 2226, 2266, 2267], "would": [41, 43, 45, 47, 48, 49, 65, 66, 69, 82, 83, 113, 114, 117, 130, 131, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 162, 163, 164, 165, 166, 168, 169, 170, 172, 174, 175, 187, 205, 218, 221, 238, 241, 446, 472, 473, 474, 475, 476, 1002, 1003, 1004, 1005, 1006, 1097, 1098, 1099, 1100, 1101, 1149, 1158, 1159, 1870, 1906, 1907, 1908, 1909, 1910, 2128, 2140, 2146, 2255, 2262], "entir": [41, 42, 47, 48, 49, 94, 95, 96, 97, 103, 104, 118, 119, 142, 143, 144, 145, 149, 150, 152, 154, 156, 158, 163, 164, 165, 166, 168, 170, 173, 174, 175, 187, 446, 471, 932, 1149, 1156, 1200, 1218, 1294, 1297, 1502, 1504, 1506, 2070, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2140, 2146, 2147, 2169, 2178], "forgiven": 41, "rais": [41, 49, 69, 70, 71, 82, 83, 86, 87, 96, 97, 103, 104, 117, 118, 119, 130, 131, 134, 135, 144, 145, 149, 151, 158, 159, 163, 164, 170, 172, 341, 359, 362, 481, 592, 595, 727, 730, 859, 862, 953, 962, 1027, 1028, 1029, 1030, 1031, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1315, 1317, 1353, 1356, 1357, 1417, 1430, 1431, 1433, 1434, 1490, 1518, 1519, 1521, 1559, 1573, 1576, 1578, 1579, 1582, 1599, 1612, 1641, 1647, 1649, 1714, 1761, 1764, 1771, 1774, 1839, 1843, 1870, 1886, 1889, 1906, 1907, 1908, 1909, 1910, 1926, 1929, 1980, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2007, 2023, 2026, 2070, 2085, 2088, 2093, 2096, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2181, 2182, 2185, 2189, 2194, 2200, 2255, 2258], "an": [41, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 126, 127, 130, 131, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 186, 187, 205, 207, 208, 213, 214, 218, 219, 223, 226, 228, 229, 231, 233, 236, 238, 239, 243, 244, 246, 248, 249, 255, 257, 258, 260, 261, 262, 267, 268, 269, 270, 271, 272, 274, 276, 277, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 298, 300, 301, 303, 305, 308, 315, 316, 318, 319, 321, 323, 325, 327, 328, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 364, 367, 385, 386, 388, 396, 397, 398, 399, 400, 403, 406, 417, 420, 428, 429, 430, 431, 432, 433, 446, 447, 472, 473, 474, 475, 476, 481, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 565, 567, 568, 569, 570, 571, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 608, 610, 612, 613, 615, 617, 618, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 647, 648, 650, 652, 653, 655, 657, 658, 660, 662, 663, 665, 667, 668, 670, 672, 673, 675, 677, 678, 680, 682, 683, 685, 687, 688, 689, 690, 692, 693, 695, 697, 698, 699, 700, 702, 703, 705, 707, 708, 710, 712, 713, 715, 717, 718, 720, 722, 723, 725, 727, 728, 730, 732, 733, 735, 737, 738, 742, 743, 745, 747, 748, 750, 752, 753, 755, 757, 758, 760, 762, 763, 764, 765, 766, 767, 768, 770, 772, 773, 775, 777, 779, 781, 782, 783, 784, 786, 787, 789, 791, 792, 794, 796, 797, 799, 801, 805, 808, 809, 812, 819, 820, 821, 822, 823, 824, 825, 827, 829, 830, 832, 834, 835, 837, 839, 842, 844, 847, 849, 852, 854, 855, 856, 857, 858, 859, 862, 869, 870, 871, 872, 886, 887, 888, 890, 896, 897, 898, 900, 901, 902, 903, 904, 907, 910, 913, 915, 917, 920, 922, 925, 932, 933, 934, 935, 936, 937, 943, 946, 948, 951, 953, 955, 959, 961, 968, 969, 971, 973, 976, 978, 979, 997, 998, 999, 1000, 1007, 1010, 1047, 1049, 1064, 1066, 1077, 1078, 1079, 1080, 1081, 1087, 1088, 1090, 1102, 1103, 1104, 1105, 1106, 1113, 1114, 1115, 1116, 1117, 1131, 1133, 1135, 1137, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1161, 1162, 1163, 1164, 1166, 1167, 1169, 1171, 1174, 1176, 1177, 1178, 1179, 1180, 1193, 1194, 1200, 1201, 1202, 1203, 1205, 1212, 1215, 1216, 1217, 1218, 1219, 1222, 1229, 1232, 1234, 1237, 1239, 1242, 1250, 1253, 1255, 1258, 1260, 1261, 1262, 1263, 1264, 1270, 1271, 1272, 1273, 1282, 1283, 1294, 1297, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1329, 1338, 1339, 1341, 1343, 1344, 1345, 1353, 1357, 1365, 1367, 1369, 1375, 1376, 1377, 1378, 1381, 1382, 1385, 1392, 1395, 1396, 1397, 1398, 1399, 1400, 1416, 1417, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1469, 1472, 1476, 1479, 1493, 1496, 1502, 1505, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1552, 1553, 1554, 1555, 1556, 1566, 1578, 1579, 1581, 1582, 1589, 1593, 1594, 1598, 1599, 1611, 1612, 1622, 1641, 1642, 1646, 1649, 1650, 1652, 1655, 1662, 1665, 1667, 1670, 1672, 1675, 1684, 1687, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1712, 1714, 1715, 1716, 1718, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1730, 1733, 1735, 1736, 1738, 1740, 1741, 1744, 1746, 1747, 1749, 1756, 1757, 1759, 1761, 1762, 1764, 1766, 1769, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 1811, 1815, 1816, 1820, 1821, 1824, 1829, 1830, 1831, 1832, 1833, 1834, 1836, 1837, 1839, 1843, 1844, 1845, 1847, 1848, 1849, 1853, 1854, 1870, 1871, 1872, 1874, 1876, 1877, 1879, 1881, 1884, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1901, 1904, 1906, 1907, 1908, 1909, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1935, 1936, 1940, 1941, 1945, 1946, 1950, 1951, 1955, 1962, 1975, 1976, 1979, 1980, 1986, 1987, 1988, 1989, 1990, 2002, 2003, 2005, 2007, 2008, 2011, 2013, 2014, 2015, 2016, 2017, 2023, 2024, 2025, 2026, 2027, 2028, 2030, 2032, 2033, 2034, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2053, 2054, 2055, 2056, 2058, 2060, 2063, 2065, 2068, 2070, 2071, 2074, 2076, 2079, 2081, 2082, 2084, 2085, 2088, 2089, 2092, 2093, 2096, 2097, 2100, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2136, 2138, 2139, 2140, 2141, 2143, 2144, 2146, 2147, 2149, 2152, 2153, 2154, 2156, 2157, 2158, 2159, 2163, 2164, 2167, 2169, 2181, 2182, 2183, 2185, 2186, 2187, 2189, 2191, 2194, 2200, 2205, 2207, 2210, 2224, 2226, 2227, 2237, 2238, 2240, 2246, 2255, 2258, 2261, 2263, 2266, 2267, 2268, 2269, 2282, 2284, 2286, 2287, 2288], "eyebrow": 41, "somehow": 41, "pytorch": [41, 42, 46, 47, 72, 73, 150, 154, 155, 158, 160, 161, 163, 164, 165, 167, 168, 170, 175, 187, 481, 747, 750, 1624, 1625, 2127, 2128, 2141, 2143, 2144, 2146, 2147, 2185, 2186, 2187, 2188, 2189, 2190], "other": [41, 44, 47, 48, 49, 51, 54, 55, 63, 64, 69, 70, 71, 82, 83, 94, 95, 100, 103, 104, 105, 106, 111, 112, 115, 116, 117, 118, 119, 130, 131, 142, 143, 149, 150, 152, 153, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 170, 172, 174, 175, 185, 186, 187, 255, 257, 258, 310, 313, 341, 354, 355, 356, 428, 481, 597, 600, 662, 665, 702, 704, 706, 864, 865, 866, 867, 868, 922, 923, 924, 925, 926, 953, 956, 959, 1321, 1322, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1876, 1877, 1926, 1927, 1928, 1980, 1996, 1999, 2070, 2102, 2103, 2104, 2105, 2111, 2113, 2114, 2115, 2127, 2128, 2136, 2138, 2139, 2140, 2146, 2147], "strong": [41, 187, 2140, 2255, 2262], "industri": [41, 2140, 2142], "back": [41, 48, 49, 69, 82, 83, 117, 130, 131, 150, 154, 158, 162, 169, 187, 1012, 1013, 1014, 1015, 1016, 1200, 1208, 1417, 1557, 1600, 1870, 1906, 1907, 1908, 1909, 1910, 2138, 2142, 2159, 2164, 2167, 2181, 2182, 2185, 2189], "momentum": [41, 69, 117, 1107, 1108, 1109, 1110, 1111, 1290, 1291], "won": [41, 42, 48, 49, 152, 175], "ad": [41, 46, 47, 48, 49, 82, 83, 130, 131, 146, 147, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 174, 187, 814, 817, 953, 954, 970, 1121, 1124, 1417, 1568, 1571, 1573, 1576, 1714, 1741, 1744, 1746, 1749, 1870, 1886, 1887, 1888, 1889, 1890, 2139, 2140, 2191, 2192], "just": [41, 42, 48, 49, 94, 95, 149, 151, 153, 154, 156, 157, 161, 162, 163, 164, 165, 166, 170, 172, 173, 187, 896, 902, 903, 1378, 1381, 1382, 1385, 2070, 2081, 2082, 2084, 2140, 2141, 2146, 2152, 2154, 2169, 2178, 2282, 2284], "problem": [41, 49, 149, 150, 164, 172, 2136, 2142, 2146], "even": [41, 42, 48, 49, 69, 117, 149, 153, 154, 155, 157, 160, 161, 163, 164, 165, 168, 172, 173, 174, 175, 187, 481, 727, 730, 747, 750, 1200, 1218, 1294, 1295, 1296, 1297, 1298, 2146], "wors": 41, "rather": [41, 49, 70, 71, 103, 104, 118, 119, 149, 152, 154, 157, 163, 164, 165, 166, 167, 175, 187, 255, 257, 258, 446, 471, 1417, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1537, 1538, 1539, 1540, 1541, 2136, 2139, 2140], "funni": 41, "comic": 41, "strip": 41, "easi": [41, 48, 49, 150, 152, 161, 165, 166, 168, 2138, 2140, 2146, 2147], "feasibl": [41, 47, 153], "space": [41, 61, 62, 69, 70, 71, 109, 110, 115, 116, 117, 118, 119, 168, 255, 257, 258, 290, 293, 295, 296, 297, 298, 299, 953, 967, 979, 1057, 1058, 1059, 1060, 1061, 1375, 1376, 1377, 1417, 1451, 1454, 1469, 1470, 1471, 1472, 1473, 1612, 1641, 1647, 1649], "case": [41, 47, 48, 49, 56, 59, 60, 61, 62, 69, 70, 71, 82, 83, 94, 95, 100, 103, 104, 105, 106, 118, 119, 130, 131, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 174, 175, 187, 255, 300, 301, 303, 446, 450, 466, 477, 480, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 552, 555, 557, 560, 562, 565, 567, 570, 592, 595, 597, 600, 602, 605, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 682, 685, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 782, 786, 787, 791, 792, 796, 927, 928, 930, 932, 953, 963, 964, 967, 978, 1032, 1035, 1037, 1040, 1057, 1058, 1060, 1149, 1156, 1315, 1318, 1338, 1341, 1417, 1518, 1519, 1521, 1552, 1553, 1554, 1555, 1556, 1714, 1801, 1804, 1870, 1906, 1907, 1908, 1909, 1910, 1955, 1959, 1965, 2070, 2085, 2088, 2089, 2090, 2092, 2093, 2096, 2102, 2105, 2106, 2110, 2111, 2113, 2115, 2139, 2143, 2152, 2154, 2169, 2180, 2181, 2182, 2185, 2189, 2237, 2241], "unlik": [41, 149, 152, 153, 156, 163, 2145, 2147], "charger": 41, "charact": [41, 159, 164], "encod": [41, 70, 71, 118, 119, 173, 1417, 1469, 1470, 1471, 1472, 1473], "instant": [41, 2128], "much": [41, 47, 48, 49, 150, 152, 154, 163, 164, 165, 167, 170, 172, 173, 814, 817, 953, 954, 970, 1121, 1124, 2138, 2140, 2146, 2147, 2159, 2164], "doe": [41, 45, 47, 49, 69, 82, 83, 103, 104, 117, 130, 131, 148, 151, 153, 154, 156, 157, 160, 161, 163, 164, 165, 166, 167, 168, 170, 172, 173, 187, 481, 552, 555, 896, 902, 903, 953, 973, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1353, 1356, 1357, 1378, 1381, 1382, 1385, 1417, 1518, 1521, 1714, 1740, 1870, 1916, 1917, 1918, 1919, 1920, 2127, 2136, 2140, 2141, 2147, 2194, 2197, 2198, 2199], "mandat": [41, 154, 163, 166, 167], "adopt": [41, 49, 150, 160, 168, 2139, 2140, 2145], "continu": [41, 42, 46, 47, 48, 148, 149, 159, 166, 187, 2140], "own": [41, 42, 48, 149, 153, 154, 157, 158, 164, 167, 170, 187, 2127, 2136, 2139, 2140, 2145, 2146], "signatur": [41, 67, 68, 115, 116, 154, 155, 156, 157, 160, 163, 166, 167, 168, 341, 364, 367, 481, 622, 625, 687, 688, 689, 747, 750, 1200, 1218, 1294, 1297, 1714, 1746, 1747, 1801, 1804, 1870, 1946, 1950, 2070, 2102, 2105, 2137, 2146], "replac": [41, 45, 49, 69, 70, 71, 82, 83, 86, 87, 103, 104, 117, 118, 119, 130, 131, 134, 135, 152, 154, 155, 156, 162, 164, 166, 172, 175, 187, 255, 276, 277, 896, 897, 953, 973, 997, 1000, 1260, 1261, 1262, 1263, 1264, 1417, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1870, 1871, 1872, 1873, 1874, 1875, 1980, 1981, 1982, 1983, 1984, 1985, 2147, 2237, 2241], "your": [41, 42, 43, 44, 45, 46, 47, 48, 149, 153, 157, 167, 168, 173, 174, 187, 2128, 2140], "10": [41, 45, 48, 61, 62, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 86, 87, 90, 91, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 152, 153, 154, 156, 165, 166, 170, 172, 173, 255, 285, 287, 289, 290, 293, 295, 296, 297, 298, 299, 481, 492, 493, 494, 495, 496, 527, 528, 530, 532, 533, 535, 547, 548, 549, 550, 551, 567, 568, 569, 570, 571, 597, 600, 617, 620, 647, 650, 657, 658, 659, 660, 661, 707, 710, 732, 733, 735, 762, 763, 764, 765, 766, 767, 769, 770, 771, 814, 815, 817, 834, 837, 839, 840, 842, 844, 845, 847, 849, 853, 881, 883, 884, 885, 907, 910, 911, 933, 934, 935, 936, 937, 953, 954, 957, 966, 967, 970, 971, 974, 1012, 1013, 1014, 1015, 1016, 1027, 1029, 1031, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1077, 1078, 1079, 1080, 1081, 1121, 1124, 1126, 1127, 1128, 1129, 1130, 1149, 1150, 1151, 1154, 1162, 1163, 1166, 1167, 1168, 1169, 1170, 1200, 1203, 1205, 1208, 1212, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1237, 1244, 1245, 1246, 1247, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1310, 1311, 1312, 1313, 1314, 1326, 1328, 1330, 1353, 1355, 1357, 1358, 1396, 1397, 1399, 1417, 1435, 1451, 1452, 1453, 1454, 1455, 1456, 1459, 1460, 1461, 1464, 1469, 1470, 1471, 1472, 1473, 1476, 1479, 1481, 1483, 1484, 1485, 1489, 1498, 1508, 1510, 1511, 1512, 1513, 1516, 1517, 1552, 1553, 1554, 1555, 1556, 1562, 1568, 1570, 1571, 1572, 1603, 1612, 1629, 1630, 1631, 1632, 1650, 1652, 1654, 1655, 1656, 1667, 1670, 1689, 1690, 1692, 1714, 1725, 1726, 1728, 1735, 1738, 1756, 1759, 1761, 1763, 1765, 1766, 1769, 1771, 1774, 1786, 1789, 1811, 1815, 1816, 1820, 1821, 1824, 1870, 1891, 1894, 1916, 1919, 1921, 1923, 1925, 1926, 1929, 1931, 1932, 1934, 1941, 1942, 1944, 1945, 1955, 1962, 1964, 1967, 1975, 1976, 1978, 1979, 1980, 1981, 1984, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1995, 1996, 1997, 1998, 2000, 2007, 2023, 2026, 2033, 2034, 2036, 2038, 2054, 2060, 2063, 2070, 2071, 2074, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2088, 2093, 2096, 2097, 2099, 2101, 2106, 2110, 2111, 2114, 2115, 2145, 2185, 2187, 2237, 2240, 2242, 2245, 2246, 2255, 2261], "100": [41, 42, 61, 62, 69, 109, 110, 115, 116, 117, 118, 119, 153, 166, 173, 174, 175, 187, 255, 295, 296, 297, 298, 299, 481, 547, 550, 767, 769, 770, 771, 896, 902, 903, 932, 953, 970, 973, 1121, 1124, 1149, 1156, 1260, 1261, 1262, 1263, 1264, 1378, 1381, 1382, 1385, 1417, 1481, 1483, 1484, 1485, 1513, 1516, 1517, 1552, 1554, 1555, 1714, 1756, 1759, 1955, 1962, 2128], "despit": [41, 152, 154, 155, 165, 168, 170, 2137, 2140], "distinct": [41, 48, 152, 157, 163, 164, 169, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2128, 2140], "still": [41, 47, 49, 78, 79, 103, 104, 126, 127, 150, 154, 157, 158, 163, 164, 166, 168, 174, 187, 1714, 1811, 1812, 1813, 1814, 1815, 2128, 2137, 2140, 2146], "believ": [41, 49], "share": [41, 103, 104, 151, 152, 156, 161, 164, 165, 166, 168, 170, 341, 439, 2138, 2139, 2146, 2152, 2155, 2237, 2239, 2245, 2246, 2251, 2252], "bring": [41, 149, 166, 170, 171, 2127], "benefit": [41, 42, 48, 150, 152, 163, 168, 172, 173, 187, 2138, 2142, 2145], "unrel": [41, 49], "what": [41, 42, 44, 49, 148, 152, 153, 156, 157, 160, 162, 164, 165, 166, 169, 170, 172, 173, 174, 175, 186, 187, 2128, 2136, 2141, 2142, 2145, 2255, 2262], "again": [41, 42, 49, 150, 151, 152, 156, 158, 163, 164, 166, 167, 168, 173, 175, 187, 1714, 1801, 1804, 2145, 2146], "contrari": 41, "bumpi": 41, "road": 41, "allud": [41, 173], "most": [41, 46, 47, 48, 103, 104, 109, 110, 150, 152, 153, 154, 155, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 187, 255, 310, 312, 313, 314, 1714, 1740, 1741, 1744, 2140, 2141, 2143, 2144, 2146, 2147], "technologi": [41, 2138, 2142], "sector": [41, 67, 68, 115, 116, 481, 492, 493, 494, 495, 496, 507, 508, 509, 510, 511, 522, 523, 524, 525, 526], "full": [41, 42, 49, 51, 54, 55, 78, 79, 100, 105, 106, 124, 125, 126, 127, 154, 157, 158, 160, 164, 166, 168, 170, 187, 255, 341, 385, 388, 481, 617, 620, 647, 650, 1417, 1488, 1500, 1558, 1564, 1601, 1605, 1650, 1667, 1670, 1672, 1674, 1676, 1677, 1680, 1714, 1776, 1777, 1779, 1796, 1797, 1798, 1799, 1800, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 2138, 2140, 2146, 2205, 2223, 2251, 2254, 2282, 2283, 2284, 2285, 2286], "success": 41, "reason": [41, 47, 49, 149, 150, 152, 153, 154, 156, 161, 163, 164, 167, 168, 170, 172, 481, 742, 745, 2146], "build": [41, 43, 44, 48, 153, 154, 161, 169, 171, 174, 175, 187, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2127, 2128, 2138, 2140, 2142, 2145, 2146, 2147, 2152, 2154, 2169, 2180, 2181, 2182], "custom": [41, 69, 117, 153, 158, 165, 166, 174, 805, 808, 873, 1062, 1063, 1365, 1366, 1367, 1368, 1369, 2140, 2144, 2145, 2146], "comput": [41, 42, 48, 52, 53, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 94, 95, 101, 102, 103, 104, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 142, 143, 152, 153, 154, 161, 164, 166, 168, 170, 173, 187, 218, 219, 220, 222, 238, 239, 240, 242, 446, 471, 481, 497, 500, 527, 530, 542, 545, 552, 555, 582, 585, 587, 588, 589, 590, 591, 612, 615, 617, 620, 642, 645, 647, 650, 677, 680, 682, 685, 687, 690, 692, 695, 702, 704, 706, 717, 720, 737, 738, 739, 742, 743, 744, 745, 746, 805, 806, 809, 812, 839, 842, 844, 847, 849, 850, 852, 869, 871, 873, 896, 898, 900, 901, 907, 910, 913, 915, 943, 946, 948, 951, 953, 963, 964, 965, 967, 971, 974, 980, 981, 1002, 1005, 1032, 1035, 1037, 1040, 1042, 1045, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1066, 1072, 1075, 1087, 1088, 1089, 1091, 1092, 1095, 1097, 1100, 1131, 1133, 1135, 1137, 1139, 1142, 1143, 1149, 1150, 1151, 1152, 1154, 1155, 1158, 1159, 1162, 1163, 1164, 1166, 1169, 1176, 1177, 1179, 1180, 1181, 1182, 1188, 1191, 1193, 1194, 1200, 1211, 1214, 1221, 1224, 1227, 1229, 1232, 1234, 1237, 1239, 1240, 1242, 1244, 1245, 1246, 1247, 1248, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1310, 1311, 1312, 1313, 1314, 1353, 1355, 1356, 1357, 1358, 1370, 1371, 1372, 1373, 1374, 1406, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1612, 1614, 1617, 1622, 1623, 1624, 1625, 1628, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1683, 1684, 1687, 1694, 1695, 1696, 1697, 1698, 1704, 1707, 1714, 1715, 1718, 1720, 1721, 1722, 1723, 1724, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1761, 1764, 1766, 1769, 1796, 1797, 1798, 1799, 1800, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1839, 1843, 1844, 1845, 1847, 1848, 1854, 1855, 1858, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1886, 1889, 1955, 1962, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2070, 2071, 2073, 2074, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2127, 2136, 2138, 2140, 2141, 2143, 2144, 2146, 2152, 2154, 2155, 2205, 2225, 2226, 2255, 2262], "thank": [41, 173], "interoper": [41, 2137, 2138, 2140, 2143], "compon": [41, 170, 1612, 1641, 1647, 1649, 2136, 2141, 2143], "bio": [41, 48], "hardwar": [41, 48, 51, 54, 55, 168, 2134, 2135, 2136, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146], "initi": [41, 49, 76, 77, 100, 103, 104, 105, 106, 124, 125, 151, 154, 155, 165, 166, 170, 1650, 1699, 1700, 1701, 1702, 2140, 2146, 2147, 2152, 2155, 2157, 2158, 2160, 2161, 2162, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2178, 2179, 2180, 2181, 2182, 2185, 2189], "pcie": 41, "interfac": [41, 172, 175, 187, 2127, 2136, 2137, 2138, 2139, 2140, 2144, 2147], "motherboard": 41, "raid": 41, "storag": [41, 173], "virtual": [41, 44, 45, 49, 164, 2143, 2144], "bluetooth": 41, "wireless": 41, "exchang": [41, 46, 2136, 2138], "btx": 41, "form": [41, 43, 56, 57, 58, 59, 60, 61, 62, 72, 73, 78, 79, 103, 104, 126, 127, 161, 166, 168, 174, 175, 255, 260, 261, 262, 305, 308, 323, 325, 327, 328, 330, 332, 896, 899, 938, 941, 1068, 1070, 1082, 1085, 1200, 1206, 1213, 1218, 1223, 1294, 1297, 1401, 1405, 1417, 1423, 1583, 1588, 1624, 1625, 1650, 1714, 1715, 1716, 1717, 1718, 1719, 1725, 1728, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1756, 1757, 1758, 1759, 1760, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1829, 1830, 1831, 1832, 1833, 1955, 1957, 1968, 2140, 2141, 2146, 2159, 2163], "factor": [41, 72, 73, 76, 77, 78, 79, 117, 120, 121, 124, 125, 126, 127, 158, 446, 469, 470, 471, 1234, 1236, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1714, 1715, 1716, 1717, 1718, 1719, 2159, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2185, 2186, 2187, 2188, 2237, 2241, 2245, 2246, 2255, 2256, 2266, 2267, 2268, 2269], "sata": 41, "connect": [41, 48, 174, 175, 2138, 2169, 2179, 2180], "host": [41, 153, 187, 2145], "bu": [41, 126, 127, 1811, 1812, 1814], "adapt": [41, 120, 121, 1612, 1633, 1635, 1636, 2185, 2188], "devic": [41, 49, 51, 54, 55, 61, 62, 66, 69, 86, 87, 103, 104, 109, 110, 114, 117, 118, 119, 134, 135, 148, 151, 154, 158, 161, 162, 165, 166, 167, 168, 170, 175, 187, 255, 257, 258, 259, 260, 261, 262, 263, 270, 271, 272, 273, 274, 275, 276, 277, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 305, 306, 307, 308, 309, 310, 311, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 327, 328, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 896, 897, 902, 903, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1047, 1048, 1049, 1200, 1207, 1300, 1301, 1302, 1303, 1304, 1315, 1316, 1317, 1319, 1320, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1417, 1424, 1474, 1475, 1481, 1483, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2127, 2134, 2135, 2139, 2140, 2142, 2143, 2144, 2145, 2152, 2153, 2156, 2159, 2160, 2163, 2164, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2189, 2191, 2192, 2194, 2197, 2198, 2205, 2225, 2226, 2227], "html": [41, 45, 67, 68, 115, 116, 157, 341, 364, 367, 481, 622, 625, 687, 688, 689, 747, 750, 896, 902, 903, 1378, 1381, 1382, 1385, 1714, 1746, 1747, 1801, 1804, 1870, 1946, 1950, 2070, 2102, 2105], "enabl": [41, 48, 49, 69, 100, 103, 104, 105, 106, 150, 152, 161, 162, 163, 164, 166, 167, 168, 169, 171, 173, 175, 187, 913, 915, 1149, 1155, 1612, 1641, 1649, 2127, 2138, 2139, 2140, 2141, 2142, 2143, 2146, 2147], "anyon": [41, 43, 49, 153, 187, 2146], "websit": [41, 149], "tcp": 41, "ip": 41, "node": [41, 103, 104, 118, 119, 152, 164, 1578, 1579, 1581, 1955, 1966, 1967, 2141, 2159, 2160, 2163, 2164, 2167], "commun": [41, 43, 47, 48, 49, 187, 2128, 2139, 2140, 2142], "network": [41, 152, 161, 170, 174, 186, 1650, 1694, 1697, 2128, 2136, 2138, 2139, 2140, 2144, 2146, 2147, 2149, 2152, 2154, 2157, 2158, 2159, 2167, 2169, 2181, 2182], "smtp": 41, "possibl": [41, 43, 47, 48, 49, 69, 82, 83, 130, 131, 149, 152, 154, 156, 157, 163, 164, 165, 166, 168, 170, 173, 186, 187, 834, 837, 913, 915, 1149, 1155, 1200, 1203, 1417, 1543, 1650, 1689, 1692, 1870, 1906, 1907, 1908, 1909, 1910, 2070, 2085, 2088, 2093, 2096, 2138, 2140, 2146], "send": [41, 2145], "gmail": [41, 153], "outlook": 41, "pop": [41, 48], "u": [41, 43, 48, 49, 78, 79, 109, 110, 126, 127, 152, 153, 162, 163, 164, 165, 166, 167, 168, 174, 187, 295, 297, 1714, 1715, 1716, 1717, 1718, 1719, 1746, 1749, 1811, 1812, 1813, 1814, 1815, 1955, 1964], "email": [41, 153], "ieee": [41, 249, 341, 385, 388, 481, 497, 500, 597, 600, 662, 665, 742, 745, 767, 770], "754": [41, 249, 341, 385, 388, 481, 497, 500, 597, 600, 662, 665, 742, 745, 767, 770], "allow": [41, 44, 47, 49, 69, 117, 150, 153, 154, 158, 159, 162, 164, 165, 166, 170, 172, 187, 255, 290, 293, 1270, 1271, 1272, 1273, 1353, 1357, 1417, 1543, 2054, 2060, 2063, 2127, 2138, 2140, 2144, 2145, 2157, 2158, 2181, 2182, 2237, 2240, 2241, 2245, 2246, 2251, 2254, 2255, 2258, 2261, 2266, 2267], "calcul": [41, 47, 67, 68, 69, 80, 81, 94, 95, 100, 103, 104, 105, 106, 115, 116, 117, 128, 129, 142, 143, 157, 170, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 562, 565, 567, 570, 577, 580, 592, 595, 597, 600, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 710, 727, 730, 757, 760, 762, 765, 767, 770, 777, 781, 782, 786, 787, 791, 819, 820, 821, 822, 823, 869, 870, 871, 872, 953, 955, 960, 967, 972, 978, 987, 990, 1055, 1056, 1057, 1058, 1059, 1060, 1126, 1127, 1128, 1129, 1130, 1183, 1186, 1193, 1194, 1200, 1218, 1270, 1271, 1272, 1273, 1294, 1297, 1338, 1341, 1353, 1357, 1714, 1746, 1749, 1801, 1804, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 2070, 2085, 2088, 2089, 2092, 2093, 2094, 2096, 2097, 2100, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2113, 2114, 2115, 2159, 2164, 2167, 2237, 2241, 2246, 2255, 2262], "live": [41, 42, 154, 2136, 2138], "depend": [41, 44, 47, 48, 49, 61, 62, 63, 64, 70, 71, 78, 79, 92, 93, 111, 112, 126, 127, 140, 141, 142, 143, 154, 157, 162, 163, 164, 165, 166, 168, 170, 187, 255, 267, 268, 269, 341, 349, 350, 351, 352, 353, 481, 482, 485, 487, 490, 492, 495, 502, 505, 507, 510, 512, 515, 517, 520, 562, 565, 567, 570, 592, 595, 597, 600, 652, 655, 657, 660, 662, 665, 667, 670, 727, 730, 757, 760, 762, 765, 782, 786, 787, 791, 953, 978, 1338, 1341, 1417, 1578, 1580, 1582, 1714, 1740, 1741, 1744, 1796, 1797, 1798, 1799, 1800, 1801, 1804, 1806, 1809, 1811, 1815, 2007, 2028, 2032, 2054, 2055, 2056, 2057, 2058, 2059, 2065, 2068, 2111, 2114, 2138, 2140, 2141], "did": [41, 47, 175, 2146], "aris": [41, 154, 187], "until": [41, 49, 159, 167, 170, 187, 2128, 2147], "substanti": [41, 49, 150, 154, 166, 2140], "innov": 41, "growth": [41, 2143], "usag": [41, 154, 166, 170, 187, 446, 471, 2143], "relev": [41, 47, 48, 49, 61, 62, 109, 110, 150, 152, 153, 154, 156, 165, 166, 173, 188, 189, 255, 295, 296, 297, 298, 299, 2138, 2145, 2146, 2185, 2186, 2187, 2188, 2189, 2190], "area": [41, 67, 68, 115, 116, 163, 185, 481, 492, 493, 494, 495, 496, 507, 508, 509, 510, 511, 522, 523, 524, 525, 526, 1113, 1116, 1149, 1161, 2128, 2136], "necess": 41, "parti": [41, 187, 2139, 2140, 2146], "could": [41, 42, 47, 48, 49, 149, 153, 154, 156, 162, 163, 164, 165, 166, 170, 172, 173, 174, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2140, 2145, 2146], "easili": [41, 48, 150, 153, 164, 168, 173, 174, 175, 187, 2128, 2140, 2146, 2147], "engag": [41, 43, 49], "regard": [41, 46, 152, 164, 165, 168], "effect": [41, 47, 61, 62, 69, 72, 73, 94, 95, 117, 120, 121, 142, 143, 150, 152, 153, 157, 160, 163, 168, 187, 255, 300, 301, 303, 1113, 1114, 1115, 1116, 1117, 1149, 1161, 1612, 1614, 1617, 1637, 1638, 1639, 1640, 2070, 2102, 2103, 2104, 2105, 2111, 2113, 2114, 2115, 2237, 2241, 2245, 2246, 2266, 2269], "2015": [41, 2140], "sinc": [41, 48, 49, 69, 117, 149, 150, 152, 153, 163, 164, 187, 953, 1342, 2140, 2146, 2152, 2155], "alongsid": 41, "machin": [41, 48, 78, 79, 126, 127, 149, 161, 186, 341, 385, 388, 396, 399, 1714, 1776, 1777, 1778, 1779, 1780, 1791, 1794, 2127, 2138, 2140, 2142, 2143, 2144, 2145, 2146], "frame": [41, 186, 2140], "less": [41, 49, 51, 54, 55, 67, 68, 69, 78, 79, 86, 87, 94, 95, 100, 105, 106, 115, 116, 117, 126, 127, 134, 135, 152, 154, 156, 158, 160, 163, 164, 166, 168, 169, 170, 481, 487, 490, 492, 495, 502, 505, 517, 520, 557, 560, 646, 652, 655, 657, 660, 662, 665, 667, 670, 727, 730, 742, 745, 752, 755, 767, 770, 907, 908, 909, 910, 911, 913, 915, 953, 977, 1149, 1154, 1155, 1333, 1336, 1714, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1791, 1793, 1794, 1795, 1844, 1845, 1847, 1848, 1980, 1996, 1997, 1998, 1999, 2000, 2070, 2102, 2105, 2111, 2113, 2115, 2140, 2142], "matur": [41, 187, 2140], "state": [41, 48, 76, 77, 124, 125, 154, 157, 158, 160, 164, 166, 169, 170, 171, 173, 186, 341, 440, 441, 442, 443, 444, 1417, 1487, 1488, 1500, 1567, 1600, 1602, 1603, 1604, 1650, 1699, 1700, 1701, 1702, 2128, 2146, 2147, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2228], "than": [41, 44, 49, 51, 54, 55, 67, 68, 69, 70, 71, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 100, 103, 104, 105, 106, 115, 116, 117, 118, 119, 126, 127, 130, 131, 134, 135, 136, 137, 138, 139, 142, 143, 149, 152, 153, 154, 156, 158, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 187, 255, 257, 258, 341, 385, 388, 446, 471, 481, 487, 490, 492, 495, 502, 505, 517, 520, 537, 540, 547, 550, 557, 560, 602, 605, 607, 610, 652, 655, 657, 660, 662, 665, 667, 670, 697, 698, 699, 700, 701, 727, 730, 742, 745, 752, 755, 767, 770, 792, 796, 809, 812, 813, 814, 817, 864, 865, 866, 867, 868, 907, 908, 909, 910, 911, 913, 915, 953, 954, 956, 970, 977, 979, 1002, 1003, 1004, 1005, 1006, 1017, 1020, 1022, 1025, 1097, 1098, 1099, 1100, 1101, 1121, 1124, 1149, 1154, 1155, 1158, 1159, 1176, 1177, 1200, 1209, 1210, 1333, 1336, 1375, 1376, 1377, 1417, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1537, 1538, 1539, 1540, 1541, 1714, 1720, 1723, 1761, 1764, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1791, 1793, 1794, 1795, 1844, 1845, 1847, 1848, 1870, 1871, 1874, 1891, 1892, 1893, 1894, 1895, 1921, 1924, 1980, 1996, 1997, 1998, 1999, 2000, 2007, 2023, 2024, 2025, 2026, 2027, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2053, 2070, 2071, 2074, 2076, 2079, 2097, 2100, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2113, 2114, 2115, 2137, 2138, 2139, 2140, 2146, 2147, 2152, 2154], "preced": [41, 174], "mention": [41, 47, 48, 49, 150, 156, 160, 161, 163, 164, 166, 168, 2140], "aros": 41, "70": [41, 118, 119, 907, 910, 1149, 1154, 1481, 1483, 1552, 1554, 1556, 1714, 1786, 1789, 2070, 2081, 2084], "80": [41, 69, 117, 158, 953, 967, 1057, 1058, 1059, 1060, 1714, 1786, 1789, 1955, 1967, 2070, 2081, 2084], "90": [41, 67, 68, 69, 115, 116, 117, 481, 552, 555, 572, 573, 575, 576, 732, 735, 736, 747, 749, 750, 751, 1200, 1219, 1326, 1327, 1328, 1329, 1330, 1714, 1786, 1789, 2070, 2081, 2084], "effort": [41, 43, 187, 2136, 2140, 2146], "stage": [41, 43, 45, 49, 148, 159, 166, 2128, 2140], "complet": [41, 47, 49, 78, 79, 103, 104, 126, 127, 149, 150, 152, 153, 156, 158, 164, 165, 166, 172, 173, 1714, 1796, 1797, 1798, 1799, 1800, 2138, 2251, 2254], "natur": [41, 78, 79, 126, 127, 150, 156, 158, 165, 186, 481, 592, 595, 652, 655, 662, 665, 747, 750, 1714, 1801, 1802, 1803, 1804, 1805], "like": [41, 45, 47, 48, 49, 61, 62, 69, 82, 83, 109, 110, 117, 130, 131, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 186, 187, 255, 295, 296, 297, 298, 299, 341, 369, 428, 819, 820, 821, 822, 823, 829, 832, 834, 837, 922, 923, 924, 925, 926, 953, 955, 959, 960, 962, 966, 969, 972, 977, 987, 988, 990, 1012, 1013, 1014, 1015, 1016, 1027, 1028, 1030, 1050, 1051, 1052, 1053, 1054, 1102, 1103, 1104, 1105, 1106, 1171, 1173, 1174, 1175, 1183, 1184, 1185, 1186, 1187, 1200, 1202, 1203, 1208, 1255, 1257, 1258, 1259, 1333, 1334, 1335, 1336, 1337, 1343, 1344, 1345, 1714, 1740, 1870, 1906, 1907, 1908, 1909, 1910, 1980, 1996, 1999, 2128, 2140, 2145], "certainli": [41, 2146], "mission": [41, 2128, 2142], "creat": [41, 43, 44, 45, 47, 48, 49, 61, 62, 69, 86, 87, 103, 104, 109, 110, 117, 118, 119, 134, 135, 150, 153, 154, 155, 158, 162, 163, 164, 165, 166, 168, 170, 171, 174, 185, 186, 255, 257, 258, 260, 261, 262, 270, 271, 272, 274, 276, 277, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 305, 306, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 333, 335, 336, 337, 338, 339, 340, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 896, 897, 902, 903, 927, 928, 929, 930, 931, 953, 973, 997, 998, 999, 1000, 1001, 1047, 1048, 1049, 1200, 1218, 1260, 1261, 1262, 1263, 1264, 1294, 1297, 1300, 1301, 1302, 1303, 1304, 1315, 1316, 1317, 1318, 1319, 1320, 1378, 1381, 1382, 1385, 1417, 1481, 1483, 1584, 1587, 1611, 1612, 1648, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2127, 2128, 2140, 2141, 2146, 2152, 2153, 2156, 2159, 2160, 2163, 2164, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2205, 2210, 2225, 2226, 2282, 2283, 2284, 2285, 2286], "At": [41, 47, 48, 149, 164, 166, 167, 2140], "process": [41, 42, 43, 45, 48, 49, 152, 153, 161, 164, 165, 166, 168, 170, 175, 446, 466, 480, 2138, 2139, 2140, 2143, 2144, 2146, 2147], "ourselv": [41, 2146], "lead": [41, 42, 78, 79, 100, 103, 104, 105, 106, 126, 127, 153, 156, 167, 187, 1714, 1796, 1797, 1798, 1799, 1800, 1811, 1812, 1813, 1814, 1815, 2255, 2262], "quansight": [41, 2146], "compani": [41, 2136], "made": [41, 44, 47, 49, 69, 82, 83, 117, 149, 150, 152, 153, 158, 163, 164, 167, 170, 172, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 1139, 1142, 1176, 1181, 1200, 1201, 1202, 1926, 1927, 2140], "organ": [41, 150, 152, 161, 164, 167, 2127], "panda": 41, "scipi": [41, 2142, 2147], "conda": [41, 45, 48, 2142], "dask": [41, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053], "apach": [41, 2142, 2146], "mxnet": [41, 2147], "onnx": [41, 2138, 2146], "scikit": 41, "jupyt": [41, 2142], "aw": 41, "cupi": [41, 2140, 2147], "net": [41, 42, 170, 175], "sympi": 41, "rai": [41, 481, 517, 520], "modin": 41, "spyder": 41, "includ": [41, 47, 49, 61, 62, 69, 70, 71, 88, 89, 94, 95, 96, 97, 103, 104, 109, 110, 115, 116, 117, 118, 119, 126, 127, 136, 137, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 186, 187, 255, 257, 258, 260, 261, 262, 290, 293, 295, 296, 297, 298, 299, 305, 308, 809, 813, 886, 888, 890, 891, 893, 895, 896, 902, 903, 922, 924, 926, 927, 929, 931, 943, 945, 947, 948, 950, 952, 953, 971, 987, 989, 991, 1007, 1009, 1011, 1017, 1019, 1021, 1022, 1024, 1026, 1027, 1029, 1031, 1032, 1034, 1036, 1037, 1039, 1041, 1042, 1044, 1046, 1050, 1052, 1054, 1064, 1065, 1067, 1068, 1071, 1072, 1074, 1076, 1087, 1089, 1091, 1092, 1094, 1096, 1102, 1104, 1106, 1131, 1132, 1134, 1135, 1136, 1138, 1139, 1143, 1166, 1167, 1169, 1183, 1185, 1187, 1244, 1246, 1248, 1250, 1252, 1254, 1260, 1262, 1264, 1265, 1267, 1269, 1270, 1274, 1275, 1277, 1285, 1287, 1289, 1300, 1302, 1304, 1310, 1312, 1314, 1333, 1335, 1337, 1378, 1381, 1382, 1385, 1386, 1387, 1389, 1392, 1393, 1394, 1406, 1407, 1409, 1411, 1412, 1414, 1417, 1502, 1503, 1504, 1505, 1506, 1606, 1607, 1608, 1609, 1610, 1714, 1834, 1835, 1837, 1844, 1845, 1847, 1848, 1955, 1956, 1980, 1996, 1999, 2007, 2013, 2014, 2015, 2016, 2017, 2070, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2131, 2133, 2137, 2138, 2140, 2142, 2145, 2146, 2147, 2159, 2167, 2169, 2179, 2180, 2183, 2184, 2205, 2225, 2237, 2241, 2245, 2246, 2266, 2267, 2268, 2269], "member": [41, 47, 49, 164], "googl": [41, 153, 2128], "octoml": [41, 2146], "einop": [41, 70, 71, 118, 119, 1417, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465], "further": [41, 42, 45, 49, 149, 150, 153, 156, 158, 160, 164, 166, 169, 170, 173, 174, 2128, 2145, 2146, 2255, 2262], "sponsor": 41, "lg": 41, "electron": 41, "microsoft": [41, 2140, 2145, 2147], "d": [41, 42, 43, 48, 69, 76, 77, 78, 79, 109, 110, 117, 118, 119, 124, 125, 126, 127, 148, 152, 166, 173, 295, 297, 341, 429, 432, 834, 835, 836, 837, 838, 839, 842, 844, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 874, 875, 877, 896, 902, 903, 917, 920, 992, 995, 1002, 1005, 1017, 1018, 1019, 1020, 1021, 1097, 1100, 1149, 1150, 1151, 1152, 1158, 1159, 1162, 1163, 1164, 1176, 1178, 1200, 1203, 1207, 1209, 1229, 1232, 1234, 1237, 1239, 1240, 1241, 1242, 1243, 1315, 1316, 1360, 1361, 1363, 1378, 1381, 1382, 1385, 1425, 1427, 1429, 1650, 1651, 1652, 1654, 1655, 1656, 1657, 1660, 1662, 1665, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1714, 1730, 1733, 1735, 1736, 1737, 1738, 1739, 1766, 1767, 1768, 1769, 1770, 1786, 1789, 1834, 1835, 1836, 1837, 1838, 1955, 1959, 1963, 1964, 1965, 1973, 1974, 2128, 2136], "shaw": 41, "co": [41, 46, 67, 68, 70, 71, 115, 116, 154, 170, 186, 481, 566, 1417, 1469, 1470, 1472, 2128], "intel": [41, 2138, 2145], "togeth": [41, 103, 104, 150, 152, 159, 164, 167, 168, 174, 175, 187, 814, 817, 953, 954, 970, 1121, 1124, 2138, 2140, 2141, 2146, 2191, 2192], "major": [41, 154, 155, 165, 166, 187, 2007, 2023, 2026, 2137, 2140], "involv": [41, 43, 45, 63, 64, 111, 112, 148, 153, 154, 156, 168, 175, 341, 429, 430, 431, 432, 433, 481, 497, 500, 2140, 2146], "anoth": [41, 47, 48, 49, 152, 154, 158, 161, 162, 163, 164, 166, 168, 170, 172, 175, 255, 279, 282, 341, 354, 357, 364, 367, 2127, 2140, 2146], "promis": 41, "sign": [41, 48, 67, 68, 69, 78, 79, 115, 116, 117, 126, 127, 170, 175, 255, 257, 258, 481, 482, 485, 497, 500, 517, 520, 547, 550, 742, 743, 744, 745, 746, 756, 881, 882, 883, 884, 885, 953, 957, 1714, 1801, 1802, 1803, 1804, 1805, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2070, 2071, 2074, 2076, 2079, 2097, 2100, 2106, 2110], "pursuit": 41, "unif": [41, 43, 172, 2136, 2146], "clearli": [41, 47, 49, 156, 165, 166, 2144], "lot": [41, 42, 153, 154, 162, 166, 187, 2139], "thought": [41, 48, 49, 160, 2138], "care": [41, 49, 164, 168, 175, 2152, 2155], "attent": [41, 49, 76, 77, 124, 125, 150, 1650, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 2169, 2180], "gone": [41, 169], "simplifi": [41, 158, 164, 170, 171, 174, 2136, 2138, 2139, 2140, 2143, 2146, 2147], "compat": [41, 51, 54, 55, 67, 68, 78, 79, 82, 83, 88, 89, 94, 95, 96, 97, 100, 105, 106, 115, 116, 126, 127, 130, 131, 136, 137, 142, 143, 144, 145, 151, 160, 164, 165, 167, 170, 187, 341, 359, 362, 481, 497, 498, 499, 500, 501, 517, 518, 519, 520, 521, 527, 528, 529, 530, 531, 537, 538, 539, 540, 541, 542, 543, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 607, 608, 609, 610, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 707, 708, 709, 710, 711, 717, 718, 719, 720, 721, 727, 728, 729, 730, 731, 742, 743, 744, 745, 746, 777, 778, 779, 780, 781, 797, 798, 799, 800, 801, 1714, 1720, 1721, 1722, 1724, 1776, 1777, 1778, 1779, 1780, 1791, 1794, 1806, 1809, 1821, 1824, 1839, 1843, 1844, 1845, 1847, 1848, 1870, 1906, 1907, 1908, 1909, 1910, 2007, 2013, 2014, 2015, 2016, 2017, 2070, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2128], "excit": [41, 43, 148, 2128], "complianc": 41, "hope": [41, 187, 2146], "due": [41, 44, 48, 149, 153, 158, 163, 164, 481, 747, 750, 2140], "suit": [41, 48, 148, 149, 153, 166, 173, 186, 2127, 2140, 2146], "some": [41, 42, 47, 48, 49, 103, 104, 120, 121, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 186, 187, 446, 448, 481, 597, 600, 662, 665, 932, 1149, 1156, 1612, 1614, 1617, 1618, 1620, 1621, 1624, 1627, 1629, 1631, 1632, 1633, 1635, 1636, 1637, 1639, 1640, 1955, 1967, 2127, 2128, 2136, 2137, 2139, 2140, 2141, 2146, 2147, 2169, 2177], "motiv": [41, 172], "great": [41, 42, 49, 166, 170, 172, 2146], "convinc": 41, "celebr": 41, "encourag": [41, 186, 187], "foundat": [41, 2143], "mai": [42, 46, 47, 48, 49, 51, 54, 55, 65, 66, 67, 68, 69, 90, 91, 92, 93, 100, 105, 106, 113, 114, 115, 116, 126, 127, 140, 141, 149, 152, 153, 154, 163, 164, 165, 166, 171, 172, 174, 255, 257, 258, 279, 282, 446, 472, 473, 474, 475, 476, 481, 582, 583, 584, 585, 586, 617, 620, 647, 650, 682, 685, 687, 690, 717, 718, 719, 721, 953, 973, 1260, 1261, 1263, 1417, 1448, 1450, 1714, 1801, 1804, 1844, 1845, 1847, 1848, 2033, 2034, 2036, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2065, 2068, 2070, 2085, 2088, 2089, 2092, 2093, 2096, 2102, 2105, 2147, 2237, 2246], "ask": [42, 47, 48, 156, 170, 172, 187], "perfectli": [42, 2255, 2262], "happi": [42, 48, 187], "abund": 42, "better": [42, 44, 148, 164, 165, 167, 168, 169, 172, 173, 174, 2143], "ll": [42, 43, 48, 49, 156, 163, 173], "give": [42, 44, 48, 49, 148, 151, 153, 156, 157, 160, 166, 341, 428, 1650, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1683, 1684, 1687, 1870, 1906, 1909, 2140, 2144, 2157, 2158, 2159, 2164], "two": [42, 47, 48, 51, 54, 55, 61, 62, 69, 78, 79, 100, 105, 106, 117, 118, 119, 126, 127, 149, 150, 154, 156, 157, 164, 165, 166, 168, 169, 173, 175, 255, 257, 258, 276, 277, 300, 303, 323, 325, 327, 328, 330, 332, 341, 427, 439, 481, 547, 550, 747, 750, 814, 815, 817, 829, 832, 896, 902, 903, 917, 920, 943, 946, 953, 954, 963, 964, 965, 968, 970, 981, 1032, 1035, 1037, 1040, 1042, 1045, 1087, 1090, 1121, 1124, 1176, 1178, 1179, 1200, 1202, 1218, 1219, 1221, 1294, 1297, 1310, 1311, 1312, 1313, 1314, 1326, 1327, 1328, 1329, 1330, 1353, 1358, 1370, 1371, 1372, 1373, 1374, 1378, 1381, 1382, 1385, 1411, 1415, 1417, 1425, 1427, 1428, 1429, 1714, 1715, 1716, 1717, 1718, 1719, 1725, 1728, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1829, 1830, 1831, 1832, 1833, 1839, 1843, 1870, 1931, 1935, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2128, 2137, 2145, 2237, 2240, 2255, 2259, 2260], "streamlin": [42, 2143], "workflow": [42, 47, 49, 151, 154, 164, 173, 185, 2127, 2128, 2139, 2146, 2147], "save": [42, 44, 69, 103, 104, 117, 153, 159, 166, 187, 446, 448, 1270, 1271, 1272, 1273, 1353, 1357, 1417, 1501, 1565, 2139, 2181, 2182], "week": [42, 49, 2128], "let": [42, 44, 70, 71, 94, 95, 118, 119, 150, 152, 154, 155, 156, 157, 158, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 1417, 1476, 1477, 1478, 1479, 1480, 2070, 2089, 2090, 2092, 2102, 2105, 2106, 2110, 2111, 2113, 2115, 2128, 2147], "sai": [42, 48, 162, 172], "deepmind": 42, "releas": [42, 47, 48, 49, 154, 164, 167, 168, 187, 2128, 2140, 2146], "awesom": 42, "paper": 42, "love": 42, "choic": [42, 48, 94, 95, 142, 143, 163, 164, 173, 2070, 2102, 2103, 2104, 2105, 2111, 2113, 2114, 2115, 2140], "perceiverio": 42, "happen": [42, 48, 49, 166, 173, 953, 979, 1375, 1377], "slew": 42, "rush": 42, "f": [42, 43, 45, 49, 69, 82, 83, 117, 130, 131, 148, 152, 153, 159, 170, 173, 805, 807, 1012, 1013, 1014, 1015, 1016, 1149, 1165, 1200, 1208, 1299, 1305, 1306, 1308, 1417, 1507, 1523, 1870, 1906, 1907, 1908, 1909, 1910, 1955, 1959, 1963, 1964, 1965, 1973, 1974, 2136], "g": [42, 43, 47, 48, 69, 86, 87, 117, 134, 135, 148, 149, 152, 164, 166, 170, 187, 341, 348, 429, 432, 446, 449, 854, 855, 856, 857, 858, 859, 862, 927, 928, 930, 1300, 1301, 1303, 1315, 1316, 1317, 1318, 1320, 1955, 1959, 1963, 1965, 1973, 1980, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2070, 2071, 2074, 2076, 2079, 2085, 2088, 2093, 2096, 2097, 2100, 2106, 2110, 2127, 2136, 2152, 2154, 2159, 2163], "inevit": [42, 2141], "deviat": [42, 69, 84, 85, 86, 87, 94, 95, 117, 132, 133, 134, 135, 142, 143, 149, 1107, 1108, 1109, 1110, 1111, 1290, 1291, 1975, 1976, 1977, 1978, 1979, 1980, 1991, 1992, 1993, 1994, 1995, 2070, 2102, 2103, 2104, 2105, 2159, 2164, 2183, 2184, 2255, 2260], "often": [42, 46, 149, 158, 159, 160, 161, 164, 166, 187, 2141, 2144, 2147], "erron": 42, "train": [42, 72, 73, 76, 77, 120, 121, 124, 125, 152, 155, 161, 173, 174, 175, 185, 186, 187, 932, 1149, 1156, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1629, 1630, 1631, 1632, 1650, 1689, 1690, 1691, 1692, 1693, 2127, 2128, 2138, 2139, 2144, 2146, 2147, 2152, 2154, 2155, 2159, 2164, 2167], "poor": 42, "converg": 42, "perform": [42, 61, 62, 69, 72, 73, 76, 77, 78, 79, 94, 95, 96, 97, 109, 110, 117, 118, 119, 124, 125, 126, 127, 142, 143, 144, 145, 149, 150, 151, 152, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 173, 187, 205, 218, 221, 238, 241, 255, 290, 293, 295, 296, 297, 298, 299, 481, 797, 801, 913, 915, 922, 923, 924, 925, 926, 932, 953, 959, 1002, 1003, 1004, 1005, 1006, 1097, 1098, 1099, 1100, 1101, 1149, 1155, 1156, 1158, 1159, 1171, 1174, 1343, 1344, 1417, 1451, 1454, 1456, 1459, 1460, 1461, 1464, 1465, 1508, 1511, 1513, 1516, 1518, 1521, 1557, 1564, 1624, 1625, 1650, 1689, 1690, 1691, 1692, 1693, 1699, 1702, 1714, 1811, 1812, 1813, 1814, 1815, 1844, 1845, 1847, 1848, 1951, 1952, 1953, 1954, 1955, 1963, 1964, 2070, 2071, 2072, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2137, 2140, 2141, 2142, 2143, 2144, 2145, 2147, 2152, 2155, 2194, 2201], "issu": [42, 43, 46, 47, 149, 151, 153, 154, 156, 158, 164, 166, 167, 170, 174, 187, 2159, 2167], "etc": [42, 47, 48, 49, 61, 62, 69, 86, 87, 98, 99, 109, 110, 117, 118, 119, 134, 135, 146, 147, 149, 150, 152, 154, 156, 158, 160, 164, 165, 166, 167, 170, 172, 173, 187, 255, 267, 268, 269, 290, 293, 295, 296, 297, 298, 299, 310, 311, 313, 854, 855, 856, 857, 859, 862, 1047, 1049, 1300, 1301, 1302, 1303, 1304, 1315, 1316, 1317, 1319, 1320, 1481, 1483, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2127, 2138, 2140, 2146, 2159, 2160, 2163, 2164, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2189, 2191, 2192, 2237, 2241, 2245, 2246, 2266, 2267, 2268, 2269], "publish": [42, 187], "manag": [42, 43, 163, 187, 1612, 1613, 2142, 2144], "get": [42, 43, 46, 47, 48, 51, 54, 55, 65, 66, 103, 104, 113, 114, 126, 127, 148, 153, 154, 155, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 205, 341, 380, 382, 384, 385, 388, 396, 399, 446, 452, 453, 454, 455, 456, 458, 461, 466, 470, 477, 480, 1417, 1424, 1486, 1487, 1488, 1490, 1491, 1492, 1498, 1500, 1501, 1546, 1567, 1714, 1844, 1845, 1847, 1848, 1955, 1958, 2127, 2140, 2146, 2157, 2158, 2159, 2163, 2169, 2178], "work": [42, 46, 47, 48, 49, 69, 117, 148, 149, 150, 152, 153, 154, 155, 156, 158, 164, 165, 166, 167, 169, 170, 172, 174, 175, 1310, 1311, 1312, 1313, 1314, 1353, 1358, 1955, 1963, 1964, 1968, 1973, 1974, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147], "repositori": [42, 44, 45, 48, 49, 148, 149, 159], "pull": [42, 43, 44, 45, 47, 48, 149, 156, 167, 168, 187], "request": [42, 43, 47, 69, 156, 167, 168, 446, 463, 1300, 1301, 1303, 1315, 1320], "confus": [42, 154, 158, 163, 168, 2127], "do": [42, 47, 48, 49, 69, 70, 71, 103, 104, 117, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 167, 168, 170, 172, 173, 174, 175, 187, 481, 742, 745, 1270, 1271, 1272, 1273, 1310, 1311, 1312, 1313, 1314, 1353, 1357, 1358, 1417, 1518, 1519, 1521, 1955, 1956, 1963, 1966, 1967, 1968, 1973, 2127, 2141, 2146, 2147], "don": [42, 47, 48, 49, 98, 99, 146, 147, 153, 154, 166, 174, 187], "expect": [42, 49, 69, 149, 154, 158, 165, 166, 187, 341, 428, 913, 915, 1149, 1155, 1417, 1424, 2128, 2157, 2158, 2159, 2164, 2167, 2181, 2182], "codebas": [42, 43, 148, 154, 163, 164, 166, 167, 169, 446, 469, 470, 2128], "total": [42, 43, 49, 69, 94, 95, 100, 103, 104, 105, 106, 117, 142, 143, 154, 155, 156, 158, 166, 168, 173, 174, 187, 446, 477, 891, 892, 893, 894, 895, 953, 958, 2007, 2023, 2026, 2070, 2102, 2103, 2104, 2105, 2111, 2113, 2114, 2115], "hour": [42, 153], "spent": 42, "spin": 42, "off": [42, 48, 76, 77, 78, 79, 124, 125, 126, 127, 169, 1650, 1689, 1690, 1691, 1692, 1693, 1714, 1735, 1736, 1737, 1738, 1739, 1829, 1833, 2146, 2159, 2167], "test": [42, 46, 47, 67, 68, 69, 96, 97, 115, 116, 117, 144, 145, 148, 154, 156, 158, 159, 162, 164, 167, 187, 341, 403, 406, 417, 420, 481, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 932, 953, 976, 1055, 1056, 1126, 1127, 1128, 1129, 1130, 1149, 1156, 1321, 1322, 1323, 1324, 1325, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2140, 2194, 2195, 2200, 2201, 2210, 2223, 2224, 2225, 2226, 2228, 2229, 2251, 2254, 2283, 2284, 2285, 2286], "discuss": [42, 48, 49, 154, 155, 163, 164, 166, 168, 171, 172, 173, 187, 2128, 2136, 2141], "error": [42, 46, 48, 49, 67, 68, 69, 103, 104, 115, 116, 117, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 164, 166, 167, 172, 187, 205, 207, 210, 481, 587, 588, 589, 590, 591, 1270, 1271, 1272, 1273, 1353, 1357, 1714, 1801, 1804, 1816, 1820, 2070, 2085, 2088, 2093, 2096, 2140, 2181, 2182, 2185, 2189, 2255, 2262], "iter": [42, 56, 57, 58, 59, 60, 70, 71, 82, 83, 98, 99, 100, 103, 104, 105, 106, 118, 119, 130, 131, 146, 147, 152, 170, 173, 446, 471, 1200, 1216, 1217, 1218, 1282, 1283, 1294, 1297, 1417, 1418, 1419, 1420, 1421, 1422, 1543, 1870, 1881, 1882, 1883, 1884, 1885, 1901, 1902, 1903, 1904, 1936, 1937, 1938, 1939, 1940, 1946, 1947, 1948, 1949, 1950, 1955, 1956, 1957, 1958, 1959, 1961, 1962, 1964, 1965, 1966, 1967, 1968, 1971, 1972, 1974], "address": [42, 47, 49, 149, 150, 170, 1417, 1589, 1593, 2136, 2138, 2140, 2146], "sake": 42, "singl": [42, 47, 48, 49, 69, 86, 87, 103, 104, 115, 116, 134, 135, 149, 152, 153, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 187, 859, 862, 953, 970, 979, 1121, 1124, 1315, 1317, 1375, 1376, 1377, 1417, 1594, 1598, 1606, 1610, 1612, 1622, 1980, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2033, 2034, 2038, 2152, 2154, 2237, 2245, 2246], "multipl": [42, 49, 69, 78, 79, 84, 85, 94, 95, 96, 97, 103, 104, 115, 116, 117, 118, 119, 120, 121, 126, 127, 130, 131, 132, 133, 142, 143, 144, 145, 150, 151, 152, 156, 158, 161, 163, 164, 165, 166, 168, 170, 187, 481, 497, 501, 527, 531, 542, 546, 547, 550, 551, 672, 675, 692, 696, 697, 700, 702, 704, 705, 706, 907, 910, 911, 933, 936, 953, 971, 1068, 1071, 1077, 1080, 1149, 1154, 1166, 1167, 1168, 1169, 1170, 1171, 1174, 1200, 1205, 1212, 1222, 1343, 1344, 1396, 1400, 1417, 1418, 1420, 1421, 1422, 1543, 1612, 1614, 1616, 1617, 1618, 1620, 1621, 1624, 1626, 1627, 1629, 1631, 1632, 1637, 1639, 1640, 1642, 1643, 1645, 1646, 1650, 1662, 1665, 1667, 1670, 1672, 1675, 1714, 1715, 1718, 1719, 1720, 1724, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1769, 1870, 1871, 1874, 1875, 1886, 1889, 1890, 1911, 1914, 1915, 1916, 1919, 1975, 1976, 1977, 1978, 1979, 2007, 2008, 2011, 2013, 2016, 2070, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2138, 2139, 2140, 2147, 2169, 2179], "line": [42, 48, 149, 150, 153, 156, 158, 159, 162, 166, 168, 171, 172, 173, 174, 185, 2128, 2143], "directli": [42, 49, 149, 150, 152, 153, 154, 155, 157, 161, 162, 163, 164, 165, 167, 168, 170, 172, 174, 175, 186, 187, 1955, 1968, 2144, 2145, 2146, 2152, 2154], "graph": [42, 72, 73, 152, 161, 164, 168, 171, 187, 1624, 1625, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2127, 2136, 2140, 2143, 2152, 2154, 2181, 2182], "guarante": [42, 150, 187, 2033, 2034, 2038, 2044, 2048], "turn": [42, 48, 76, 77, 124, 125, 152, 156, 164, 166, 1650, 1689, 1690, 1691, 1692, 1693], "4": [42, 45, 47, 48, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 152, 153, 156, 165, 166, 170, 172, 173, 174, 175, 205, 207, 208, 210, 213, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 238, 241, 243, 245, 247, 255, 267, 269, 276, 277, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 300, 303, 310, 312, 313, 314, 318, 321, 336, 340, 341, 354, 355, 356, 357, 358, 359, 361, 362, 364, 366, 367, 368, 380, 381, 382, 385, 386, 388, 396, 398, 412, 414, 415, 416, 417, 420, 429, 432, 433, 446, 453, 454, 455, 456, 457, 458, 465, 469, 472, 473, 474, 475, 481, 482, 484, 485, 486, 492, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 527, 530, 531, 532, 534, 536, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 557, 559, 560, 561, 562, 565, 567, 570, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 627, 629, 630, 631, 632, 634, 635, 636, 637, 641, 642, 643, 644, 645, 646, 647, 649, 650, 651, 652, 653, 655, 657, 658, 660, 662, 664, 665, 666, 672, 673, 674, 675, 676, 692, 695, 697, 699, 700, 701, 702, 705, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 730, 731, 732, 735, 737, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 757, 759, 760, 761, 762, 765, 767, 768, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 785, 786, 787, 788, 790, 791, 792, 793, 795, 796, 797, 798, 799, 800, 801, 805, 808, 809, 810, 811, 812, 813, 819, 821, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 869, 871, 886, 888, 890, 891, 892, 893, 894, 895, 896, 897, 899, 902, 903, 907, 908, 909, 910, 911, 917, 920, 922, 923, 924, 925, 926, 927, 929, 931, 933, 934, 935, 936, 937, 938, 939, 940, 941, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 958, 959, 960, 962, 963, 964, 965, 966, 967, 968, 969, 971, 972, 974, 976, 978, 979, 982, 985, 987, 988, 989, 990, 991, 997, 1000, 1001, 1002, 1004, 1005, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1021, 1022, 1024, 1026, 1027, 1028, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1050, 1051, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1068, 1070, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1121, 1122, 1126, 1127, 1128, 1129, 1130, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1154, 1157, 1158, 1159, 1162, 1163, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1183, 1184, 1185, 1186, 1187, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1205, 1206, 1208, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1257, 1259, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1282, 1283, 1290, 1291, 1292, 1293, 1294, 1297, 1300, 1301, 1302, 1303, 1304, 1310, 1311, 1312, 1313, 1314, 1315, 1320, 1321, 1322, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1338, 1340, 1341, 1342, 1343, 1344, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1381, 1382, 1385, 1386, 1387, 1388, 1389, 1390, 1396, 1397, 1398, 1399, 1400, 1401, 1404, 1405, 1417, 1436, 1438, 1439, 1440, 1441, 1443, 1444, 1445, 1448, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1469, 1470, 1471, 1472, 1473, 1476, 1478, 1479, 1480, 1481, 1484, 1489, 1502, 1505, 1508, 1509, 1510, 1511, 1513, 1514, 1515, 1552, 1553, 1554, 1555, 1556, 1568, 1569, 1570, 1571, 1572, 1578, 1580, 1584, 1587, 1599, 1611, 1612, 1614, 1616, 1617, 1618, 1619, 1620, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1637, 1638, 1639, 1640, 1642, 1643, 1645, 1646, 1648, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1662, 1663, 1664, 1665, 1666, 1667, 1670, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1687, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1718, 1725, 1726, 1728, 1730, 1731, 1732, 1733, 1735, 1736, 1737, 1738, 1739, 1746, 1748, 1749, 1750, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1777, 1779, 1781, 1783, 1784, 1785, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1801, 1802, 1803, 1804, 1805, 1811, 1812, 1814, 1815, 1816, 1820, 1821, 1824, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1854, 1865, 1868, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1879, 1881, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1919, 1921, 1924, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1955, 1957, 1959, 1962, 1963, 1964, 1965, 1967, 1973, 1974, 1975, 1976, 1978, 1979, 1980, 1981, 1984, 1986, 1988, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2026, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2054, 2055, 2058, 2060, 2063, 2065, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2113, 2114, 2116, 2117, 2118, 2120, 2122, 2123, 2125, 2128, 2140, 2146, 2147, 2159, 2167, 2185, 2186, 2187, 2188, 2190, 2205, 2225, 2237, 2239, 2241, 2245, 2246, 2249, 2251, 2252, 2266, 2267, 2269], "step": [42, 44, 45, 47, 48, 49, 69, 72, 73, 109, 110, 117, 120, 121, 150, 151, 152, 153, 154, 155, 156, 164, 166, 170, 173, 174, 175, 186, 255, 257, 258, 259, 290, 293, 1072, 1073, 1074, 1075, 1076, 1200, 1211, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1951, 1952, 1953, 1954, 2128, 2140, 2157, 2158, 2185, 2186, 2187, 2188, 2189, 2190], "take": [42, 43, 47, 48, 49, 69, 82, 83, 94, 95, 117, 130, 131, 149, 150, 152, 153, 154, 155, 156, 157, 163, 164, 165, 166, 168, 170, 172, 174, 175, 187, 255, 310, 313, 481, 552, 555, 805, 807, 844, 846, 848, 953, 976, 1002, 1003, 1004, 1005, 1006, 1012, 1013, 1014, 1015, 1016, 1097, 1098, 1099, 1100, 1101, 1149, 1158, 1159, 1200, 1208, 1220, 1234, 1236, 1238, 1305, 1306, 1308, 1321, 1324, 1360, 1364, 1714, 1761, 1764, 1781, 1784, 1870, 1906, 1907, 1908, 1909, 1910, 2071, 2072, 2128, 2137, 2138, 2146, 2152, 2155, 2159, 2164, 2237, 2240, 2282, 2287, 2288], "few": [42, 46, 47, 49, 152, 154, 155, 160, 161, 163, 166, 168, 170, 171, 172, 173, 174, 185, 2128, 2140, 2142], "second": [42, 48, 51, 54, 55, 67, 68, 69, 72, 73, 78, 79, 82, 83, 90, 91, 100, 105, 106, 115, 116, 117, 118, 119, 120, 121, 126, 127, 130, 131, 138, 139, 149, 154, 156, 163, 164, 166, 172, 341, 427, 439, 481, 497, 498, 499, 500, 501, 517, 518, 519, 521, 527, 528, 529, 530, 531, 537, 538, 539, 540, 541, 542, 543, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 582, 583, 585, 607, 610, 612, 613, 617, 618, 620, 642, 643, 645, 647, 648, 650, 672, 673, 675, 677, 678, 680, 687, 688, 690, 692, 693, 695, 707, 708, 709, 710, 717, 718, 720, 727, 728, 730, 777, 778, 779, 780, 781, 814, 815, 816, 817, 818, 859, 860, 896, 902, 903, 943, 946, 953, 954, 963, 964, 965, 966, 967, 968, 970, 971, 972, 975, 980, 981, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1057, 1058, 1059, 1060, 1087, 1088, 1089, 1090, 1091, 1121, 1122, 1123, 1124, 1125, 1139, 1142, 1143, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1174, 1176, 1179, 1181, 1183, 1184, 1185, 1186, 1187, 1200, 1219, 1285, 1286, 1287, 1288, 1289, 1326, 1329, 1343, 1344, 1378, 1381, 1382, 1385, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1425, 1427, 1428, 1429, 1498, 1562, 1603, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1629, 1630, 1631, 1632, 1714, 1720, 1721, 1722, 1723, 1724, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1751, 1754, 1761, 1762, 1763, 1764, 1765, 1786, 1789, 1796, 1797, 1798, 1799, 1800, 1801, 1804, 1811, 1815, 1821, 1824, 1839, 1843, 1870, 1926, 1929, 1931, 1932, 1933, 1934, 1935, 1951, 1953, 1955, 1957, 2033, 2034, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2145, 2185, 2186, 2187], "automat": [42, 47, 48, 49, 148, 152, 153, 154, 159, 161, 166, 168, 169, 171, 174, 175, 2127, 2128, 2140, 2143, 2147], "convers": [42, 47, 57, 58, 59, 60, 67, 68, 108, 162, 169, 171, 175, 186, 187, 572, 573, 732, 733, 1417, 1557, 1564, 2127, 2128, 2139, 2146], "everyon": [42, 43, 49, 187], "regardless": [42, 43, 103, 104, 154, 172, 175], "wouldn": 42, "nice": [42, 166, 2140], "writeonc": [42, 47, 48, 49, 78, 79, 86, 87, 126, 127, 134, 135, 152, 153, 154, 155, 156, 164, 166, 168, 170, 173, 187, 446, 471, 1714, 1740, 1741, 1744, 1746, 1749, 1811, 1812, 1813, 1814, 1815, 1980, 1981, 1982, 1983, 1984, 1985], "know": [42, 49, 165, 166, 167, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2141], "among": [42, 103, 104, 153, 166, 168, 2140], "frantic": 42, "port": [42, 2205, 2221], "lucid": 42, "honk": 42, "improv": [42, 49, 154, 160, 161, 168, 170, 2127, 2138, 2140, 2142, 2143], "understand": [42, 44, 45, 46, 47, 48, 49, 148, 149, 156, 157, 160, 165, 168, 169, 2136, 2146], "pattern": [42, 70, 71, 118, 119, 154, 157, 1417, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465], "hasn": 42, "chang": [42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 151, 152, 153, 154, 156, 157, 164, 165, 166, 167, 168, 170, 174, 187, 207, 208, 209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 247, 260, 261, 267, 268, 271, 272, 279, 280, 285, 286, 287, 289, 295, 296, 297, 299, 300, 301, 305, 306, 310, 311, 312, 314, 318, 319, 320, 322, 323, 325, 328, 330, 336, 337, 338, 339, 354, 355, 356, 358, 359, 360, 361, 363, 364, 365, 366, 368, 396, 397, 398, 400, 408, 409, 412, 414, 429, 430, 431, 433, 453, 454, 455, 457, 472, 473, 474, 475, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 606, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 671, 672, 673, 674, 676, 677, 678, 679, 681, 682, 683, 684, 686, 687, 688, 689, 691, 692, 693, 694, 696, 697, 698, 699, 701, 702, 703, 704, 706, 707, 708, 709, 711, 712, 713, 714, 716, 717, 718, 719, 721, 722, 723, 724, 726, 727, 728, 729, 731, 732, 733, 734, 736, 737, 738, 739, 741, 742, 743, 744, 746, 747, 748, 749, 751, 752, 753, 754, 756, 757, 758, 759, 761, 762, 763, 764, 766, 767, 768, 769, 771, 772, 773, 774, 776, 777, 778, 779, 780, 782, 783, 784, 785, 787, 788, 789, 790, 792, 793, 794, 795, 797, 798, 799, 800, 809, 810, 811, 813, 814, 815, 816, 818, 819, 820, 821, 823, 824, 825, 826, 828, 829, 830, 831, 833, 834, 835, 836, 838, 839, 840, 841, 843, 844, 845, 846, 848, 849, 851, 853, 859, 860, 861, 863, 869, 870, 872, 874, 875, 877, 881, 882, 883, 884, 885, 886, 887, 888, 890, 891, 892, 893, 895, 907, 908, 909, 911, 917, 918, 919, 922, 923, 924, 926, 927, 928, 929, 931, 933, 934, 935, 937, 938, 939, 940, 942, 943, 945, 947, 948, 949, 950, 952, 953, 957, 987, 988, 989, 991, 997, 998, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1050, 1051, 1052, 1054, 1064, 1065, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1106, 1107, 1109, 1111, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1143, 1144, 1146, 1148, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1175, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1192, 1195, 1197, 1199, 1200, 1208, 1224, 1225, 1226, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1238, 1239, 1241, 1243, 1244, 1245, 1246, 1248, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1262, 1264, 1265, 1266, 1267, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1279, 1285, 1286, 1287, 1289, 1294, 1295, 1296, 1298, 1300, 1302, 1304, 1310, 1311, 1312, 1314, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1330, 1333, 1334, 1335, 1337, 1338, 1339, 1340, 1342, 1353, 1357, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1375, 1376, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1406, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1418, 1419, 1420, 1422, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1434, 1436, 1437, 1438, 1440, 1441, 1442, 1443, 1445, 1448, 1449, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 1461, 1462, 1463, 1466, 1467, 1469, 1470, 1471, 1473, 1476, 1477, 1478, 1480, 1481, 1482, 1483, 1493, 1494, 1495, 1497, 1502, 1503, 1508, 1509, 1510, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1522, 1524, 1525, 1526, 1528, 1529, 1530, 1531, 1533, 1534, 1535, 1537, 1538, 1539, 1541, 1547, 1548, 1549, 1551, 1552, 1554, 1556, 1568, 1569, 1570, 1572, 1573, 1574, 1575, 1577, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1589, 1590, 1591, 1592, 1594, 1595, 1596, 1597, 1606, 1607, 1608, 1609, 1614, 1615, 1616, 1618, 1619, 1624, 1625, 1626, 1629, 1630, 1633, 1634, 1637, 1638, 1642, 1643, 1644, 1645, 1652, 1653, 1654, 1656, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1681, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1693, 1694, 1695, 1696, 1698, 1699, 1700, 1701, 1709, 1710, 1711, 1713, 1715, 1716, 1717, 1719, 1720, 1721, 1722, 1724, 1730, 1731, 1732, 1735, 1736, 1737, 1739, 1746, 1747, 1748, 1750, 1756, 1757, 1758, 1760, 1761, 1762, 1763, 1765, 1766, 1767, 1768, 1770, 1791, 1792, 1793, 1795, 1796, 1797, 1798, 1800, 1801, 1802, 1803, 1805, 1811, 1812, 1813, 1814, 1834, 1835, 1844, 1845, 1847, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1864, 1865, 1866, 1867, 1869, 1870, 1871, 1872, 1873, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1936, 1937, 1938, 1939, 1941, 1942, 1943, 1944, 1946, 1947, 1948, 1949, 1955, 1957, 1968, 1973, 1976, 1977, 1978, 1981, 1982, 1983, 1985, 1986, 1987, 1988, 1990, 1991, 1992, 1993, 1995, 1996, 1997, 1998, 2000, 2002, 2003, 2004, 2006, 2008, 2009, 2010, 2012, 2013, 2014, 2015, 2017, 2018, 2019, 2020, 2022, 2023, 2024, 2025, 2027, 2028, 2029, 2030, 2031, 2034, 2035, 2036, 2037, 2039, 2040, 2041, 2042, 2044, 2045, 2046, 2047, 2055, 2056, 2057, 2059, 2060, 2061, 2062, 2064, 2065, 2066, 2067, 2069, 2071, 2072, 2073, 2075, 2076, 2077, 2078, 2080, 2081, 2082, 2085, 2086, 2087, 2089, 2090, 2091, 2093, 2095, 2097, 2098, 2099, 2101, 2102, 2103, 2104, 2111, 2112, 2113, 2114, 2117, 2118, 2119, 2121, 2122, 2123, 2124, 2126, 2128, 2143, 2146, 2205, 2208], "now": [42, 45, 48, 149, 150, 151, 152, 153, 154, 159, 160, 162, 164, 165, 166, 167, 168, 172, 173, 175, 186, 187, 255, 276, 277, 318, 321, 336, 340, 2140, 2169, 2180, 2181, 2182], "spend": [42, 2140], "torchvis": 42, "probabl": [42, 69, 76, 77, 86, 87, 117, 124, 125, 134, 135, 166, 854, 855, 856, 857, 858, 932, 1149, 1156, 1270, 1271, 1272, 1273, 1315, 1316, 1353, 1357, 1650, 1689, 1690, 1691, 1692, 1693, 1980, 1981, 1982, 1983, 1984, 1985, 2159, 2167, 2169, 2177, 2255, 2262], "sonnet": 42, "about": [42, 46, 47, 48, 49, 63, 64, 111, 112, 149, 153, 154, 160, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 187, 341, 385, 386, 387, 388, 389, 396, 397, 398, 399, 400, 2141, 2142, 2145], "next": [42, 44, 47, 48, 49, 69, 117, 151, 156, 157, 162, 164, 167, 171, 172, 173, 341, 385, 388, 953, 975, 980, 1285, 1286, 1287, 1288, 1289, 1406, 1407, 1408, 1409, 1410, 2128, 2140, 2142, 2159, 2160, 2163, 2164, 2167, 2181, 2182, 2185, 2186, 2187, 2188, 2189, 2190], "everyth": [42, 47, 49, 153, 156, 164, 165, 166, 167, 171, 187], "zero": [42, 51, 54, 55, 61, 62, 63, 64, 67, 68, 69, 72, 73, 76, 77, 78, 79, 82, 83, 88, 89, 94, 95, 96, 97, 100, 105, 106, 109, 110, 111, 112, 115, 116, 117, 120, 121, 124, 125, 126, 127, 134, 135, 136, 137, 142, 143, 144, 145, 150, 152, 154, 155, 156, 160, 162, 165, 170, 173, 174, 205, 213, 216, 223, 226, 228, 231, 255, 267, 269, 270, 276, 277, 300, 301, 303, 310, 311, 312, 313, 314, 318, 321, 323, 325, 327, 328, 330, 332, 336, 337, 338, 339, 340, 341, 349, 350, 351, 352, 353, 354, 355, 356, 357, 481, 487, 490, 492, 495, 497, 500, 502, 503, 504, 505, 506, 507, 510, 512, 515, 517, 518, 520, 522, 525, 537, 540, 547, 550, 562, 563, 565, 567, 568, 569, 570, 571, 572, 575, 597, 600, 602, 605, 622, 625, 627, 628, 630, 632, 633, 635, 637, 640, 662, 665, 682, 685, 687, 690, 697, 698, 700, 702, 703, 705, 712, 713, 715, 717, 720, 722, 723, 725, 727, 728, 730, 732, 735, 742, 745, 747, 748, 750, 757, 760, 762, 763, 764, 766, 767, 770, 772, 775, 782, 786, 787, 791, 792, 796, 797, 801, 805, 808, 881, 882, 883, 884, 885, 891, 892, 893, 894, 895, 896, 897, 907, 908, 909, 910, 911, 913, 915, 922, 923, 924, 925, 926, 932, 953, 957, 958, 959, 961, 973, 974, 976, 977, 978, 980, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1072, 1073, 1074, 1075, 1076, 1097, 1098, 1099, 1100, 1101, 1107, 1108, 1109, 1110, 1111, 1149, 1154, 1155, 1156, 1158, 1159, 1200, 1211, 1215, 1218, 1244, 1248, 1250, 1251, 1252, 1253, 1254, 1260, 1263, 1270, 1274, 1275, 1278, 1290, 1291, 1294, 1297, 1321, 1324, 1333, 1336, 1338, 1341, 1365, 1369, 1406, 1407, 1408, 1409, 1410, 1417, 1441, 1444, 1451, 1454, 1543, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1640, 1642, 1646, 1650, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1683, 1684, 1687, 1689, 1690, 1691, 1692, 1693, 1694, 1697, 1709, 1710, 1712, 1714, 1715, 1718, 1725, 1728, 1746, 1749, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1784, 1791, 1792, 1793, 1794, 1795, 1801, 1804, 1839, 1843, 1844, 1845, 1847, 1848, 1870, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1897, 1899, 1911, 1914, 1946, 1950, 1975, 1976, 1979, 1980, 1986, 1988, 1989, 1991, 1993, 1994, 1996, 1998, 1999, 2007, 2008, 2009, 2011, 2013, 2014, 2016, 2018, 2021, 2023, 2024, 2025, 2026, 2027, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2054, 2065, 2068, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2128, 2139, 2159, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2179, 2185, 2186, 2187], "need": [42, 44, 45, 47, 48, 49, 69, 70, 71, 82, 83, 117, 118, 119, 130, 131, 149, 150, 152, 153, 154, 156, 157, 158, 161, 163, 164, 165, 167, 168, 170, 172, 173, 186, 187, 913, 915, 1002, 1003, 1004, 1005, 1006, 1097, 1098, 1099, 1100, 1101, 1149, 1155, 1158, 1159, 1270, 1271, 1272, 1273, 1353, 1357, 1417, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1518, 1520, 1522, 1714, 1740, 1870, 1871, 1874, 1886, 1887, 1888, 1890, 1955, 1967, 2136, 2140, 2141, 2142, 2146, 2152, 2155, 2251, 2254], "said": [42, 2255, 2262], "high": [42, 47, 86, 87, 134, 135, 164, 168, 173, 1650, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1683, 1684, 1687, 1980, 1986, 1987, 1988, 1989, 1990, 1996, 1997, 1998, 1999, 2000, 2127, 2136, 2137, 2138, 2139, 2140, 2144, 2146, 2147, 2255, 2259], "level": [42, 43, 47, 49, 118, 119, 152, 158, 161, 164, 168, 169, 170, 173, 174, 175, 187, 1425, 1427, 1429, 2127, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2144, 2145, 2146, 2147, 2157, 2158], "optim": [42, 72, 73, 120, 121, 163, 171, 173, 175, 186, 1417, 1424, 1612, 1624, 1625, 1637, 1638, 1639, 1640, 1951, 1952, 1953, 1954, 2128, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2147, 2159, 2167, 2186, 2187, 2188, 2190], "trainer": [42, 185, 187, 2128, 2147], "statu": [42, 47, 153], "quo": 42, "kera": [42, 2146, 2152, 2153, 2154], "dopamin": 42, "ignit": 42, "catalyst": 42, "lightn": 42, "fastai": 42, "haiku": [42, 175, 2140, 2152, 2153], "flax": [42, 175, 187, 2140], "trax": [42, 175], "objax": [42, 175], "idea": [42, 44, 164, 167, 171, 186, 2139], "fulli": [42, 69, 117, 150, 154, 160, 163, 168, 170, 171, 172, 173, 174, 175, 187, 1270, 1271, 1272, 1273, 1353, 1357, 2138, 2139, 2140, 2146, 2147, 2169, 2179, 2180], "offer": [42, 164, 174, 2140, 2146, 2147], "strongli": [43, 48, 2146, 2147], "welcom": [43, 48, 49], "absolut": [43, 48, 51, 54, 55, 67, 68, 69, 78, 79, 103, 104, 115, 116, 117, 126, 127, 168, 481, 482, 483, 484, 485, 486, 814, 815, 816, 817, 818, 953, 954, 970, 1121, 1122, 1123, 1124, 1125, 1714, 1766, 1769, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1801, 1802, 1803, 1804, 1805, 2194, 2195, 2201, 2205, 2223, 2224, 2225, 2226, 2237, 2241, 2245, 2246, 2255, 2256], "skill": [43, 2142], "whether": [43, 47, 48, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 82, 83, 86, 87, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 152, 154, 156, 160, 163, 164, 166, 167, 168, 205, 207, 208, 209, 210, 211, 213, 215, 217, 218, 220, 222, 223, 225, 227, 228, 230, 232, 233, 235, 237, 238, 240, 242, 243, 245, 247, 255, 260, 261, 262, 285, 287, 289, 310, 312, 314, 318, 320, 322, 336, 337, 339, 341, 349, 350, 351, 352, 353, 354, 356, 358, 364, 366, 368, 371, 372, 374, 375, 376, 378, 379, 380, 382, 390, 391, 393, 394, 396, 398, 400, 402, 403, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 422, 425, 427, 429, 431, 433, 445, 446, 452, 453, 454, 455, 456, 459, 460, 462, 463, 466, 467, 471, 472, 473, 475, 478, 480, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 669, 671, 672, 674, 676, 677, 679, 681, 682, 684, 686, 687, 689, 691, 692, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 711, 712, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 731, 732, 734, 736, 737, 739, 741, 742, 743, 744, 745, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 778, 780, 782, 783, 785, 787, 788, 790, 792, 793, 795, 797, 798, 800, 814, 815, 816, 817, 818, 824, 826, 828, 829, 831, 833, 834, 836, 838, 854, 858, 859, 861, 863, 864, 866, 868, 891, 893, 895, 905, 906, 913, 915, 922, 926, 932, 933, 937, 953, 954, 970, 973, 997, 999, 1001, 1017, 1021, 1077, 1081, 1087, 1089, 1091, 1107, 1108, 1109, 1110, 1111, 1119, 1121, 1122, 1123, 1124, 1125, 1144, 1146, 1148, 1149, 1155, 1156, 1195, 1197, 1199, 1260, 1261, 1262, 1263, 1264, 1285, 1287, 1289, 1290, 1291, 1321, 1323, 1325, 1326, 1328, 1330, 1338, 1340, 1342, 1360, 1361, 1363, 1365, 1366, 1368, 1370, 1371, 1373, 1396, 1397, 1406, 1407, 1409, 1411, 1412, 1414, 1417, 1418, 1419, 1420, 1421, 1422, 1425, 1426, 1427, 1428, 1429, 1430, 1432, 1434, 1436, 1438, 1440, 1441, 1443, 1445, 1448, 1449, 1450, 1451, 1453, 1455, 1456, 1458, 1460, 1461, 1463, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1478, 1480, 1481, 1483, 1485, 1492, 1493, 1494, 1495, 1496, 1497, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1512, 1513, 1515, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1543, 1547, 1549, 1551, 1552, 1554, 1556, 1557, 1558, 1561, 1563, 1564, 1566, 1568, 1570, 1572, 1573, 1575, 1577, 1578, 1579, 1580, 1581, 1582, 1584, 1585, 1589, 1590, 1592, 1593, 1594, 1595, 1597, 1602, 1605, 1606, 1607, 1608, 1609, 1610, 1612, 1618, 1619, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1649, 1650, 1652, 1654, 1656, 1662, 1664, 1666, 1667, 1669, 1671, 1689, 1690, 1691, 1692, 1693, 1694, 1696, 1698, 1709, 1711, 1713, 1714, 1715, 1717, 1719, 1720, 1722, 1724, 1741, 1744, 1746, 1748, 1749, 1750, 1756, 1758, 1760, 1761, 1763, 1765, 1766, 1768, 1770, 1776, 1778, 1780, 1796, 1798, 1800, 1801, 1803, 1805, 1829, 1830, 1832, 1855, 1857, 1859, 1860, 1862, 1864, 1865, 1867, 1869, 1870, 1871, 1873, 1875, 1886, 1890, 1891, 1893, 1895, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1921, 1923, 1925, 1926, 1928, 1930, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1973, 1974, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1988, 1990, 1991, 1993, 1995, 1996, 1998, 2000, 2002, 2004, 2006, 2018, 2020, 2022, 2034, 2035, 2037, 2039, 2040, 2042, 2044, 2045, 2047, 2055, 2057, 2059, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2089, 2091, 2097, 2099, 2101, 2102, 2104, 2111, 2112, 2114, 2116, 2117, 2119, 2120, 2121, 2122, 2124, 2125, 2126, 2152, 2153, 2154, 2156, 2169, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2194, 2197, 2198, 2199, 2205, 2224, 2225, 2226, 2255, 2262], "veteran": 43, "beginn": [43, 2140], "aspect": [43, 173, 2128, 2140], "guid": [43, 47, 48, 49, 159, 164, 2128, 2146, 2152, 2154], "through": [43, 46, 47, 49, 69, 117, 148, 151, 152, 153, 156, 158, 161, 162, 163, 164, 165, 166, 168, 169, 170, 173, 174, 175, 186, 481, 517, 520, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1353, 1356, 1357, 1955, 1959, 1965, 2138, 2140, 2141, 2142, 2181, 2182], "journei": [43, 2128], "inclus": [43, 69, 117, 151, 163, 168, 255, 257, 258, 1310, 1311, 1312, 1313, 1314, 1353, 1358, 1980, 1986, 1989], "big": [43, 187, 2140, 2159, 2163], "team": [43, 47, 48, 49, 164, 2142], "board": 43, "contributor": [43, 48, 49, 164, 169, 2128, 2140], "split": [43, 49, 69, 82, 83, 103, 104, 117, 130, 131, 153, 169, 170, 187, 446, 469, 470, 471, 933, 934, 935, 936, 937, 1077, 1078, 1079, 1080, 1081, 1200, 1205, 1212, 1222, 1396, 1397, 1398, 1399, 1400, 1417, 1451, 1454, 1543, 1650, 1651, 1682, 1683, 1704, 1707, 1870, 1920, 1931, 1933, 2128, 2147, 2205, 2221], "section": [43, 44, 46, 47, 49, 52, 53, 69, 117, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 174, 213, 214, 933, 934, 935, 936, 937, 1077, 1078, 1079, 1080, 1081, 1200, 1205, 1212, 1222, 1396, 1397, 1398, 1399, 1400, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2136, 2143, 2146], "below": [43, 45, 47, 48, 61, 62, 78, 79, 126, 127, 142, 143, 148, 149, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 186, 255, 323, 325, 327, 328, 330, 332, 481, 637, 640, 896, 902, 903, 953, 976, 1321, 1324, 1378, 1381, 1382, 1385, 1714, 1735, 1736, 1737, 1738, 1739, 1829, 1833, 2111, 2114, 2128, 2136, 2138, 2143, 2145], "best": [43, 46, 47, 48, 49, 148, 153, 154, 159, 166, 167, 1417, 1543, 2143, 2144], "go": [43, 44, 47, 48, 49, 148, 151, 153, 154, 156, 158, 164, 165, 166, 167, 169, 173, 187, 1955, 1956, 1957, 1966, 1967, 1968, 2136, 2140, 2141, 2145, 2147], "start": [43, 44, 45, 47, 48, 49, 61, 62, 103, 104, 109, 110, 148, 153, 154, 156, 157, 160, 164, 166, 168, 169, 170, 172, 173, 174, 186, 187, 255, 257, 258, 259, 290, 293, 294, 295, 296, 297, 298, 299, 446, 448, 1012, 1015, 1200, 1208, 2140, 2146, 2157, 2158, 2255, 2262], "finish": [43, 47, 48, 148, 2128], "dive": [43, 46, 47, 49, 149, 152, 154, 165, 169, 172, 173, 187, 2128, 2146], "right": [43, 48, 49, 78, 79, 100, 103, 104, 105, 106, 126, 127, 148, 149, 156, 158, 168, 173, 481, 537, 540, 547, 550, 953, 968, 1017, 1020, 1087, 1090, 1112, 1149, 1160, 1200, 1209, 1417, 1451, 1454, 1714, 1811, 1812, 1813, 1814, 1815, 1834, 1835, 1836, 1837, 1838, 2054, 2060, 2063], "environ": [43, 44, 45, 49, 186, 2140, 2142], "basic": [43, 45, 47, 156, 166], "fork": [43, 149, 153, 1417, 1544], "doc": [43, 46, 47, 156, 157, 160, 166, 170, 173, 174, 481, 747, 750, 896, 902, 903, 1378, 1381, 1382, 1385, 2128], "document": [43, 46, 49, 82, 83, 153, 154, 156, 158, 164, 165, 166, 173, 175, 1417, 1611, 1926, 1927], "local": [43, 44, 45, 48, 149, 161, 165, 166], "task": [43, 49, 164, 165, 186, 1951, 1952, 1953, 1954, 2128, 2140, 2146, 2147], "help": [43, 44, 47, 48, 150, 151, 152, 153, 154, 156, 162, 164, 166, 167, 168, 172, 173, 174, 185, 1417, 1423, 2070, 2106, 2110, 2127, 2128, 2136, 2140, 2142, 2146, 2159, 2167], "appli": [43, 47, 48, 49, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 172, 173, 174, 175, 185, 187, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 260, 261, 267, 268, 271, 272, 279, 280, 285, 286, 287, 289, 295, 296, 297, 299, 300, 301, 305, 306, 310, 311, 312, 314, 318, 319, 320, 322, 323, 325, 328, 330, 336, 337, 338, 339, 341, 354, 355, 356, 358, 359, 360, 361, 363, 364, 365, 366, 368, 396, 397, 398, 400, 408, 409, 411, 412, 414, 416, 429, 430, 431, 432, 433, 453, 454, 455, 457, 472, 473, 474, 475, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 606, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 671, 672, 673, 674, 676, 677, 678, 679, 681, 682, 683, 684, 686, 687, 688, 689, 691, 692, 693, 694, 696, 697, 698, 699, 701, 702, 703, 704, 706, 707, 708, 709, 711, 712, 713, 714, 716, 717, 718, 719, 721, 722, 723, 724, 726, 727, 728, 729, 731, 732, 733, 734, 736, 737, 738, 739, 741, 742, 743, 744, 746, 747, 748, 749, 751, 752, 753, 754, 756, 757, 758, 759, 761, 762, 763, 764, 766, 767, 768, 769, 771, 772, 773, 774, 776, 777, 778, 779, 780, 782, 783, 784, 785, 787, 788, 789, 790, 792, 793, 794, 795, 797, 798, 799, 800, 805, 807, 808, 809, 810, 811, 813, 814, 815, 816, 818, 819, 820, 821, 823, 824, 825, 826, 828, 829, 830, 831, 833, 834, 835, 836, 838, 839, 840, 841, 843, 844, 845, 846, 848, 849, 851, 853, 854, 858, 859, 860, 861, 863, 864, 866, 868, 869, 870, 871, 872, 874, 875, 877, 881, 882, 883, 884, 885, 886, 887, 888, 890, 891, 892, 893, 895, 907, 908, 909, 910, 911, 917, 918, 919, 922, 923, 924, 926, 927, 928, 929, 931, 933, 934, 935, 937, 938, 939, 940, 942, 943, 945, 947, 948, 949, 950, 952, 953, 957, 987, 988, 989, 991, 997, 998, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1050, 1051, 1052, 1054, 1064, 1065, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1143, 1144, 1146, 1148, 1149, 1154, 1161, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1175, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1192, 1193, 1194, 1195, 1197, 1199, 1224, 1225, 1226, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1238, 1239, 1241, 1243, 1244, 1245, 1246, 1248, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1262, 1264, 1265, 1266, 1267, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1279, 1285, 1286, 1287, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1300, 1302, 1304, 1305, 1306, 1308, 1310, 1311, 1312, 1314, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1330, 1333, 1334, 1335, 1337, 1338, 1339, 1340, 1342, 1353, 1357, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1375, 1376, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1406, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1417, 1418, 1419, 1420, 1422, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1434, 1436, 1437, 1438, 1440, 1441, 1442, 1443, 1445, 1448, 1449, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1473, 1476, 1477, 1478, 1480, 1481, 1482, 1483, 1485, 1493, 1494, 1495, 1497, 1502, 1503, 1504, 1506, 1508, 1509, 1510, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1522, 1524, 1525, 1526, 1528, 1529, 1530, 1531, 1533, 1534, 1535, 1537, 1538, 1539, 1541, 1547, 1548, 1549, 1551, 1552, 1554, 1556, 1568, 1569, 1570, 1572, 1573, 1574, 1575, 1577, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1589, 1590, 1591, 1592, 1594, 1595, 1596, 1597, 1606, 1607, 1608, 1609, 1612, 1614, 1615, 1616, 1618, 1619, 1624, 1625, 1626, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1642, 1643, 1644, 1645, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1722, 1724, 1730, 1731, 1732, 1735, 1736, 1737, 1739, 1746, 1747, 1748, 1750, 1756, 1757, 1758, 1760, 1761, 1762, 1763, 1765, 1766, 1767, 1768, 1770, 1776, 1777, 1778, 1779, 1780, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1800, 1801, 1802, 1803, 1805, 1811, 1812, 1813, 1814, 1829, 1830, 1832, 1834, 1835, 1844, 1845, 1847, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1936, 1937, 1938, 1939, 1941, 1942, 1943, 1944, 1946, 1947, 1948, 1949, 1951, 1952, 1953, 1955, 1962, 1965, 1968, 1969, 1975, 1976, 1977, 1978, 1979, 1981, 1982, 1983, 1985, 1986, 1987, 1988, 1990, 1991, 1992, 1993, 1995, 1996, 1997, 1998, 2000, 2002, 2003, 2004, 2006, 2008, 2009, 2010, 2012, 2013, 2014, 2015, 2017, 2018, 2019, 2020, 2022, 2023, 2024, 2025, 2027, 2028, 2029, 2030, 2031, 2034, 2035, 2036, 2037, 2039, 2040, 2041, 2042, 2044, 2045, 2046, 2047, 2055, 2056, 2057, 2059, 2060, 2061, 2062, 2064, 2065, 2066, 2067, 2069, 2070, 2071, 2072, 2073, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2085, 2086, 2087, 2089, 2090, 2091, 2093, 2095, 2097, 2098, 2099, 2101, 2102, 2103, 2104, 2111, 2112, 2113, 2114, 2117, 2118, 2119, 2121, 2122, 2123, 2124, 2126, 2127, 2128, 2141, 2149, 2150, 2151, 2183, 2184, 2255, 2256, 2266, 2267, 2268, 2269], "resourc": [43, 47, 153], "video": [43, 48, 49, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 2138], "contribut": [44, 46, 47, 48, 49, 164, 170, 2144], "toward": [44, 48, 69, 82, 83, 130, 131, 167, 170, 481, 797, 801, 953, 961, 975, 1007, 1008, 1010, 1200, 1219, 1285, 1288, 1326, 1329, 1870, 1911, 1912, 1913, 1914, 1915, 2136, 2140], "requir": [44, 45, 47, 48, 69, 117, 150, 153, 154, 155, 156, 157, 158, 160, 162, 164, 165, 166, 167, 168, 170, 172, 187, 481, 767, 770, 953, 973, 1200, 1218, 1260, 1261, 1262, 1263, 1264, 1294, 1297, 1714, 1740, 1741, 1744, 1746, 1749, 1870, 1926, 1929, 2140, 2146, 2152, 2156, 2237, 2241, 2282, 2283, 2284, 2285, 2286], "slightli": [44, 152, 164, 170, 174], "more": [44, 46, 47, 49, 69, 78, 79, 82, 83, 90, 91, 117, 126, 127, 130, 131, 138, 139, 148, 149, 150, 151, 152, 153, 154, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 186, 187, 255, 257, 258, 341, 354, 357, 481, 597, 600, 662, 665, 809, 812, 824, 826, 827, 828, 829, 831, 832, 833, 834, 835, 836, 837, 838, 1176, 1177, 1200, 1201, 1202, 1203, 1219, 1326, 1327, 1328, 1329, 1330, 1714, 1735, 1737, 1739, 1761, 1762, 1764, 1791, 1792, 1801, 1804, 1811, 1812, 1813, 1814, 1844, 1845, 1847, 1848, 1870, 1891, 1892, 1893, 1894, 1895, 1926, 1927, 1928, 1930, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2053, 2128, 2138, 2139, 2140, 2141, 2142, 2143, 2146, 2147, 2152, 2154, 2255, 2258, 2262], "complex": [44, 47, 69, 78, 79, 111, 112, 117, 126, 127, 154, 156, 164, 166, 168, 173, 174, 175, 187, 341, 371, 372, 408, 409, 410, 411, 434, 440, 481, 637, 640, 809, 812, 819, 820, 821, 822, 823, 913, 915, 943, 946, 948, 951, 953, 955, 969, 976, 1102, 1103, 1104, 1105, 1106, 1149, 1155, 1176, 1177, 1179, 1180, 1321, 1322, 1323, 1324, 1325, 1417, 1568, 1571, 1714, 1740, 1741, 1744, 1746, 1749, 1811, 1812, 1813, 1814, 1815, 2127, 2136, 2138, 2140, 2142, 2146, 2147, 2251, 2254], "setup": [44, 48, 49, 153], "alon": [44, 166, 446, 466, 480], "instancmech": 44, "vision": [44, 185, 2128, 2136, 2146], "demo": [44, 186, 2128], "util": [44, 97, 145, 155, 158, 163, 167, 446, 458, 2117, 2120, 2122, 2125, 2138, 2146, 2147], "thu": [44, 47, 69, 117, 153, 158, 164, 481, 547, 550, 727, 730, 742, 745, 1113, 1114, 1115, 1116, 1117, 1149, 1161, 1714, 1740, 1741, 1744], "relat": [44, 46, 48, 49, 158, 159, 164, 166, 167, 168, 186, 446, 447, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147], "folder": [44, 45, 48, 49, 149, 153, 161, 164, 166, 167], "To": [44, 45, 48, 149, 150, 152, 154, 156, 158, 159, 161, 164, 165, 166, 167, 173, 174, 175, 1417, 1562, 2128, 2152, 2154, 2159, 2163], "grasp": [44, 164], "directori": [44, 45, 47, 48, 49, 153, 164, 166, 446, 448, 1417, 1501, 1565], "tree": [44, 45, 154], "place": [44, 46, 49, 56, 58, 60, 61, 62, 67, 68, 69, 70, 71, 78, 79, 82, 83, 103, 104, 109, 110, 113, 114, 115, 116, 117, 118, 119, 130, 131, 148, 149, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 175, 255, 257, 258, 260, 261, 262, 270, 271, 272, 274, 276, 277, 279, 282, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 298, 300, 303, 305, 306, 308, 315, 316, 318, 319, 320, 321, 322, 323, 327, 328, 332, 333, 335, 336, 337, 338, 339, 340, 341, 364, 367, 403, 406, 417, 420, 446, 472, 473, 475, 476, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 688, 689, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 814, 815, 816, 817, 818, 839, 842, 844, 847, 849, 852, 854, 858, 859, 861, 863, 896, 897, 902, 903, 907, 910, 917, 920, 922, 925, 932, 943, 946, 953, 954, 959, 970, 973, 974, 975, 976, 980, 981, 997, 998, 999, 1000, 1001, 1012, 1013, 1014, 1015, 1016, 1087, 1089, 1091, 1121, 1122, 1123, 1124, 1125, 1149, 1150, 1151, 1152, 1154, 1156, 1162, 1163, 1164, 1176, 1178, 1179, 1200, 1208, 1218, 1229, 1232, 1234, 1237, 1239, 1242, 1260, 1261, 1262, 1263, 1264, 1275, 1276, 1277, 1278, 1279, 1285, 1286, 1287, 1288, 1289, 1294, 1297, 1321, 1324, 1378, 1381, 1382, 1385, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1476, 1479, 1493, 1496, 1502, 1505, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1521, 1578, 1579, 1580, 1581, 1582, 1594, 1598, 1612, 1642, 1646, 1650, 1652, 1655, 1662, 1665, 1667, 1670, 1672, 1675, 1684, 1687, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1712, 1714, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1733, 1735, 1738, 1740, 1741, 1744, 1746, 1747, 1749, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1804, 1806, 1809, 1811, 1815, 1816, 1820, 1821, 1824, 1839, 1843, 1844, 1848, 1849, 1853, 1870, 1871, 1874, 1876, 1879, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1899, 1901, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1919, 1921, 1924, 1926, 1929, 1931, 1935, 1936, 1940, 1941, 1945, 1946, 1950, 1975, 1976, 1979, 2007, 2008, 2011, 2013, 2016, 2023, 2026, 2028, 2032, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2054, 2055, 2058, 2065, 2068, 2070, 2085, 2088, 2089, 2092, 2093, 2096, 2097, 2100, 2102, 2105, 2106, 2110, 2111, 2115, 2116, 2117, 2120, 2122, 2125, 2127, 2142, 2185, 2186, 2187, 2188, 2189, 2190], "dir": [44, 173], "clone": [44, 45, 49], "mutual": [44, 152, 161], "git": [44, 46, 48, 49, 149, 153, 166], "http": [44, 48, 67, 68, 115, 116, 120, 121, 149, 153, 154, 157, 341, 364, 367, 481, 622, 625, 687, 688, 689, 707, 710, 747, 750, 896, 902, 903, 943, 946, 1176, 1179, 1378, 1381, 1382, 1385, 1612, 1614, 1617, 1618, 1621, 1714, 1746, 1747, 1801, 1804, 1849, 1853, 1870, 1946, 1950, 2070, 2102, 2105, 2152, 2154], "com": [44, 48, 149, 153, 154], "unifyai": [44, 45, 48, 49], "venv": [44, 158], "python3": [44, 45, 48, 49, 158], "m": [44, 45, 48, 49, 51, 54, 55, 61, 62, 69, 78, 79, 86, 87, 115, 116, 117, 126, 127, 134, 135, 148, 153, 170, 255, 300, 303, 323, 325, 327, 328, 330, 332, 677, 679, 681, 834, 835, 836, 837, 838, 854, 855, 856, 857, 858, 859, 862, 896, 902, 903, 913, 915, 927, 928, 930, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1149, 1155, 1200, 1203, 1209, 1210, 1219, 1300, 1301, 1303, 1315, 1316, 1317, 1318, 1320, 1326, 1327, 1328, 1329, 1330, 1378, 1381, 1382, 1385, 1714, 1715, 1716, 1717, 1718, 1719, 1725, 1728, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1829, 1830, 1831, 1832, 1833, 1955, 1964, 1980, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000], "ivy_dev": [44, 45, 48, 49], "activ": [44, 45, 48, 49, 53, 69, 70, 71, 98, 99, 102, 117, 146, 147, 167, 174, 206, 207, 208, 210, 212, 213, 214, 216, 218, 219, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 238, 239, 241, 243, 244, 246, 806, 807, 808, 1365, 1366, 1367, 1368, 1369, 1578, 1580, 2128, 2140, 2143, 2150, 2151, 2159, 2163, 2164], "window": [44, 45, 49, 69, 76, 77, 117, 124, 125, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 896, 898, 899, 900, 901, 904, 913, 915, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1149, 1150, 1151, 1152, 1155, 1162, 1163, 1164, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1392, 1393, 1394, 1395, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 2145, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176], "script": [44, 45, 48, 49, 153, 156, 170, 187, 2140], "bat": [44, 45, 48, 49], "mac": [44, 45, 48, 49], "linux": [44, 45, 48, 49, 2143, 2145], "bin": [44, 45, 48, 49, 149, 152], "instal": [44, 45, 48, 49, 151, 159, 186, 2128], "packag": [44, 45, 48, 153, 158, 159, 164, 187, 2140, 2142], "edit": [44, 47, 48, 49], "mode": [44, 48, 49, 69, 78, 79, 103, 104, 117, 126, 127, 152, 156, 168, 187, 446, 471, 481, 497, 500, 1113, 1114, 1115, 1116, 1117, 1149, 1161, 1200, 1218, 1294, 1295, 1296, 1297, 1298, 1417, 1492, 1557, 1558, 1561, 1563, 1564, 1600, 1601, 1602, 1604, 1605, 1714, 1796, 1797, 1798, 1799, 1800, 2140, 2143, 2152, 2154], "cd": [44, 45, 48, 49], "pip": [44, 48, 186, 2128], "repeat": [44, 49, 70, 71, 82, 83, 118, 119, 130, 131, 150, 151, 156, 157, 159, 166, 1417, 1461, 1462, 1463, 1464, 1465, 1870, 1905, 1936, 1937, 1938, 1939, 1940], "note": [44, 47, 48, 49, 69, 78, 79, 82, 83, 117, 126, 127, 130, 131, 150, 154, 156, 157, 164, 165, 166, 167, 341, 349, 350, 351, 353, 428, 481, 662, 665, 742, 745, 747, 750, 896, 897, 902, 903, 913, 915, 953, 967, 997, 1000, 1012, 1013, 1014, 1015, 1016, 1057, 1058, 1060, 1149, 1155, 1200, 1208, 1378, 1381, 1382, 1385, 1417, 1435, 1714, 1740, 1741, 1744, 1801, 1804, 1811, 1812, 1813, 1814, 1815, 1870, 1906, 1907, 1908, 1909, 1910, 1926, 1929, 2033, 2034, 2036, 2039, 2043, 2070, 2089, 2092, 2152, 2154], "link": [44, 47, 48, 49, 153, 154, 164, 166, 2136, 2138], "reflect": [44, 49, 150, 166, 1200, 1218, 1294, 1297], "immedi": [44, 48, 168, 2128], "ivy_robot": [44, 186], "docker": [44, 46], "desktop": [44, 48], "imag": [44, 45, 48, 69, 75, 76, 77, 117, 123, 124, 125, 167, 170, 171, 173, 175, 186, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 953, 1106, 1113, 1114, 1115, 1116, 1117, 1149, 1150, 1151, 1161, 1162, 1163, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1417, 1451, 1454, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 2128, 2140], "my": [44, 153, 167], "mount": [44, 49], "run": [44, 45, 47, 48, 69, 72, 73, 117, 120, 121, 148, 150, 151, 153, 156, 158, 159, 160, 164, 165, 170, 171, 172, 173, 174, 175, 186, 187, 1107, 1108, 1109, 1110, 1111, 1290, 1291, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1629, 1630, 1631, 1632, 1951, 1952, 1953, 1954, 2138, 2140, 2141, 2142, 2143, 2145, 2146, 2147, 2152, 2154, 2155, 2169, 2180, 2181, 2182, 2205, 2217, 2228, 2229], "rm": [44, 49], "v": [44, 48, 49, 76, 77, 92, 93, 109, 110, 124, 125, 140, 141, 170, 173, 174, 175, 295, 297, 943, 946, 1176, 1179, 1650, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 2054, 2060, 2061, 2062, 2063, 2064, 2128, 2157, 2158, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2189, 2191, 2192, 2205, 2226], "pwd": 44, "volum": [44, 69, 76, 77, 117, 124, 125, 849, 850, 851, 852, 853, 913, 915, 1002, 1003, 1004, 1005, 1006, 1097, 1098, 1099, 1100, 1101, 1149, 1152, 1155, 1158, 1159, 1164, 1239, 1240, 1241, 1242, 1243, 1650, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681], "rebuild": [44, 100, 103, 104, 105, 106], "everi": [44, 45, 47, 49, 61, 62, 69, 70, 71, 117, 118, 119, 149, 151, 152, 153, 154, 156, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 174, 255, 284, 285, 286, 288, 953, 967, 1057, 1058, 1059, 1060, 1417, 1418, 1419, 1420, 1421, 1422, 2140, 2152, 2155], "id": [44, 46, 48, 150, 152, 159, 446, 452, 2181, 2182], "pycharm": 44, "configur": [44, 45, 48, 49, 103, 104, 153, 154, 162, 446, 470, 1955, 1969], "part": [44, 49, 61, 62, 69, 72, 73, 117, 149, 161, 164, 166, 167, 168, 170, 171, 175, 186, 187, 255, 323, 325, 327, 328, 330, 332, 481, 637, 640, 896, 902, 903, 953, 969, 976, 1102, 1103, 1104, 1105, 1106, 1200, 1218, 1294, 1297, 1310, 1311, 1312, 1313, 1314, 1321, 1322, 1323, 1324, 1325, 1353, 1358, 1378, 1381, 1382, 1385, 1624, 1625, 1714, 1746, 1749, 2138, 2140, 2145, 2146, 2147, 2181, 2182, 2205, 2209], "vscode": [44, 48], "found": [44, 47, 48, 49, 78, 79, 82, 83, 90, 91, 100, 103, 104, 105, 106, 126, 127, 130, 131, 138, 139, 150, 151, 152, 154, 157, 159, 162, 163, 164, 168, 446, 461, 1735, 1737, 1739, 1761, 1762, 1926, 1927, 1928, 1930, 1955, 1967, 2034, 2035, 2036, 2037, 2142, 2157, 2158], "devcontain": [44, 48], "extens": [44, 46, 48, 49, 67, 68, 78, 79, 115, 116, 157, 166, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 385, 388, 396, 399, 429, 432, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 688, 689, 690, 692, 695, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 917, 920, 1176, 1178, 1416, 1714, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1733, 1735, 1738, 1740, 1741, 1744, 1746, 1747, 1749, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1804, 1806, 1809, 1811, 1815, 1816, 1820, 1821, 1824, 1839, 1843, 1844, 1848, 1870, 1876, 1879, 1886, 1889, 1891, 1894, 1896, 1899, 1906, 1909, 1911, 1914, 1921, 1924, 1926, 1929, 1946, 1950, 2007, 2008, 2011, 2013, 2016, 2023, 2026, 2028, 2032, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2054, 2055, 2058, 2065, 2068, 2070, 2085, 2088, 2089, 2092, 2093, 2096, 2097, 2100, 2102, 2105, 2106, 2110, 2111, 2115, 2116, 2117, 2120, 2122, 2125, 2137, 2140, 2147], "remot": [44, 48, 149], "codespac": 44, "config": [44, 48, 103, 104, 149, 153, 173, 1955, 1969, 2141], "json": [44, 48, 103, 104, 173], "good": [44, 45, 46, 47, 48, 49, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 170, 171, 174], "feel": [44, 45, 47, 48, 49, 51, 100, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 205, 248, 249, 255, 341, 446, 481, 1416, 1417, 1612, 1650, 1714, 1854, 1870, 1951, 1955, 1975, 1980, 2007, 2054, 2070, 2116, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2149, 2152, 2159, 2169, 2181, 2183, 2185, 2191], "free": [44, 45, 46, 47, 49, 51, 100, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 186, 205, 248, 249, 255, 341, 446, 481, 1416, 1417, 1612, 1650, 1714, 1854, 1870, 1951, 1955, 1975, 1980, 2007, 2054, 2070, 2116, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2149, 2152, 2159, 2169, 2181, 2183, 2185, 2191], "channel": [44, 45, 47, 48, 49, 51, 69, 70, 71, 76, 77, 100, 117, 118, 119, 124, 125, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 205, 248, 249, 255, 341, 446, 481, 932, 1113, 1114, 1115, 1116, 1117, 1149, 1156, 1161, 1416, 1417, 1451, 1454, 1469, 1470, 1471, 1472, 1473, 1612, 1650, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1668, 1670, 1672, 1675, 1677, 1678, 1679, 1680, 1681, 1684, 1687, 1714, 1854, 1870, 1951, 1955, 1975, 1980, 2007, 2054, 2070, 2116, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2149, 2152, 2159, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2178, 2179, 2181, 2183, 2185, 2191], "pre": [44, 47, 166, 175, 187, 2140], "commit": [44, 47, 149, 156, 166], "_": [44, 45, 48, 67, 68, 115, 116, 120, 121, 152, 157, 159, 163, 166, 173, 341, 364, 367, 481, 597, 598, 622, 625, 687, 688, 689, 747, 750, 943, 946, 1176, 1179, 1417, 1451, 1454, 1612, 1614, 1617, 1618, 1621, 1714, 1746, 1747, 1801, 1804, 1816, 1820, 1849, 1853, 1870, 1946, 1950, 1955, 1963, 2070, 2102, 2105], "builder": [45, 185, 187, 2127, 2128], "dockerfil": [45, 48], "command": [45, 48, 149, 153, 162, 2128], "maco": [45, 2145], "latest": [45, 47, 48, 49, 67, 68, 115, 116, 151, 153, 154, 157, 167, 187, 341, 364, 367, 481, 622, 625, 687, 688, 689, 747, 750, 943, 946, 1176, 1179, 1714, 1746, 1747, 1801, 1804, 1870, 1946, 1950, 2070, 2102, 2105, 2145, 2169, 2178], "ubuntu": 45, "uid": 45, "bash": [45, 48, 49, 149], "root": [45, 48, 49, 67, 68, 115, 116, 164, 173, 481, 767, 768, 769, 770, 771, 2157, 2158], "both": [45, 49, 61, 62, 67, 68, 69, 78, 79, 109, 110, 115, 116, 117, 126, 127, 151, 152, 153, 154, 155, 156, 157, 160, 161, 163, 164, 166, 168, 170, 172, 173, 174, 175, 186, 187, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 296, 298, 300, 303, 310, 312, 314, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 403, 406, 417, 420, 427, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 688, 689, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 839, 842, 844, 847, 849, 852, 854, 857, 881, 882, 883, 884, 885, 896, 897, 907, 910, 917, 920, 922, 925, 932, 943, 946, 953, 957, 959, 962, 970, 997, 1000, 1027, 1028, 1030, 1055, 1056, 1072, 1073, 1075, 1121, 1124, 1126, 1127, 1128, 1129, 1130, 1149, 1150, 1151, 1152, 1154, 1156, 1162, 1163, 1164, 1176, 1178, 1179, 1200, 1211, 1218, 1229, 1232, 1234, 1237, 1239, 1242, 1294, 1297, 1315, 1316, 1321, 1323, 1325, 1417, 1476, 1479, 1493, 1496, 1502, 1505, 1508, 1511, 1594, 1598, 1612, 1642, 1646, 1648, 1650, 1652, 1655, 1662, 1665, 1667, 1670, 1672, 1675, 1684, 1687, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1712, 1714, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1733, 1735, 1738, 1740, 1741, 1744, 1746, 1747, 1749, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1804, 1806, 1809, 1811, 1815, 1816, 1820, 1821, 1824, 1829, 1830, 1831, 1832, 1839, 1843, 1844, 1848, 1849, 1853, 1870, 1871, 1874, 1876, 1879, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1899, 1901, 1904, 1906, 1909, 1911, 1914, 1916, 1919, 1921, 1924, 1926, 1929, 1931, 1935, 1936, 1940, 1941, 1945, 1946, 1950, 1975, 1976, 1979, 2007, 2008, 2011, 2013, 2016, 2023, 2026, 2028, 2032, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2054, 2055, 2058, 2065, 2068, 2070, 2085, 2088, 2089, 2092, 2093, 2096, 2097, 2100, 2102, 2105, 2106, 2110, 2111, 2115, 2116, 2117, 2120, 2122, 2125, 2140, 2143, 2145, 2146, 2147, 2152, 2155, 2194, 2198], "termin": [45, 48, 49, 100, 103, 104, 105, 106, 152, 170, 173], "3": [45, 48, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 102, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 149, 150, 151, 152, 154, 156, 158, 165, 166, 170, 172, 173, 174, 175, 205, 207, 210, 211, 213, 216, 218, 219, 220, 221, 222, 223, 226, 228, 231, 233, 236, 238, 240, 241, 242, 243, 246, 249, 255, 276, 277, 285, 286, 287, 288, 289, 290, 293, 300, 303, 310, 311, 312, 313, 314, 315, 316, 318, 321, 333, 335, 336, 340, 341, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 380, 381, 382, 385, 386, 388, 412, 413, 414, 415, 416, 417, 420, 429, 431, 432, 433, 446, 450, 452, 453, 454, 455, 456, 457, 467, 469, 472, 473, 475, 476, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 522, 525, 527, 530, 531, 532, 534, 536, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 559, 560, 561, 562, 563, 565, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 672, 673, 674, 675, 676, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 695, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 737, 738, 740, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 785, 786, 787, 788, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805, 808, 809, 810, 811, 812, 813, 814, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 869, 870, 871, 872, 874, 875, 876, 877, 881, 882, 886, 888, 890, 891, 892, 893, 894, 895, 896, 897, 902, 903, 904, 907, 908, 909, 910, 911, 917, 920, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 955, 958, 959, 960, 962, 963, 964, 965, 966, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 985, 987, 988, 989, 990, 991, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1064, 1065, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1121, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1156, 1157, 1158, 1159, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1190, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1257, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1297, 1300, 1301, 1302, 1303, 1304, 1310, 1311, 1312, 1313, 1314, 1315, 1318, 1320, 1321, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1369, 1370, 1372, 1374, 1375, 1376, 1377, 1378, 1381, 1382, 1385, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1420, 1425, 1428, 1435, 1436, 1438, 1439, 1440, 1441, 1443, 1444, 1445, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1464, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1476, 1479, 1481, 1482, 1484, 1493, 1494, 1495, 1496, 1497, 1502, 1503, 1505, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1536, 1537, 1538, 1539, 1540, 1541, 1543, 1552, 1553, 1554, 1555, 1556, 1566, 1568, 1569, 1570, 1571, 1572, 1584, 1587, 1594, 1595, 1596, 1598, 1599, 1611, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1637, 1638, 1639, 1640, 1642, 1643, 1644, 1645, 1646, 1648, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1723, 1724, 1725, 1727, 1728, 1730, 1731, 1732, 1733, 1735, 1736, 1737, 1738, 1739, 1746, 1747, 1748, 1749, 1750, 1756, 1757, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1777, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1801, 1802, 1803, 1804, 1805, 1811, 1813, 1815, 1816, 1820, 1821, 1824, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1849, 1853, 1854, 1855, 1857, 1858, 1859, 1860, 1862, 1864, 1865, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1924, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1955, 1957, 1959, 1962, 1963, 1964, 1965, 1967, 1973, 1974, 1975, 1976, 1978, 1979, 1980, 1981, 1984, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2005, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2026, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2054, 2055, 2057, 2058, 2059, 2060, 2063, 2065, 2068, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2113, 2114, 2115, 2116, 2117, 2118, 2120, 2122, 2123, 2125, 2128, 2147, 2205, 2225, 2237, 2241, 2245, 2246, 2266, 2267, 2268, 2269], "8": [45, 48, 51, 54, 55, 63, 64, 67, 68, 69, 70, 71, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 105, 106, 111, 112, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 152, 153, 156, 166, 169, 173, 205, 207, 210, 233, 236, 255, 284, 285, 288, 318, 321, 336, 340, 341, 371, 372, 375, 376, 378, 379, 385, 386, 387, 388, 389, 446, 458, 477, 481, 497, 500, 501, 502, 503, 504, 506, 507, 510, 511, 527, 528, 530, 532, 535, 547, 550, 557, 560, 567, 570, 607, 608, 609, 610, 611, 612, 615, 617, 620, 642, 645, 647, 648, 649, 650, 651, 672, 675, 682, 685, 687, 689, 697, 698, 700, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 727, 728, 729, 730, 732, 733, 735, 742, 743, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 767, 770, 772, 775, 787, 791, 792, 796, 814, 815, 817, 824, 827, 829, 832, 834, 835, 839, 840, 841, 842, 843, 844, 845, 847, 849, 850, 852, 869, 870, 871, 872, 896, 897, 907, 908, 909, 910, 911, 927, 929, 931, 933, 934, 935, 936, 937, 953, 954, 960, 962, 967, 970, 971, 974, 979, 982, 985, 987, 988, 989, 990, 991, 997, 998, 999, 1000, 1002, 1003, 1004, 1005, 1006, 1012, 1013, 1014, 1015, 1016, 1027, 1028, 1029, 1030, 1031, 1057, 1058, 1059, 1060, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1097, 1098, 1099, 1100, 1101, 1107, 1109, 1111, 1121, 1124, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1149, 1150, 1151, 1152, 1154, 1157, 1158, 1159, 1162, 1163, 1166, 1167, 1168, 1169, 1170, 1176, 1181, 1193, 1194, 1195, 1196, 1200, 1201, 1202, 1205, 1208, 1212, 1213, 1221, 1223, 1229, 1230, 1232, 1234, 1235, 1237, 1244, 1246, 1255, 1256, 1257, 1258, 1259, 1265, 1267, 1269, 1275, 1276, 1278, 1290, 1292, 1300, 1302, 1304, 1310, 1312, 1314, 1326, 1328, 1330, 1343, 1345, 1360, 1361, 1363, 1370, 1374, 1375, 1376, 1377, 1396, 1397, 1399, 1401, 1403, 1405, 1417, 1435, 1441, 1444, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1469, 1471, 1473, 1476, 1479, 1493, 1494, 1495, 1496, 1497, 1508, 1510, 1511, 1513, 1514, 1515, 1516, 1524, 1525, 1527, 1529, 1530, 1532, 1537, 1538, 1540, 1552, 1553, 1554, 1555, 1556, 1568, 1569, 1570, 1571, 1572, 1578, 1579, 1581, 1582, 1612, 1614, 1616, 1617, 1623, 1628, 1637, 1640, 1648, 1650, 1652, 1654, 1655, 1656, 1672, 1674, 1675, 1676, 1677, 1680, 1684, 1687, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1704, 1707, 1714, 1725, 1727, 1728, 1730, 1731, 1732, 1733, 1735, 1736, 1737, 1738, 1739, 1746, 1749, 1750, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1786, 1789, 1801, 1802, 1804, 1811, 1815, 1816, 1820, 1821, 1824, 1829, 1833, 1834, 1835, 1836, 1837, 1838, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1862, 1864, 1865, 1866, 1867, 1869, 1870, 1871, 1872, 1874, 1886, 1890, 1891, 1894, 1926, 1929, 1931, 1932, 1934, 1941, 1942, 1944, 1945, 1955, 1957, 1964, 1980, 1981, 1984, 1986, 1987, 1988, 1989, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2005, 2006, 2007, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2038, 2044, 2045, 2046, 2047, 2048, 2054, 2055, 2058, 2065, 2066, 2067, 2068, 2069, 2070, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2089, 2091, 2092, 2097, 2099, 2101, 2106, 2110, 2111, 2113, 2114, 2128, 2169, 2180, 2237, 2241, 2245, 2246, 2266, 2267, 2269], "built": [45, 48, 49, 152, 166, 171, 255, 257, 258, 2127, 2139, 2140, 2144, 2169, 2180, 2181, 2182], "explicit": [45, 48, 152, 154, 163, 164, 165, 170, 187, 2140, 2157, 2158], "cmd": [45, 48], "file": [45, 47, 48, 49, 103, 104, 149, 150, 151, 152, 153, 157, 158, 159, 161, 164, 165, 166, 167, 170, 173, 1417, 1501, 1565, 2136, 2139, 2140, 2141, 2181, 2182], "abov": [45, 48, 49, 61, 62, 67, 68, 69, 78, 79, 86, 87, 101, 102, 115, 116, 117, 126, 127, 134, 135, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 168, 170, 172, 173, 174, 175, 205, 243, 245, 246, 247, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 296, 298, 300, 303, 315, 316, 318, 321, 323, 325, 327, 328, 330, 332, 333, 335, 336, 340, 341, 364, 367, 403, 406, 417, 420, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 688, 689, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 805, 808, 839, 842, 844, 847, 849, 852, 896, 897, 902, 903, 907, 910, 917, 920, 922, 925, 932, 943, 946, 953, 959, 976, 997, 1000, 1149, 1150, 1151, 1152, 1154, 1156, 1162, 1163, 1164, 1176, 1178, 1179, 1200, 1218, 1229, 1232, 1234, 1237, 1239, 1242, 1294, 1297, 1321, 1324, 1365, 1366, 1367, 1368, 1369, 1378, 1381, 1382, 1385, 1417, 1476, 1479, 1493, 1496, 1502, 1505, 1508, 1511, 1594, 1598, 1612, 1642, 1646, 1650, 1652, 1655, 1662, 1665, 1667, 1670, 1672, 1675, 1684, 1687, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1712, 1714, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1749, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1804, 1806, 1809, 1811, 1815, 1816, 1820, 1821, 1824, 1829, 1833, 1839, 1843, 1844, 1848, 1849, 1853, 1870, 1871, 1874, 1876, 1879, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1899, 1901, 1904, 1906, 1909, 1911, 1914, 1916, 1919, 1921, 1924, 1926, 1929, 1931, 1935, 1936, 1940, 1941, 1945, 1946, 1950, 1975, 1976, 1979, 1980, 1986, 1987, 1988, 1989, 1990, 2007, 2008, 2011, 2013, 2016, 2023, 2026, 2028, 2032, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2054, 2055, 2058, 2065, 2068, 2070, 2085, 2088, 2089, 2092, 2093, 2096, 2097, 2100, 2102, 2105, 2106, 2110, 2111, 2115, 2116, 2117, 2120, 2122, 2125, 2140, 2145], "OR": [45, 48, 49, 69, 96, 97, 117, 144, 145, 481, 542, 545, 687, 690, 1107, 1108, 1109, 1110, 1111, 1290, 1291, 2116, 2122, 2123, 2124, 2125, 2126], "move": [45, 49, 65, 66, 69, 113, 114, 117, 167, 446, 472, 473, 474, 475, 476, 896, 902, 903, 1200, 1215, 1250, 1251, 1252, 1253, 1254, 1378, 1381, 1382, 1385], "execut": [45, 48, 49, 152, 153, 156, 163, 166, 168, 170, 172, 175, 187, 446, 448, 1417, 1599, 2127, 2136, 2140, 2141, 2142, 2143, 2144, 2146], "insid": [45, 48, 49, 100, 105, 106, 150, 152, 154, 162, 166, 167, 1200, 1221, 1370, 1374, 2146, 2228], "make_docs_without_dock": 45, "path": [45, 48, 163, 164, 165, 1417, 1501, 2140, 2205, 2223, 2282, 2283, 2284, 2285, 2286], "rel": [45, 49, 51, 54, 55, 69, 72, 73, 78, 79, 82, 83, 92, 93, 109, 110, 117, 120, 121, 126, 127, 130, 131, 140, 141, 153, 165, 168, 285, 287, 289, 814, 815, 816, 817, 818, 953, 954, 970, 1121, 1122, 1123, 1124, 1125, 1612, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1714, 1735, 1736, 1737, 1738, 1739, 1776, 1777, 1778, 1779, 1780, 1791, 1792, 1793, 1794, 1795, 1829, 1833, 1870, 1891, 1892, 1893, 1894, 1895, 1911, 1912, 1913, 1914, 1915, 2054, 2055, 2056, 2057, 2058, 2059, 2065, 2068, 2128, 2140, 2142, 2194, 2195, 2201, 2205, 2223, 2224, 2225, 2226], "assum": [45, 61, 62, 67, 68, 69, 78, 79, 115, 116, 117, 149, 151, 153, 154, 157, 165, 166, 168, 172, 173, 187, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 296, 298, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 403, 406, 417, 420, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 688, 689, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 839, 842, 844, 847, 849, 852, 896, 897, 907, 910, 917, 920, 922, 925, 932, 943, 946, 953, 959, 976, 978, 979, 997, 1000, 1055, 1056, 1126, 1127, 1128, 1129, 1130, 1149, 1150, 1151, 1152, 1154, 1156, 1162, 1163, 1164, 1176, 1178, 1179, 1200, 1218, 1229, 1232, 1234, 1237, 1239, 1242, 1294, 1297, 1321, 1324, 1338, 1341, 1375, 1376, 1377, 1417, 1476, 1479, 1493, 1496, 1502, 1505, 1508, 1511, 1594, 1598, 1612, 1642, 1646, 1650, 1652, 1655, 1662, 1665, 1667, 1670, 1672, 1675, 1684, 1687, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1712, 1714, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1733, 1735, 1738, 1740, 1741, 1744, 1746, 1747, 1749, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1804, 1806, 1809, 1811, 1815, 1816, 1820, 1821, 1824, 1839, 1843, 1844, 1848, 1849, 1853, 1870, 1871, 1874, 1876, 1879, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1899, 1901, 1904, 1906, 1909, 1911, 1914, 1916, 1919, 1921, 1924, 1926, 1929, 1931, 1935, 1936, 1940, 1941, 1945, 1946, 1950, 1975, 1976, 1979, 2007, 2008, 2011, 2013, 2016, 2023, 2026, 2028, 2032, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2054, 2055, 2058, 2065, 2068, 2070, 2085, 2088, 2089, 2092, 2093, 2096, 2097, 2100, 2102, 2105, 2106, 2110, 2111, 2115, 2116, 2117, 2120, 2122, 2125], "gener": [45, 47, 48, 49, 61, 62, 67, 68, 71, 76, 77, 86, 87, 98, 99, 109, 110, 115, 116, 119, 124, 125, 134, 135, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 172, 174, 175, 186, 187, 255, 257, 258, 290, 293, 295, 296, 297, 298, 299, 341, 364, 367, 481, 622, 625, 687, 688, 689, 742, 745, 747, 750, 896, 897, 899, 902, 903, 927, 930, 997, 1000, 1056, 1068, 1070, 1200, 1216, 1217, 1282, 1283, 1315, 1318, 1378, 1381, 1382, 1385, 1418, 1421, 1423, 1424, 1425, 1428, 1430, 1433, 1435, 1436, 1439, 1441, 1444, 1446, 1447, 1448, 1450, 1451, 1454, 1456, 1459, 1461, 1464, 1466, 1468, 1469, 1472, 1474, 1475, 1476, 1479, 1481, 1484, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1496, 1498, 1499, 1500, 1501, 1502, 1505, 1507, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1524, 1527, 1529, 1532, 1534, 1536, 1537, 1540, 1542, 1543, 1544, 1545, 1546, 1547, 1550, 1552, 1555, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1582, 1583, 1584, 1587, 1588, 1589, 1593, 1594, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1610, 1611, 1650, 1689, 1690, 1691, 1692, 1693, 1714, 1746, 1747, 1801, 1804, 1834, 1838, 1870, 1946, 1950, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1989, 1996, 1997, 1998, 1999, 2000, 2001, 2070, 2102, 2105, 2127, 2128, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2185, 2189, 2237, 2240, 2241, 2245, 2246, 2266, 2267, 2268, 2269, 2282, 2284, 2286], "prefer": [45, 48, 152, 162, 164, 168, 2140], "browser": [45, 48], "affect": [45, 153, 164], "page": [45, 48, 49, 153, 171, 172, 175, 185, 2128], "It": [45, 47, 48, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 96, 97, 101, 102, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 156, 157, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 255, 257, 258, 260, 261, 262, 267, 268, 269, 270, 271, 272, 274, 276, 277, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 310, 311, 312, 313, 315, 316, 318, 319, 320, 321, 322, 323, 325, 327, 328, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 349, 350, 351, 352, 353, 359, 362, 446, 472, 473, 474, 475, 476, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805, 808, 809, 812, 839, 840, 844, 845, 846, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 896, 897, 913, 915, 917, 920, 932, 953, 956, 976, 978, 982, 985, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1047, 1048, 1049, 1087, 1088, 1097, 1098, 1099, 1100, 1101, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1139, 1142, 1144, 1145, 1146, 1147, 1148, 1149, 1152, 1155, 1156, 1157, 1158, 1159, 1161, 1164, 1176, 1177, 1178, 1181, 1182, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1219, 1224, 1227, 1229, 1230, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1290, 1291, 1292, 1293, 1300, 1301, 1303, 1315, 1316, 1317, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1338, 1339, 1340, 1341, 1342, 1365, 1366, 1367, 1368, 1369, 1417, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1451, 1452, 1454, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1518, 1520, 1522, 1524, 1528, 1547, 1548, 1549, 1550, 1551, 1552, 1554, 1555, 1556, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1624, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1642, 1643, 1644, 1645, 1646, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1730, 1733, 1735, 1736, 1737, 1738, 1739, 1746, 1747, 1748, 1749, 1750, 1751, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1806, 1809, 1816, 1820, 1821, 1824, 1829, 1830, 1831, 1832, 1833, 1839, 1843, 1844, 1845, 1847, 1848, 1849, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1921, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1946, 1947, 1948, 1949, 1950, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2015, 2017, 2018, 2019, 2021, 2028, 2029, 2030, 2031, 2032, 2033, 2049, 2053, 2054, 2055, 2057, 2058, 2059, 2065, 2068, 2070, 2071, 2074, 2076, 2079, 2089, 2091, 2097, 2099, 2101, 2102, 2104, 2111, 2112, 2114, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2138, 2140, 2141, 2143, 2144, 2145, 2146, 2147, 2152, 2154, 2159, 2161, 2162, 2164, 2166], "synchron": [45, 153], "respons": [45, 49, 153, 154], "rest": [45, 48, 153, 175, 932, 933, 936, 1149, 1156, 1200, 1205, 2142], "remove_doc": 45, "privat": [45, 164, 166, 2185, 2189], "access": [45, 47, 48, 49, 103, 104, 153, 154, 164, 2140, 2142, 2144], "fulfil": [45, 169, 2128], "purpos": [45, 49, 150, 152, 153, 156, 158, 160, 161, 162, 164, 166, 168, 169, 172, 481, 597, 600, 662, 665, 896, 902, 903, 1378, 1381, 1382, 1385, 1714, 1801, 1804, 2127, 2128, 2139, 2141, 2144, 2145, 2146], "delet": [45, 49, 153, 1612, 1647], "autogenerated_sourc": 45, "Then": [45, 47, 48, 49, 153, 162, 167, 187], "format": [45, 65, 66, 69, 94, 95, 101, 102, 103, 104, 107, 108, 113, 114, 117, 148, 154, 155, 156, 157, 158, 164, 170, 172, 173, 205, 243, 245, 246, 247, 341, 380, 382, 446, 453, 454, 455, 456, 804, 1107, 1108, 1109, 1110, 1111, 1280, 1290, 1291, 1346, 1348, 1351, 1417, 1451, 1454, 1650, 1651, 1682, 1683, 2070, 2081, 2082, 2084, 2128, 2136, 2138, 2140, 2141, 2194, 2197, 2198, 2199], "png": [45, 173], "_imag": 45, "lastli": [45, 150], "docstr": [45, 46, 47, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 159, 160, 161, 164, 167, 207, 208, 209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 247, 255, 257, 258, 260, 261, 262, 267, 268, 270, 271, 272, 274, 276, 277, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 299, 300, 301, 303, 305, 306, 310, 311, 312, 314, 315, 316, 318, 319, 320, 321, 322, 323, 325, 327, 328, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 354, 355, 356, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 385, 388, 396, 397, 398, 399, 400, 408, 409, 411, 412, 414, 416, 429, 430, 431, 432, 433, 453, 454, 455, 457, 472, 473, 474, 475, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 809, 810, 811, 813, 814, 815, 816, 818, 819, 820, 821, 823, 824, 825, 826, 828, 829, 830, 831, 833, 834, 835, 836, 838, 839, 840, 841, 843, 844, 845, 846, 848, 849, 851, 853, 859, 860, 861, 863, 869, 870, 872, 874, 875, 877, 881, 882, 883, 885, 886, 887, 888, 890, 891, 892, 893, 895, 907, 908, 909, 911, 917, 918, 919, 920, 922, 923, 924, 926, 927, 928, 929, 931, 933, 934, 935, 937, 938, 939, 940, 942, 943, 945, 947, 948, 949, 950, 952, 987, 988, 989, 991, 997, 998, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1050, 1051, 1052, 1054, 1064, 1065, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1106, 1107, 1109, 1111, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1143, 1144, 1146, 1148, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1175, 1176, 1178, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1192, 1195, 1197, 1199, 1224, 1225, 1226, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1238, 1239, 1241, 1243, 1244, 1245, 1246, 1248, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1262, 1264, 1265, 1266, 1267, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1279, 1285, 1286, 1287, 1289, 1294, 1295, 1296, 1298, 1300, 1302, 1304, 1310, 1311, 1312, 1314, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1330, 1333, 1334, 1335, 1337, 1338, 1339, 1340, 1342, 1353, 1357, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1375, 1376, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1406, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1417, 1418, 1419, 1420, 1422, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1434, 1436, 1437, 1438, 1440, 1441, 1442, 1443, 1445, 1448, 1449, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 1461, 1462, 1463, 1466, 1467, 1469, 1470, 1471, 1473, 1476, 1477, 1478, 1480, 1481, 1482, 1483, 1493, 1494, 1495, 1497, 1502, 1503, 1508, 1509, 1510, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1522, 1524, 1525, 1526, 1528, 1529, 1530, 1531, 1533, 1534, 1535, 1537, 1538, 1539, 1541, 1547, 1548, 1549, 1551, 1552, 1554, 1556, 1568, 1569, 1570, 1572, 1573, 1574, 1575, 1577, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1589, 1590, 1591, 1592, 1594, 1595, 1596, 1597, 1606, 1607, 1608, 1609, 1611, 1614, 1615, 1616, 1618, 1619, 1624, 1625, 1626, 1629, 1630, 1633, 1634, 1637, 1638, 1642, 1643, 1644, 1645, 1652, 1653, 1654, 1656, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1681, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1693, 1694, 1695, 1696, 1698, 1699, 1700, 1701, 1709, 1710, 1711, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1730, 1731, 1732, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1821, 1824, 1834, 1835, 1839, 1843, 1844, 1845, 1847, 1848, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1864, 1865, 1866, 1867, 1869, 1870, 1871, 1872, 1873, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1936, 1937, 1938, 1939, 1941, 1942, 1943, 1944, 1946, 1947, 1948, 1949, 1950, 1976, 1977, 1978, 1981, 1982, 1983, 1985, 1986, 1987, 1988, 1990, 1991, 1992, 1993, 1995, 1996, 1997, 1998, 2000, 2002, 2003, 2004, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2075, 2076, 2077, 2078, 2080, 2081, 2082, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126], "structur": [45, 49, 100, 103, 104, 105, 106, 111, 112, 150, 152, 161, 165, 166, 167, 173, 174, 385, 387, 389, 396, 398, 400, 1417, 1446, 1955, 1969, 2139, 2140, 2157, 2158], "rst": 45, "main": [45, 48, 61, 62, 69, 78, 79, 117, 126, 127, 149, 152, 159, 162, 255, 276, 277, 323, 325, 327, 328, 330, 332, 896, 897, 902, 903, 917, 920, 997, 998, 999, 1000, 1176, 1178, 1378, 1381, 1382, 1385, 1714, 1730, 1733, 1735, 1736, 1737, 1738, 1739, 1829, 1830, 1831, 1832, 1833, 2138, 2140, 2141, 2146], "submodul": [45, 47, 48, 49, 51, 100, 149, 153, 155, 161, 162, 166, 169, 170, 174, 205, 248, 249, 255, 341, 446, 481, 1416, 1417, 1612, 1650, 1714, 1854, 1870, 1951, 1955, 1975, 1980, 2007, 2054, 2070, 2116, 2127, 2128, 2149, 2152, 2157, 2158, 2159, 2169, 2181, 2182, 2183, 2184, 2185, 2191, 2192], "skip": [45, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 162, 166, 207, 209, 211, 213, 215, 217, 218, 220, 222, 223, 225, 227, 228, 230, 232, 233, 235, 237, 238, 240, 242, 243, 245, 247, 285, 287, 289, 310, 312, 314, 318, 320, 322, 336, 337, 339, 354, 356, 358, 364, 366, 368, 429, 431, 433, 472, 473, 475, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 669, 671, 672, 674, 676, 677, 679, 681, 682, 684, 686, 687, 689, 691, 692, 694, 696, 697, 699, 701, 702, 704, 706, 707, 709, 711, 712, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 778, 780, 782, 783, 785, 787, 788, 790, 792, 793, 795, 797, 798, 800, 814, 816, 818, 824, 826, 828, 829, 831, 833, 834, 836, 838, 854, 858, 859, 861, 863, 864, 866, 868, 891, 893, 895, 922, 926, 933, 937, 997, 999, 1001, 1017, 1021, 1077, 1081, 1087, 1089, 1091, 1121, 1123, 1125, 1144, 1146, 1148, 1195, 1197, 1199, 1285, 1287, 1289, 1321, 1323, 1325, 1326, 1328, 1330, 1338, 1340, 1342, 1360, 1361, 1363, 1365, 1366, 1368, 1370, 1371, 1373, 1396, 1397, 1406, 1407, 1409, 1411, 1412, 1414, 1418, 1420, 1422, 1425, 1427, 1429, 1430, 1432, 1434, 1436, 1438, 1440, 1441, 1443, 1445, 1451, 1453, 1455, 1456, 1458, 1460, 1461, 1463, 1465, 1469, 1471, 1473, 1476, 1478, 1480, 1481, 1483, 1485, 1493, 1495, 1497, 1508, 1510, 1512, 1513, 1515, 1517, 1518, 1520, 1522, 1524, 1526, 1528, 1529, 1531, 1533, 1537, 1539, 1541, 1547, 1549, 1551, 1552, 1554, 1556, 1568, 1570, 1572, 1573, 1575, 1577, 1578, 1579, 1581, 1584, 1585, 1589, 1590, 1592, 1594, 1595, 1597, 1606, 1607, 1609, 1624, 1626, 1642, 1643, 1645, 1652, 1654, 1656, 1662, 1664, 1666, 1667, 1669, 1671, 1689, 1691, 1693, 1694, 1696, 1698, 1709, 1711, 1713, 1715, 1717, 1719, 1720, 1722, 1724, 1746, 1748, 1750, 1756, 1758, 1760, 1761, 1763, 1765, 1766, 1768, 1770, 1776, 1778, 1780, 1796, 1798, 1800, 1801, 1803, 1805, 1829, 1830, 1832, 1855, 1857, 1859, 1860, 1862, 1864, 1865, 1867, 1869, 1871, 1873, 1875, 1886, 1890, 1891, 1893, 1895, 1906, 1908, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1921, 1923, 1925, 1926, 1928, 1930, 1941, 1942, 1944, 1946, 1947, 1949, 1955, 1969, 1981, 1983, 1985, 1986, 1988, 1990, 1991, 1993, 1995, 1996, 1998, 2000, 2002, 2004, 2006, 2018, 2020, 2022, 2034, 2035, 2037, 2039, 2040, 2042, 2044, 2045, 2047, 2055, 2057, 2059, 2071, 2073, 2075, 2076, 2078, 2080, 2089, 2091, 2097, 2099, 2101, 2102, 2104, 2111, 2112, 2114, 2117, 2119, 2121, 2122, 2124, 2126, 2251, 2254], "read": [45, 47, 48, 69, 82, 83, 103, 104, 117, 130, 131, 153, 166, 168, 1012, 1013, 1014, 1015, 1016, 1200, 1208, 1870, 1906, 1907, 1908, 1909, 1910, 2128, 2140], "partial_sourc": 45, "conf": 45, "copicreate_rst_fil": 45, "filter": [45, 69, 76, 77, 117, 124, 125, 849, 850, 851, 852, 853, 896, 900, 901, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1149, 1152, 1164, 1239, 1240, 1241, 1242, 1243, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176], "recurs": [45, 48, 56, 57, 58, 59, 60, 103, 104, 107, 108, 149, 152, 161, 174, 187, 341, 390, 391, 393, 394, 446, 459, 460, 1417, 1474, 1475, 1955, 1956, 1957, 1966, 1967, 1968], "repres": [45, 61, 62, 67, 68, 69, 76, 77, 78, 79, 115, 116, 117, 124, 125, 126, 127, 150, 168, 172, 255, 300, 301, 303, 310, 313, 341, 384, 481, 492, 493, 494, 495, 496, 497, 500, 507, 508, 509, 510, 511, 522, 523, 524, 525, 526, 567, 568, 569, 570, 571, 762, 763, 764, 765, 766, 787, 788, 789, 790, 791, 854, 855, 856, 857, 858, 886, 887, 888, 890, 953, 967, 1057, 1058, 1059, 1060, 1139, 1142, 1176, 1181, 1200, 1218, 1294, 1297, 1315, 1316, 1612, 1641, 1649, 1650, 1689, 1690, 1691, 1692, 1693, 1694, 1697, 1714, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 2137, 2138, 2141, 2159, 2160, 2163, 2164, 2167, 2255, 2260, 2263], "its": [45, 47, 48, 49, 56, 59, 60, 63, 64, 69, 82, 83, 103, 104, 111, 112, 118, 119, 130, 131, 150, 153, 154, 157, 162, 164, 165, 166, 167, 168, 175, 187, 341, 354, 355, 356, 357, 358, 371, 372, 374, 375, 376, 378, 379, 446, 471, 805, 807, 953, 979, 1305, 1306, 1308, 1375, 1377, 1417, 1430, 1432, 1469, 1471, 1473, 1588, 1714, 1761, 1764, 1870, 1886, 1887, 1888, 1889, 1890, 1906, 1909, 1911, 1912, 1913, 1914, 1915, 1931, 1932, 1933, 1934, 1935, 1955, 1962, 2127, 2139, 2140, 2146, 2157, 2158, 2205, 2207, 2217], "overal": [45, 152, 154, 155, 157, 175, 1650, 1689, 1692, 2136, 2138, 2139, 2140], "markup": 45, "6": [45, 51, 52, 53, 54, 55, 61, 62, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 100, 105, 106, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 149, 151, 152, 153, 156, 166, 168, 170, 172, 173, 174, 205, 207, 208, 210, 213, 216, 238, 241, 255, 284, 285, 286, 287, 288, 289, 300, 303, 318, 321, 336, 340, 341, 354, 357, 359, 362, 380, 382, 385, 387, 388, 389, 446, 480, 481, 482, 483, 484, 485, 486, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 507, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 527, 530, 531, 532, 533, 534, 535, 536, 542, 543, 544, 545, 546, 547, 550, 552, 554, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 570, 572, 573, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 592, 594, 597, 599, 601, 602, 605, 607, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 621, 627, 628, 630, 632, 633, 635, 637, 640, 642, 644, 645, 646, 647, 648, 650, 662, 664, 665, 672, 674, 675, 676, 682, 685, 692, 695, 697, 698, 700, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 715, 717, 718, 719, 721, 722, 723, 725, 732, 735, 742, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 759, 760, 761, 767, 770, 772, 773, 775, 777, 778, 779, 780, 781, 782, 786, 787, 791, 797, 798, 800, 801, 805, 808, 809, 813, 824, 825, 827, 829, 830, 832, 834, 835, 837, 869, 870, 871, 872, 891, 892, 893, 894, 895, 896, 897, 907, 909, 910, 911, 927, 929, 931, 933, 934, 935, 936, 937, 943, 946, 948, 951, 953, 958, 960, 966, 967, 968, 969, 972, 976, 979, 982, 985, 987, 988, 989, 990, 991, 997, 1000, 1001, 1002, 1004, 1005, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1021, 1050, 1051, 1052, 1053, 1054, 1057, 1058, 1059, 1060, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1087, 1088, 1090, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1149, 1154, 1157, 1158, 1159, 1162, 1166, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1179, 1180, 1181, 1183, 1184, 1185, 1186, 1187, 1193, 1194, 1195, 1196, 1200, 1201, 1202, 1203, 1205, 1208, 1212, 1213, 1218, 1219, 1222, 1223, 1229, 1230, 1231, 1232, 1233, 1244, 1245, 1246, 1247, 1248, 1250, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1270, 1271, 1272, 1273, 1274, 1275, 1277, 1279, 1290, 1292, 1294, 1297, 1300, 1302, 1304, 1310, 1311, 1312, 1313, 1314, 1321, 1322, 1324, 1326, 1327, 1329, 1343, 1344, 1345, 1353, 1355, 1357, 1358, 1359, 1360, 1361, 1363, 1365, 1369, 1375, 1376, 1377, 1386, 1387, 1388, 1389, 1390, 1396, 1397, 1398, 1399, 1400, 1401, 1403, 1405, 1417, 1436, 1438, 1439, 1441, 1444, 1448, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1476, 1478, 1479, 1480, 1481, 1484, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1552, 1553, 1554, 1555, 1556, 1568, 1569, 1570, 1571, 1572, 1578, 1582, 1584, 1587, 1599, 1612, 1614, 1616, 1617, 1618, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1631, 1632, 1637, 1640, 1648, 1650, 1652, 1653, 1654, 1655, 1656, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1677, 1678, 1679, 1680, 1681, 1684, 1687, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1720, 1722, 1723, 1724, 1725, 1726, 1728, 1730, 1731, 1732, 1733, 1735, 1736, 1737, 1738, 1739, 1746, 1748, 1749, 1750, 1761, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1786, 1789, 1801, 1802, 1804, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1821, 1824, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1837, 1854, 1855, 1857, 1858, 1859, 1860, 1862, 1864, 1865, 1867, 1868, 1869, 1870, 1871, 1872, 1874, 1876, 1879, 1881, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1892, 1894, 1896, 1897, 1899, 1901, 1904, 1911, 1914, 1916, 1917, 1919, 1921, 1924, 1926, 1927, 1929, 1931, 1932, 1933, 1934, 1935, 1936, 1939, 1940, 1941, 1942, 1944, 1945, 1946, 1948, 1950, 1955, 1957, 1967, 1974, 1975, 1976, 1978, 1979, 1980, 1981, 1984, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2015, 2017, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2038, 2039, 2043, 2044, 2045, 2047, 2048, 2054, 2055, 2056, 2058, 2060, 2063, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2088, 2089, 2091, 2092, 2093, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2105, 2106, 2110, 2111, 2113, 2114, 2115, 2159, 2162, 2166], "extract": [45, 69, 117, 164, 167, 188, 189, 1200, 1220, 1360, 1361, 1362, 1363, 1364, 2136, 2140, 2141, 2146], "get_functions_and_class": 45, "doctrreadm": [45, 187], "module_nam": 45, "copy_readme_to_rst": 45, "tabl": [45, 154, 164, 2140, 2237, 2245, 2251, 2252], "content": [45, 47, 69, 103, 104, 117, 163, 170, 173, 1270, 1271, 1272, 1273, 1353, 1357], "toc": 45, "append": [45, 69, 78, 79, 103, 104, 117, 153, 158, 166, 170, 173, 481, 537, 540, 922, 923, 924, 925, 926, 953, 959, 1714, 1735, 1736, 1738, 1761, 1764, 1870, 1886, 1889], "append_toctree_to_rst": 45, "9": [45, 51, 54, 55, 63, 64, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 82, 83, 86, 87, 90, 91, 92, 93, 94, 95, 100, 101, 102, 105, 106, 111, 112, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 134, 135, 138, 139, 140, 141, 142, 143, 152, 156, 158, 166, 173, 174, 205, 207, 209, 210, 341, 371, 372, 375, 376, 378, 379, 385, 387, 388, 389, 396, 397, 398, 481, 487, 488, 497, 498, 499, 500, 501, 502, 503, 506, 507, 510, 522, 523, 524, 526, 527, 528, 530, 532, 533, 535, 547, 550, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 607, 609, 610, 611, 622, 625, 637, 641, 647, 648, 649, 651, 652, 654, 655, 656, 657, 659, 660, 661, 682, 683, 685, 687, 689, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 710, 711, 717, 718, 719, 721, 727, 730, 731, 732, 734, 735, 736, 747, 749, 750, 751, 752, 755, 767, 769, 771, 772, 773, 774, 775, 776, 777, 779, 781, 797, 798, 799, 800, 801, 805, 806, 824, 826, 829, 831, 834, 836, 837, 839, 840, 841, 842, 843, 844, 845, 847, 907, 910, 911, 927, 929, 931, 933, 934, 935, 936, 937, 953, 961, 967, 982, 985, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1057, 1058, 1059, 1060, 1077, 1078, 1079, 1080, 1081, 1097, 1098, 1099, 1100, 1101, 1139, 1141, 1143, 1149, 1150, 1151, 1154, 1157, 1158, 1159, 1162, 1163, 1171, 1172, 1173, 1174, 1175, 1188, 1189, 1190, 1191, 1192, 1200, 1203, 1205, 1208, 1212, 1221, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1237, 1255, 1256, 1257, 1258, 1259, 1275, 1277, 1279, 1300, 1302, 1304, 1321, 1325, 1326, 1328, 1330, 1343, 1344, 1345, 1370, 1372, 1374, 1396, 1397, 1399, 1417, 1441, 1444, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1461, 1464, 1469, 1471, 1473, 1476, 1479, 1508, 1509, 1511, 1513, 1514, 1515, 1516, 1524, 1525, 1527, 1529, 1530, 1532, 1537, 1538, 1540, 1552, 1553, 1554, 1555, 1556, 1568, 1569, 1570, 1572, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1629, 1630, 1631, 1632, 1650, 1652, 1653, 1654, 1655, 1656, 1662, 1663, 1665, 1677, 1680, 1684, 1687, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1704, 1707, 1714, 1720, 1723, 1724, 1725, 1728, 1735, 1738, 1746, 1749, 1761, 1764, 1766, 1769, 1771, 1774, 1786, 1789, 1801, 1802, 1804, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1821, 1824, 1829, 1830, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1870, 1871, 1872, 1874, 1891, 1894, 1911, 1914, 1916, 1918, 1920, 1926, 1929, 1931, 1932, 1934, 1941, 1942, 1944, 1945, 1955, 1957, 1962, 1964, 1967, 1980, 1981, 1984, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2028, 2032, 2033, 2034, 2036, 2038, 2044, 2045, 2047, 2048, 2054, 2055, 2056, 2065, 2067, 2068, 2069, 2070, 2076, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2089, 2091, 2097, 2098, 2100, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2136, 2185, 2186, 2187], "index": [45, 61, 62, 69, 70, 71, 82, 83, 88, 89, 90, 91, 92, 93, 103, 104, 109, 110, 117, 118, 119, 130, 131, 136, 137, 138, 139, 140, 141, 152, 153, 161, 165, 166, 172, 249, 255, 276, 277, 300, 301, 302, 303, 304, 446, 468, 896, 897, 913, 915, 997, 998, 999, 1000, 1012, 1013, 1014, 1015, 1016, 1149, 1155, 1200, 1208, 1216, 1217, 1220, 1282, 1283, 1310, 1311, 1312, 1313, 1314, 1353, 1358, 1359, 1360, 1364, 1386, 1390, 1417, 1423, 1481, 1482, 1483, 1484, 1485, 1489, 1547, 1549, 1551, 1552, 1554, 1556, 1612, 1647, 1870, 1906, 1907, 1908, 1909, 1910, 1926, 1929, 1955, 1958, 1959, 1960, 1963, 1964, 1965, 1971, 1973, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2023, 2026, 2033, 2034, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2063, 2131, 2133, 2140, 2205, 2210, 2251, 2254], "create_index_rst": 45, "14": [45, 63, 64, 67, 68, 69, 76, 77, 86, 87, 94, 95, 111, 112, 115, 116, 117, 118, 119, 124, 125, 126, 127, 130, 131, 134, 135, 152, 156, 166, 341, 349, 351, 352, 353, 385, 386, 388, 396, 397, 481, 487, 489, 490, 491, 507, 510, 517, 518, 519, 520, 521, 552, 553, 572, 573, 575, 576, 672, 675, 687, 689, 707, 709, 732, 735, 752, 756, 762, 764, 766, 797, 801, 839, 840, 841, 842, 843, 844, 847, 907, 910, 933, 934, 935, 936, 937, 1007, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1077, 1078, 1079, 1080, 1081, 1149, 1150, 1151, 1154, 1164, 1200, 1205, 1208, 1212, 1239, 1240, 1242, 1396, 1397, 1399, 1417, 1568, 1570, 1571, 1612, 1614, 1617, 1650, 1652, 1655, 1667, 1669, 1670, 1671, 1677, 1679, 1680, 1681, 1689, 1690, 1692, 1709, 1712, 1714, 1735, 1738, 1786, 1789, 1829, 1830, 1832, 1833, 1870, 1941, 1942, 1944, 1945, 1986, 1987, 1990, 1991, 1992, 1993, 1996, 1997, 1998, 2033, 2034, 2038, 2070, 2076, 2077, 2079, 2081, 2082, 2084], "\u03c0": [45, 249, 481, 487, 490, 502, 505, 512, 515, 517, 520], "namespac": [45, 47, 154, 162, 164, 165, 167, 170, 175, 2205, 2223], "remov": [45, 47, 78, 79, 103, 104, 126, 127, 151, 153, 154, 157, 161, 166, 168, 175, 1612, 1647, 1714, 1735, 1736, 1738, 1761, 1764, 1829, 1830, 1831, 1832, 1833, 1870, 1921, 1924, 1951, 1952, 1953, 1955, 1970, 2140], "here": [46, 47, 48, 49, 149, 152, 153, 156, 160, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 186, 187, 481, 747, 750, 2140, 2141, 2152, 2154], "resours": 46, "climb": 46, "steep": 46, "curv": 46, "respect": [46, 47, 49, 61, 62, 67, 68, 69, 72, 73, 78, 79, 115, 116, 117, 120, 121, 126, 127, 150, 152, 153, 154, 156, 160, 164, 166, 167, 255, 300, 301, 303, 481, 482, 485, 497, 500, 517, 520, 527, 530, 537, 540, 542, 545, 547, 550, 552, 555, 577, 580, 582, 585, 607, 610, 612, 615, 617, 620, 642, 645, 647, 650, 672, 675, 677, 680, 687, 690, 692, 695, 707, 710, 717, 720, 742, 743, 744, 745, 746, 777, 781, 805, 806, 873, 953, 967, 1057, 1058, 1059, 1060, 1062, 1063, 1188, 1189, 1190, 1191, 1192, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1648, 1650, 1651, 1682, 1683, 1714, 1796, 1797, 1798, 1799, 1800, 1811, 1812, 1813, 1814, 1815, 1951, 1952, 1953, 1954, 2136, 2146, 2159, 2162, 2205, 2225, 2226], "behaviour": [46, 47, 49, 148, 149, 150, 152, 154, 157, 158, 160, 163, 164, 166, 167, 172, 953, 973, 1260, 1263], "frontend": [46, 49, 56, 59, 148, 153, 154, 158, 166, 167, 168, 169, 171, 1417, 1558, 2127, 2140, 2205, 2215, 2223, 2224, 2228, 2233, 2251, 2254, 2282, 2283, 2284], "refer": [46, 47, 48, 49, 69, 82, 83, 94, 95, 96, 97, 117, 120, 121, 130, 131, 142, 143, 144, 145, 149, 150, 153, 154, 160, 161, 164, 165, 166, 187, 255, 276, 277, 481, 597, 600, 662, 665, 896, 897, 902, 903, 917, 920, 953, 977, 997, 998, 999, 1000, 1012, 1013, 1014, 1015, 1016, 1176, 1178, 1200, 1208, 1333, 1336, 1378, 1381, 1382, 1385, 1612, 1614, 1617, 1618, 1620, 1621, 1714, 1730, 1733, 1839, 1843, 1870, 1906, 1907, 1908, 1909, 1910, 2070, 2102, 2103, 2104, 2105, 2111, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2140, 2169, 2179], "realpython": 46, "pyn": 46, "kind": [46, 69, 164, 166, 168, 170, 187, 341, 385, 388, 396, 399, 401, 481, 727, 730, 1092, 1093, 2070, 2071, 2074, 2076, 2079, 2097, 2100, 2106, 2110, 2237, 2240, 2242, 2245, 2251, 2252, 2254], "stack": [46, 51, 54, 55, 78, 79, 82, 83, 103, 104, 117, 126, 127, 130, 131, 149, 170, 255, 323, 327, 328, 332, 938, 940, 941, 942, 1082, 1085, 1200, 1206, 1213, 1223, 1401, 1402, 1404, 1405, 1417, 1500, 1558, 1564, 1605, 1714, 1725, 1728, 1735, 1738, 1740, 1741, 1744, 1746, 1749, 1756, 1759, 1761, 1764, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1791, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1804, 1811, 1815, 1816, 1820, 1829, 1830, 1831, 1832, 1833, 1870, 1930, 1955, 1956, 1966, 1967, 2128, 2136, 2138, 2145, 2146, 2169, 2178], "overflow": [46, 154, 481, 497, 500, 1714, 1801, 1804, 2070, 2106, 2110], "platform": [46, 48, 2138, 2142, 2144], "sort": [46, 69, 93, 100, 103, 104, 105, 106, 117, 141, 153, 167, 953, 979, 1171, 1172, 1173, 1174, 1175, 1255, 1256, 1257, 1258, 1259, 1270, 1271, 1272, 1273, 1344, 1345, 1353, 1357, 1375, 1377, 1714, 1740, 1741, 1744, 1811, 1815, 1816, 1820, 2055, 2056, 2057, 2058, 2059, 2060, 2063, 2069, 2255, 2258], "inform": [46, 47, 48, 49, 63, 64, 72, 73, 111, 112, 120, 121, 149, 152, 153, 158, 166, 341, 385, 386, 387, 388, 389, 396, 397, 398, 399, 400, 1417, 1423, 1612, 1642, 1643, 1644, 1645, 1646, 2143], "pilot": 46, "bit": [46, 47, 48, 152, 153, 154, 156, 161, 170, 172, 341, 384, 385, 388, 396, 399, 481, 532, 535, 537, 540, 547, 550, 2070, 2071, 2074, 2076, 2079, 2097, 2100, 2106, 2110, 2146], "thei": [46, 47, 49, 69, 78, 79, 86, 87, 103, 104, 126, 127, 134, 135, 148, 149, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 166, 167, 168, 170, 172, 173, 174, 175, 187, 341, 427, 953, 962, 979, 1027, 1028, 1030, 1375, 1377, 1714, 1834, 1835, 1836, 1837, 1838, 1951, 1952, 1953, 1980, 1981, 1982, 1983, 1984, 1985, 2128, 2137, 2140, 2142, 2143, 2146, 2147, 2191, 2192, 2194, 2195], "done": [46, 47, 48, 49, 149, 153, 156, 159, 164, 166, 173, 1714, 1746, 1749, 2140], "faster": [46, 78, 79, 126, 127, 1714, 1811, 1812, 1813, 1814, 1815, 2127, 2142, 2145], "head": [46, 48, 164, 1650, 1704, 1707, 2128, 2169, 2180], "stuck": [46, 47], "spell": 46, "check": [46, 47, 48, 49, 56, 57, 58, 59, 60, 63, 64, 70, 71, 103, 104, 111, 112, 118, 119, 149, 152, 153, 156, 158, 162, 164, 165, 166, 167, 169, 170, 172, 173, 174, 341, 369, 370, 390, 391, 393, 394, 402, 408, 410, 411, 412, 413, 415, 416, 422, 425, 445, 446, 459, 460, 466, 480, 1417, 1430, 1432, 1433, 1434, 1466, 1468, 1474, 1475, 1492, 1502, 1503, 1504, 1505, 1506, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1561, 1578, 1580, 1582, 1602, 1606, 1607, 1608, 1609, 1610, 1714, 1741, 1744, 1746, 1749, 1955, 1956, 1957, 1966, 1967, 1968, 2128, 2152, 2154, 2157, 2158, 2194, 2197, 2198, 2199], "though": [46, 47, 49, 154, 157, 161, 163, 164, 168, 173, 187], "sound": [46, 153, 169], "odd": [46, 69, 117, 149, 481, 727, 730, 854, 855, 856, 857, 858, 1200, 1218, 1294, 1297, 1315, 1316], "peopl": [46, 48, 49, 148, 2140, 2142], "action": [46, 153, 156, 166], "integr": [46, 48, 63, 64, 69, 111, 112, 115, 116, 148, 341, 349, 350, 351, 352, 353, 953, 979, 1375, 1376, 1377, 2138, 2140, 2142, 2143, 2144], "keep": [46, 47, 48, 49, 82, 83, 103, 104, 130, 131, 149, 152, 153, 158, 164, 166, 167, 168, 173, 175, 1870, 1941, 1942, 1943, 1944, 1945], "explain": [47, 48, 49, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 175, 2128, 2136, 2143, 2146], "frequent": [47, 49, 2140], "wherebi": [47, 1955, 1968, 2137], "outlin": [47, 48, 49, 148, 152, 154, 157, 161, 163, 164, 166], "broad": [47, 2142], "individu": [47, 49, 149, 154, 161, 163, 164, 2140, 2143, 2146, 2147], "sub": [47, 49, 69, 78, 79, 82, 83, 100, 103, 104, 105, 106, 107, 108, 115, 116, 117, 118, 119, 126, 127, 130, 131, 148, 152, 158, 164, 165, 166, 172, 173, 174, 702, 704, 706, 933, 936, 1077, 1080, 1200, 1205, 1212, 1222, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1353, 1356, 1357, 1396, 1400, 1456, 1460, 1461, 1465, 1481, 1485, 1714, 1735, 1736, 1737, 1738, 1739, 1870, 1916, 1917, 1918, 1919, 1920, 1951, 1952, 1953, 1954, 2128, 2136, 2157, 2158], "distribut": [47, 69, 80, 81, 86, 87, 117, 128, 129, 134, 135, 153, 155, 187, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 869, 870, 871, 872, 927, 928, 929, 930, 931, 932, 1047, 1048, 1049, 1149, 1156, 1193, 1194, 1300, 1301, 1302, 1303, 1304, 1315, 1316, 1317, 1318, 1319, 1320, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2140, 2143, 2159, 2164, 2167, 2169, 2177, 2181, 2182], "across": [47, 88, 89, 103, 104, 118, 119, 136, 137, 149, 152, 154, 156, 158, 160, 161, 164, 166, 168, 446, 469, 470, 1417, 1425, 1428, 1502, 1504, 1506, 1650, 1689, 1692, 1955, 1962, 2007, 2008, 2010, 2012, 2013, 2014, 2015, 2016, 2017, 2138, 2140, 2145], "todo": [47, 154, 164, 166], "detail": [47, 49, 78, 79, 82, 83, 90, 91, 126, 127, 130, 131, 138, 139, 149, 151, 152, 153, 160, 161, 162, 164, 165, 166, 167, 170, 172, 173, 174, 255, 279, 282, 1735, 1737, 1739, 1761, 1762, 1791, 1792, 1811, 1812, 1813, 1814, 1926, 1927, 1928, 1930, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2142, 2146, 2152, 2154], "select": [47, 48, 49, 69, 94, 95, 117, 142, 143, 153, 163, 166, 170, 172, 175, 187, 1200, 1220, 1360, 1361, 1362, 1363, 1364, 2070, 2071, 2072, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2140, 2143, 2144], "alloc": [47, 49, 61, 62, 63, 64, 111, 112, 187, 255, 323, 325, 327, 328, 330, 332, 341, 349, 350, 351, 352, 353], "describ": [47, 49, 94, 95, 117, 153, 166, 170, 175, 1171, 1174, 1300, 1302, 1303, 1304, 1315, 1320, 1343, 1344, 2070, 2081, 2082, 2084, 2097, 2100, 2106, 2110, 2140], "explan": [47, 49, 152, 157, 160, 164, 172], "instead": [47, 48, 49, 67, 68, 115, 116, 149, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 170, 172, 173, 187, 446, 450, 481, 742, 743, 744, 745, 746, 2138, 2140, 2146, 2147, 2152, 2155], "focu": [47, 2138, 2139, 2142, 2147], "alwai": [47, 49, 63, 64, 82, 83, 111, 112, 130, 131, 150, 151, 152, 154, 157, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 187, 341, 349, 350, 351, 352, 353, 481, 497, 500, 953, 962, 1027, 1030, 1417, 1518, 1521, 1870, 1906, 1907, 1908, 1909, 1910, 2152, 2154, 2255, 2262], "NOT": [47, 481, 682, 685], "pypi": [47, 48, 187], "instruct": [47, 48, 149, 158, 165, 166, 2138, 2141, 2144, 2146], "static": [47, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 156, 157, 161, 162, 164, 187, 207, 211, 213, 217, 218, 222, 223, 227, 228, 232, 233, 237, 238, 242, 243, 247, 255, 267, 269, 285, 289, 295, 299, 310, 314, 318, 322, 336, 337, 354, 358, 359, 363, 364, 368, 385, 389, 396, 400, 408, 411, 412, 416, 429, 433, 453, 457, 482, 486, 487, 491, 492, 496, 497, 501, 502, 506, 507, 511, 512, 516, 517, 521, 522, 526, 527, 531, 532, 536, 537, 541, 542, 546, 547, 551, 552, 556, 557, 561, 562, 566, 567, 571, 572, 576, 577, 581, 582, 586, 587, 591, 592, 596, 597, 601, 602, 606, 607, 611, 612, 616, 617, 621, 622, 626, 627, 631, 632, 636, 637, 641, 642, 646, 647, 651, 652, 656, 657, 661, 662, 666, 667, 671, 672, 676, 677, 681, 682, 686, 687, 691, 692, 696, 697, 701, 702, 706, 707, 711, 712, 716, 717, 721, 722, 726, 727, 731, 732, 736, 737, 741, 742, 746, 747, 751, 752, 756, 757, 761, 762, 766, 767, 771, 772, 776, 777, 778, 782, 783, 787, 788, 792, 793, 797, 798, 809, 813, 814, 818, 819, 823, 824, 828, 829, 833, 834, 838, 839, 843, 844, 848, 849, 851, 853, 859, 863, 869, 872, 874, 877, 881, 885, 886, 890, 891, 895, 907, 911, 922, 926, 927, 931, 933, 937, 938, 942, 943, 947, 948, 952, 987, 991, 997, 1001, 1002, 1006, 1007, 1011, 1012, 1016, 1017, 1021, 1022, 1026, 1027, 1031, 1032, 1036, 1037, 1041, 1042, 1046, 1050, 1054, 1064, 1067, 1068, 1071, 1072, 1076, 1077, 1081, 1082, 1086, 1087, 1091, 1092, 1096, 1097, 1101, 1102, 1106, 1107, 1111, 1121, 1125, 1131, 1134, 1135, 1138, 1139, 1143, 1144, 1148, 1166, 1170, 1171, 1175, 1183, 1187, 1188, 1192, 1195, 1199, 1229, 1233, 1234, 1238, 1239, 1241, 1243, 1244, 1248, 1250, 1254, 1255, 1259, 1260, 1264, 1265, 1269, 1270, 1274, 1275, 1279, 1285, 1289, 1294, 1298, 1300, 1304, 1310, 1314, 1321, 1325, 1326, 1328, 1330, 1333, 1337, 1338, 1342, 1360, 1361, 1365, 1366, 1370, 1371, 1386, 1387, 1392, 1393, 1396, 1397, 1401, 1402, 1406, 1407, 1411, 1412, 1418, 1422, 1430, 1434, 1436, 1440, 1451, 1455, 1469, 1473, 1476, 1480, 1508, 1512, 1513, 1517, 1524, 1528, 1529, 1533, 1537, 1541, 1547, 1551, 1552, 1556, 1568, 1572, 1573, 1577, 1578, 1579, 1581, 1584, 1585, 1589, 1590, 1594, 1595, 1606, 1607, 1642, 1643, 1652, 1656, 1662, 1666, 1667, 1671, 1672, 1676, 1677, 1681, 1684, 1688, 1689, 1693, 1694, 1698, 1709, 1713, 1715, 1719, 1720, 1724, 1735, 1739, 1746, 1750, 1756, 1760, 1761, 1765, 1766, 1770, 1776, 1780, 1796, 1800, 1801, 1805, 1811, 1812, 1829, 1830, 1834, 1835, 1844, 1845, 1855, 1859, 1860, 1864, 1865, 1869, 1871, 1875, 1876, 1880, 1881, 1885, 1886, 1890, 1891, 1895, 1896, 1900, 1901, 1905, 1906, 1910, 1911, 1915, 1916, 1920, 1921, 1925, 1926, 1930, 1931, 1932, 1936, 1937, 1941, 1942, 1946, 1947, 1981, 1985, 1986, 1990, 1991, 1995, 1996, 2000, 2002, 2006, 2008, 2012, 2013, 2017, 2018, 2022, 2023, 2027, 2028, 2029, 2034, 2035, 2039, 2040, 2044, 2045, 2055, 2059, 2060, 2064, 2065, 2069, 2071, 2075, 2076, 2080, 2097, 2101, 2111, 2112, 2117, 2121, 2122, 2126, 2139, 2140, 2141, 2152, 2153], "method": [47, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 153, 154, 156, 157, 159, 160, 161, 162, 166, 167, 170, 171, 174, 175, 187, 188, 189, 207, 208, 209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 247, 255, 260, 261, 267, 268, 269, 271, 272, 279, 280, 282, 285, 286, 287, 289, 295, 296, 297, 299, 300, 301, 305, 306, 310, 311, 312, 314, 318, 319, 320, 321, 322, 323, 325, 328, 330, 336, 337, 338, 339, 340, 341, 349, 350, 351, 352, 354, 355, 356, 358, 359, 360, 361, 363, 364, 365, 366, 368, 385, 386, 387, 389, 396, 397, 398, 400, 408, 409, 411, 412, 413, 414, 416, 429, 430, 431, 433, 453, 454, 455, 457, 472, 473, 474, 475, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 681, 682, 683, 684, 686, 687, 688, 689, 691, 692, 693, 694, 696, 697, 698, 699, 701, 702, 703, 704, 706, 707, 708, 709, 711, 712, 713, 714, 716, 717, 718, 719, 721, 722, 723, 724, 726, 727, 728, 729, 731, 732, 733, 734, 736, 737, 738, 739, 741, 742, 743, 744, 746, 747, 748, 749, 751, 752, 753, 754, 756, 757, 758, 759, 761, 762, 763, 764, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 789, 790, 792, 793, 794, 795, 797, 798, 799, 800, 809, 810, 811, 813, 814, 815, 816, 818, 819, 820, 821, 823, 824, 825, 826, 828, 829, 830, 831, 833, 834, 835, 836, 838, 839, 840, 841, 843, 844, 845, 846, 848, 849, 851, 853, 854, 858, 859, 860, 861, 863, 864, 866, 868, 869, 870, 872, 874, 875, 877, 881, 882, 883, 885, 886, 887, 888, 890, 891, 892, 893, 895, 907, 908, 909, 911, 917, 918, 919, 922, 923, 924, 926, 927, 928, 929, 931, 933, 934, 935, 937, 938, 939, 940, 942, 943, 945, 947, 948, 949, 950, 952, 953, 976, 987, 988, 989, 991, 997, 998, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1050, 1051, 1052, 1054, 1064, 1065, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1106, 1107, 1109, 1111, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1143, 1144, 1146, 1148, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1175, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1192, 1195, 1197, 1199, 1224, 1225, 1226, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1238, 1239, 1241, 1243, 1244, 1245, 1246, 1248, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1262, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1279, 1285, 1286, 1287, 1289, 1294, 1295, 1296, 1298, 1300, 1302, 1304, 1310, 1311, 1312, 1313, 1314, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1330, 1333, 1334, 1335, 1337, 1338, 1339, 1340, 1342, 1353, 1356, 1357, 1358, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1375, 1376, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1406, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1417, 1418, 1419, 1420, 1422, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1434, 1436, 1437, 1438, 1440, 1441, 1442, 1443, 1445, 1446, 1448, 1449, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1469, 1470, 1471, 1473, 1476, 1477, 1478, 1480, 1481, 1482, 1483, 1485, 1493, 1494, 1495, 1497, 1502, 1503, 1508, 1509, 1510, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1522, 1524, 1525, 1526, 1528, 1529, 1530, 1531, 1533, 1534, 1535, 1537, 1538, 1539, 1541, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1568, 1569, 1570, 1572, 1573, 1574, 1575, 1577, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1589, 1590, 1591, 1592, 1594, 1595, 1596, 1597, 1606, 1607, 1608, 1609, 1612, 1614, 1615, 1616, 1618, 1619, 1624, 1625, 1626, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1641, 1642, 1643, 1644, 1645, 1647, 1649, 1652, 1653, 1654, 1656, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1681, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1693, 1694, 1695, 1696, 1698, 1699, 1700, 1701, 1709, 1710, 1711, 1713, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1722, 1724, 1730, 1731, 1732, 1735, 1736, 1737, 1739, 1746, 1747, 1748, 1750, 1756, 1757, 1758, 1760, 1761, 1762, 1763, 1765, 1766, 1767, 1768, 1770, 1776, 1777, 1778, 1780, 1781, 1783, 1785, 1791, 1792, 1793, 1795, 1796, 1797, 1798, 1800, 1801, 1802, 1803, 1805, 1811, 1812, 1813, 1814, 1816, 1820, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1844, 1845, 1847, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1864, 1865, 1866, 1867, 1869, 1871, 1872, 1873, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1936, 1937, 1938, 1939, 1941, 1942, 1943, 1944, 1946, 1947, 1948, 1949, 1955, 1967, 1968, 1969, 1976, 1977, 1978, 1981, 1982, 1983, 1985, 1986, 1987, 1988, 1990, 1991, 1992, 1993, 1995, 1996, 1997, 1998, 2000, 2002, 2003, 2004, 2006, 2007, 2008, 2009, 2010, 2012, 2013, 2014, 2015, 2017, 2018, 2019, 2020, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2034, 2035, 2036, 2037, 2039, 2040, 2041, 2042, 2044, 2045, 2046, 2047, 2055, 2056, 2057, 2059, 2060, 2061, 2062, 2064, 2065, 2066, 2067, 2069, 2070, 2071, 2072, 2073, 2075, 2076, 2077, 2078, 2080, 2081, 2082, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2093, 2095, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2128, 2141, 2147, 2152, 2154, 2157, 2159, 2164, 2169, 2180, 2181, 2182, 2205, 2224, 2226, 2282, 2283, 2284, 2285, 2286, 2288], "revers": [47, 51, 54, 55, 69, 70, 71, 78, 79, 94, 95, 100, 105, 106, 117, 126, 127, 142, 143, 152, 153, 154, 156, 157, 164, 168, 175, 187, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1200, 1209, 1210, 1417, 1448, 1449, 1450, 1714, 1834, 1835, 1836, 1837, 1838, 1870, 1891, 1894, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080], "familiar": [47, 48, 158], "yourself": [47, 49, 164, 166, 168, 186], "hypothesi": [47, 49, 149, 153, 162, 2237, 2240, 2255, 2258, 2259, 2260, 2282, 2287, 2288], "fail": [47, 48, 49, 149, 153, 154, 156, 159, 164, 165, 2194, 2195, 2201], "els": [47, 49, 70, 71, 86, 87, 117, 134, 135, 149, 151, 154, 158, 161, 163, 164, 165, 166, 167, 168, 170, 172, 174, 175, 187, 341, 371, 372, 374, 375, 376, 378, 379, 859, 862, 896, 897, 953, 976, 997, 1000, 1315, 1317, 1321, 1323, 1324, 1325, 1417, 1430, 1433, 1448, 1449, 1450, 1466, 1467, 1468, 1955, 1966, 1969, 1980, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2141, 2194, 2195, 2201], "cover": [47, 149, 150, 156, 157, 161, 162, 166, 168, 169], "lambda": [47, 158, 165, 170, 173, 205, 206, 212, 1417, 1448, 1450, 1612, 1623, 1628, 1648, 1650, 1704, 1707, 1955, 1963, 1964], "direct": [47, 69, 117, 150, 164, 168, 174, 175, 186, 922, 923, 924, 925, 926, 953, 959, 975, 980, 1017, 1020, 1022, 1025, 1200, 1209, 1210, 1219, 1285, 1286, 1288, 1326, 1329, 1406, 1408, 1410, 2054, 2065, 2068, 2136, 2140, 2141, 2144], "bind": [47, 152, 873, 1062, 1063, 2139, 2140], "defin": [47, 48, 61, 62, 69, 70, 71, 78, 79, 109, 110, 117, 118, 119, 126, 127, 150, 153, 154, 157, 160, 164, 165, 166, 167, 172, 174, 187, 255, 310, 311, 312, 313, 314, 481, 742, 745, 805, 806, 896, 898, 900, 901, 902, 903, 953, 973, 1064, 1066, 1131, 1133, 1135, 1137, 1188, 1189, 1190, 1191, 1192, 1200, 1218, 1219, 1260, 1263, 1294, 1297, 1326, 1327, 1328, 1329, 1330, 1378, 1381, 1382, 1385, 1417, 1508, 1509, 1511, 1512, 1513, 1514, 1516, 1517, 1714, 1720, 1721, 1722, 1723, 1724, 1741, 1744, 1746, 1749, 1806, 1809, 2070, 2085, 2088, 2089, 2092, 2093, 2096, 2102, 2105, 2127, 2137, 2138, 2139, 2140, 2141, 2144, 2146, 2147, 2152, 2155], "def": [47, 48, 69, 117, 149, 150, 152, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 819, 820, 821, 822, 823, 953, 955, 1417, 1435, 1955, 1962, 2128], "special": [47, 51, 54, 55, 94, 95, 100, 105, 106, 126, 127, 149, 150, 153, 156, 157, 158, 160, 163, 165, 167, 168, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 552, 555, 557, 560, 562, 565, 567, 570, 592, 595, 597, 600, 602, 605, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 682, 685, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 782, 786, 787, 791, 792, 796, 953, 978, 1338, 1341, 1791, 1795, 2070, 2085, 2088, 2089, 2090, 2092, 2093, 2096, 2102, 2105, 2106, 2110, 2111, 2113, 2115, 2140, 2141, 2142, 2159, 2167, 2237, 2239, 2241, 2245, 2246, 2248, 2251, 2252, 2253, 2254, 2255, 2258, 2259, 2260, 2261, 2263, 2264, 2266, 2267, 2268, 2269, 2282, 2287, 2288], "sure": [47, 48, 49, 149, 153, 164, 165, 166, 168], "aforement": 47, "correct": [47, 49, 94, 95, 142, 143, 148, 152, 153, 154, 155, 159, 160, 161, 165, 166, 341, 439, 1870, 1871, 1874, 2070, 2102, 2103, 2104, 2105, 2111, 2112, 2113, 2114, 2115, 2128, 2205, 2223, 2224, 2225, 2226], "categori": [47, 149, 150, 152, 154, 164, 167, 169, 2128], "parent": [47, 153, 172, 1612, 1641, 1649, 2157, 2158], "arraywithelementwis": [47, 51, 54, 55, 67, 150, 172], "containerwithmanipul": [47, 100, 105, 106, 130], "hint": [47, 61, 62, 67, 68, 78, 79, 115, 116, 150, 157, 160, 161, 163, 164, 167, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 296, 298, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 403, 406, 417, 420, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 688, 689, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 839, 842, 844, 847, 849, 852, 896, 897, 907, 910, 917, 920, 922, 925, 932, 943, 946, 953, 959, 976, 997, 1000, 1149, 1150, 1151, 1152, 1154, 1156, 1162, 1163, 1164, 1176, 1178, 1179, 1200, 1218, 1229, 1232, 1234, 1237, 1239, 1242, 1294, 1297, 1321, 1324, 1417, 1476, 1479, 1493, 1496, 1502, 1505, 1508, 1511, 1594, 1598, 1612, 1642, 1646, 1650, 1652, 1655, 1662, 1665, 1667, 1670, 1672, 1675, 1684, 1687, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1712, 1714, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1733, 1735, 1738, 1740, 1741, 1744, 1746, 1747, 1749, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1804, 1806, 1809, 1811, 1815, 1816, 1820, 1821, 1824, 1839, 1843, 1844, 1848, 1849, 1853, 1870, 1871, 1874, 1876, 1879, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1899, 1901, 1904, 1906, 1909, 1911, 1914, 1916, 1919, 1921, 1924, 1926, 1929, 1931, 1935, 1936, 1940, 1941, 1945, 1946, 1950, 1975, 1976, 1979, 2007, 2008, 2011, 2013, 2016, 2023, 2026, 2028, 2032, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2054, 2055, 2058, 2065, 2068, 2070, 2085, 2088, 2089, 2092, 2093, 2096, 2097, 2100, 2102, 2105, 2106, 2110, 2111, 2115, 2116, 2117, 2120, 2122, 2125], "add": [47, 48, 49, 51, 54, 55, 67, 68, 84, 85, 98, 99, 100, 103, 104, 105, 106, 115, 116, 132, 133, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 160, 161, 163, 164, 166, 167, 168, 170, 172, 187, 481, 501, 1417, 1543, 1599, 1612, 1641, 1649, 1975, 1976, 1977, 1978, 1979, 2128, 2136, 2138, 2140, 2183, 2184, 2205, 2225, 2282, 2287], "thorough": [47, 157, 160, 166], "ensur": [47, 48, 49, 70, 71, 150, 154, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 1417, 1518, 1519, 1521, 2140, 2194, 2195], "produc": [47, 69, 76, 77, 117, 124, 125, 154, 165, 166, 167, 805, 807, 896, 899, 1068, 1069, 1070, 1071, 1305, 1306, 1308, 1650, 1709, 1710, 1711, 1712, 1713, 2141, 2143], "comment": [47, 48, 49, 149, 154, 159, 164], "add_reformatting_checklist_": 47, "category_nam": [47, 154, 155, 157, 160, 161], "pr": [47, 49, 149, 164, 165, 166], "belong": [47, 103, 104, 149, 174], "shown": [47, 49, 98, 99, 103, 104, 146, 147, 149, 153, 154, 156, 158, 159, 160, 164, 165, 166, 167, 170, 172, 187, 481, 637, 640, 953, 976, 1321, 1324, 1417, 1500], "trigger": [47, 2181, 2182], "autom": [47, 153, 166, 2127, 2128, 2142], "bot": 47, "proper": [47, 164], "markdown": 47, "text": [47, 49, 156, 157], "might": [47, 48, 49, 70, 71, 153, 154, 156, 158, 159, 162, 163, 164, 166, 167, 168, 170, 172, 173, 341, 428, 1417, 1448, 1449, 1450, 2127], "moment": [47, 72, 73, 120, 121, 151, 187, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1629, 1630, 1631, 1632, 2185, 2186, 2187], "patient": [47, 48], "modifi": [47, 48, 49, 69, 103, 104, 117, 149, 151, 154, 155, 157, 159, 161, 165, 166, 167, 170, 1092, 1093, 1094, 1095, 1096, 1200, 1214, 1218, 1270, 1271, 1272, 1273, 1294, 1297, 1353, 1357], "item": [47, 56, 60, 70, 71, 98, 99, 103, 104, 117, 118, 119, 152, 154, 170, 172, 173, 175, 341, 374, 446, 452, 922, 924, 926, 1007, 1009, 1011, 1050, 1052, 1054, 1183, 1185, 1187, 1260, 1262, 1264, 1333, 1335, 1337, 1417, 1446, 1476, 1477, 1478, 1479, 1480, 1499, 1568, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1612, 1647, 1955, 1961, 1962, 1963, 1964, 1968, 1973, 1974, 2128, 2181, 2182], "symbol": [47, 48, 2140, 2141], "emoji": 47, "within": [47, 49, 56, 59, 60, 69, 117, 150, 153, 164, 165, 166, 174, 187, 255, 257, 258, 814, 815, 817, 824, 826, 828, 829, 831, 833, 834, 836, 838, 953, 954, 970, 1121, 1124, 1980, 1996, 1999, 2136, 2137, 2141, 2152, 2155], "legend": 47, "mark": [47, 49, 149, 166, 170, 2194, 2195, 2201], "review": [47, 49, 153, 156, 164, 167], "checkbox": [47, 48], "proce": [47, 48], "elabor": 47, "struggl": 47, "assigne": 47, "author": [47, 49, 2128, 2138, 2142], "later": [47, 103, 104, 166, 1417, 1435, 2140], "status": 47, "manual": [47, 48, 49, 164, 166, 174, 1955, 1956, 1966, 1967], "refrain": 47, "transpil": [47, 158, 164, 169, 170, 171, 2127, 2128, 2140, 2146, 2147], "locat": [47, 49, 151, 155, 164, 165, 166, 167, 255, 310, 313, 1980, 1981, 1984, 2054, 2060, 2063, 2138], "subsect": [47, 49, 149, 153], "verifi": [47, 154, 155, 164, 166, 167], "miss": [47, 48, 150, 152, 153, 156, 159, 166, 2185, 2189], "simpler": [47, 49, 164, 2141, 2147], "titl": [47, 49, 164, 2128], "label": [47, 49, 80, 81, 117, 128, 129, 149, 153, 164, 169, 170, 171, 175, 869, 870, 871, 872, 1193, 1194, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 2140], "suggest": [47, 48, 49, 154, 164, 166, 167], "simpli": [47, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 163, 164, 165, 166, 168, 170, 174, 175, 187, 207, 208, 209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 247, 260, 261, 267, 268, 271, 272, 279, 280, 285, 286, 287, 289, 295, 296, 297, 299, 300, 301, 305, 306, 310, 311, 312, 314, 318, 319, 320, 322, 323, 325, 328, 330, 336, 337, 338, 339, 354, 355, 356, 358, 359, 360, 361, 363, 364, 365, 366, 368, 396, 397, 398, 400, 408, 409, 411, 412, 413, 414, 416, 429, 430, 431, 433, 453, 454, 455, 457, 472, 473, 474, 475, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 674, 676, 677, 678, 679, 681, 682, 683, 684, 686, 687, 688, 689, 691, 692, 693, 694, 696, 697, 698, 699, 701, 702, 703, 704, 706, 707, 708, 709, 711, 712, 713, 714, 716, 717, 718, 719, 721, 722, 723, 724, 726, 727, 728, 729, 731, 732, 733, 734, 736, 737, 738, 739, 741, 742, 743, 744, 746, 747, 748, 749, 751, 752, 753, 754, 756, 757, 758, 759, 761, 762, 763, 764, 766, 767, 768, 769, 771, 772, 773, 774, 776, 777, 778, 779, 780, 782, 783, 784, 785, 787, 788, 789, 790, 792, 793, 794, 795, 797, 798, 799, 800, 809, 810, 811, 813, 814, 815, 816, 818, 819, 820, 821, 823, 824, 825, 826, 828, 829, 830, 831, 833, 834, 835, 836, 838, 839, 840, 841, 843, 844, 845, 846, 848, 849, 851, 853, 859, 860, 861, 863, 869, 870, 872, 874, 875, 877, 881, 882, 883, 885, 886, 887, 888, 890, 891, 892, 893, 895, 907, 908, 909, 911, 917, 918, 919, 922, 923, 924, 926, 927, 928, 929, 931, 933, 934, 935, 937, 938, 939, 940, 942, 943, 945, 947, 948, 949, 950, 952, 987, 988, 989, 991, 997, 998, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1050, 1051, 1052, 1054, 1064, 1065, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1106, 1107, 1109, 1111, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1143, 1144, 1146, 1148, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1175, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1192, 1195, 1197, 1199, 1224, 1225, 1226, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1238, 1239, 1241, 1243, 1244, 1245, 1246, 1248, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1262, 1264, 1265, 1266, 1267, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1279, 1285, 1286, 1287, 1289, 1294, 1295, 1296, 1298, 1300, 1302, 1304, 1310, 1311, 1312, 1314, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1330, 1333, 1334, 1335, 1337, 1338, 1339, 1340, 1342, 1353, 1357, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1375, 1376, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1406, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1418, 1419, 1420, 1422, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1434, 1436, 1437, 1438, 1440, 1441, 1442, 1443, 1445, 1448, 1449, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 1461, 1462, 1463, 1466, 1467, 1469, 1470, 1471, 1473, 1476, 1477, 1478, 1480, 1481, 1482, 1483, 1493, 1494, 1495, 1497, 1502, 1503, 1508, 1509, 1510, 1512, 1513, 1517, 1518, 1519, 1520, 1522, 1524, 1525, 1526, 1528, 1529, 1530, 1531, 1533, 1534, 1535, 1537, 1538, 1539, 1541, 1547, 1548, 1549, 1551, 1552, 1554, 1556, 1568, 1569, 1570, 1572, 1573, 1574, 1575, 1577, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1589, 1590, 1591, 1592, 1594, 1595, 1596, 1597, 1606, 1607, 1608, 1609, 1614, 1615, 1616, 1618, 1619, 1624, 1625, 1626, 1629, 1630, 1633, 1634, 1637, 1638, 1642, 1643, 1644, 1645, 1652, 1653, 1654, 1656, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1681, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1693, 1694, 1695, 1696, 1698, 1699, 1700, 1701, 1709, 1710, 1711, 1713, 1715, 1716, 1717, 1719, 1720, 1721, 1722, 1724, 1730, 1731, 1732, 1735, 1736, 1737, 1739, 1746, 1747, 1748, 1750, 1756, 1757, 1758, 1760, 1761, 1762, 1763, 1765, 1766, 1767, 1768, 1770, 1791, 1792, 1793, 1795, 1796, 1797, 1798, 1800, 1801, 1802, 1803, 1805, 1811, 1812, 1813, 1814, 1834, 1835, 1844, 1845, 1847, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1864, 1865, 1866, 1867, 1869, 1871, 1872, 1873, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1936, 1937, 1938, 1939, 1941, 1942, 1943, 1944, 1946, 1947, 1948, 1949, 1976, 1977, 1978, 1981, 1982, 1983, 1985, 1986, 1987, 1988, 1990, 1991, 1992, 1993, 1995, 1996, 1997, 1998, 2000, 2002, 2003, 2004, 2006, 2008, 2009, 2010, 2012, 2013, 2014, 2015, 2017, 2018, 2019, 2020, 2022, 2023, 2024, 2025, 2027, 2028, 2029, 2030, 2031, 2034, 2035, 2036, 2037, 2039, 2040, 2041, 2042, 2044, 2045, 2046, 2047, 2055, 2056, 2057, 2059, 2060, 2061, 2062, 2064, 2065, 2066, 2067, 2069, 2071, 2072, 2073, 2075, 2076, 2077, 2078, 2080, 2081, 2082, 2085, 2086, 2087, 2089, 2090, 2091, 2093, 2095, 2097, 2098, 2099, 2101, 2102, 2103, 2104, 2111, 2112, 2113, 2114, 2117, 2118, 2119, 2121, 2122, 2123, 2124, 2126, 2127, 2141, 2146], "leav": [47, 56, 59, 60, 100, 105, 106, 107, 108, 111, 112, 115, 116, 117, 118, 119, 124, 125, 126, 127, 130, 131, 142, 143, 152, 154, 156, 157, 160, 161, 163, 164, 166, 173, 174, 385, 387, 389, 396, 398, 400, 577, 579, 1012, 1014, 1016, 1107, 1109, 1111, 1144, 1146, 1148, 1188, 1190, 1192, 1195, 1197, 1199, 1430, 1432, 1469, 1471, 1473, 1584, 1585, 1677, 1679, 1681, 1709, 1711, 1713, 1735, 1737, 1739, 1811, 1812, 1814, 1870, 1881, 1883, 1885, 1901, 1903, 1926, 1928, 1929, 1930, 1936, 1937, 1939, 1941, 1942, 1944, 1955, 1956, 1957, 1966, 1967, 1968, 1969, 2071, 2073, 2075, 2076, 2078, 2080, 2205, 2207], "assess": [47, 168], "appropri": [47, 49, 88, 89, 98, 99, 136, 137, 146, 147, 162, 166, 481, 497, 500, 814, 817, 953, 954, 970, 1121, 1124, 2007, 2008, 2009, 2010, 2011, 2012], "wait": [47, 49, 100, 103, 104, 105, 106, 153, 164, 1417, 1562], "composit": [47, 148, 150, 151, 152, 154, 163, 165, 166, 168, 170, 174, 175, 187, 953, 979, 1139, 1142, 1176, 1181, 1375, 1377, 2127, 2141], "temporari": [47, 154, 1417, 1501, 1565], "merg": [47, 49, 149, 153, 164, 2140], "close": [47, 48, 49, 78, 79, 157, 164, 168, 481, 597, 600, 662, 665, 747, 750, 1714, 1811, 1813, 1815, 1870, 1886, 1889, 2140], "normal": [47, 69, 84, 85, 86, 87, 117, 132, 133, 134, 135, 164, 168, 173, 907, 908, 909, 910, 911, 913, 915, 943, 946, 953, 978, 1002, 1003, 1004, 1005, 1006, 1097, 1098, 1099, 1100, 1101, 1107, 1108, 1109, 1110, 1111, 1144, 1145, 1146, 1147, 1148, 1149, 1154, 1155, 1158, 1159, 1176, 1179, 1195, 1196, 1197, 1198, 1199, 1290, 1291, 1292, 1293, 1338, 1341, 1870, 1876, 1879, 1926, 1929, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1985, 1991, 1992, 1993, 1994, 1995, 2138, 2159, 2164, 2183, 2184], "altern": [47, 48, 69, 117, 163, 164, 173, 814, 815, 816, 817, 818, 953, 954, 970, 974, 975, 980, 981, 1087, 1089, 1091, 1121, 1122, 1123, 1124, 1125, 1275, 1276, 1277, 1278, 1279, 1285, 1286, 1287, 1288, 1289, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 2143], "composition": [47, 163], "choos": [47, 48, 49, 65, 66, 88, 89, 113, 114, 166, 171, 175, 446, 472, 473, 474, 475, 476, 481, 682, 685, 687, 690, 2007, 2028, 2030, 2032, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2070, 2085, 2088, 2089, 2092, 2093, 2096, 2102, 2105, 2147], "decid": [47, 48, 103, 104, 154, 168, 1955, 1956, 1957, 1966, 1967, 1968], "addit": [47, 48, 49, 65, 66, 69, 70, 71, 84, 85, 113, 114, 117, 118, 119, 132, 133, 152, 154, 156, 157, 164, 166, 167, 168, 172, 173, 175, 446, 472, 473, 474, 475, 476, 481, 497, 500, 747, 750, 886, 887, 888, 890, 1417, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1611, 1975, 1976, 1977, 1978, 1979, 2140, 2141, 2142, 2146, 2169, 2179], "potenti": [47, 48, 49, 153, 154, 164, 169, 481, 597, 600, 662, 665, 2143], "pend": 47, "show": [47, 48, 49, 153, 156, 163, 164, 166, 186, 187, 1417, 1500, 1558, 1564, 1605, 2128, 2140, 2157, 2158], "helpfulli": [47, 168, 2138], "prevent": [47, 49, 72, 73, 120, 121, 153, 154, 158, 159, 163, 164, 167, 168, 1417, 1435, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1629, 1630, 1631, 1632, 1650, 1689, 1692, 2070, 2106, 2110, 2159, 2163, 2185, 2186, 2187], "problemat": [47, 48], "unimpl": 47, "final": [47, 49, 61, 62, 70, 71, 118, 119, 149, 150, 153, 154, 156, 157, 159, 161, 163, 164, 168, 169, 173, 255, 290, 293, 295, 296, 298, 1417, 1469, 1470, 1471, 1472, 1473, 2136, 2146, 2169, 2180], "issue_link": 47, "chosen": [47, 153, 164, 255, 257, 258, 481, 517, 520, 2007, 2028, 2032], "correctli": [47, 48, 49, 69, 78, 79, 88, 89, 117, 126, 127, 136, 137, 150, 152, 154, 156, 158, 159, 160, 163, 165, 166, 168, 174, 187, 891, 892, 893, 894, 895, 953, 958, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1310, 1311, 1312, 1313, 1314, 1353, 1356, 1357, 1358, 1714, 1766, 1767, 1768, 1769, 1770, 2007, 2008, 2009, 2010, 2011, 2012], "alias": [47, 164, 165, 2205, 2223, 2282, 2284], "detect": [47, 48, 67, 68, 103, 104, 115, 116, 151, 152, 153, 159, 166, 173, 174, 481, 627, 628, 629, 630, 631, 1955, 1956, 1967], "alias_nam": 47, "function_nam": [47, 51, 54, 55], "notic": [47, 150, 153, 168], "alia": [47, 164, 249], "alreadi": [47, 48, 49, 69, 103, 104, 117, 151, 152, 154, 160, 164, 168, 187, 481, 557, 560, 602, 605, 747, 750, 792, 796, 829, 832, 834, 837, 1200, 1202, 1203, 1218, 1270, 1271, 1272, 1273, 1294, 1297, 1353, 1357, 1714, 1751, 1754, 1786, 1789, 2128, 2140, 2142, 2147], "push": [47, 49, 149, 159, 165, 166, 2146], "liner": 47, "meanwhil": [47, 153], "reselect": 47, "too": [47, 48, 49, 149, 154, 158, 159, 187, 481, 497, 500, 2159, 2163], "placement": 47, "categoris": [47, 149, 164], "faithfulli": 47, "descript": [47, 61, 62, 67, 68, 78, 79, 115, 116, 126, 127, 157, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 296, 298, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 403, 406, 417, 420, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 688, 689, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 839, 842, 844, 847, 849, 852, 896, 897, 907, 910, 917, 920, 922, 925, 932, 943, 946, 953, 959, 976, 997, 1000, 1149, 1150, 1151, 1152, 1154, 1156, 1162, 1163, 1164, 1176, 1178, 1179, 1200, 1218, 1229, 1232, 1234, 1237, 1239, 1242, 1294, 1297, 1321, 1324, 1417, 1476, 1479, 1493, 1496, 1502, 1505, 1508, 1511, 1594, 1598, 1612, 1642, 1646, 1650, 1652, 1655, 1662, 1665, 1667, 1670, 1672, 1675, 1684, 1687, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1712, 1714, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1733, 1735, 1738, 1740, 1741, 1744, 1746, 1747, 1749, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1804, 1806, 1809, 1811, 1815, 1816, 1820, 1821, 1824, 1839, 1843, 1844, 1845, 1847, 1848, 1849, 1853, 1870, 1871, 1874, 1876, 1879, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1899, 1901, 1904, 1906, 1909, 1911, 1914, 1916, 1919, 1921, 1924, 1926, 1929, 1931, 1935, 1936, 1940, 1941, 1945, 1946, 1950, 1975, 1976, 1979, 2007, 2008, 2011, 2013, 2016, 2023, 2026, 2028, 2032, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2054, 2055, 2058, 2065, 2068, 2070, 2085, 2088, 2089, 2092, 2093, 2096, 2097, 2100, 2102, 2105, 2106, 2110, 2111, 2115, 2116, 2117, 2120, 2122, 2125], "inner": [47, 78, 79, 109, 110, 126, 127, 163, 255, 310, 312, 313, 314, 1714, 1740, 1741, 1744, 1761, 1764, 1951, 1952, 1953, 1954], "fall": [47, 49, 154, 169, 2128, 2181, 2182, 2185, 2189], "under": [47, 48, 49, 148, 149, 152, 156, 157, 161, 164, 165, 166, 168, 169, 170, 173, 175, 187, 2140, 2143, 2147], "linalg": [47, 163, 165, 1714, 1746, 1747, 1801, 1804, 2128], "match": [47, 63, 64, 69, 103, 104, 111, 112, 117, 150, 152, 156, 165, 341, 349, 350, 351, 352, 353, 481, 742, 745, 881, 884, 922, 923, 924, 925, 926, 953, 957, 959, 1200, 1220, 1360, 1364, 1417, 1543, 2141, 2146, 2194, 2195, 2201], "creation_routin": [47, 165], "fft": [47, 69, 117, 913, 915, 1006, 1149, 1155, 2140], "indexing_routin": 47, "logic": [47, 96, 97, 144, 145, 150, 153, 154, 155, 158, 162, 164, 166, 168, 172, 446, 463, 481, 677, 680, 682, 685, 687, 690, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2128], "ma": 47, "manipulation_routin": 47, "mathematical_funct": [47, 164], "matrix": [47, 51, 54, 55, 61, 62, 70, 71, 76, 77, 78, 79, 118, 119, 124, 125, 126, 127, 154, 164, 255, 300, 301, 303, 323, 327, 328, 332, 896, 897, 902, 903, 997, 1000, 1176, 1182, 1224, 1227, 1378, 1381, 1382, 1385, 1417, 1418, 1419, 1420, 1421, 1422, 1436, 1437, 1438, 1439, 1440, 1650, 1694, 1695, 1696, 1697, 1698, 1714, 1715, 1716, 1717, 1718, 1719, 1725, 1728, 1735, 1738, 1740, 1741, 1744, 1746, 1749, 1756, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1791, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1805, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1849, 1853, 2138, 2140, 2159, 2160, 2163, 2164, 2167, 2169, 2179, 2255, 2262], "random": [47, 69, 76, 77, 87, 103, 104, 117, 124, 125, 135, 155, 165, 166, 167, 175, 186, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 927, 928, 929, 930, 931, 1047, 1048, 1049, 1300, 1301, 1302, 1303, 1304, 1316, 1317, 1318, 1319, 1320, 1650, 1689, 1690, 1691, 1692, 1693, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2128, 2140, 2237, 2246, 2247, 2255, 2263], "sorting_searching_count": 47, "statist": [47, 69, 95, 117, 143, 146, 147, 154, 166, 167, 1107, 1108, 1109, 1110, 1111, 1200, 1218, 1290, 1291, 1294, 1297, 1354, 1355, 1356, 1357, 1358, 1359, 2071, 2074, 2076, 2079, 2081, 2084, 2085, 2088, 2089, 2092, 2093, 2096, 2097, 2100, 2102, 2105, 2106, 2110, 2111, 2115, 2140], "ufunc": [47, 164], "hierarchi": [47, 103, 104, 173, 2136, 2146], "decomposit": [47, 78, 79, 126, 127, 1714, 1715, 1718, 1796, 1797, 1798, 1799, 1800, 1811, 1812, 1813, 1814, 1815, 2147], "matrix_and_vector_product": 47, "matrix_eigenvalu": 47, "norms_and_other_numb": 47, "solving_equations_and_inverting_matric": 47, "product": [47, 67, 68, 76, 77, 78, 79, 94, 95, 115, 116, 117, 124, 125, 126, 127, 142, 143, 170, 481, 707, 708, 709, 710, 1139, 1142, 1143, 1176, 1181, 1650, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1720, 1721, 1722, 1723, 1724, 1751, 1754, 1761, 1764, 1786, 1789, 1839, 1843, 2070, 2071, 2072, 2073, 2074, 2076, 2079, 2081, 2084, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2140, 2142, 2169, 2180], "seem": [47, 48, 168, 174, 175, 187, 2140], "func": [47, 103, 104, 149, 150, 156, 158, 163, 189, 203, 446, 471, 873, 1062, 1063, 1417, 1435, 1611, 1612, 1622, 1623, 1628, 1648, 1955, 1969, 2205, 2217], "gleam": 47, "yet": [47, 48, 187], "uncom": 47, "test_numpy_inn": 47, "mirror": [47, 1200, 1218, 1294, 1297, 2140], "correspond": [47, 49, 63, 64, 67, 68, 69, 70, 71, 76, 77, 82, 83, 94, 95, 100, 103, 104, 105, 106, 111, 112, 115, 116, 117, 124, 125, 130, 131, 142, 143, 150, 151, 152, 153, 154, 156, 157, 160, 161, 162, 164, 166, 168, 170, 205, 206, 212, 341, 354, 355, 356, 357, 358, 385, 387, 389, 396, 398, 400, 481, 517, 518, 519, 520, 521, 727, 728, 730, 809, 813, 913, 915, 943, 945, 946, 947, 948, 950, 952, 953, 961, 962, 979, 1007, 1008, 1010, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1030, 1139, 1143, 1149, 1155, 1176, 1179, 1200, 1209, 1210, 1375, 1376, 1377, 1417, 1568, 1569, 1611, 1650, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1668, 1670, 1672, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1687, 1714, 1720, 1723, 1740, 1741, 1744, 1766, 1769, 1801, 1804, 1806, 1809, 1870, 1911, 1912, 1913, 1914, 1915, 1980, 1981, 1984, 2007, 2008, 2011, 2013, 2016, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2070, 2071, 2074, 2076, 2079, 2097, 2100, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2113, 2114, 2115, 2140, 2205, 2210, 2224, 2226, 2237, 2245], "ivy_test": [47, 48, 49, 149, 153, 165, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289], "test_ivi": [47, 48, 49, 153, 165, 166, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289], "test_frontend": [47, 153, 165], "unsur": [47, 166], "put": [47, 166, 187, 2146], "explor": [47, 48, 49, 154, 168, 171, 175, 186, 2140, 2143], "outer": [47, 78, 79, 126, 127, 1714, 1951, 1952, 1953, 1954], "confirm": 47, "ve": [47, 48, 49, 86, 87, 134, 135, 166, 168, 169, 172, 1980, 1981, 1982, 1983, 1984, 1985, 2127, 2128], "empti": [47, 48, 51, 54, 55, 70, 71, 100, 103, 104, 105, 106, 118, 119, 150, 154, 155, 255, 257, 258, 1200, 1218, 1294, 1297, 1417, 1436, 1439, 1552, 1553, 1554, 1555, 1556, 1612, 1641, 1647, 1649, 1955, 1970, 2070, 2106, 2110, 2116, 2117, 2120, 2122, 2125], "along": [47, 52, 53, 61, 62, 69, 70, 71, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 109, 110, 115, 116, 117, 118, 119, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 156, 163, 167, 168, 170, 218, 219, 220, 222, 238, 239, 240, 242, 255, 290, 293, 295, 296, 297, 298, 299, 446, 471, 891, 892, 893, 894, 895, 907, 910, 922, 923, 924, 925, 926, 933, 934, 936, 938, 941, 953, 958, 959, 974, 979, 1002, 1003, 1004, 1005, 1006, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1097, 1098, 1099, 1100, 1101, 1107, 1108, 1110, 1144, 1145, 1146, 1147, 1148, 1149, 1154, 1158, 1159, 1195, 1196, 1197, 1198, 1199, 1200, 1205, 1206, 1209, 1210, 1218, 1221, 1244, 1245, 1246, 1247, 1248, 1255, 1258, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1290, 1291, 1292, 1293, 1294, 1297, 1310, 1311, 1312, 1313, 1314, 1343, 1345, 1353, 1355, 1356, 1357, 1358, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1417, 1451, 1454, 1476, 1477, 1478, 1479, 1480, 1714, 1829, 1830, 1831, 1832, 1833, 1839, 1843, 1844, 1845, 1847, 1848, 1854, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1876, 1877, 1879, 1891, 1892, 1893, 1894, 1895, 1896, 1898, 1900, 1901, 1902, 1903, 1904, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1926, 1927, 1928, 1929, 1930, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1945, 1951, 1952, 1953, 1954, 1980, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2054, 2055, 2056, 2057, 2058, 2059, 2065, 2068, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2140, 2205, 2217], "backend_nam": [47, 151, 154, 155, 157, 160, 161, 162], "relevant_submodul": 47, "sometim": [47, 48, 49, 149, 154, 164, 166, 167, 168], "behav": [47, 149, 158, 163, 164, 165, 172, 1714, 1740, 2141], "helper": [47, 154, 158, 173, 341, 369, 2127, 2158, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2252, 2253, 2254, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2283, 2284, 2285, 2286, 2287, 2288, 2289], "recreat": [47, 149], "defer": [47, 150, 152, 154, 155, 161, 162, 163, 164, 166, 2146], "clearer": [47, 158, 165, 173], "mind": [47, 150, 152, 166], "posit": [47, 49, 56, 57, 58, 67, 68, 69, 70, 71, 78, 79, 82, 83, 115, 116, 117, 118, 119, 126, 127, 130, 131, 149, 152, 162, 164, 166, 167, 173, 186, 249, 255, 276, 277, 341, 385, 388, 481, 482, 485, 622, 625, 627, 628, 629, 630, 631, 726, 737, 740, 742, 745, 814, 817, 869, 870, 871, 872, 881, 882, 883, 884, 885, 896, 897, 902, 903, 917, 920, 953, 954, 957, 970, 973, 997, 998, 999, 1000, 1121, 1124, 1176, 1178, 1193, 1194, 1200, 1215, 1250, 1251, 1252, 1253, 1254, 1260, 1261, 1262, 1263, 1264, 1378, 1381, 1382, 1385, 1417, 1435, 1469, 1470, 1471, 1472, 1473, 1611, 1714, 1715, 1716, 1717, 1718, 1719, 1730, 1733, 1829, 1830, 1831, 1832, 1870, 1886, 1887, 1888, 1889, 1890, 1911, 1912, 1913, 1914, 1915, 1980, 2001, 2007, 2023, 2026, 2116, 2117, 2120, 2122, 2125, 2142, 2152, 2153, 2156, 2205, 2224, 2226, 2237, 2240, 2282, 2284, 2286, 2287, 2288], "keyword": [47, 56, 57, 58, 61, 62, 100, 103, 104, 105, 106, 150, 152, 154, 155, 162, 163, 164, 165, 166, 167, 173, 188, 199, 255, 300, 301, 303, 953, 973, 1200, 1218, 1260, 1263, 1294, 1297, 1417, 1424, 1435, 1543, 1599, 1955, 1962, 2070, 2106, 2110, 2181, 2182, 2194, 2198, 2199, 2200, 2205, 2210, 2223, 2224, 2225, 2226], "strategi": [47, 162, 165, 2237, 2239, 2240, 2241, 2245, 2246, 2248, 2251, 2252, 2255, 2258, 2259, 2260, 2261, 2263, 2264, 2282, 2283, 2284, 2285, 2286, 2287, 2288], "draw": [47, 86, 87, 134, 135, 149, 165, 166, 854, 857, 927, 930, 1300, 1303, 1315, 1316, 1318, 1320, 1980, 1981, 1982, 1983, 1984, 1985, 1991, 1994, 1996, 1999, 2159, 2161, 2162, 2166, 2237, 2239, 2240, 2241, 2245, 2246, 2248, 2251, 2252, 2253, 2254, 2255, 2258, 2259, 2260, 2261, 2263, 2264, 2266, 2267, 2268, 2269, 2282, 2287, 2288], "realli": [48, 152, 187, 2145, 2146], "button": [48, 49], "top": [48, 49, 69, 82, 83, 117, 154, 164, 166, 173, 174, 1200, 1221, 1370, 1371, 1372, 1373, 1374, 1417, 1451, 1454, 1876, 1877, 2140, 2144, 2157, 2158], "account": [48, 69, 82, 83, 117, 130, 131, 153, 157, 164, 1012, 1013, 1014, 1015, 1016, 1200, 1208, 1870, 1906, 1907, 1908, 1909, 1910, 2159, 2164], "your_usernam": 48, "gh": 48, "your_fold": 48, "upstream": [48, 49, 149, 873, 1062, 1063], "sync": [48, 149], "cours": [48, 49, 149, 150, 156, 164, 167, 168, 173, 187, 2145, 2146], "whatev": [48, 152, 187], "elig": 48, "student": 48, "licenc": 48, "remind": 48, "licens": [48, 2143], "expir": 48, "abl": [48, 49, 103, 104, 149, 154, 161, 163, 164, 168, 170, 175, 2143, 2146], "profession": 48, "trial": 48, "jetbrain": 48, "valid": [48, 69, 76, 77, 96, 97, 117, 124, 125, 144, 145, 151, 154, 156, 165, 166, 341, 370, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 1149, 1150, 1151, 1152, 1162, 1163, 1164, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1417, 1529, 1532, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1870, 1886, 1889, 1926, 1929, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2141, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2237, 2240, 2245, 2246, 2251, 2252, 2254], "bui": [48, 2146], "paid": 48, "pace": 48, "align": [48, 49, 69, 103, 104, 117, 164, 170, 172, 917, 918, 919, 920, 921, 1113, 1114, 1115, 1116, 1117, 1149, 1161, 1176, 1178, 2127, 2146], "stabl": [48, 70, 71, 92, 93, 118, 119, 140, 141, 151, 154, 164, 170, 187, 481, 747, 750, 896, 902, 903, 1171, 1174, 1343, 1344, 1378, 1381, 1382, 1385, 1417, 1490, 1491, 1559, 1560, 1568, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 2054, 2055, 2056, 2057, 2058, 2059, 2065, 2066, 2067, 2068, 2069, 2255, 2262], "mayb": [48, 56, 59, 60, 153, 170, 172], "person": [48, 49], "experi": [48, 166, 171, 173, 187], "avoid": [48, 49, 69, 117, 151, 152, 153, 154, 159, 162, 164, 166, 167, 481, 597, 600, 662, 665, 834, 837, 1107, 1108, 1109, 1110, 1111, 1200, 1203, 1290, 1291, 1417, 1435, 2140, 2255, 2262, 2266, 2267], "abil": [48, 168, 171, 187, 2140], "certain": [48, 49, 103, 104, 149, 154, 158, 166, 168, 187, 255, 257, 258, 290, 293, 295, 298, 2144], "perhap": [48, 172, 173, 174, 187, 2146], "track": [48, 49, 69, 117, 149, 1107, 1108, 1109, 1110, 1111, 1290, 1291, 1612, 1613, 1955, 1968, 2140, 2157, 2158, 2181, 2182], "click": [48, 49, 153, 157, 171, 2128], "icon": [48, 49], "side": [48, 49, 92, 93, 140, 141, 953, 968, 1087, 1090, 2054, 2060, 2061, 2062, 2063, 2064], "left": [48, 49, 69, 78, 79, 88, 89, 92, 93, 117, 126, 127, 136, 137, 140, 141, 149, 153, 154, 156, 481, 537, 540, 891, 892, 893, 894, 895, 953, 958, 974, 1017, 1020, 1112, 1149, 1160, 1200, 1209, 1244, 1245, 1246, 1247, 1248, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1310, 1311, 1312, 1313, 1314, 1353, 1355, 1356, 1357, 1358, 1417, 1451, 1454, 1714, 1740, 1741, 1744, 1766, 1767, 1768, 1769, 1770, 1811, 1812, 1813, 1814, 1815, 1834, 1835, 1836, 1837, 1838, 2007, 2008, 2009, 2010, 2011, 2012, 2054, 2060, 2061, 2062, 2063, 2064], "panel": 48, "drop": [48, 187, 2159, 2167], "down": [48, 69, 117, 158, 166, 1022, 1025, 1113, 1114, 1115, 1116, 1117, 1149, 1161, 1200, 1210, 2127, 2140, 2146, 2157, 2158], "builtin": [48, 172, 174], "virtualenv": 48, "o": [48, 148, 153, 170, 1417, 1543], "tick": [48, 49, 153], "test_array_api": [48, 49, 149, 166], "r": [48, 49, 69, 78, 79, 103, 104, 117, 126, 127, 148, 165, 873, 953, 967, 1057, 1058, 1059, 1060, 1062, 1063, 1612, 1622, 1714, 1796, 1797, 1798, 1799, 1800, 1870, 1941, 1945], "txt": [48, 149, 167], "visual": [48, 164, 187, 2140, 2142, 2145], "mitig": [48, 2146], "conflict": [48, 49, 153, 164, 173], "particular": [48, 49, 149, 151, 153, 154, 156, 162, 163, 164, 166, 167, 168, 481, 482, 485, 682, 685, 2136, 2140, 2146, 2251, 2254], "system": [48, 49, 151, 153, 154, 187, 1714, 1806, 1809, 2138, 2140, 2143, 2145, 2147], "wsl": 48, "powershel": 48, "admin": 48, "visit": [48, 49, 153], "deploy": [48, 2139, 2142, 2143, 2146, 2147], "press": [48, 49, 173, 2128], "ok": 48, "debug": [48, 49, 152, 153, 166, 168, 173, 2140], "dialog": 48, "invalid": [48, 96, 97, 144, 145, 154, 159, 1714, 1839, 1843, 1870, 1886, 1889, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2237, 2241], "caus": [48, 49, 149, 151, 152, 153, 154, 156, 163, 165, 166, 187], "earlier": [48, 49], "necessari": [48, 49, 69, 82, 83, 117, 130, 131, 150, 151, 152, 156, 162, 163, 164, 166, 168, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 1200, 1201, 1202, 1870, 1906, 1907, 1908, 1909, 1910], "virtualis": 48, "On": [48, 154, 164, 166, 171, 175], "dropdown": 48, "menu": 48, "server": [48, 49, 2140], "tag": [48, 49], "suitabl": [48, 49, 117, 152, 167, 896, 900, 901, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 2054, 2060, 2063, 2140, 2255, 2262], "navig": [48, 49, 148], "tab": [48, 153, 173, 2128], "m1": 48, "optional_m1_1": 48, "optional_m1_2": 48, "sudo": 48, "apt": 48, "ca": 48, "certif": 48, "curl": 48, "gnupg": 48, "lsb": 48, "mkdir": [48, 153], "p": [48, 49, 69, 70, 71, 117, 118, 119, 126, 127, 148, 255, 300, 303, 953, 960, 987, 990, 1149, 1165, 1195, 1196, 1197, 1198, 1199, 1290, 1293, 1299, 1417, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1714, 1766, 1769, 1844, 1845, 1847, 1848, 1955, 1964, 2169, 2177], "keyr": 48, "fssl": 48, "download": [48, 166], "gpg": 48, "dearmor": 48, "echo": [48, 153], "deb": 48, "arch": 48, "dpkg": 48, "architectur": [48, 175, 187, 2138, 2139, 2140, 2143, 2144, 2145], "lsb_releas": 48, "tee": 48, "dev": [48, 65, 66, 103, 104, 113, 114, 155, 161, 172, 174, 255, 315, 316, 446, 457, 461, 467], "null": 48, "ce": 48, "cli": 48, "containerd": 48, "io": [48, 153], "compos": [48, 152, 164, 166, 187, 2140, 2147, 2157, 2158], "plugin": 48, "systemctl": 48, "permiss": [48, 153], "post": [48, 84, 85, 132, 133, 175, 1975, 1976, 1977, 1978, 1979], "coupl": [48, 150, 172, 174, 2140], "unit": [48, 69, 101, 102, 117, 149, 154, 164, 165, 166, 187, 205, 207, 209, 210, 211, 213, 215, 216, 217, 218, 220, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 235, 237, 238, 240, 242, 243, 245, 247, 805, 808, 943, 946, 1144, 1145, 1176, 1179, 1365, 1366, 1368, 1369, 2141, 2144], "test_ab": [48, 166], "context": [48, 49, 76, 77, 124, 125, 156, 446, 447, 1417, 1544, 1612, 1613, 1650, 1704, 1705, 1706, 1707, 1708, 2169, 2180], "editor": 48, "green": [48, 49, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 2290, 2291], "appear": [48, 49, 149, 164, 168, 1017, 1020, 1022, 1025, 1200, 1209, 1210, 1417, 1611], "pytest": [48, 49, 149, 153, 166], "keyboard": 48, "shortcut": [48, 1200, 1218, 1294, 1297], "displai": [48, 152, 158, 166, 173], "screenshot": 48, "ctrl": [48, 49], "shift": [48, 49, 82, 83, 100, 105, 106, 109, 110, 130, 131, 156, 160, 285, 287, 289, 481, 537, 540, 547, 550, 896, 902, 903, 1378, 1381, 1382, 1385, 1870, 1911, 1912, 1913, 1914, 1915], "bottom": [48, 153, 1417, 1451, 1454, 2146], "screen": [48, 103, 104, 173], "elsewher": [48, 69, 117, 255, 276, 277, 896, 897, 997, 998, 999, 1000, 1001, 2007, 2028, 2032], "test_elementwis": 48, "progress": [48, 49, 175, 1714, 1834, 1838], "bar": 48, "shell": [48, 49], "run_tests_cli": [48, 149], "run_ivy_core_test": 48, "run_ivy_nn_test": 48, "run_ivy_stateful_test": 48, "run_test": [48, 153], "sh": [48, 49, 149, 153], "test_depend": 48, "test_ivy_cor": 48, "test_ivy_nn": 48, "test_ivy_st": 48, "test_": [48, 165], "test_funct": [48, 49, 153, 165, 166, 2205], "test_cor": [48, 49, 165], "wish": [48, 164], "ivy_cor": 48, "ivy_nn": 48, "ivy_st": 48, "dure": [48, 65, 66, 72, 73, 94, 95, 103, 104, 113, 114, 120, 121, 142, 143, 152, 154, 155, 158, 161, 162, 163, 164, 165, 166, 168, 187, 446, 472, 473, 474, 475, 476, 932, 1149, 1156, 1417, 1599, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1629, 1630, 1631, 1632, 1650, 1689, 1692, 1714, 1761, 1764, 1951, 1952, 1953, 1954, 2070, 2102, 2103, 2104, 2105, 2111, 2113, 2114, 2115, 2140, 2141, 2146, 2157, 2158, 2181, 2182, 2185, 2186, 2187, 2189], "simplest": [48, 156, 166, 168], "valu": [48, 49, 51, 54, 55, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 149, 152, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 168, 170, 172, 187, 205, 243, 245, 246, 247, 255, 257, 258, 276, 277, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 310, 311, 312, 313, 314, 341, 349, 350, 351, 352, 353, 401, 412, 413, 428, 446, 470, 471, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 497, 500, 502, 503, 504, 505, 506, 512, 513, 514, 515, 516, 517, 518, 519, 521, 557, 560, 577, 578, 579, 581, 582, 585, 587, 590, 592, 594, 596, 597, 599, 601, 602, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 671, 672, 673, 674, 676, 692, 693, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 711, 712, 715, 717, 720, 722, 725, 727, 728, 729, 730, 731, 737, 740, 742, 743, 744, 746, 747, 750, 767, 768, 769, 771, 772, 773, 774, 776, 777, 779, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 804, 805, 807, 808, 814, 817, 854, 855, 856, 857, 858, 859, 861, 862, 863, 864, 865, 866, 867, 868, 891, 892, 893, 894, 895, 896, 897, 902, 903, 913, 915, 917, 920, 922, 923, 924, 925, 926, 953, 954, 956, 958, 959, 961, 967, 970, 973, 975, 976, 978, 979, 980, 981, 997, 998, 999, 1000, 1007, 1010, 1047, 1049, 1055, 1056, 1057, 1058, 1059, 1060, 1072, 1073, 1074, 1075, 1076, 1113, 1114, 1115, 1116, 1117, 1121, 1124, 1126, 1127, 1128, 1129, 1130, 1149, 1155, 1161, 1176, 1178, 1200, 1211, 1216, 1218, 1220, 1221, 1234, 1236, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1280, 1282, 1285, 1286, 1287, 1288, 1289, 1294, 1297, 1300, 1301, 1302, 1303, 1304, 1305, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1338, 1341, 1346, 1348, 1351, 1353, 1356, 1357, 1358, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1381, 1382, 1385, 1406, 1407, 1408, 1409, 1410, 1411, 1413, 1415, 1417, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1448, 1449, 1450, 1469, 1470, 1472, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1489, 1498, 1499, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1520, 1522, 1523, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1559, 1560, 1562, 1578, 1579, 1580, 1581, 1582, 1594, 1595, 1597, 1603, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1629, 1630, 1631, 1632, 1641, 1647, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1692, 1699, 1700, 1701, 1702, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1730, 1733, 1766, 1769, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1844, 1845, 1847, 1848, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1885, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1955, 1958, 1960, 1961, 1962, 1963, 1964, 1969, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2023, 2024, 2025, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2063, 2065, 2068, 2070, 2071, 2072, 2074, 2076, 2079, 2085, 2086, 2087, 2088, 2089, 2090, 2092, 2093, 2094, 2095, 2096, 2097, 2100, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2113, 2114, 2115, 2134, 2135, 2140, 2141, 2157, 2158, 2159, 2160, 2161, 2162, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2189, 2194, 2195, 2196, 2201, 2205, 2223, 2224, 2225, 2226, 2237, 2240, 2241, 2245, 2246, 2251, 2253, 2255, 2256, 2261, 2266, 2267, 2268, 2269, 2272, 2277], "becaus": [48, 49, 69, 150, 151, 152, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 170, 174, 175, 187, 913, 915, 1149, 1155, 2140, 2143, 2146], "header": [48, 49], "summari": [48, 49, 103, 104, 166, 341, 401, 1417, 1446, 1499], "recommend": [48, 49, 151, 481, 682, 685, 687, 690, 742, 745, 2070, 2089, 2092, 2102, 2105], "advanc": [48, 2139], "q": [48, 49, 69, 76, 77, 78, 79, 117, 124, 125, 126, 127, 148, 165, 187, 953, 981, 1310, 1311, 1312, 1313, 1314, 1353, 1358, 1411, 1412, 1413, 1414, 1415, 1650, 1709, 1710, 1711, 1712, 1713, 1714, 1740, 1741, 1744, 1796, 1797, 1798, 1799, 1800, 1955, 1964], "fix": [48, 49, 69, 117, 149, 154, 166, 167, 953, 1011], "arrow": 48, "funcion": 48, "target": [48, 148, 165, 167, 169, 173, 174, 175, 446, 451, 2128, 2136, 2138, 2139, 2140, 2143, 2145, 2146], "test_stat": 48, "test_submodule_nam": 48, "test_function_nam": 48, "debugg": 48, "studio": 48, "easiest": 48, "effici": [48, 49, 152, 159, 161, 162, 163, 166, 170, 173, 187, 2140, 2142, 2143], "afterward": [48, 173, 2152, 2155], "background": [48, 2140, 2142], "restart": 48, "corner": [48, 49, 69, 117, 164, 1113, 1114, 1115, 1116, 1117, 1149, 1161], "overlap": [48, 153, 167, 168, 2141], "test_file_path": 48, "test_fn_nam": 48, "long": [48, 49, 153, 154, 156, 158, 170, 1650, 1699, 1702, 2140], "larg": [48, 49, 69, 117, 153, 173, 481, 497, 500, 953, 973, 1260, 1261, 1262, 1263, 1264, 1714, 1801, 1804, 2140], "gb": [48, 446, 477, 480], "engin": [48, 2140, 2142, 2143], "comma": 48, "end": [48, 49, 151, 153, 163, 167, 168, 169, 186, 187, 255, 257, 258, 481, 517, 520, 1012, 1015, 1200, 1208, 1218, 1294, 1297, 2128, 2138, 2143, 2157, 2158], "entri": [48, 69, 82, 83, 103, 104, 117, 130, 131, 138, 139, 153, 166, 255, 290, 293, 854, 855, 856, 857, 858, 1017, 1020, 1022, 1025, 1200, 1209, 1210, 1315, 1316, 1870, 1916, 1917, 1918, 1919, 1920, 1955, 1969, 2034, 2037, 2140], "postcreatecommand": 48, "post_create_command": 48, "poststartcommand": 48, "safe": [48, 164], "containerworkspacefold": 48, "roughli": [48, 111, 112, 149, 408, 411, 412, 416, 2143], "reopen": 48, "test_fle_path": 48, "enter": [48, 49, 150, 154, 155, 160, 162, 446, 447, 1612, 1641, 1647, 1649], "forward": [48, 69, 117, 151, 157, 166, 167, 168, 175, 186, 187, 913, 915, 1002, 1003, 1004, 1005, 1006, 1097, 1098, 1099, 1100, 1101, 1149, 1155, 1158, 1159, 2140, 2141, 2152, 2153, 2155, 2159, 2164, 2167, 2181, 2182, 2185, 2189], "slash": 48, "regular": [48, 49, 164, 2140], "headach": 48, "arm": [48, 49], "featur": [48, 49, 150, 160, 164, 167, 168, 173, 187, 932, 1149, 1156, 2128, 2140, 2141, 2142, 2146, 2159, 2161, 2162, 2164, 2166, 2167], "vm": [48, 153], "azur": 48, "cloud": [48, 153, 186, 2142], "mean": [48, 49, 69, 70, 71, 76, 77, 82, 83, 86, 87, 94, 95, 103, 104, 117, 118, 119, 124, 125, 130, 131, 134, 135, 142, 143, 146, 147, 148, 149, 151, 152, 154, 155, 156, 161, 163, 164, 166, 167, 168, 170, 172, 173, 174, 175, 186, 187, 446, 471, 859, 862, 891, 892, 893, 894, 895, 917, 920, 953, 958, 1012, 1013, 1014, 1015, 1016, 1107, 1108, 1109, 1110, 1111, 1176, 1178, 1200, 1208, 1218, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1290, 1291, 1294, 1297, 1315, 1317, 1353, 1356, 1357, 1417, 1456, 1457, 1458, 1459, 1460, 1612, 1623, 1628, 1648, 1650, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1677, 1678, 1679, 1680, 1681, 1684, 1685, 1686, 1687, 1688, 1689, 1692, 1714, 1730, 1733, 1870, 1906, 1907, 1908, 1909, 1910, 1951, 1952, 1953, 1954, 1955, 1962, 1980, 1986, 1989, 1991, 1992, 1993, 1994, 1995, 2070, 2127, 2128, 2137, 2140, 2159, 2164, 2237, 2241, 2245, 2246, 2255, 2260, 2266, 2267, 2268, 2269], "longer": [48, 154, 162, 163, 166, 2140], "worri": 48, "agnost": [48, 150, 160, 170, 172, 175, 187, 2128, 2146, 2147], "usual": [48, 149, 164, 166, 168], "favourit": 48, "theme": 48, "unsupport": [48, 159, 164, 341, 393, 394, 446, 460, 1417, 1474, 1475, 2194, 2200, 2228], "old": [48, 103, 104, 151, 163], "slow": 48, "ipad": 48, "cool": [48, 167], "sever": [48, 49, 167, 187, 2138, 2144], "exact": [48, 49, 101, 102, 103, 104, 149, 156, 170, 207, 209, 211, 2033, 2034, 2038, 2044, 2048, 2255, 2262], "quota": 48, "requisit": 48, "pane": [48, 49, 153], "readi": 48, "begin": [48, 149, 165, 1200, 1218, 1294, 1297, 1955, 1956, 1967, 2157, 2158], "master": [48, 49, 149, 153, 167, 2140], "view": [48, 49, 69, 117, 158, 255, 279, 282, 834, 835, 836, 837, 838, 1200, 1203, 1215, 1219, 1250, 1251, 1253, 1326, 1327, 1328, 1329, 1330, 2140], "box": 48, "upto": [48, 49], "15": [48, 67, 68, 69, 70, 71, 86, 87, 94, 95, 100, 105, 106, 109, 110, 111, 112, 115, 116, 117, 118, 119, 124, 125, 130, 131, 134, 135, 142, 143, 156, 255, 285, 287, 288, 289, 341, 385, 387, 388, 389, 481, 497, 498, 500, 501, 527, 530, 547, 550, 577, 580, 612, 613, 642, 643, 672, 673, 675, 707, 709, 710, 711, 742, 743, 745, 747, 748, 750, 752, 753, 839, 840, 841, 842, 843, 844, 847, 907, 910, 933, 934, 935, 936, 937, 953, 967, 971, 1012, 1013, 1014, 1015, 1016, 1057, 1058, 1059, 1060, 1077, 1078, 1079, 1080, 1081, 1149, 1150, 1151, 1154, 1164, 1166, 1167, 1168, 1169, 1170, 1200, 1205, 1208, 1212, 1239, 1240, 1242, 1396, 1397, 1399, 1417, 1441, 1444, 1451, 1454, 1456, 1458, 1459, 1469, 1470, 1471, 1472, 1473, 1498, 1508, 1511, 1512, 1513, 1516, 1517, 1562, 1568, 1570, 1571, 1572, 1603, 1650, 1652, 1655, 1694, 1696, 1697, 1698, 1714, 1735, 1738, 1746, 1749, 1756, 1759, 1786, 1789, 1816, 1820, 1821, 1824, 1870, 1911, 1914, 1941, 1942, 1944, 1945, 1980, 1986, 1988, 1989, 1991, 1992, 1993, 1994, 1995, 2007, 2023, 2026, 2033, 2034, 2038, 2070, 2071, 2074, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2143, 2205, 2225], "minut": [48, 153], "launch": 48, "12": [48, 51, 54, 55, 63, 64, 67, 68, 69, 70, 71, 76, 77, 86, 87, 94, 95, 100, 105, 106, 111, 112, 115, 116, 117, 118, 119, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 142, 143, 151, 152, 154, 156, 167, 396, 397, 398, 400, 481, 497, 498, 500, 501, 502, 503, 504, 506, 527, 528, 547, 550, 552, 554, 555, 556, 567, 569, 570, 571, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 591, 647, 649, 651, 707, 708, 709, 710, 711, 717, 718, 719, 721, 747, 750, 762, 764, 766, 792, 793, 795, 796, 797, 798, 800, 839, 841, 843, 844, 845, 846, 847, 848, 849, 851, 853, 896, 900, 901, 907, 909, 911, 933, 934, 935, 936, 937, 953, 967, 1002, 1004, 1006, 1012, 1013, 1014, 1015, 1016, 1057, 1058, 1059, 1060, 1077, 1078, 1079, 1080, 1081, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1149, 1151, 1163, 1200, 1205, 1208, 1212, 1229, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1241, 1243, 1300, 1302, 1304, 1396, 1397, 1399, 1417, 1441, 1444, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1491, 1513, 1517, 1552, 1553, 1555, 1560, 1568, 1570, 1571, 1650, 1652, 1654, 1656, 1672, 1674, 1676, 1689, 1690, 1691, 1692, 1693, 1694, 1697, 1714, 1735, 1738, 1766, 1768, 1769, 1770, 1786, 1789, 1821, 1824, 1829, 1833, 1870, 1891, 1894, 1911, 1914, 1921, 1923, 1925, 1931, 1932, 1934, 1941, 1942, 1944, 1945, 1975, 1976, 1978, 1979, 1980, 1986, 1989, 1991, 1992, 1994, 1996, 1997, 1998, 2007, 2028, 2032, 2033, 2034, 2038, 2070, 2071, 2074, 2076, 2077, 2078, 2081, 2082, 2084, 2097, 2100, 2106, 2110], "output": [48, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 101, 102, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 148, 149, 150, 152, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 174, 175, 187, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 255, 257, 258, 260, 261, 262, 267, 268, 269, 270, 271, 272, 274, 276, 277, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 300, 301, 303, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 325, 327, 328, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 349, 350, 351, 352, 353, 359, 362, 428, 446, 471, 472, 473, 474, 475, 476, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805, 806, 807, 808, 809, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 881, 882, 883, 884, 885, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 904, 907, 908, 909, 910, 911, 913, 915, 917, 920, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 985, 987, 988, 989, 990, 991, 992, 995, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1207, 1208, 1209, 1210, 1211, 1214, 1215, 1219, 1220, 1221, 1224, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1451, 1452, 1454, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1469, 1471, 1481, 1482, 1483, 1484, 1518, 1520, 1522, 1524, 1528, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1600, 1611, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1642, 1643, 1644, 1645, 1646, 1648, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1730, 1733, 1735, 1736, 1737, 1738, 1739, 1746, 1747, 1748, 1749, 1750, 1751, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1809, 1816, 1820, 1821, 1824, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1843, 1844, 1845, 1847, 1848, 1849, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1921, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1946, 1947, 1948, 1949, 1950, 1955, 1969, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2015, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2054, 2055, 2057, 2058, 2059, 2060, 2063, 2065, 2068, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2078, 2079, 2080, 2081, 2082, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2141, 2152, 2154, 2159, 2162, 2164, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2177, 2178, 2179, 2180, 2194, 2199], "That": [48, 49, 150, 166, 172, 173, 174, 481, 742, 745, 2141], "approach": [48, 49, 150, 152, 154, 161, 162, 164, 166, 168, 172, 173, 187, 2137, 2144, 2146], "colour": 48, "applic": [48, 76, 77, 124, 125, 154, 155, 162, 174, 1650, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1955, 1962, 1963, 1964, 1968, 1969, 2137, 2138, 2140, 2142, 2144, 2146], "chanc": 48, "troubleshoot": 48, "ever": 48, "64": [48, 67, 68, 69, 76, 77, 100, 105, 106, 115, 116, 117, 118, 119, 124, 125, 126, 127, 134, 135, 142, 143, 173, 174, 341, 384, 481, 547, 548, 549, 550, 551, 727, 728, 730, 767, 769, 771, 772, 775, 907, 908, 909, 910, 911, 953, 960, 962, 987, 988, 989, 990, 991, 1027, 1028, 1030, 1149, 1154, 1417, 1451, 1454, 1456, 1459, 1460, 1612, 1629, 1632, 1650, 1667, 1670, 1677, 1680, 1684, 1685, 1686, 1687, 1688, 1714, 1771, 1774, 1786, 1789, 1816, 1820, 1834, 1835, 1837, 1991, 1993, 2070, 2081, 2084, 2097, 2099, 2101, 2128, 2145, 2169, 2180], "usr": 48, "flask": 48, "toolbar": [48, 49], "_array_modul": [48, 149], "array_api_test": [48, 49, 149], "refresh": 48, "conftest": 48, "nutshel": [48, 160], "hook": [48, 2152, 2155], "lint": 48, "accept": [48, 49, 56, 61, 62, 67, 68, 78, 79, 107, 115, 116, 150, 152, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 172, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 296, 298, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 403, 406, 417, 420, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 688, 689, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 839, 842, 844, 847, 849, 852, 873, 896, 897, 902, 903, 907, 910, 917, 920, 922, 925, 932, 943, 946, 953, 959, 976, 997, 1000, 1062, 1063, 1149, 1150, 1151, 1152, 1154, 1156, 1162, 1163, 1164, 1176, 1178, 1179, 1200, 1218, 1229, 1232, 1234, 1237, 1239, 1242, 1294, 1297, 1321, 1324, 1378, 1381, 1382, 1385, 1417, 1476, 1479, 1493, 1496, 1502, 1505, 1508, 1511, 1578, 1582, 1594, 1598, 1612, 1642, 1646, 1650, 1652, 1655, 1662, 1665, 1667, 1670, 1672, 1675, 1684, 1687, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1712, 1714, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1733, 1735, 1738, 1740, 1741, 1744, 1746, 1747, 1749, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1804, 1806, 1809, 1811, 1815, 1816, 1820, 1821, 1824, 1839, 1843, 1844, 1848, 1849, 1853, 1870, 1871, 1874, 1876, 1879, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1899, 1901, 1904, 1906, 1909, 1911, 1914, 1916, 1919, 1921, 1924, 1926, 1929, 1931, 1935, 1936, 1940, 1941, 1945, 1946, 1950, 1975, 1976, 1979, 2007, 2008, 2011, 2013, 2016, 2023, 2026, 2028, 2032, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2054, 2055, 2058, 2065, 2068, 2070, 2085, 2088, 2089, 2092, 2093, 2096, 2097, 2100, 2102, 2105, 2106, 2110, 2111, 2115, 2116, 2117, 2120, 2122, 2125, 2127, 2128, 2138], "attempt": [48, 159, 187], "succe": 48, "properli": [48, 148, 158, 164, 166], "quick": [49, 148, 165, 174], "tendenc": 49, "land": 49, "world": [49, 2142], "come": [49, 150, 153, 164, 167, 168, 174, 185, 2127, 2128, 2140], "fly": [49, 2140], "hard": [49, 172, 2140], "receiv": [49, 154, 155, 166, 1417, 1424, 1543, 2169, 2179], "internship": 49, "bug": [49, 164, 166, 167], "serv": [49, 150, 152, 160, 161, 164, 166, 168, 169, 2127, 2128, 2138], "suspect": 49, "observ": [49, 69, 117, 158, 170, 886, 887, 888, 890, 2142], "act": [49, 156, 187, 2147], "placehold": [49, 150, 159, 160, 1955, 1963, 1968, 1973, 2127], "ii": [49, 94, 95, 142, 143, 2070, 2081, 2082, 2083, 2084], "iii": 49, "three": [49, 69, 152, 153, 156, 164, 166, 168, 169, 170, 255, 300, 303, 834, 835, 837, 1200, 1203, 2128, 2141, 2146], "reformat": [49, 159], "issue_numb": 49, "No": [49, 153, 2140], "anyth": [49, 69, 117, 166, 167, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1353, 1356, 1357, 2140, 2141], "kept": [49, 100, 103, 104, 105, 106, 163, 167, 1951, 1952, 1953], "clean": [49, 167, 168, 170, 171, 173], "soon": [49, 153, 154, 185, 187, 2128], "partial": [49, 69, 103, 104, 117, 953, 967, 1057, 1058, 1059, 1060, 1270, 1271, 1272, 1273, 1353, 1357, 1612, 1628, 2181, 2182], "solut": [49, 152, 154, 165, 166, 168, 1714, 1806, 1809, 2138, 2142], "respond": 49, "shape": [49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 154, 155, 156, 157, 160, 163, 164, 165, 166, 167, 170, 172, 173, 174, 175, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 255, 257, 258, 260, 261, 262, 267, 268, 269, 270, 271, 272, 274, 276, 277, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 300, 303, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 327, 328, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 446, 467, 472, 473, 474, 475, 476, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805, 807, 808, 809, 812, 834, 835, 836, 837, 838, 839, 840, 844, 845, 846, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 881, 884, 886, 887, 896, 897, 900, 901, 902, 903, 913, 915, 917, 920, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 943, 945, 946, 947, 948, 951, 953, 956, 957, 959, 962, 976, 978, 981, 982, 985, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1027, 1028, 1030, 1047, 1048, 1049, 1055, 1056, 1087, 1088, 1097, 1098, 1099, 1100, 1101, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1142, 1144, 1145, 1146, 1147, 1148, 1149, 1152, 1155, 1156, 1157, 1158, 1159, 1161, 1164, 1171, 1172, 1174, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1203, 1204, 1207, 1215, 1217, 1218, 1219, 1220, 1221, 1224, 1227, 1229, 1230, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1270, 1274, 1283, 1290, 1291, 1292, 1293, 1294, 1297, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1308, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1353, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1378, 1381, 1382, 1385, 1386, 1387, 1388, 1389, 1390, 1411, 1415, 1417, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1469, 1471, 1473, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1493, 1494, 1495, 1496, 1497, 1518, 1520, 1522, 1524, 1528, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1563, 1583, 1588, 1604, 1611, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1624, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1642, 1643, 1644, 1645, 1646, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1730, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1821, 1824, 1829, 1830, 1831, 1832, 1833, 1839, 1843, 1844, 1845, 1847, 1848, 1849, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1919, 1921, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1946, 1947, 1948, 1949, 1950, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2015, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2036, 2040, 2041, 2042, 2045, 2046, 2047, 2054, 2055, 2056, 2057, 2058, 2059, 2065, 2068, 2070, 2071, 2074, 2076, 2079, 2081, 2082, 2084, 2089, 2091, 2097, 2099, 2101, 2102, 2104, 2111, 2112, 2114, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2128, 2134, 2135, 2159, 2160, 2163, 2164, 2167, 2169, 2171, 2172, 2173, 2174, 2175, 2176, 2183, 2184, 2205, 2224, 2226, 2237, 2238, 2241, 2244, 2245, 2246, 2255, 2258, 2261, 2263], "dai": 49, "warn": 49, "without": [49, 103, 104, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 164, 166, 167, 168, 172, 173, 174, 186, 187, 1417, 1498, 1562, 1599, 1870, 1906, 1909, 1955, 1957, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2137, 2140, 2141, 2142, 2146, 2237, 2241, 2245, 2246, 2266, 2267, 2268, 2269], "likewis": [49, 152, 154, 157, 160, 161, 164, 168, 173, 2146], "freed": 49, "flag": [49, 103, 104, 154, 162, 163, 164, 165, 166, 446, 452, 2205, 2225, 2226, 2282, 2283, 2284, 2285, 2286], "remain": [49, 82, 83, 88, 89, 130, 131, 136, 137, 153, 156, 158, 167, 168, 187, 481, 497, 500, 742, 745, 932, 1149, 1156, 1870, 1906, 1907, 1908, 1909, 1910, 1955, 1962, 2007, 2023, 2024, 2025, 2026, 2027], "short": [49, 154, 164, 167, 170, 174, 1650, 1699, 1702], "basi": [49, 149, 173], "situat": [49, 153, 175], "upon": [49, 156, 163, 166, 168, 187, 2139, 2140], "period": [49, 117, 167, 896, 898, 899, 900, 901, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1112, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1149, 1160], "unabl": [49, 168], "obvious": [49, 153], "never": [49, 82, 83, 130, 131, 154, 164, 166, 168, 1870, 1906, 1907, 1908, 1909, 1910], "qualiti": 49, "hypothet": 49, "frustrat": 49, "delai": 49, "busi": 49, "fine": [49, 154, 156, 164, 172, 175, 2146], "inact": 49, "me": 49, "unfairli": 49, "definit": [49, 69, 78, 79, 115, 116, 126, 127, 150, 154, 161, 172, 953, 979, 1375, 1376, 1377, 1714, 1715, 1716, 1717, 1718, 1719], "investig": 49, "maximum": [49, 67, 68, 69, 70, 71, 72, 73, 82, 83, 88, 89, 94, 95, 100, 103, 104, 105, 106, 115, 116, 117, 118, 119, 120, 121, 130, 131, 136, 137, 142, 143, 156, 163, 173, 446, 471, 481, 701, 953, 963, 982, 985, 1032, 1033, 1034, 1035, 1036, 1149, 1157, 1200, 1218, 1294, 1297, 1417, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1469, 1470, 1471, 1472, 1473, 1612, 1629, 1630, 1631, 1632, 1714, 1766, 1769, 1870, 1871, 1872, 1873, 1874, 1875, 1955, 1968, 2007, 2008, 2009, 2010, 2011, 2012, 2070, 2085, 2086, 2087, 2088, 2093, 2096, 2128, 2147, 2237, 2240, 2241, 2245, 2246, 2255, 2256, 2258, 2261, 2266, 2267, 2268, 2269, 2282, 2287, 2288], "incomplet": 49, "per": [49, 69, 76, 77, 117, 124, 125, 153, 164, 173, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 1149, 1150, 1151, 1152, 1162, 1163, 1164, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1652, 1653, 1654, 1656, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1681, 1684, 1685, 1686, 1688, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176], "self": [49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 158, 164, 165, 170, 172, 173, 174, 175, 207, 208, 209, 213, 214, 215, 218, 219, 220, 223, 224, 225, 228, 229, 230, 233, 234, 235, 238, 240, 243, 244, 245, 260, 261, 267, 268, 271, 272, 273, 279, 280, 281, 285, 286, 287, 289, 290, 291, 292, 295, 296, 297, 300, 301, 302, 305, 306, 307, 310, 311, 312, 318, 319, 320, 322, 323, 325, 326, 328, 330, 331, 336, 337, 338, 339, 349, 350, 351, 354, 355, 356, 359, 360, 361, 364, 365, 366, 380, 381, 385, 386, 387, 389, 396, 397, 398, 403, 404, 405, 408, 409, 412, 413, 414, 417, 418, 419, 422, 423, 424, 429, 430, 431, 433, 446, 447, 453, 454, 455, 472, 474, 475, 482, 483, 484, 487, 488, 489, 492, 493, 494, 497, 498, 499, 502, 503, 504, 507, 508, 509, 512, 513, 514, 517, 518, 519, 522, 523, 524, 527, 528, 529, 532, 533, 534, 537, 538, 539, 542, 543, 544, 547, 548, 549, 552, 553, 554, 557, 558, 559, 562, 563, 564, 567, 568, 569, 572, 573, 574, 577, 578, 579, 582, 583, 584, 587, 588, 589, 592, 593, 594, 597, 598, 599, 602, 603, 604, 607, 608, 609, 612, 613, 614, 617, 618, 619, 622, 623, 624, 627, 628, 629, 632, 633, 634, 637, 638, 639, 642, 643, 644, 647, 648, 649, 652, 653, 654, 657, 658, 659, 662, 663, 664, 667, 668, 669, 672, 673, 674, 677, 678, 679, 682, 683, 684, 687, 688, 689, 692, 693, 694, 697, 698, 699, 702, 703, 704, 707, 708, 709, 712, 713, 714, 717, 718, 719, 722, 723, 724, 727, 728, 729, 732, 733, 734, 737, 738, 739, 742, 743, 744, 747, 748, 749, 752, 753, 754, 757, 758, 759, 762, 763, 764, 767, 768, 769, 772, 773, 774, 777, 779, 780, 782, 784, 785, 787, 789, 790, 792, 794, 795, 797, 799, 800, 809, 810, 811, 814, 815, 816, 819, 820, 821, 824, 825, 826, 829, 830, 831, 834, 835, 836, 839, 840, 841, 844, 845, 846, 849, 850, 851, 854, 855, 856, 859, 860, 861, 864, 865, 866, 868, 869, 870, 874, 875, 881, 882, 883, 886, 887, 888, 891, 892, 893, 907, 908, 909, 913, 914, 917, 918, 919, 922, 923, 924, 927, 928, 929, 933, 934, 935, 938, 939, 940, 943, 944, 945, 948, 949, 950, 982, 983, 984, 987, 988, 989, 992, 993, 994, 997, 998, 999, 1001, 1002, 1003, 1004, 1007, 1008, 1009, 1012, 1013, 1014, 1017, 1018, 1019, 1022, 1023, 1024, 1027, 1028, 1029, 1032, 1033, 1034, 1037, 1038, 1039, 1042, 1043, 1044, 1047, 1048, 1050, 1051, 1052, 1057, 1058, 1059, 1064, 1065, 1068, 1069, 1072, 1073, 1074, 1077, 1078, 1079, 1082, 1083, 1084, 1087, 1088, 1089, 1092, 1093, 1094, 1097, 1098, 1099, 1102, 1103, 1104, 1107, 1108, 1109, 1111, 1113, 1114, 1115, 1121, 1122, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1136, 1139, 1140, 1141, 1144, 1145, 1146, 1166, 1167, 1168, 1171, 1172, 1173, 1183, 1184, 1185, 1188, 1189, 1190, 1195, 1196, 1197, 1224, 1225, 1226, 1229, 1230, 1231, 1234, 1235, 1236, 1239, 1240, 1241, 1244, 1245, 1246, 1250, 1251, 1252, 1255, 1256, 1257, 1260, 1261, 1262, 1265, 1266, 1267, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1285, 1286, 1287, 1294, 1295, 1296, 1300, 1301, 1302, 1305, 1306, 1307, 1310, 1311, 1312, 1321, 1322, 1323, 1326, 1327, 1328, 1333, 1334, 1335, 1338, 1339, 1340, 1353, 1357, 1360, 1362, 1363, 1365, 1367, 1368, 1370, 1372, 1373, 1375, 1376, 1378, 1380, 1382, 1384, 1386, 1388, 1389, 1392, 1394, 1396, 1398, 1399, 1401, 1403, 1404, 1406, 1408, 1409, 1411, 1413, 1414, 1418, 1419, 1420, 1425, 1426, 1427, 1430, 1431, 1432, 1436, 1437, 1438, 1441, 1442, 1443, 1448, 1449, 1451, 1452, 1453, 1456, 1457, 1458, 1461, 1462, 1463, 1466, 1467, 1469, 1470, 1471, 1476, 1477, 1478, 1480, 1481, 1482, 1483, 1493, 1494, 1495, 1502, 1503, 1504, 1506, 1508, 1509, 1510, 1513, 1514, 1515, 1518, 1519, 1520, 1524, 1525, 1526, 1529, 1530, 1531, 1534, 1535, 1537, 1538, 1539, 1547, 1548, 1549, 1552, 1553, 1554, 1568, 1569, 1570, 1573, 1574, 1575, 1578, 1580, 1581, 1584, 1586, 1589, 1590, 1591, 1592, 1594, 1596, 1597, 1606, 1608, 1609, 1614, 1615, 1616, 1618, 1619, 1620, 1624, 1625, 1626, 1629, 1630, 1631, 1633, 1634, 1635, 1637, 1638, 1639, 1642, 1644, 1645, 1652, 1653, 1654, 1657, 1658, 1659, 1662, 1663, 1664, 1667, 1668, 1669, 1672, 1673, 1674, 1677, 1678, 1679, 1684, 1685, 1686, 1689, 1690, 1691, 1694, 1695, 1696, 1699, 1700, 1701, 1704, 1705, 1706, 1709, 1710, 1711, 1715, 1716, 1717, 1719, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1730, 1731, 1732, 1735, 1736, 1737, 1741, 1742, 1743, 1746, 1747, 1748, 1751, 1752, 1753, 1756, 1757, 1758, 1761, 1762, 1763, 1766, 1767, 1768, 1771, 1772, 1773, 1776, 1777, 1778, 1781, 1782, 1783, 1786, 1787, 1788, 1791, 1792, 1793, 1796, 1797, 1798, 1801, 1802, 1803, 1806, 1807, 1808, 1811, 1813, 1814, 1816, 1818, 1819, 1821, 1823, 1825, 1826, 1827, 1829, 1831, 1832, 1834, 1836, 1837, 1839, 1841, 1842, 1844, 1846, 1847, 1849, 1851, 1852, 1855, 1856, 1857, 1860, 1861, 1862, 1865, 1866, 1867, 1871, 1872, 1873, 1876, 1877, 1878, 1881, 1882, 1883, 1886, 1887, 1888, 1891, 1892, 1893, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1906, 1907, 1908, 1911, 1912, 1913, 1916, 1917, 1918, 1921, 1922, 1923, 1926, 1927, 1928, 1931, 1933, 1934, 1936, 1938, 1939, 1941, 1943, 1944, 1946, 1948, 1949, 1976, 1977, 1978, 1981, 1982, 1983, 1986, 1987, 1988, 1991, 1992, 1993, 1996, 1997, 1998, 2002, 2003, 2004, 2008, 2009, 2010, 2013, 2014, 2015, 2018, 2019, 2020, 2022, 2023, 2024, 2025, 2028, 2030, 2031, 2034, 2036, 2037, 2039, 2041, 2042, 2044, 2046, 2047, 2049, 2051, 2052, 2055, 2056, 2057, 2060, 2061, 2062, 2065, 2066, 2067, 2071, 2072, 2073, 2076, 2077, 2078, 2081, 2082, 2083, 2085, 2086, 2087, 2089, 2090, 2091, 2093, 2094, 2095, 2097, 2098, 2099, 2101, 2102, 2103, 2104, 2106, 2108, 2109, 2111, 2112, 2113, 2114, 2117, 2118, 2119, 2121, 2122, 2123, 2124, 2126, 2128, 2134, 2135, 2152, 2153, 2185, 2189], "assign": [49, 151, 154, 159, 163, 172], "sequenc": [49, 61, 62, 69, 76, 77, 82, 83, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 153, 154, 155, 156, 158, 166, 167, 170, 175, 186, 207, 209, 211, 213, 215, 217, 218, 220, 222, 223, 225, 227, 228, 230, 232, 233, 235, 237, 238, 240, 242, 243, 245, 247, 255, 276, 277, 285, 287, 289, 295, 296, 298, 310, 312, 314, 318, 320, 322, 336, 337, 339, 354, 356, 358, 364, 366, 368, 396, 398, 400, 408, 409, 411, 412, 414, 416, 429, 431, 433, 472, 473, 475, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 669, 671, 672, 674, 676, 677, 679, 681, 682, 684, 686, 687, 689, 691, 692, 694, 696, 697, 699, 701, 702, 704, 706, 707, 709, 711, 712, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 778, 780, 782, 783, 785, 787, 788, 790, 792, 793, 795, 797, 798, 800, 814, 816, 818, 824, 826, 828, 829, 831, 832, 833, 834, 836, 837, 838, 854, 858, 859, 861, 863, 864, 866, 868, 891, 893, 895, 922, 926, 927, 928, 929, 930, 931, 933, 937, 938, 941, 953, 979, 997, 999, 1001, 1002, 1003, 1004, 1005, 1006, 1017, 1021, 1077, 1081, 1082, 1085, 1087, 1089, 1091, 1097, 1098, 1099, 1100, 1101, 1113, 1114, 1115, 1116, 1117, 1121, 1123, 1125, 1144, 1146, 1148, 1149, 1158, 1159, 1161, 1195, 1197, 1199, 1200, 1202, 1203, 1206, 1213, 1215, 1223, 1250, 1251, 1252, 1253, 1254, 1285, 1287, 1289, 1310, 1311, 1312, 1313, 1314, 1315, 1318, 1321, 1323, 1325, 1326, 1328, 1330, 1338, 1340, 1342, 1353, 1358, 1360, 1361, 1363, 1365, 1366, 1368, 1370, 1371, 1373, 1375, 1377, 1396, 1397, 1401, 1405, 1406, 1407, 1409, 1411, 1412, 1414, 1417, 1418, 1420, 1422, 1425, 1427, 1429, 1430, 1432, 1434, 1436, 1438, 1440, 1441, 1443, 1445, 1451, 1453, 1455, 1456, 1458, 1460, 1461, 1463, 1465, 1469, 1471, 1473, 1476, 1478, 1480, 1481, 1483, 1485, 1493, 1495, 1497, 1508, 1510, 1512, 1513, 1515, 1517, 1518, 1520, 1522, 1524, 1526, 1528, 1529, 1531, 1533, 1537, 1539, 1541, 1543, 1547, 1549, 1551, 1552, 1554, 1556, 1568, 1570, 1572, 1573, 1575, 1577, 1578, 1579, 1581, 1584, 1585, 1589, 1590, 1592, 1594, 1595, 1597, 1606, 1607, 1609, 1611, 1624, 1626, 1642, 1643, 1645, 1650, 1651, 1652, 1654, 1655, 1656, 1657, 1660, 1662, 1664, 1665, 1666, 1667, 1669, 1670, 1671, 1672, 1675, 1677, 1680, 1682, 1683, 1684, 1687, 1689, 1690, 1691, 1692, 1693, 1694, 1696, 1698, 1709, 1711, 1713, 1714, 1715, 1717, 1719, 1720, 1722, 1724, 1746, 1748, 1750, 1756, 1758, 1760, 1761, 1763, 1765, 1766, 1768, 1770, 1776, 1778, 1780, 1796, 1798, 1800, 1801, 1803, 1805, 1829, 1830, 1832, 1844, 1845, 1847, 1848, 1855, 1857, 1859, 1860, 1862, 1864, 1865, 1867, 1869, 1870, 1871, 1873, 1875, 1876, 1879, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1901, 1902, 1903, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1941, 1942, 1944, 1946, 1947, 1949, 1955, 1963, 1973, 1981, 1983, 1985, 1986, 1988, 1990, 1991, 1993, 1995, 1996, 1998, 2000, 2002, 2004, 2006, 2018, 2020, 2022, 2034, 2035, 2037, 2039, 2040, 2042, 2044, 2045, 2047, 2055, 2057, 2059, 2070, 2071, 2073, 2075, 2076, 2078, 2080, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2143, 2169, 2178, 2183, 2184, 2191, 2192], "regist": [49, 2152, 2155], "wherea": [49, 150, 152, 154, 155, 156, 160, 161, 166, 167, 175, 2137], "primarili": [49, 152, 481, 742, 745, 2140], "invit": 49, "roadmap": [49, 153, 2128], "mainli": [49, 148, 166, 171, 173, 2127, 2140], "extend": [49, 151, 157, 160, 164, 167, 187, 1200, 1218, 1294, 1297, 2137, 2140, 2146], "ideal": [49, 153, 163, 173], "Such": [49, 166, 1714, 1834, 1838], "easier": [49, 149, 150, 154, 164, 165, 167, 2127, 2140, 2142], "interv": [49, 86, 87, 96, 97, 134, 135, 144, 145, 255, 257, 258, 290, 293, 295, 298, 1714, 1839, 1843, 1870, 1871, 1874, 1886, 1889, 1926, 1929, 1980, 1986, 1987, 1988, 1989, 1990, 1996, 1997, 1998, 1999, 2000, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126], "forth": 49, "rare": [49, 155, 187, 2145], "scenario": [49, 158], "someon": [49, 158, 187], "someth": [49, 167, 173, 174, 187, 2146], "unfortun": 49, "redund": [49, 154, 158, 164, 168], "behind": [49, 72, 73, 148, 160, 166, 169, 171, 1624, 1625], "well": [49, 118, 119, 153, 154, 158, 163, 164, 165, 166, 174, 175, 186, 1417, 1502, 1504, 1505, 1506, 1714, 1806, 1809, 2139, 2140, 2141, 2145, 2255, 2262], "practic": [49, 153, 164, 2143], "separ": [49, 150, 152, 153, 166, 170, 172, 173, 2141, 2145], "branch": [49, 149, 153, 187, 481, 517, 520, 2140], "role": [49, 164, 171, 2141, 2143, 2147], "date": [49, 167], "complic": [49, 165, 170], "merge_with_upstream": 49, "name_of_your_branch": 49, "resolv": [49, 154, 170, 1870, 1886, 1889, 2070, 2071, 2074, 2076, 2079, 2097, 2100, 2106, 2110], "abort": 49, "tediou": [49, 156], "resolut": [49, 63, 64, 111, 112, 341, 385, 386, 387, 388, 389], "stash": 49, "reinstat": 49, "fetch": [49, 149, 153], "uncommit": 49, "unstag": 49, "untrack": 49, "comprehens": [49, 149], "atlassian": 49, "tutori": [49, 164], "wrote": 49, "piec": [49, 150, 161, 162, 170, 2136, 2138], "blame": 49, "revis": 49, "log": [49, 61, 62, 67, 68, 69, 78, 79, 109, 110, 115, 116, 117, 126, 127, 152, 153, 156, 161, 163, 164, 166, 168, 170, 173, 255, 295, 296, 297, 298, 299, 481, 656, 662, 665, 672, 675, 805, 806, 854, 855, 856, 857, 858, 953, 980, 1188, 1191, 1315, 1316, 1406, 1410, 1801, 1802, 1803, 1805, 2128, 2237, 2241, 2245, 2246, 2266, 2267, 2268, 2269], "eg": 49, "16": [49, 51, 54, 55, 67, 68, 69, 70, 71, 76, 77, 78, 79, 86, 87, 94, 95, 100, 105, 106, 111, 112, 115, 116, 117, 118, 119, 124, 125, 126, 127, 130, 131, 134, 135, 156, 173, 341, 396, 398, 399, 481, 547, 548, 549, 550, 551, 662, 665, 747, 748, 782, 783, 785, 786, 839, 840, 841, 842, 843, 844, 845, 907, 908, 909, 910, 911, 943, 946, 953, 962, 967, 1002, 1003, 1004, 1005, 1006, 1012, 1013, 1014, 1015, 1016, 1027, 1028, 1030, 1057, 1058, 1059, 1060, 1097, 1100, 1149, 1150, 1154, 1158, 1159, 1162, 1163, 1176, 1179, 1200, 1208, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1237, 1417, 1456, 1458, 1469, 1470, 1471, 1472, 1473, 1568, 1570, 1612, 1648, 1650, 1684, 1687, 1694, 1695, 1696, 1697, 1698, 1714, 1715, 1716, 1718, 1735, 1738, 1746, 1749, 1750, 1786, 1789, 1816, 1820, 1870, 1941, 1942, 1944, 1945, 1955, 1964, 1980, 1986, 1987, 1989, 1990, 1991, 1993, 1996, 1998, 2000, 2007, 2028, 2032, 2070, 2076, 2077, 2079, 2081, 2084, 2237, 2241, 2245, 2246, 2266, 2267, 2268, 2269], "past": [49, 149, 165, 166, 2140], "l": [49, 78, 79, 115, 116, 126, 127, 148, 677, 679, 681, 1714, 1715, 1716, 1717, 1718, 1719, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1761, 1764, 1829, 1830, 1831, 1832, 1833], "filepath": [49, 103, 104, 149], "grep": 49, "commit_id": 49, "handi": 49, "histori": 49, "toggl": 49, "vertic": [49, 69, 117, 1200, 1222, 1223, 1396, 1397, 1398, 1399, 1400, 1401, 1405, 1417, 1451, 1454], "highlight": [49, 153, 156, 164], "previou": [49, 72, 73, 120, 121, 149, 153, 160, 164, 166, 168, 175, 187, 341, 440, 441, 442, 443, 444, 873, 1062, 1063, 1417, 1600, 1602, 1603, 1604, 1612, 1618, 1619, 1620, 1621, 1629, 1630, 1631, 1632, 2143, 2159, 2160, 2163, 2164, 2167], "whenev": [49, 153, 154, 158, 162, 163, 166, 173], "think": [49, 153, 156, 2141], "gain": [49, 149, 169, 174, 2140, 2159, 2167], "quit": [49, 150, 156, 157, 161, 162, 166, 168, 2140, 2146], "newli": [49, 63, 64, 111, 112, 153, 163, 166, 341, 349, 350, 351, 352, 353, 1417, 1435], "cannot": [49, 69, 149, 151, 154, 164, 170, 175, 824, 825, 829, 830, 834, 835, 2146], "least": [49, 69, 78, 79, 117, 150, 153, 154, 156, 161, 166, 824, 827, 829, 832, 834, 837, 953, 971, 1002, 1005, 1017, 1018, 1019, 1020, 1021, 1097, 1100, 1149, 1158, 1159, 1166, 1167, 1168, 1169, 1170, 1200, 1201, 1202, 1203, 1209, 1714, 1761, 1762, 1764, 2237, 2248], "approv": 49, "hash": [49, 173], "cancel": 49, "speedup": 49, "unavail": 49, "tickbox": 49, "lower": [49, 61, 62, 67, 68, 69, 78, 79, 86, 87, 115, 116, 117, 126, 127, 134, 135, 156, 164, 166, 168, 170, 187, 255, 276, 277, 323, 325, 327, 481, 697, 698, 699, 700, 701, 896, 897, 902, 997, 998, 999, 1000, 1310, 1311, 1312, 1313, 1314, 1353, 1358, 1378, 1381, 1714, 1715, 1716, 1717, 1718, 1719, 1746, 1749, 1980, 1996, 1997, 1998, 1999, 2000, 2127, 2136, 2137, 2138, 2140, 2141, 2146, 2147, 2157, 2158, 2159, 2164, 2255, 2262], "span": [49, 168, 2138, 2146], "intent": [49, 163], "discourag": 49, "philosophi": 49, "increment": [49, 70, 71, 118, 119, 167, 1417, 1513, 1514, 1515, 1516, 1517, 2140], "valuabl": 49, "infrequ": 49, "earli": [49, 2128, 2140], "wast": [49, 153], "spot": [49, 156, 161], "mistak": [49, 159], "propos": [49, 164, 168, 2140], "mountain": 49, "around": [49, 100, 103, 104, 105, 106, 150, 160, 161, 164, 167, 172, 187, 1200, 1218, 1294, 1297, 2127, 2138, 2140, 2147], "advoc": [49, 187], "style": [49, 1200, 1218, 1294, 1297, 2007, 2023, 2026, 2140], "were": [49, 103, 104, 111, 112, 154, 158, 159, 166, 167, 168, 170, 396, 398, 400, 408, 409, 411, 412, 414, 416, 2140, 2141, 2146], "actual": [49, 148, 153, 161, 163, 164, 165, 166, 168, 169, 174, 187, 2141, 2146], "aim": [49, 149, 164, 166, 169, 2138, 2140, 2143], "session": [49, 2140], "block": [49, 150, 152, 158, 159, 161, 166, 169, 171, 175, 187, 446, 447, 1139, 1142, 1176, 1181, 1612, 1641, 1649, 2127, 2128, 2145, 2147], "smaller": [49, 69, 82, 83, 130, 131, 170, 805, 807, 814, 817, 953, 954, 970, 1121, 1124, 1305, 1306, 1308, 1417, 1451, 1454, 1870, 1871, 1874, 1911, 1912, 1913, 1914, 1915, 2070, 2071, 2074, 2076, 2079, 2097, 2100, 2106, 2110], "beauti": 49, "particularli": [49, 173, 187, 2138], "concern": [49, 148, 152, 156, 163, 168, 169, 2146], "difficult": [49, 149, 154, 166, 187, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053], "undo": 49, "stress": 49, "frequenc": [49, 70, 71, 118, 119, 1417, 1469, 1470, 1471, 1472, 1473], "advantag": [49, 163, 164, 2140], "nifti": 49, "reassur": 49, "isol": [49, 2141, 2146], "fact": [49, 149, 153, 164, 166, 170, 173], "local_path_to_ivi": 49, "overwrit": [49, 103, 104, 163, 164, 170, 446, 471], "subfold": [49, 165, 166, 167], "wide": [49, 166, 2138, 2140], "via": [49, 149, 152, 154, 155, 158, 163, 167, 168, 170, 172, 173, 186, 1955, 1966, 1967, 2140], "dep": 49, "fresh": 49, "arsen": 49, "declar": 49, "exec": 49, "rf": 49, "cp": 49, "ivy_contain": 49, "test_imag": 49, "test_random_crop": 49, "test_creation_funct": 49, "test_arang": 49, "variou": [49, 149, 154, 157, 158, 160, 162, 164, 165, 166, 186, 2127, 2136, 2138, 2139, 2140, 2143, 2146], "cpu": [49, 61, 62, 65, 66, 69, 86, 87, 109, 110, 113, 114, 117, 118, 119, 134, 135, 155, 164, 166, 187, 255, 276, 277, 284, 290, 293, 295, 296, 297, 298, 299, 310, 311, 313, 315, 316, 318, 321, 336, 340, 446, 447, 450, 452, 453, 454, 455, 456, 457, 458, 459, 463, 466, 468, 469, 472, 473, 474, 475, 476, 477, 479, 480, 854, 855, 856, 857, 859, 862, 1047, 1049, 1300, 1301, 1302, 1303, 1304, 1315, 1316, 1317, 1319, 1320, 1481, 1483, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2138, 2140, 2143, 2145, 2159, 2160, 2163, 2164, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2189, 2191, 2192, 2205, 2223, 2225, 2226], "gpu": [49, 155, 172, 255, 290, 293, 446, 447, 452, 458, 459, 462, 464, 466, 468, 469, 470, 477, 479, 480, 2138, 2140, 2143, 2144, 2145], "combin": [49, 100, 103, 104, 105, 106, 150, 152, 154, 156, 158, 161, 166, 168, 175, 1417, 1474, 1475, 1714, 1720, 1723, 1761, 1764, 2140], "num": [49, 61, 62, 109, 110, 160, 170, 255, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 2237, 2242], "integ": [49, 51, 54, 55, 63, 64, 67, 68, 69, 82, 83, 86, 87, 94, 95, 96, 97, 100, 103, 104, 105, 106, 115, 116, 117, 126, 127, 130, 131, 134, 135, 142, 143, 144, 145, 152, 154, 162, 165, 166, 170, 172, 255, 257, 258, 284, 341, 396, 397, 399, 401, 417, 420, 428, 429, 432, 437, 481, 482, 485, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 560, 602, 605, 607, 610, 692, 695, 727, 730, 742, 745, 747, 750, 792, 796, 797, 801, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 891, 892, 893, 894, 895, 927, 928, 929, 930, 931, 933, 934, 935, 936, 937, 953, 958, 961, 962, 971, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1027, 1030, 1047, 1048, 1049, 1077, 1078, 1079, 1080, 1081, 1097, 1098, 1099, 1100, 1101, 1149, 1158, 1159, 1166, 1169, 1171, 1172, 1174, 1200, 1205, 1212, 1218, 1222, 1270, 1271, 1272, 1273, 1294, 1297, 1300, 1301, 1302, 1303, 1304, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1343, 1344, 1353, 1357, 1358, 1396, 1397, 1398, 1399, 1400, 1417, 1489, 1611, 1650, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1683, 1684, 1687, 1714, 1730, 1733, 1771, 1774, 1839, 1843, 1844, 1845, 1847, 1848, 1870, 1916, 1917, 1918, 1919, 1920, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2054, 2060, 2063, 2070, 2071, 2074, 2076, 2079, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2237, 2240, 2241, 2245, 2246, 2251, 2254, 2255, 2259, 2260, 2261, 2263, 2266, 2268, 2269, 2282, 2287, 2288], "greater": [49, 51, 54, 55, 67, 68, 69, 86, 87, 100, 105, 106, 115, 116, 117, 134, 135, 165, 481, 487, 490, 502, 505, 517, 520, 537, 540, 547, 550, 602, 605, 607, 610, 616, 727, 730, 742, 745, 752, 755, 792, 796, 809, 813, 864, 865, 866, 867, 868, 913, 915, 953, 956, 979, 1002, 1003, 1004, 1005, 1006, 1097, 1098, 1099, 1100, 1101, 1149, 1155, 1158, 1159, 1375, 1376, 1377, 1714, 1720, 1723, 1771, 1774, 1870, 1921, 1924, 1980, 1996, 1997, 1998, 1999, 2000, 2255, 2262], "prompt": [49, 2128, 2157, 2158], "whole": [49, 69, 1144, 1145, 1147, 1195, 1196, 1198, 1290, 1292, 1293], "multipli": [49, 67, 68, 76, 77, 94, 95, 115, 116, 124, 125, 150, 151, 152, 156, 481, 497, 498, 499, 500, 501, 711, 777, 778, 779, 780, 781, 1650, 1689, 1690, 1691, 1692, 1693, 2070, 2071, 2072, 2074], "cursor": 49, "alt": 49, "j": [49, 61, 62, 69, 78, 79, 94, 95, 109, 110, 115, 116, 117, 126, 127, 148, 255, 310, 311, 312, 313, 314, 677, 679, 681, 809, 810, 811, 812, 813, 819, 820, 822, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 955, 969, 1002, 1004, 1006, 1097, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1176, 1177, 1179, 1180, 1310, 1311, 1312, 1313, 1314, 1353, 1358, 1417, 1425, 1428, 1714, 1829, 1830, 1831, 1832, 1833, 2070, 2081, 2082, 2084, 2136], "blog": 49, "breakpoint": 49, "gutter": 49, "caret": 49, "f8": 49, "f9": 49, "Into": 49, "f7": 49, "smart": 49, "interest": 49, "consol": [49, 166, 172, 1417, 1546], "store": [49, 63, 64, 70, 71, 78, 79, 82, 83, 103, 104, 111, 112, 118, 119, 126, 127, 130, 131, 150, 151, 152, 157, 164, 170, 172, 173, 174, 255, 276, 277, 318, 321, 336, 340, 359, 360, 361, 363, 1417, 1469, 1470, 1471, 1472, 1473, 1714, 1829, 1830, 1831, 1832, 1833, 1870, 1916, 1917, 1918, 1919, 1920, 2127, 2181, 2182, 2205, 2225, 2228], "variabl": [49, 51, 54, 55, 69, 70, 71, 72, 73, 84, 85, 103, 104, 117, 118, 119, 120, 121, 132, 133, 151, 154, 157, 159, 160, 163, 166, 167, 170, 173, 174, 175, 187, 886, 887, 888, 890, 927, 930, 1315, 1318, 1417, 1430, 1433, 1518, 1519, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1537, 1538, 1539, 1540, 1541, 1578, 1581, 1582, 1612, 1618, 1619, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1650, 1704, 1707, 1714, 1806, 1809, 1951, 1952, 1953, 1954, 1975, 1976, 1977, 1978, 1979, 2141, 2152, 2153, 2156, 2157, 2158, 2159, 2160, 2163, 2164, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2205, 2210, 2224, 2226, 2227, 2282, 2284, 2286], "fragment": [49, 2136, 2138, 2142], "except": [49, 69, 70, 71, 82, 83, 86, 87, 96, 97, 103, 104, 117, 118, 119, 126, 127, 134, 135, 144, 145, 148, 149, 150, 153, 154, 157, 159, 160, 163, 164, 168, 172, 187, 341, 359, 362, 859, 862, 922, 923, 924, 925, 926, 953, 959, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1315, 1317, 1353, 1356, 1357, 1417, 1430, 1431, 1433, 1434, 1448, 1449, 1450, 1518, 1519, 1521, 1558, 1578, 1579, 1582, 1599, 1714, 1791, 1793, 1794, 1795, 1870, 1876, 1877, 1879, 1886, 1889, 1926, 1929, 1980, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2007, 2023, 2026, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2181, 2182, 2194, 2200, 2228], "pychram": 49, "depth": [49, 61, 62, 69, 76, 77, 109, 110, 117, 124, 125, 153, 173, 174, 175, 186, 255, 310, 311, 312, 313, 314, 938, 941, 1113, 1114, 1115, 1116, 1117, 1149, 1161, 1200, 1206, 1417, 1451, 1454, 1499, 1650, 1672, 1675, 1677, 1678, 1679, 1680, 1681, 1955, 1968, 2157, 2158, 2181, 2182], "dummi": 49, "wherein": [49, 162, 166], "evalu": [49, 67, 68, 103, 104, 115, 116, 117, 152, 154, 168, 481, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 652, 653, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 682, 684, 686, 712, 713, 714, 716, 722, 723, 724, 726, 752, 753, 754, 755, 756, 772, 775, 1092, 1094, 1095, 1096, 1200, 1214, 1612, 1648, 1955, 1966, 1967, 2116, 2117, 2120, 2122, 2125, 2140], "failur": [49, 153, 165, 166], "dynamic_backend": [51, 54, 55, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 2181, 2182], "arraywithactiv": [51, 52, 54, 55, 172], "arraywithcr": [51, 54, 55, 61, 172], "arraywithdatatyp": [51, 54, 55, 63, 172], "arraywithdevic": [51, 54, 55, 65, 172], "arraywithgener": [51, 54, 55, 70, 172], "arraywithgradi": [51, 54, 55, 72, 172], "arraywithimag": [51, 54, 55, 74, 172], "arraywithlay": [51, 54, 55, 76, 172], "arraywithlinearalgebra": [51, 54, 55, 78, 172], "arraywithloss": [51, 54, 55, 80, 172], "arraywithmanipul": [51, 54, 55, 82, 172], "arraywithnorm": [51, 54, 55, 84, 172], "arraywithrandom": [51, 54, 55, 86, 172], "arraywithsearch": [51, 54, 55, 88, 172], "arraywithset": [51, 54, 55, 90, 172], "arraywithsort": [51, 54, 55, 92, 172], "arraywithstatist": [51, 54, 55, 94, 172], "arraywithutil": [51, 54, 55, 96, 172], "arraywithactivationsexperiment": [51, 54, 55, 69], "arraywithconversionsexperiment": [51, 54, 55, 69], "arraywithcreationexperiment": [51, 54, 55, 69], "arraywithdata_typeexperiment": [51, 54, 55, 69], "arraywithdeviceexperiment": [51, 54, 55, 69], "arraywithelementwiseexperiment": [51, 54, 55, 69], "arraywithgeneralexperiment": [51, 54, 55, 69], "arraywithgradientsexperiment": [51, 54, 55, 69], "arraywithimageexperiment": [51, 54, 55, 69], "arraywithlayersexperiment": [51, 54, 55, 69], "arraywithlinearalgebraexperiment": [51, 54, 55, 69], "arraywithlossesexperiment": [51, 54, 55, 69], "arraywithmanipulationexperiment": [51, 54, 55, 69], "arraywithnormsexperiment": [51, 54, 55, 69], "arraywithrandomexperiment": [51, 54, 55, 69], "arraywithsearchingexperiment": [51, 54, 55, 69], "arraywithsetexperiment": [51, 54, 55, 69], "arraywithsortingexperiment": [51, 54, 55, 69], "arraywithstatisticalexperiment": [51, 54, 55, 69], "arraywithutilityexperiment": [51, 54, 55, 69], "properti": [51, 54, 55, 103, 104, 149, 152, 156, 161, 165, 166, 172, 173, 174, 804, 1346, 1348, 2134, 2135, 2146, 2181, 2182, 2185, 2186, 2187, 2188, 2190], "transpos": [51, 54, 55, 69, 76, 77, 78, 79, 103, 104, 117, 124, 125, 126, 127, 163, 172, 175, 809, 812, 813, 886, 887, 888, 890, 1176, 1177, 1650, 1651, 1657, 1660, 1667, 1668, 1670, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1714, 1761, 1762, 1764, 1781, 1782, 1783, 1784, 1785, 1791, 1793, 1794, 1795, 2128, 2169, 2171, 2173, 2175, 2255, 2265], "dimension": [51, 54, 55, 61, 62, 69, 78, 79, 82, 83, 88, 89, 94, 95, 96, 97, 103, 104, 115, 116, 117, 126, 127, 130, 131, 142, 143, 144, 145, 170, 255, 257, 258, 276, 277, 300, 301, 303, 824, 827, 829, 832, 834, 837, 896, 902, 903, 917, 920, 953, 979, 1002, 1003, 1004, 1005, 1006, 1012, 1015, 1097, 1098, 1099, 1100, 1101, 1149, 1158, 1159, 1176, 1178, 1200, 1201, 1202, 1203, 1208, 1310, 1311, 1312, 1313, 1314, 1353, 1358, 1375, 1376, 1377, 1378, 1381, 1382, 1385, 1714, 1720, 1723, 1725, 1728, 1751, 1754, 1761, 1764, 1776, 1777, 1778, 1779, 1780, 1786, 1789, 1791, 1794, 1839, 1843, 1844, 1845, 1847, 1848, 1870, 1916, 1917, 1918, 1919, 1920, 2007, 2008, 2009, 2011, 2013, 2014, 2016, 2023, 2026, 2070, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2137, 2140, 2147], "whose": [51, 54, 55, 61, 62, 67, 68, 69, 70, 71, 78, 79, 82, 83, 90, 91, 94, 95, 109, 110, 115, 116, 117, 118, 119, 126, 127, 130, 131, 138, 139, 142, 143, 157, 166, 255, 285, 287, 289, 323, 325, 327, 328, 330, 332, 481, 492, 493, 494, 495, 496, 507, 508, 509, 510, 511, 522, 523, 524, 525, 526, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 575, 727, 728, 730, 732, 735, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 1200, 1215, 1250, 1251, 1252, 1253, 1254, 1338, 1339, 1340, 1342, 1417, 1435, 1578, 1580, 1581, 1582, 1714, 1715, 1716, 1717, 1718, 1719, 1725, 1728, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1754, 1756, 1757, 1758, 1759, 1760, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1829, 1830, 1831, 1832, 1833, 1870, 1891, 1892, 1893, 1894, 1895, 1911, 1912, 1913, 1914, 1915, 2033, 2034, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2070, 2076, 2078, 2080, 2081, 2082, 2084, 2255, 2262], "dimens": [51, 54, 55, 61, 62, 69, 70, 71, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 103, 104, 105, 106, 109, 110, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 156, 158, 164, 165, 166, 168, 170, 173, 205, 218, 221, 238, 241, 255, 310, 311, 312, 313, 314, 323, 325, 327, 328, 330, 332, 809, 812, 813, 824, 827, 829, 832, 834, 835, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 891, 892, 893, 894, 895, 913, 915, 922, 923, 924, 925, 926, 927, 930, 953, 958, 959, 967, 974, 1002, 1003, 1004, 1005, 1006, 1012, 1013, 1015, 1057, 1058, 1059, 1060, 1097, 1098, 1099, 1100, 1101, 1107, 1108, 1110, 1149, 1150, 1151, 1152, 1155, 1158, 1159, 1162, 1163, 1164, 1171, 1174, 1176, 1177, 1200, 1201, 1202, 1203, 1208, 1219, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1290, 1291, 1310, 1311, 1312, 1313, 1314, 1315, 1318, 1326, 1327, 1328, 1329, 1330, 1343, 1344, 1353, 1355, 1356, 1357, 1358, 1417, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1469, 1470, 1471, 1472, 1473, 1481, 1485, 1493, 1494, 1495, 1496, 1497, 1611, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1692, 1699, 1702, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1829, 1830, 1831, 1832, 1833, 1839, 1843, 1844, 1845, 1847, 1848, 1854, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1876, 1877, 1879, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1924, 1926, 1929, 1941, 1942, 1943, 1944, 1945, 1951, 1952, 1953, 1954, 1980, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2023, 2024, 2025, 2026, 2027, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2053, 2070, 2081, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2134, 2135, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179, 2180, 2237, 2240, 2246], "ax": [51, 52, 53, 54, 55, 69, 78, 79, 82, 83, 88, 89, 94, 95, 96, 97, 101, 102, 117, 126, 127, 130, 131, 136, 137, 142, 143, 144, 145, 154, 156, 166, 167, 170, 172, 218, 219, 220, 222, 238, 239, 240, 242, 446, 471, 891, 892, 893, 894, 895, 922, 923, 924, 925, 926, 953, 958, 959, 974, 1200, 1215, 1218, 1219, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1294, 1297, 1310, 1311, 1312, 1313, 1314, 1326, 1327, 1328, 1329, 1330, 1353, 1355, 1356, 1357, 1358, 1417, 1451, 1454, 1611, 1714, 1766, 1767, 1768, 1769, 1770, 1806, 1809, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1844, 1845, 1847, 1848, 1870, 1881, 1882, 1883, 1884, 1885, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1911, 1912, 1913, 1914, 1915, 1921, 1923, 1924, 1925, 1931, 1932, 1933, 1934, 1935, 1946, 1947, 1948, 1949, 1950, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2070, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2134, 2135, 2237, 2246, 2255, 2258], "permut": [51, 54, 55, 82, 83, 130, 131, 1870, 1896, 1897, 1898, 1899, 1900, 1931, 1932, 1933, 1934, 1935], "__abs__": [51, 54, 55, 100, 105, 106], "variant": [51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 156, 157, 168, 207, 208, 209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 247, 260, 261, 267, 268, 271, 272, 279, 280, 285, 286, 287, 289, 295, 296, 297, 299, 300, 301, 305, 306, 310, 311, 312, 314, 318, 319, 320, 322, 323, 325, 328, 330, 336, 337, 338, 339, 354, 355, 356, 358, 359, 360, 361, 363, 364, 365, 366, 368, 385, 386, 387, 389, 396, 397, 398, 400, 408, 409, 411, 412, 413, 414, 416, 429, 430, 431, 433, 453, 454, 455, 457, 472, 473, 474, 475, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 606, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 671, 672, 673, 674, 676, 677, 678, 679, 681, 682, 683, 684, 686, 687, 688, 689, 691, 692, 693, 694, 696, 697, 698, 699, 701, 702, 703, 704, 706, 707, 708, 709, 711, 712, 713, 714, 716, 717, 718, 719, 721, 722, 723, 724, 726, 727, 728, 729, 731, 732, 733, 734, 736, 737, 738, 739, 741, 742, 743, 744, 746, 747, 748, 749, 751, 752, 753, 754, 756, 757, 758, 759, 761, 762, 763, 764, 766, 767, 768, 769, 771, 772, 773, 774, 776, 777, 778, 779, 780, 782, 783, 784, 785, 787, 788, 789, 790, 792, 793, 794, 795, 797, 798, 799, 800, 809, 810, 811, 813, 814, 815, 816, 818, 819, 820, 821, 823, 824, 825, 826, 828, 829, 830, 831, 833, 834, 835, 836, 838, 839, 840, 841, 843, 844, 845, 846, 848, 849, 851, 853, 859, 860, 861, 863, 869, 870, 872, 874, 875, 877, 881, 882, 883, 885, 886, 887, 888, 890, 891, 892, 893, 895, 907, 908, 909, 911, 917, 918, 919, 922, 923, 924, 926, 927, 928, 929, 931, 933, 934, 935, 937, 938, 939, 940, 942, 943, 945, 947, 948, 949, 950, 952, 987, 988, 989, 991, 997, 998, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1050, 1051, 1052, 1054, 1064, 1065, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1106, 1107, 1109, 1111, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1143, 1144, 1146, 1148, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1175, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1192, 1195, 1197, 1199, 1224, 1225, 1226, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1238, 1239, 1241, 1243, 1244, 1245, 1246, 1248, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1262, 1264, 1265, 1266, 1267, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1279, 1285, 1286, 1287, 1289, 1294, 1295, 1296, 1298, 1300, 1302, 1304, 1310, 1311, 1312, 1314, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1330, 1333, 1334, 1335, 1337, 1338, 1339, 1340, 1342, 1353, 1357, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1375, 1376, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1406, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1418, 1419, 1420, 1422, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1434, 1436, 1437, 1438, 1440, 1441, 1442, 1443, 1445, 1448, 1449, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 1461, 1462, 1463, 1466, 1467, 1469, 1470, 1471, 1473, 1476, 1477, 1478, 1480, 1481, 1482, 1483, 1493, 1494, 1495, 1497, 1502, 1503, 1508, 1509, 1510, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1522, 1524, 1525, 1526, 1528, 1529, 1530, 1531, 1533, 1534, 1535, 1537, 1538, 1539, 1541, 1547, 1548, 1549, 1551, 1552, 1554, 1556, 1568, 1569, 1570, 1572, 1573, 1574, 1575, 1577, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1589, 1590, 1591, 1592, 1594, 1595, 1596, 1597, 1606, 1607, 1608, 1609, 1614, 1615, 1616, 1618, 1619, 1624, 1625, 1626, 1629, 1630, 1633, 1634, 1637, 1638, 1642, 1643, 1644, 1645, 1652, 1653, 1654, 1656, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1681, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1693, 1694, 1695, 1696, 1698, 1699, 1700, 1701, 1709, 1710, 1711, 1713, 1715, 1716, 1717, 1719, 1720, 1721, 1722, 1724, 1730, 1731, 1732, 1735, 1736, 1737, 1739, 1746, 1747, 1748, 1750, 1756, 1757, 1758, 1760, 1761, 1762, 1763, 1765, 1766, 1767, 1768, 1770, 1776, 1777, 1778, 1780, 1791, 1792, 1793, 1795, 1796, 1797, 1798, 1800, 1801, 1802, 1803, 1805, 1811, 1812, 1813, 1814, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1844, 1845, 1847, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1864, 1865, 1866, 1867, 1869, 1871, 1872, 1873, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1936, 1937, 1938, 1939, 1941, 1942, 1943, 1944, 1946, 1947, 1948, 1949, 1976, 1977, 1978, 1981, 1982, 1983, 1985, 1986, 1987, 1988, 1990, 1991, 1992, 1993, 1995, 1996, 1997, 1998, 2000, 2002, 2003, 2004, 2006, 2008, 2009, 2010, 2012, 2013, 2014, 2015, 2017, 2018, 2019, 2020, 2022, 2023, 2024, 2025, 2027, 2028, 2029, 2030, 2031, 2034, 2035, 2036, 2037, 2039, 2040, 2041, 2042, 2044, 2045, 2046, 2047, 2055, 2056, 2057, 2059, 2060, 2061, 2062, 2064, 2065, 2066, 2067, 2069, 2071, 2072, 2073, 2075, 2076, 2077, 2078, 2080, 2081, 2082, 2085, 2086, 2087, 2089, 2090, 2091, 2093, 2095, 2097, 2098, 2099, 2101, 2102, 2103, 2104, 2111, 2112, 2113, 2114, 2117, 2118, 2119, 2121, 2122, 2123, 2124, 2126], "ab": [51, 54, 55, 67, 68, 100, 105, 106, 115, 116, 150, 154, 162, 164, 166, 481, 486, 727, 730, 814, 817, 953, 954, 970, 1121, 1124, 1714, 1766, 1769, 1816, 1820, 1844, 1845, 1847, 1848, 1955, 1964, 1967, 2128, 2205, 2225], "wrap": [51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 166, 170, 172, 175, 187, 188, 189, 201, 202, 207, 208, 209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 247, 260, 261, 267, 268, 271, 272, 279, 280, 285, 286, 287, 289, 295, 296, 297, 299, 300, 301, 305, 306, 310, 311, 312, 314, 318, 319, 320, 322, 323, 325, 328, 330, 336, 337, 338, 339, 354, 355, 356, 358, 359, 360, 361, 363, 364, 365, 366, 368, 396, 397, 398, 400, 408, 409, 411, 412, 414, 416, 429, 430, 431, 433, 453, 454, 455, 457, 472, 473, 474, 475, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 606, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 671, 672, 673, 674, 676, 677, 678, 679, 681, 682, 683, 684, 686, 687, 688, 689, 691, 692, 693, 694, 696, 697, 698, 699, 701, 702, 703, 704, 706, 707, 708, 709, 711, 712, 713, 714, 716, 717, 718, 719, 721, 722, 723, 724, 726, 727, 728, 729, 731, 732, 733, 734, 736, 737, 738, 739, 741, 742, 743, 744, 746, 747, 748, 749, 751, 752, 753, 754, 756, 757, 758, 759, 761, 762, 763, 764, 766, 767, 768, 769, 771, 772, 773, 774, 776, 777, 778, 779, 780, 782, 783, 784, 785, 787, 788, 789, 790, 792, 793, 794, 795, 797, 798, 799, 800, 809, 810, 811, 813, 814, 815, 816, 818, 819, 820, 821, 823, 824, 825, 826, 828, 829, 830, 831, 833, 834, 835, 836, 838, 839, 840, 841, 843, 844, 845, 846, 848, 849, 851, 853, 859, 860, 861, 863, 869, 870, 872, 874, 875, 877, 881, 882, 883, 885, 886, 887, 888, 890, 891, 892, 893, 895, 907, 908, 909, 911, 917, 918, 919, 922, 923, 924, 926, 927, 928, 929, 931, 933, 934, 935, 937, 938, 939, 940, 942, 943, 945, 947, 948, 949, 950, 952, 987, 988, 989, 991, 997, 998, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1050, 1051, 1052, 1054, 1064, 1065, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1106, 1107, 1109, 1111, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1143, 1144, 1146, 1148, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1175, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1192, 1195, 1197, 1199, 1200, 1218, 1224, 1225, 1226, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1238, 1239, 1241, 1243, 1244, 1245, 1246, 1248, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1262, 1264, 1265, 1266, 1267, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1279, 1285, 1286, 1287, 1289, 1294, 1295, 1296, 1297, 1298, 1300, 1302, 1304, 1310, 1311, 1312, 1314, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1330, 1333, 1334, 1335, 1337, 1338, 1339, 1340, 1342, 1353, 1357, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1375, 1376, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1406, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1417, 1418, 1419, 1420, 1422, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1434, 1435, 1436, 1437, 1438, 1440, 1441, 1442, 1443, 1445, 1448, 1449, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 1461, 1462, 1463, 1466, 1467, 1469, 1470, 1471, 1473, 1476, 1477, 1478, 1480, 1481, 1482, 1483, 1493, 1494, 1495, 1497, 1500, 1502, 1503, 1508, 1509, 1510, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1522, 1524, 1525, 1526, 1528, 1529, 1530, 1531, 1533, 1534, 1535, 1537, 1538, 1539, 1541, 1547, 1548, 1549, 1551, 1552, 1554, 1556, 1564, 1568, 1569, 1570, 1572, 1573, 1574, 1575, 1577, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1589, 1590, 1591, 1592, 1594, 1595, 1596, 1597, 1605, 1606, 1607, 1608, 1609, 1614, 1615, 1616, 1618, 1619, 1624, 1625, 1626, 1629, 1630, 1633, 1634, 1637, 1638, 1642, 1643, 1644, 1645, 1652, 1653, 1654, 1656, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1681, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1693, 1694, 1695, 1696, 1698, 1699, 1700, 1701, 1709, 1710, 1711, 1713, 1715, 1716, 1717, 1719, 1720, 1721, 1722, 1724, 1730, 1731, 1732, 1735, 1736, 1737, 1739, 1746, 1747, 1748, 1750, 1756, 1757, 1758, 1760, 1761, 1762, 1763, 1765, 1766, 1767, 1768, 1770, 1791, 1792, 1793, 1795, 1796, 1797, 1798, 1800, 1801, 1802, 1803, 1805, 1811, 1812, 1813, 1814, 1834, 1835, 1844, 1845, 1847, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1864, 1865, 1866, 1867, 1869, 1871, 1872, 1873, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1936, 1937, 1938, 1939, 1941, 1942, 1943, 1944, 1946, 1947, 1948, 1949, 1976, 1977, 1978, 1981, 1982, 1983, 1985, 1986, 1987, 1988, 1990, 1991, 1992, 1993, 1995, 1996, 1997, 1998, 2000, 2002, 2003, 2004, 2006, 2008, 2009, 2010, 2012, 2013, 2014, 2015, 2017, 2018, 2019, 2020, 2022, 2023, 2024, 2025, 2027, 2028, 2029, 2030, 2031, 2034, 2035, 2036, 2037, 2039, 2040, 2041, 2042, 2044, 2045, 2046, 2047, 2055, 2056, 2057, 2059, 2060, 2061, 2062, 2064, 2065, 2066, 2067, 2069, 2071, 2072, 2073, 2075, 2076, 2077, 2078, 2080, 2081, 2082, 2085, 2086, 2087, 2089, 2090, 2091, 2093, 2095, 2097, 2098, 2099, 2101, 2102, 2103, 2104, 2111, 2112, 2113, 2114, 2117, 2118, 2119, 2121, 2122, 2123, 2124, 2126, 2127, 2134, 2135, 2136, 2140, 2141, 2146, 2147, 2205, 2227], "minim": [51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 157, 163, 165, 168, 170, 207, 208, 209, 211, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 247, 260, 261, 267, 268, 271, 272, 279, 280, 285, 286, 287, 289, 295, 296, 297, 299, 300, 301, 305, 306, 310, 311, 312, 314, 318, 319, 320, 322, 323, 325, 328, 330, 336, 337, 338, 339, 354, 355, 356, 358, 359, 360, 361, 363, 364, 365, 366, 368, 396, 397, 398, 400, 408, 409, 412, 414, 429, 430, 431, 433, 453, 454, 455, 457, 472, 473, 474, 475, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 606, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 671, 672, 673, 674, 676, 677, 678, 679, 681, 682, 683, 684, 686, 687, 688, 689, 691, 692, 693, 694, 696, 697, 698, 699, 701, 702, 703, 704, 706, 707, 708, 709, 711, 712, 713, 714, 716, 717, 718, 719, 721, 722, 723, 724, 726, 727, 728, 729, 731, 732, 733, 734, 736, 737, 738, 739, 741, 742, 743, 744, 746, 747, 748, 749, 751, 752, 753, 754, 756, 757, 758, 759, 761, 762, 763, 764, 766, 767, 768, 769, 771, 772, 773, 774, 776, 777, 778, 779, 780, 782, 783, 784, 785, 787, 788, 789, 790, 792, 793, 794, 795, 797, 798, 799, 800, 809, 810, 811, 813, 814, 815, 816, 818, 819, 820, 821, 823, 824, 825, 826, 828, 829, 830, 831, 833, 834, 835, 836, 838, 839, 840, 841, 843, 844, 845, 846, 848, 849, 851, 853, 859, 860, 861, 863, 869, 870, 872, 874, 875, 877, 881, 882, 883, 885, 886, 887, 888, 890, 891, 892, 893, 895, 907, 908, 909, 911, 917, 918, 919, 922, 923, 924, 926, 927, 928, 929, 931, 933, 934, 935, 937, 938, 939, 940, 942, 943, 945, 947, 948, 949, 950, 952, 987, 988, 989, 991, 997, 998, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1050, 1051, 1052, 1054, 1064, 1065, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1106, 1107, 1109, 1111, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1143, 1144, 1146, 1148, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1175, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1192, 1195, 1197, 1199, 1224, 1225, 1226, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1238, 1239, 1241, 1243, 1244, 1245, 1246, 1248, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1262, 1264, 1265, 1266, 1267, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1279, 1285, 1286, 1287, 1289, 1294, 1295, 1296, 1298, 1300, 1302, 1304, 1310, 1311, 1312, 1314, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1330, 1333, 1334, 1335, 1337, 1338, 1339, 1340, 1342, 1353, 1357, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1375, 1376, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1406, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1418, 1419, 1420, 1422, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1434, 1436, 1437, 1438, 1440, 1441, 1442, 1443, 1445, 1448, 1449, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 1461, 1462, 1463, 1466, 1467, 1469, 1470, 1471, 1473, 1476, 1477, 1478, 1480, 1481, 1482, 1483, 1493, 1494, 1495, 1497, 1502, 1503, 1508, 1509, 1510, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1522, 1524, 1525, 1526, 1528, 1529, 1530, 1531, 1533, 1534, 1535, 1537, 1538, 1539, 1541, 1547, 1548, 1549, 1551, 1552, 1554, 1556, 1568, 1569, 1570, 1572, 1573, 1574, 1575, 1577, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1589, 1590, 1591, 1592, 1594, 1595, 1596, 1597, 1606, 1607, 1608, 1609, 1614, 1615, 1616, 1618, 1619, 1624, 1625, 1626, 1629, 1630, 1633, 1634, 1637, 1638, 1642, 1643, 1644, 1645, 1652, 1653, 1654, 1656, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1681, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1693, 1694, 1695, 1696, 1698, 1699, 1700, 1701, 1709, 1710, 1711, 1713, 1715, 1716, 1717, 1719, 1720, 1721, 1722, 1724, 1730, 1731, 1732, 1735, 1736, 1737, 1739, 1746, 1747, 1748, 1750, 1756, 1757, 1758, 1760, 1761, 1762, 1763, 1765, 1766, 1767, 1768, 1770, 1791, 1792, 1793, 1795, 1796, 1797, 1798, 1800, 1801, 1802, 1803, 1805, 1811, 1812, 1813, 1814, 1834, 1835, 1844, 1845, 1847, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1864, 1865, 1866, 1867, 1869, 1871, 1872, 1873, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1936, 1937, 1938, 1939, 1941, 1942, 1943, 1944, 1946, 1947, 1948, 1949, 1976, 1977, 1978, 1981, 1982, 1983, 1985, 1986, 1987, 1988, 1990, 1991, 1992, 1993, 1995, 1996, 1997, 1998, 2000, 2002, 2003, 2004, 2006, 2008, 2009, 2010, 2012, 2013, 2014, 2015, 2017, 2018, 2019, 2020, 2022, 2023, 2024, 2025, 2027, 2028, 2029, 2030, 2031, 2034, 2035, 2036, 2037, 2039, 2040, 2041, 2042, 2044, 2045, 2046, 2047, 2055, 2056, 2057, 2059, 2060, 2061, 2062, 2064, 2065, 2066, 2067, 2069, 2071, 2072, 2073, 2075, 2076, 2077, 2078, 2080, 2081, 2082, 2085, 2086, 2087, 2089, 2090, 2091, 2093, 2095, 2097, 2098, 2099, 2101, 2102, 2103, 2104, 2111, 2112, 2113, 2114, 2117, 2118, 2119, 2121, 2122, 2123, 2124, 2126, 2138, 2146], "input": [51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 187, 188, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 255, 257, 258, 260, 261, 262, 267, 268, 269, 270, 271, 272, 274, 276, 277, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 325, 327, 328, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 384, 385, 386, 387, 388, 389, 396, 397, 398, 399, 400, 403, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 422, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 446, 450, 452, 453, 456, 471, 472, 473, 474, 475, 476, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805, 806, 807, 808, 809, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 897, 904, 905, 906, 907, 908, 909, 910, 911, 913, 915, 917, 920, 922, 923, 924, 925, 926, 927, 929, 931, 932, 933, 934, 935, 936, 937, 938, 942, 943, 945, 946, 947, 948, 950, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 985, 987, 988, 989, 990, 991, 992, 995, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1138, 1139, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1205, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1215, 1216, 1218, 1219, 1220, 1221, 1222, 1224, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1282, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1297, 1298, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1492, 1493, 1494, 1496, 1502, 1503, 1505, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1561, 1566, 1568, 1569, 1570, 1571, 1573, 1574, 1578, 1579, 1580, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1600, 1602, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1642, 1643, 1644, 1645, 1646, 1648, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1702, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1730, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1821, 1824, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1843, 1844, 1845, 1847, 1848, 1849, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1919, 1921, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1957, 1959, 1962, 1963, 1964, 1965, 1967, 1968, 1969, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2063, 2065, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2141, 2144, 2152, 2154, 2159, 2161, 2162, 2163, 2164, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2194, 2195, 2198, 2199, 2205, 2210, 2223, 2224, 2225, 2226, 2251, 2253, 2282, 2284, 2286], "numer": [51, 54, 55, 61, 62, 63, 64, 67, 68, 70, 71, 78, 79, 86, 87, 88, 89, 94, 95, 100, 105, 106, 111, 112, 115, 116, 117, 118, 119, 126, 127, 134, 135, 136, 137, 140, 141, 154, 162, 164, 165, 166, 167, 168, 170, 174, 255, 300, 301, 303, 341, 349, 350, 351, 352, 353, 481, 482, 483, 484, 485, 486, 497, 498, 499, 500, 501, 557, 558, 559, 560, 561, 577, 580, 597, 598, 600, 602, 603, 604, 605, 606, 607, 610, 622, 625, 627, 630, 632, 635, 642, 645, 682, 685, 687, 690, 707, 709, 710, 712, 713, 714, 716, 717, 720, 722, 723, 724, 726, 727, 730, 742, 745, 747, 748, 749, 751, 752, 753, 754, 755, 756, 772, 775, 777, 778, 780, 781, 792, 796, 797, 801, 859, 861, 862, 863, 1315, 1317, 1417, 1490, 1491, 1559, 1560, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1714, 1720, 1721, 1722, 1723, 1724, 1751, 1754, 1761, 1762, 1764, 1786, 1789, 1801, 1804, 1811, 1813, 1815, 1821, 1824, 1829, 1833, 1839, 1843, 1980, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2023, 2024, 2025, 2027, 2028, 2029, 2030, 2031, 2055, 2057, 2059, 2070, 2085, 2086, 2088, 2097, 2100, 2106, 2110, 2137, 2140, 2146, 2159, 2167, 2251, 2254, 2255, 2256, 2262], "element": [51, 52, 53, 54, 55, 61, 62, 67, 68, 69, 70, 71, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 115, 116, 117, 118, 119, 124, 125, 126, 127, 130, 131, 134, 135, 136, 137, 138, 139, 142, 143, 157, 165, 166, 168, 170, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 255, 257, 258, 267, 269, 284, 285, 286, 287, 288, 289, 323, 325, 327, 328, 330, 332, 385, 387, 389, 396, 398, 400, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805, 808, 814, 817, 819, 822, 824, 826, 828, 829, 831, 833, 834, 836, 838, 864, 865, 866, 867, 868, 886, 887, 888, 890, 896, 902, 903, 943, 946, 953, 954, 955, 956, 960, 961, 962, 963, 964, 965, 966, 970, 971, 972, 974, 975, 976, 977, 978, 979, 980, 987, 988, 989, 990, 991, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1072, 1073, 1074, 1075, 1076, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1121, 1124, 1126, 1127, 1128, 1129, 1130, 1139, 1143, 1166, 1167, 1168, 1169, 1170, 1176, 1179, 1183, 1184, 1185, 1186, 1187, 1200, 1208, 1209, 1210, 1211, 1214, 1221, 1244, 1245, 1246, 1247, 1248, 1260, 1262, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1274, 1275, 1276, 1277, 1278, 1279, 1285, 1287, 1288, 1289, 1321, 1323, 1324, 1325, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1353, 1355, 1356, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1377, 1378, 1381, 1382, 1385, 1406, 1407, 1409, 1410, 1411, 1412, 1414, 1417, 1425, 1428, 1436, 1438, 1439, 1440, 1441, 1444, 1476, 1477, 1478, 1479, 1480, 1568, 1569, 1570, 1572, 1573, 1575, 1577, 1578, 1580, 1581, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1612, 1641, 1649, 1650, 1689, 1690, 1691, 1692, 1693, 1714, 1720, 1721, 1722, 1723, 1724, 1730, 1733, 1740, 1741, 1744, 1761, 1764, 1796, 1797, 1798, 1799, 1800, 1801, 1804, 1811, 1815, 1870, 1871, 1872, 1873, 1874, 1875, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1898, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1924, 1955, 1956, 1959, 1965, 1980, 1981, 1982, 1983, 1984, 1985, 2007, 2018, 2021, 2023, 2024, 2025, 2026, 2027, 2028, 2030, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2053, 2054, 2060, 2063, 2065, 2068, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2084, 2085, 2088, 2089, 2090, 2092, 2093, 2096, 2097, 2100, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2113, 2114, 2115, 2116, 2117, 2120, 2122, 2125, 2134, 2135, 2144, 2169, 2177, 2194, 2195, 2205, 2208, 2237, 2241, 2245, 2246, 2247, 2248, 2255, 2263, 2264], "__add__": [51, 54, 55, 100, 105, 106, 150, 152, 156, 157, 160, 164, 165, 172], "broadcast": [51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 152, 154, 156, 157, 166, 167, 170, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 255, 257, 258, 260, 261, 262, 267, 268, 269, 270, 271, 272, 274, 276, 277, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 310, 311, 312, 313, 315, 316, 318, 319, 320, 321, 322, 323, 325, 327, 328, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 446, 472, 473, 474, 475, 476, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805, 807, 808, 809, 812, 839, 840, 844, 845, 846, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 881, 884, 891, 892, 893, 894, 895, 896, 897, 913, 915, 917, 920, 932, 953, 956, 957, 958, 962, 976, 978, 982, 985, 992, 995, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1027, 1028, 1030, 1047, 1048, 1049, 1087, 1088, 1097, 1098, 1099, 1100, 1101, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1139, 1142, 1144, 1145, 1146, 1147, 1148, 1149, 1152, 1155, 1156, 1157, 1158, 1159, 1161, 1164, 1176, 1177, 1178, 1181, 1182, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1204, 1207, 1219, 1221, 1224, 1227, 1229, 1230, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1290, 1291, 1292, 1293, 1300, 1301, 1303, 1305, 1306, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1338, 1339, 1340, 1341, 1342, 1353, 1356, 1357, 1358, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1417, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1451, 1452, 1454, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1518, 1520, 1522, 1524, 1528, 1547, 1548, 1549, 1550, 1551, 1552, 1554, 1555, 1556, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1624, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1642, 1643, 1644, 1645, 1646, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1730, 1733, 1735, 1736, 1737, 1738, 1739, 1746, 1747, 1748, 1749, 1750, 1751, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1806, 1809, 1816, 1820, 1821, 1824, 1829, 1830, 1831, 1832, 1833, 1839, 1843, 1844, 1845, 1847, 1848, 1849, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1921, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1946, 1947, 1948, 1949, 1950, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2021, 2028, 2029, 2030, 2031, 2032, 2033, 2049, 2053, 2055, 2057, 2059, 2070, 2071, 2074, 2076, 2079, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2237, 2238], "wise": [51, 52, 53, 54, 55, 67, 68, 69, 78, 79, 100, 101, 102, 105, 106, 115, 116, 117, 126, 127, 168, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 481, 482, 485, 487, 490, 497, 498, 499, 500, 501, 502, 505, 512, 515, 517, 520, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 572, 573, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 700, 702, 705, 707, 708, 709, 710, 711, 717, 718, 719, 720, 721, 727, 728, 729, 730, 731, 732, 733, 737, 738, 739, 741, 742, 743, 744, 745, 746, 777, 778, 779, 780, 781, 797, 798, 799, 800, 801, 814, 817, 819, 822, 864, 865, 866, 867, 868, 932, 938, 941, 953, 954, 955, 956, 960, 961, 963, 964, 965, 966, 970, 971, 972, 975, 977, 980, 987, 988, 989, 990, 991, 1007, 1008, 1009, 1010, 1011, 1027, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1050, 1051, 1052, 1053, 1054, 1072, 1073, 1074, 1075, 1076, 1082, 1085, 1087, 1089, 1091, 1092, 1095, 1121, 1124, 1139, 1143, 1149, 1156, 1166, 1167, 1168, 1169, 1170, 1183, 1184, 1185, 1186, 1187, 1200, 1206, 1211, 1213, 1214, 1223, 1285, 1287, 1288, 1289, 1333, 1334, 1335, 1336, 1337, 1365, 1366, 1367, 1368, 1401, 1405, 1406, 1407, 1409, 1410, 1411, 1412, 1414, 1720, 1721, 1722, 1724, 1870, 1871, 1874, 2185, 2188], "sum": [51, 54, 55, 67, 68, 69, 70, 71, 76, 77, 78, 79, 80, 81, 94, 95, 100, 103, 104, 105, 106, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 142, 143, 152, 154, 161, 163, 164, 170, 446, 471, 481, 497, 498, 499, 500, 501, 672, 675, 777, 778, 780, 953, 974, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1353, 1356, 1357, 1417, 1456, 1457, 1458, 1459, 1460, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1650, 1689, 1692, 1709, 1710, 1711, 1712, 1713, 1714, 1766, 1769, 1811, 1813, 1815, 1829, 1830, 1831, 1832, 1833, 1844, 1845, 1847, 1848, 1854, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 2070, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2084, 2159, 2164, 2167], "promot": [51, 54, 55, 63, 64, 67, 68, 69, 78, 79, 100, 105, 106, 111, 112, 115, 116, 117, 126, 127, 140, 141, 149, 157, 158, 161, 341, 349, 350, 351, 352, 353, 364, 365, 366, 367, 368, 427, 428, 429, 432, 439, 481, 487, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 537, 538, 539, 540, 541, 542, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 577, 578, 579, 580, 581, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 607, 608, 609, 611, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 692, 695, 707, 708, 709, 710, 711, 727, 728, 729, 730, 731, 742, 743, 745, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 776, 777, 778, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 797, 798, 799, 800, 801, 953, 962, 978, 1027, 1030, 1338, 1339, 1340, 1341, 1342, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1751, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1764, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1786, 1789, 1791, 1793, 1794, 1795, 1801, 1804, 1806, 1809, 1839, 1843, 1844, 1845, 1847, 1848, 1870, 1876, 1879, 1926, 1929, 2055, 2057, 2059, 2070, 2089, 2092, 2102, 2105, 2237, 2245, 2251, 2252], "y": [51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 152, 156, 164, 165, 166, 167, 168, 170, 172, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 255, 267, 269, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 300, 303, 310, 311, 312, 313, 314, 315, 316, 318, 321, 336, 340, 341, 349, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 380, 381, 382, 385, 387, 388, 389, 396, 398, 399, 400, 429, 431, 432, 446, 449, 453, 454, 455, 456, 457, 461, 465, 466, 467, 470, 472, 473, 474, 475, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 591, 592, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 632, 634, 637, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 672, 673, 674, 675, 676, 677, 678, 680, 682, 684, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805, 808, 809, 813, 814, 815, 816, 817, 818, 869, 870, 871, 872, 886, 887, 888, 889, 890, 896, 897, 907, 910, 932, 938, 939, 940, 941, 953, 954, 978, 979, 980, 997, 998, 999, 1000, 1001, 1055, 1056, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1091, 1121, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1139, 1141, 1143, 1144, 1146, 1148, 1149, 1154, 1156, 1171, 1173, 1175, 1193, 1194, 1195, 1197, 1199, 1200, 1206, 1213, 1218, 1220, 1221, 1223, 1255, 1257, 1259, 1265, 1267, 1269, 1294, 1297, 1310, 1312, 1314, 1338, 1339, 1340, 1341, 1342, 1353, 1354, 1360, 1362, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1401, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1417, 1418, 1419, 1420, 1421, 1422, 1425, 1426, 1427, 1428, 1429, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1461, 1462, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1498, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1524, 1526, 1528, 1529, 1531, 1533, 1537, 1539, 1541, 1559, 1560, 1562, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1578, 1582, 1584, 1585, 1586, 1587, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1603, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1642, 1643, 1644, 1645, 1646, 1650, 1667, 1668, 1669, 1670, 1671, 1677, 1678, 1679, 1680, 1681, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1746, 1747, 1748, 1749, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1776, 1778, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1801, 1802, 1803, 1804, 1805, 1811, 1812, 1814, 1816, 1820, 1821, 1824, 1829, 1830, 1831, 1832, 1833, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1949, 1950, 1955, 1959, 1962, 1963, 1965, 1973, 1975, 1976, 1979, 1980, 1981, 1984, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2005, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2021, 2023, 2026, 2028, 2032, 2033, 2034, 2035, 2037, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2063, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126], "z": [51, 54, 55, 61, 62, 67, 68, 69, 70, 71, 78, 79, 80, 81, 86, 87, 90, 91, 94, 95, 100, 105, 106, 109, 110, 115, 116, 117, 118, 119, 126, 127, 128, 129, 130, 131, 134, 135, 142, 143, 151, 152, 156, 170, 172, 255, 290, 293, 295, 297, 299, 310, 311, 312, 313, 314, 446, 461, 481, 497, 498, 499, 500, 501, 517, 518, 519, 520, 521, 527, 528, 530, 531, 542, 543, 544, 545, 546, 552, 554, 555, 556, 577, 579, 612, 614, 615, 616, 617, 618, 619, 620, 621, 627, 629, 630, 631, 632, 635, 636, 637, 640, 641, 642, 644, 645, 646, 647, 650, 672, 673, 674, 675, 676, 677, 678, 679, 681, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 777, 778, 779, 780, 781, 805, 806, 819, 820, 821, 822, 823, 869, 870, 871, 872, 874, 875, 877, 886, 888, 890, 953, 955, 976, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1321, 1324, 1325, 1417, 1425, 1426, 1428, 1469, 1470, 1471, 1472, 1473, 1476, 1479, 1481, 1482, 1483, 1484, 1508, 1511, 1512, 1513, 1516, 1517, 1552, 1554, 1555, 1556, 1566, 1568, 1569, 1570, 1571, 1572, 1599, 1611, 1714, 1720, 1721, 1722, 1723, 1724, 1761, 1762, 1764, 1791, 1792, 1811, 1812, 1814, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1869, 1870, 1871, 1874, 1926, 1930, 1955, 1959, 1963, 1965, 1973, 1980, 1986, 1987, 1988, 1991, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2007, 2008, 2011, 2033, 2034, 2036, 2038, 2070, 2081, 2082, 2084, 2085, 2086, 2087, 2088, 2093, 2095, 2096, 2097, 2098, 2100, 2102, 2103, 2105, 2159, 2163], "__eq__": [51, 54, 55, 100, 105, 106], "equal": [51, 54, 55, 61, 62, 63, 64, 67, 68, 69, 70, 71, 78, 79, 82, 83, 86, 87, 92, 93, 94, 95, 100, 103, 104, 105, 106, 111, 112, 115, 116, 117, 118, 119, 126, 127, 130, 131, 134, 135, 140, 141, 152, 154, 156, 158, 165, 166, 255, 276, 277, 284, 285, 286, 288, 341, 349, 350, 351, 352, 353, 481, 537, 540, 547, 550, 586, 622, 625, 627, 630, 727, 730, 747, 750, 814, 815, 816, 817, 818, 869, 870, 871, 872, 913, 915, 933, 934, 935, 936, 937, 953, 954, 970, 1077, 1078, 1079, 1080, 1081, 1121, 1122, 1123, 1124, 1125, 1144, 1147, 1149, 1155, 1193, 1194, 1195, 1198, 1200, 1205, 1212, 1222, 1290, 1292, 1293, 1396, 1397, 1398, 1399, 1400, 1417, 1418, 1419, 1420, 1421, 1422, 1425, 1426, 1427, 1428, 1429, 1611, 1714, 1735, 1736, 1738, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1791, 1793, 1794, 1795, 1801, 1804, 1870, 1871, 1874, 1881, 1882, 1883, 1884, 1885, 1916, 1917, 1918, 1919, 1920, 1946, 1947, 1948, 1949, 1950, 1980, 1996, 1997, 1998, 1999, 2000, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2065, 2068, 2070, 2089, 2090, 2092, 2102, 2105, 2106, 2110, 2111, 2113, 2115, 2159, 2167, 2282, 2285, 2286], "bool": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 154, 156, 158, 163, 164, 166, 167, 170, 175, 205, 207, 208, 209, 210, 211, 213, 215, 217, 218, 220, 222, 223, 225, 227, 228, 230, 232, 233, 235, 237, 238, 240, 242, 243, 245, 247, 255, 260, 261, 262, 267, 268, 269, 284, 285, 287, 289, 290, 293, 295, 296, 297, 298, 299, 300, 303, 310, 312, 314, 318, 320, 322, 336, 337, 339, 341, 349, 350, 351, 352, 353, 354, 356, 358, 364, 365, 366, 367, 368, 369, 371, 372, 374, 375, 376, 378, 379, 380, 382, 390, 391, 393, 394, 396, 398, 400, 401, 402, 403, 404, 406, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 422, 423, 425, 427, 429, 431, 433, 435, 441, 445, 446, 452, 453, 454, 455, 456, 462, 463, 466, 467, 471, 472, 473, 475, 478, 480, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 530, 531, 532, 534, 535, 536, 537, 539, 541, 542, 544, 545, 546, 547, 549, 551, 552, 554, 555, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 583, 584, 585, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 607, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 669, 671, 672, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 711, 712, 714, 716, 717, 718, 719, 720, 721, 722, 724, 726, 727, 729, 731, 732, 734, 736, 737, 739, 741, 742, 743, 744, 745, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 778, 780, 782, 783, 785, 787, 788, 790, 792, 793, 795, 797, 798, 800, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 833, 834, 835, 836, 837, 838, 854, 858, 859, 861, 863, 864, 866, 868, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 905, 906, 913, 914, 915, 916, 922, 926, 932, 933, 937, 953, 954, 955, 958, 970, 973, 974, 975, 980, 981, 992, 996, 997, 999, 1001, 1017, 1021, 1055, 1056, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1077, 1081, 1087, 1089, 1091, 1107, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1144, 1146, 1148, 1149, 1155, 1156, 1161, 1195, 1197, 1199, 1200, 1201, 1203, 1221, 1244, 1245, 1246, 1247, 1248, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1305, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1321, 1323, 1325, 1326, 1328, 1330, 1338, 1340, 1342, 1353, 1355, 1356, 1357, 1358, 1360, 1361, 1363, 1365, 1366, 1368, 1370, 1371, 1372, 1373, 1374, 1396, 1397, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1436, 1438, 1440, 1441, 1443, 1445, 1448, 1449, 1450, 1451, 1453, 1455, 1456, 1458, 1460, 1461, 1463, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1476, 1478, 1480, 1481, 1483, 1485, 1487, 1492, 1493, 1494, 1495, 1496, 1497, 1500, 1502, 1503, 1505, 1508, 1510, 1512, 1513, 1515, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1547, 1549, 1551, 1552, 1554, 1556, 1566, 1567, 1568, 1570, 1572, 1573, 1575, 1577, 1578, 1579, 1580, 1581, 1582, 1584, 1585, 1589, 1590, 1592, 1593, 1594, 1595, 1597, 1606, 1607, 1608, 1609, 1610, 1612, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1649, 1650, 1651, 1652, 1654, 1656, 1662, 1664, 1666, 1667, 1669, 1671, 1689, 1690, 1691, 1692, 1693, 1694, 1696, 1698, 1709, 1711, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1724, 1746, 1748, 1750, 1756, 1758, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1776, 1778, 1780, 1781, 1784, 1796, 1798, 1800, 1801, 1803, 1805, 1811, 1812, 1813, 1814, 1815, 1829, 1830, 1832, 1834, 1835, 1836, 1837, 1838, 1844, 1845, 1847, 1848, 1855, 1857, 1859, 1860, 1862, 1864, 1865, 1867, 1869, 1870, 1871, 1873, 1875, 1886, 1890, 1891, 1893, 1895, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1925, 1926, 1928, 1930, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1962, 1963, 1964, 1966, 1967, 1968, 1973, 1974, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1988, 1990, 1991, 1993, 1995, 1996, 1998, 2000, 2002, 2004, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2020, 2022, 2023, 2024, 2025, 2026, 2027, 2034, 2035, 2037, 2039, 2040, 2042, 2044, 2045, 2047, 2054, 2055, 2056, 2057, 2058, 2059, 2065, 2068, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2152, 2155, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2205, 2223, 2224, 2225, 2226, 2251, 2254, 2255, 2262], "__ge__": [51, 54, 55, 100, 105, 106], "greater_equ": [51, 54, 55, 67, 68, 100, 105, 106, 115, 116, 481, 621, 672, 674, 676], "bitwise_xor": [51, 54, 55, 67, 68, 115, 116, 481, 556], "mix": [51, 54, 55, 63, 64, 67, 68, 100, 105, 106, 111, 112, 115, 116, 118, 119, 128, 129, 134, 135, 148, 156, 163, 166, 168, 170, 341, 354, 355, 356, 357, 358, 429, 432, 481, 527, 530, 542, 545, 547, 550, 552, 555, 577, 578, 580, 582, 583, 584, 585, 607, 608, 609, 610, 611, 612, 615, 617, 620, 642, 645, 647, 648, 649, 692, 695, 707, 708, 709, 710, 717, 718, 719, 720, 742, 743, 744, 745, 746, 869, 871, 1193, 1194, 1417, 1466, 1468, 1476, 1479, 1480, 1481, 1484, 1584, 1587, 1594, 1598, 1650, 1652, 1655, 1662, 1665, 1677, 1680, 1684, 1687, 1694, 1697, 1704, 1707, 1709, 1712, 1714, 1715, 1718, 1821, 1824, 1854, 1855, 1858, 1859, 1860, 1864, 1865, 1868, 1869, 1870, 1871, 1874, 1975, 1976, 1979, 1986, 1990, 1991, 1995, 1996, 2000, 2007, 2028, 2032, 2070, 2081, 2084, 2089, 2092, 2102, 2105, 2127, 2140, 2144, 2146], "__gt__": [51, 54, 55, 100, 105, 106, 168], "__le__": [51, 54, 55, 100, 105, 106], "less_equ": [51, 54, 55, 67, 68, 100, 105, 106, 115, 116, 158, 481, 651], "__lt__": [51, 54, 55, 100, 105, 106], "__ne__": [51, 54, 55, 100, 105, 106], "not_equ": [51, 54, 55, 67, 68, 100, 105, 106, 115, 116, 481, 721], "__pow__": [51, 54, 55, 100, 105, 106, 172], "power": [51, 54, 55, 69, 70, 71, 78, 79, 100, 105, 106, 117, 118, 119, 126, 127, 172, 173, 174, 481, 547, 550, 592, 595, 727, 730, 896, 904, 953, 960, 962, 987, 988, 989, 990, 991, 1027, 1028, 1029, 1030, 1031, 1392, 1395, 1417, 1490, 1559, 1573, 1574, 1575, 1576, 1577, 1714, 1771, 1774, 1834, 1835, 1836, 1837, 1838, 1955, 1962, 2140, 2142, 2146, 2159, 2167], "pow": [51, 54, 55, 67, 68, 100, 105, 106, 115, 116, 149, 481, 731], "float": [51, 52, 53, 54, 55, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 94, 95, 101, 102, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 142, 143, 149, 152, 154, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 170, 172, 174, 205, 213, 214, 216, 243, 244, 245, 246, 247, 249, 255, 257, 258, 260, 262, 270, 276, 277, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 315, 316, 333, 335, 341, 349, 350, 351, 352, 353, 369, 371, 372, 375, 376, 385, 386, 388, 401, 408, 411, 412, 413, 414, 415, 416, 428, 429, 432, 436, 442, 446, 458, 466, 469, 470, 477, 480, 481, 482, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 552, 555, 557, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 577, 580, 582, 583, 585, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 605, 607, 610, 612, 615, 617, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 642, 645, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 707, 710, 712, 715, 717, 718, 720, 722, 725, 727, 730, 737, 740, 742, 745, 747, 750, 752, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 796, 797, 801, 805, 806, 807, 808, 814, 815, 816, 817, 818, 854, 855, 856, 857, 858, 859, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 896, 897, 898, 899, 900, 901, 927, 928, 929, 930, 931, 932, 953, 954, 956, 960, 961, 962, 970, 972, 973, 975, 976, 977, 978, 979, 981, 987, 988, 990, 991, 997, 1000, 1007, 1008, 1010, 1027, 1028, 1030, 1031, 1047, 1049, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1107, 1109, 1110, 1111, 1121, 1122, 1123, 1124, 1125, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1149, 1156, 1183, 1184, 1186, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1199, 1260, 1261, 1262, 1263, 1264, 1285, 1288, 1290, 1291, 1293, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1333, 1334, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1353, 1358, 1365, 1366, 1367, 1368, 1369, 1375, 1376, 1377, 1411, 1415, 1417, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1469, 1470, 1471, 1472, 1473, 1490, 1491, 1498, 1502, 1504, 1505, 1506, 1559, 1560, 1562, 1568, 1571, 1573, 1574, 1575, 1576, 1577, 1606, 1607, 1608, 1609, 1610, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1650, 1689, 1690, 1691, 1692, 1693, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1725, 1728, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1756, 1757, 1758, 1759, 1760, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1829, 1830, 1831, 1832, 1844, 1845, 1847, 1848, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1951, 1952, 1953, 1954, 1955, 1962, 1975, 1976, 1977, 1978, 1979, 1980, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2070, 2071, 2074, 2076, 2079, 2085, 2088, 2089, 2090, 2091, 2092, 2093, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2159, 2160, 2163, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2205, 2223, 2237, 2241, 2242, 2245, 2246, 2251, 2254, 2255, 2256, 2266, 2269], "69678056": [51, 54, 55], "59876156": [51, 54, 55], "37": [51, 52, 53, 54, 55, 67, 68, 69, 101, 102, 115, 116, 117, 218, 219, 220, 222, 481, 507, 510, 511, 547, 550, 747, 748, 762, 764, 766, 782, 786, 849, 853, 1353, 1359, 1386, 1387, 1388, 1389, 1390, 1650, 1694, 1697, 1714, 1771, 1774, 1955, 1964, 1980, 1991, 1994], "82660675": [51, 54, 55], "__radd__": [51, 54, 55, 100, 105, 106, 156, 157, 164], "__rrshift__": [51, 54, 55, 100, 105, 106], "bitwise_right_shift": [51, 54, 55, 67, 68, 115, 116, 481, 551], "32": [51, 54, 55, 67, 68, 69, 86, 87, 100, 105, 106, 115, 116, 117, 134, 135, 153, 173, 205, 213, 216, 341, 384, 481, 492, 493, 494, 495, 496, 547, 550, 552, 553, 747, 748, 752, 753, 844, 847, 849, 850, 852, 907, 908, 909, 910, 911, 953, 960, 976, 987, 988, 989, 990, 991, 1149, 1151, 1152, 1154, 1166, 1168, 1170, 1321, 1324, 1417, 1451, 1454, 1513, 1516, 1650, 1667, 1670, 1672, 1675, 1677, 1680, 1684, 1687, 1694, 1697, 1714, 1761, 1764, 1786, 1789, 1980, 1986, 1988, 1990, 1991, 1992, 1993, 1995, 1996, 1998, 1999, 2000, 2007, 2028, 2032, 2070, 2081, 2084, 2145, 2237, 2241, 2245, 2246, 2266, 2267, 2268, 2269], "__rshift__": [51, 54, 55, 100, 105, 106], "__rsub__": [51, 54, 55, 100, 105, 106], "subtract": [51, 54, 55, 67, 68, 100, 105, 106, 115, 116, 150, 152, 156, 481, 778, 1200, 1218, 1294, 1297], "__sub__": [51, 54, 55, 100, 105, 106, 150, 152, 156, 160, 172], "__truediv__": [51, 54, 55, 100, 105, 106, 150, 152, 156], "divid": [51, 54, 55, 67, 68, 70, 71, 82, 83, 100, 103, 104, 105, 106, 115, 116, 130, 131, 150, 152, 156, 166, 481, 581, 607, 610, 1417, 1568, 1569, 1571, 1870, 1916, 1917, 1918, 1919, 1920], "25": [51, 54, 55, 67, 68, 70, 71, 78, 79, 80, 81, 86, 87, 94, 95, 100, 101, 102, 105, 106, 115, 116, 117, 118, 119, 124, 125, 126, 127, 132, 133, 134, 135, 142, 143, 152, 243, 245, 247, 255, 290, 293, 481, 497, 499, 547, 550, 577, 579, 580, 581, 587, 589, 591, 707, 709, 711, 727, 728, 730, 737, 739, 741, 747, 748, 762, 765, 767, 769, 771, 772, 773, 775, 792, 793, 795, 796, 819, 821, 823, 896, 899, 1068, 1070, 1102, 1104, 1106, 1166, 1168, 1170, 1310, 1312, 1314, 1417, 1508, 1511, 1512, 1513, 1516, 1517, 1552, 1553, 1568, 1569, 1571, 1572, 1652, 1654, 1656, 1714, 1715, 1716, 1718, 1735, 1738, 1756, 1758, 1759, 1760, 1834, 1835, 1836, 1837, 1838, 1854, 1860, 1861, 1863, 1955, 1957, 1975, 1976, 1978, 1979, 1986, 1987, 1991, 1992, 1993, 1995, 1996, 1998, 2070, 2076, 2077, 2081, 2084, 2089, 2090, 2111, 2114], "40000001": [51, 54, 55, 100, 101, 102, 105, 106, 205, 213, 216, 228, 230, 231, 232, 2033, 2039, 2043], "__xor__": [51, 54, 55, 100, 105, 106], "boolean": [51, 54, 55, 61, 62, 63, 64, 67, 68, 69, 70, 71, 82, 83, 88, 89, 94, 95, 100, 103, 104, 105, 106, 111, 112, 115, 116, 117, 118, 119, 130, 131, 136, 137, 142, 143, 152, 164, 166, 168, 255, 260, 261, 262, 267, 268, 269, 284, 341, 349, 350, 351, 352, 353, 396, 398, 400, 402, 408, 409, 411, 412, 413, 414, 416, 445, 446, 462, 478, 481, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 905, 906, 953, 970, 1055, 1056, 1119, 1121, 1124, 1126, 1127, 1128, 1129, 1130, 1417, 1418, 1419, 1420, 1421, 1422, 1425, 1426, 1427, 1428, 1429, 1489, 1502, 1503, 1505, 1507, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1557, 1561, 1563, 1564, 1606, 1607, 1608, 1609, 1610, 1612, 1641, 1649, 1870, 1906, 1907, 1908, 1909, 1910, 1951, 1952, 1953, 1955, 1966, 2018, 2019, 2020, 2022, 2028, 2029, 2031, 2070, 2085, 2087, 2093, 2094, 2095, 2096, 2152, 2154, 2205, 2210, 2237, 2239, 2255, 2258, 2282, 2283, 2284, 2285, 2286], "67": [51, 54, 55, 67, 68, 70, 71, 115, 116, 118, 119, 134, 135, 481, 552, 555, 567, 569, 570, 571, 747, 748, 752, 753, 762, 764, 766, 792, 794, 796, 1417, 1451, 1454, 1456, 1459, 1460, 1568, 1569, 1612, 1623, 1628, 1648, 1996, 1998], "21": [51, 54, 55, 67, 68, 69, 70, 71, 86, 87, 109, 110, 115, 116, 117, 118, 119, 134, 135, 142, 143, 255, 295, 297, 298, 341, 396, 399, 481, 497, 499, 507, 509, 517, 519, 520, 521, 547, 550, 552, 555, 707, 708, 710, 839, 840, 842, 849, 851, 907, 910, 953, 971, 1149, 1150, 1154, 1162, 1166, 1167, 1169, 1170, 1229, 1230, 1232, 1239, 1241, 1243, 1275, 1277, 1279, 1417, 1456, 1459, 1460, 1552, 1553, 1714, 1735, 1738, 1786, 1789, 1854, 1865, 1868, 1955, 1962, 1986, 1988, 1991, 1992, 1993, 2070, 2071, 2074, 2076, 2078, 2080, 2081, 2084], "13": [51, 52, 53, 54, 55, 67, 68, 69, 76, 77, 86, 87, 94, 95, 115, 116, 117, 118, 119, 120, 121, 124, 125, 130, 131, 134, 135, 142, 143, 152, 156, 205, 243, 244, 246, 341, 396, 399, 446, 458, 481, 497, 499, 552, 555, 567, 570, 607, 608, 610, 727, 730, 767, 770, 849, 853, 907, 910, 911, 933, 934, 935, 936, 937, 953, 967, 1012, 1013, 1014, 1015, 1016, 1057, 1058, 1059, 1060, 1077, 1078, 1079, 1080, 1081, 1149, 1154, 1166, 1168, 1170, 1200, 1205, 1208, 1212, 1275, 1277, 1279, 1300, 1302, 1304, 1396, 1397, 1399, 1417, 1436, 1439, 1440, 1441, 1444, 1445, 1451, 1454, 1456, 1459, 1460, 1513, 1516, 1560, 1568, 1571, 1612, 1614, 1616, 1617, 1650, 1652, 1653, 1654, 1656, 1689, 1692, 1694, 1696, 1697, 1698, 1709, 1712, 1714, 1735, 1738, 1786, 1789, 1816, 1820, 1870, 1941, 1942, 1944, 1945, 1986, 1987, 1990, 1991, 1992, 1993, 1995, 1996, 1998, 2007, 2028, 2032, 2033, 2034, 2038, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2084], "79": [51, 54, 55, 70, 71, 118, 119, 134, 135, 481, 552, 555, 577, 580, 907, 910, 1149, 1154, 1417, 1436, 1437, 1439, 1440, 1441, 1442, 1444, 1445, 1996, 1998], "24": [51, 54, 55, 67, 68, 69, 78, 79, 94, 95, 117, 118, 119, 124, 125, 126, 127, 134, 135, 173, 481, 552, 553, 555, 647, 648, 707, 710, 747, 748, 752, 753, 767, 770, 839, 840, 841, 842, 843, 869, 871, 907, 908, 909, 910, 911, 953, 967, 1057, 1058, 1059, 1060, 1149, 1150, 1154, 1162, 1166, 1168, 1193, 1194, 1229, 1230, 1231, 1232, 1233, 1417, 1451, 1454, 1456, 1459, 1460, 1652, 1654, 1656, 1714, 1735, 1738, 1766, 1767, 1768, 1770, 1786, 1789, 1955, 1957, 1986, 1988, 1991, 1993, 1996, 1998, 2070, 2071, 2072, 2074, 2081, 2082, 2084, 2205, 2225], "arang": [51, 54, 55, 69, 78, 79, 94, 95, 100, 105, 106, 117, 126, 127, 154, 255, 290, 293, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 938, 942, 1002, 1003, 1004, 1005, 1006, 1022, 1024, 1026, 1097, 1098, 1099, 1100, 1101, 1149, 1150, 1151, 1152, 1158, 1159, 1162, 1163, 1164, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1401, 1402, 1417, 1543, 1611, 1714, 1766, 1767, 1768, 1769, 1770, 2070, 2081, 2082, 2084, 2128, 2147], "invok": [51, 54, 55, 69, 913, 915, 1149, 1155], "arg_info": [51, 54, 55, 100, 105, 106, 1417], "arg_nam": [51, 54, 55, 100, 105, 106, 1417], "args_to_ivi": [51, 54, 55, 56], "args_to_n": [51, 54, 55, 56, 163], "as_ivy_dev": [51, 54, 55, 100, 105, 106, 172, 446], "as_ivy_dtyp": [51, 54, 55, 100, 105, 106, 164, 341], "as_native_dev": [51, 54, 55, 100, 105, 106, 446, 466], "as_native_dtyp": [51, 54, 55, 100, 105, 106, 341], "asarray_handle_nest": [51, 54, 55, 100, 105, 106, 255], "asarray_infer_devic": [51, 54, 55, 100, 105, 106, 255], "asarray_to_native_arrays_and_back": [51, 54, 55, 100, 105, 106, 255], "cache_fn": [51, 54, 55, 100, 105, 106, 161, 1417], "check_float": [51, 54, 55, 100, 105, 106, 341], "clear_mem_on_dev": [51, 54, 55, 100, 105, 106, 446], "closest_valid_dtyp": [51, 54, 55, 100, 105, 106, 341], "container_typ": [51, 54, 55, 100, 105, 106, 907, 910, 1149, 1154, 1417], "conv": [51, 54, 55, 100, 105, 106, 168, 1650], "conv_general_dil": [51, 54, 55, 100, 105, 106, 164, 1650], "conv_general_transpos": [51, 54, 55, 100, 105, 106, 1650], "current_backend_str": [51, 54, 55, 100, 105, 106, 158, 170, 172, 1417], "nativearrai": [51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 101, 102, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 156, 158, 159, 160, 161, 162, 163, 164, 167, 170, 172, 188, 199, 201, 202, 205, 207, 210, 211, 213, 216, 217, 218, 221, 222, 223, 226, 227, 228, 231, 232, 233, 236, 237, 238, 239, 241, 242, 243, 246, 247, 255, 260, 262, 267, 268, 269, 271, 274, 285, 288, 290, 293, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 308, 310, 313, 318, 321, 322, 323, 327, 328, 332, 336, 337, 340, 341, 349, 352, 354, 355, 356, 357, 358, 359, 362, 364, 367, 371, 372, 374, 375, 376, 378, 379, 380, 382, 385, 388, 396, 399, 403, 406, 408, 410, 412, 415, 417, 420, 422, 425, 428, 429, 430, 432, 439, 446, 452, 453, 456, 471, 472, 473, 476, 481, 482, 485, 486, 487, 490, 491, 492, 495, 496, 497, 498, 499, 500, 501, 502, 505, 507, 510, 512, 515, 516, 517, 518, 519, 520, 521, 522, 525, 526, 527, 528, 529, 530, 531, 532, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 560, 561, 562, 565, 567, 570, 572, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 595, 596, 597, 600, 601, 602, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 630, 631, 632, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 655, 656, 657, 660, 661, 662, 665, 666, 667, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 715, 716, 717, 718, 719, 720, 721, 722, 725, 726, 727, 728, 729, 730, 731, 732, 735, 736, 737, 740, 741, 742, 743, 744, 745, 746, 747, 750, 751, 752, 755, 756, 757, 760, 762, 765, 767, 770, 771, 772, 775, 776, 777, 778, 779, 780, 781, 782, 786, 787, 791, 792, 793, 796, 797, 798, 799, 800, 801, 805, 807, 808, 809, 812, 814, 818, 819, 822, 823, 824, 826, 827, 828, 829, 831, 832, 833, 834, 836, 837, 838, 839, 842, 843, 844, 847, 848, 849, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 867, 869, 870, 871, 872, 881, 882, 884, 885, 891, 894, 895, 896, 897, 898, 901, 904, 907, 910, 913, 915, 916, 917, 920, 922, 923, 924, 925, 926, 927, 930, 932, 933, 936, 937, 943, 946, 947, 948, 951, 952, 953, 955, 956, 957, 958, 959, 961, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 985, 987, 991, 992, 995, 996, 997, 1000, 1001, 1002, 1005, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1020, 1021, 1022, 1025, 1026, 1027, 1031, 1032, 1035, 1036, 1037, 1040, 1041, 1042, 1045, 1046, 1047, 1048, 1049, 1050, 1053, 1054, 1055, 1056, 1057, 1060, 1064, 1065, 1066, 1067, 1072, 1075, 1076, 1077, 1080, 1081, 1087, 1090, 1091, 1092, 1095, 1096, 1097, 1100, 1102, 1105, 1106, 1107, 1109, 1110, 1111, 1113, 1116, 1117, 1121, 1124, 1125, 1126, 1129, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1142, 1143, 1144, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1166, 1168, 1169, 1170, 1171, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1183, 1186, 1187, 1193, 1194, 1195, 1198, 1199, 1200, 1201, 1202, 1203, 1205, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1215, 1218, 1219, 1220, 1221, 1222, 1229, 1232, 1233, 1234, 1237, 1238, 1239, 1242, 1243, 1250, 1253, 1254, 1255, 1258, 1259, 1260, 1263, 1264, 1275, 1278, 1279, 1285, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1297, 1300, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1324, 1325, 1326, 1328, 1329, 1330, 1333, 1336, 1337, 1338, 1341, 1343, 1344, 1345, 1360, 1361, 1363, 1364, 1365, 1366, 1369, 1370, 1371, 1372, 1374, 1392, 1393, 1394, 1395, 1396, 1397, 1400, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1418, 1419, 1421, 1425, 1426, 1427, 1428, 1429, 1430, 1433, 1434, 1436, 1439, 1440, 1441, 1444, 1445, 1451, 1454, 1456, 1459, 1461, 1464, 1469, 1470, 1471, 1472, 1473, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1489, 1493, 1496, 1497, 1502, 1505, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1529, 1532, 1537, 1540, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1578, 1579, 1582, 1584, 1585, 1587, 1589, 1590, 1593, 1594, 1595, 1598, 1600, 1606, 1607, 1610, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1642, 1643, 1646, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1730, 1733, 1735, 1738, 1739, 1740, 1741, 1744, 1746, 1749, 1750, 1751, 1754, 1756, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1769, 1770, 1771, 1774, 1776, 1779, 1780, 1781, 1784, 1785, 1786, 1789, 1791, 1794, 1795, 1796, 1799, 1800, 1801, 1804, 1805, 1806, 1809, 1811, 1812, 1815, 1816, 1820, 1821, 1824, 1829, 1830, 1833, 1834, 1835, 1838, 1839, 1843, 1844, 1845, 1848, 1849, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1879, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1899, 1901, 1904, 1906, 1909, 1910, 1911, 1914, 1915, 1916, 1919, 1920, 1921, 1924, 1926, 1927, 1928, 1929, 1930, 1931, 1935, 1936, 1940, 1941, 1942, 1945, 1946, 1950, 1955, 1957, 1958, 1959, 1963, 1964, 1965, 1968, 1973, 1974, 1975, 1976, 1979, 1980, 1981, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2005, 2006, 2007, 2008, 2011, 2012, 2013, 2016, 2017, 2018, 2021, 2023, 2026, 2027, 2028, 2029, 2031, 2032, 2033, 2034, 2035, 2038, 2039, 2043, 2044, 2045, 2048, 2049, 2053, 2054, 2055, 2058, 2059, 2060, 2063, 2065, 2068, 2070, 2071, 2074, 2075, 2076, 2079, 2080, 2081, 2084, 2085, 2088, 2089, 2092, 2093, 2096, 2097, 2100, 2102, 2105, 2106, 2110, 2111, 2115, 2116, 2117, 2120, 2121, 2122, 2125, 2126, 2127, 2134, 2135], "default_complex_dtyp": [51, 54, 55, 100, 105, 106, 341, 434], "default_devic": [51, 54, 55, 100, 105, 106, 155, 158, 446, 465, 468, 469, 479], "default_dtyp": [51, 54, 55, 100, 105, 106, 154, 161, 341], "default_float_dtyp": [51, 54, 55, 100, 105, 106, 154, 341, 436], "default_int_dtyp": [51, 54, 55, 100, 105, 106, 154, 341, 437, 443], "default_uint_dtyp": [51, 54, 55, 100, 105, 106, 341, 438, 444], "deseri": [51, 54, 55, 100, 105, 106, 205], "dev_util": [51, 54, 55, 100, 105, 106, 155, 446], "resid": [51, 54, 55, 164, 170, 174, 1870, 1886, 1889, 2134, 2135], "dtype_bit": [51, 54, 55, 100, 105, 106, 341], "execute_with_gradi": [51, 54, 55, 100, 105, 106, 173, 174, 175, 187, 1612, 2128], "ey": [51, 54, 55, 69, 100, 105, 106, 117, 124, 125, 168, 175, 255, 1107, 1108, 1109, 1110, 1111, 1290, 1291, 1650, 1662, 1664, 1665, 1666, 1684, 1687], "function_supported_devic": [51, 54, 55, 100, 105, 106, 446], "function_supported_devices_and_dtyp": [51, 54, 55, 100, 105, 106, 1417], "function_supported_dtyp": [51, 54, 55, 100, 105, 106, 154, 341], "function_unsupported_devic": [51, 54, 55, 100, 105, 106, 446], "function_unsupported_devices_and_dtyp": [51, 54, 55, 100, 105, 106, 1417], "function_unsupported_dtyp": [51, 54, 55, 100, 105, 106, 154, 341], "get_all_arrays_in_memori": [51, 54, 55, 100, 105, 106, 1417, 1546], "get_all_ivy_arrays_on_dev": [51, 54, 55, 100, 105, 106, 155, 446], "get_array_mod": [51, 54, 55, 100, 105, 106, 1417, 1557, 1600], "get_exception_trace_mod": [51, 54, 55, 100, 105, 106, 1417, 1492, 1558, 1601], "get_item": [51, 54, 55, 100, 105, 106, 1417], "get_min_bas": [51, 54, 55, 100, 105, 106, 1417, 1559], "get_min_denomin": [51, 54, 55, 100, 105, 106, 1417, 1560], "get_nestable_mod": [51, 54, 55, 100, 105, 106, 1417, 1561, 1602], "get_queue_timeout": [51, 54, 55, 100, 105, 106, 1417, 1562, 1603], "get_referrers_recurs": [51, 54, 55, 100, 105, 106, 1417], "get_show_func_wrapper_trace_mod": [51, 54, 55, 100, 105, 106, 1417, 1564, 1605], "get_tmp_dir": [51, 54, 55, 100, 105, 106, 1417, 1565], "gpu_is_avail": [51, 54, 55, 100, 105, 106, 446], "grad": [51, 54, 55, 100, 105, 106, 173, 174, 175, 1612, 1614, 1617, 2128, 2185, 2189], "handle_array_funct": [51, 54, 55, 100, 105, 106, 188], "handle_array_like_without_promot": [51, 54, 55, 100, 105, 106, 188], "handle_except": [51, 54, 55, 100, 105, 106], "handle_nest": [51, 54, 55, 100, 105, 106, 152, 161, 162, 170, 188], "handle_out_argu": [51, 54, 55, 100, 105, 106, 154, 155, 160, 162, 163, 170, 188], "infer_default_dtyp": [51, 54, 55, 100, 105, 106, 341], "infer_devic": [51, 54, 55, 100, 105, 106, 154, 155, 160, 162, 188], "infer_dtyp": [51, 54, 55, 100, 105, 106, 154, 155, 160, 162, 188], "inplace_arrays_support": [51, 54, 55, 100, 105, 106, 1417], "inplace_variables_support": [51, 54, 55, 100, 105, 106, 1417], "inputs_to_ivy_arrai": [51, 54, 55, 100, 105, 106, 162, 188], "inputs_to_native_arrai": [51, 54, 55, 100, 105, 106, 150, 162, 188], "integer_arrays_to_float": [51, 54, 55, 100, 105, 106, 188], "invalid_dtyp": [51, 54, 55, 100, 105, 106, 154, 341], "is_complex_dtyp": [51, 54, 55, 111, 112, 341, 411], "isscalar": [51, 54, 55, 100, 105, 106, 1417], "jac": [51, 54, 55, 100, 105, 106, 1612], "mt": [51, 54, 55, 172], "matric": [51, 54, 55, 61, 62, 78, 79, 126, 127, 186, 255, 300, 303, 323, 325, 327, 328, 330, 332, 1650, 1694, 1697, 1714, 1715, 1716, 1717, 1718, 1719, 1725, 1728, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1756, 1757, 1758, 1759, 1760, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1829, 1830, 1831, 1832, 1833, 1834, 1837, 2140, 2255, 2262], "n": [51, 54, 55, 61, 62, 69, 78, 79, 82, 83, 86, 87, 88, 89, 94, 95, 96, 97, 115, 116, 117, 126, 127, 130, 131, 134, 135, 136, 137, 142, 143, 144, 145, 148, 166, 255, 300, 301, 303, 323, 325, 327, 328, 330, 332, 834, 835, 836, 837, 838, 854, 855, 856, 857, 858, 859, 862, 896, 902, 903, 907, 908, 909, 910, 911, 913, 915, 922, 923, 924, 925, 926, 927, 928, 930, 933, 934, 935, 936, 937, 943, 946, 948, 951, 953, 959, 979, 1002, 1003, 1004, 1005, 1006, 1077, 1078, 1079, 1080, 1081, 1097, 1098, 1099, 1100, 1101, 1149, 1154, 1155, 1158, 1159, 1171, 1172, 1174, 1176, 1179, 1180, 1200, 1203, 1205, 1212, 1222, 1300, 1301, 1303, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1320, 1343, 1344, 1353, 1358, 1375, 1376, 1377, 1378, 1381, 1382, 1385, 1396, 1397, 1398, 1399, 1400, 1650, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1683, 1684, 1687, 1704, 1707, 1714, 1735, 1736, 1737, 1738, 1739, 1751, 1754, 1761, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1843, 1844, 1845, 1847, 1848, 1870, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1896, 1897, 1898, 1899, 1900, 1926, 1929, 1946, 1947, 1948, 1949, 1950, 1955, 1964, 1980, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2007, 2023, 2024, 2025, 2026, 2027, 2070, 2089, 2090, 2092, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126], "match_kwarg": [51, 54, 55, 100, 105, 106, 1417], "multiprocess": [51, 54, 55, 100, 103, 104, 105, 106, 173, 187, 1417], "ndim": [51, 54, 55, 69, 78, 79, 88, 89, 126, 127, 136, 137, 152, 158, 824, 825, 829, 830, 834, 835, 837, 1200, 1203, 1417, 1611, 1714, 1796, 1797, 1798, 1799, 1800, 1811, 1815, 2007, 2023, 2024, 2025, 2026, 2027, 2134, 2135], "int": [51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 101, 102, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 152, 154, 155, 156, 158, 159, 160, 161, 163, 165, 166, 167, 168, 170, 175, 205, 218, 219, 221, 238, 239, 241, 243, 244, 245, 246, 247, 255, 260, 262, 276, 277, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 310, 311, 312, 313, 314, 323, 325, 327, 328, 330, 332, 341, 359, 360, 361, 362, 363, 378, 384, 385, 388, 396, 399, 417, 420, 443, 446, 463, 464, 465, 471, 472, 473, 474, 475, 476, 481, 497, 498, 499, 500, 501, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 777, 778, 779, 780, 781, 805, 806, 808, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 874, 876, 877, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 907, 908, 909, 910, 911, 913, 914, 915, 916, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 933, 934, 935, 936, 937, 953, 958, 959, 961, 966, 967, 973, 974, 977, 979, 982, 985, 997, 998, 999, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1012, 1013, 1014, 1015, 1016, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1057, 1058, 1059, 1060, 1064, 1066, 1067, 1068, 1070, 1071, 1077, 1078, 1079, 1080, 1081, 1097, 1098, 1099, 1100, 1101, 1113, 1114, 1115, 1116, 1117, 1131, 1133, 1134, 1135, 1137, 1138, 1144, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1171, 1172, 1173, 1174, 1175, 1188, 1190, 1191, 1192, 1195, 1197, 1198, 1199, 1200, 1204, 1205, 1208, 1212, 1215, 1218, 1219, 1220, 1221, 1222, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1290, 1292, 1293, 1294, 1297, 1300, 1301, 1302, 1303, 1304, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1326, 1327, 1328, 1329, 1330, 1333, 1334, 1336, 1337, 1343, 1344, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1381, 1382, 1385, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1396, 1397, 1398, 1399, 1400, 1417, 1423, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1469, 1470, 1471, 1472, 1473, 1476, 1477, 1478, 1479, 1480, 1493, 1494, 1496, 1547, 1548, 1549, 1550, 1551, 1568, 1571, 1611, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1629, 1630, 1631, 1632, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1704, 1707, 1714, 1720, 1721, 1722, 1723, 1724, 1730, 1733, 1735, 1736, 1737, 1738, 1739, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1821, 1824, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1843, 1844, 1845, 1847, 1848, 1854, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1959, 1962, 1963, 1965, 1967, 1968, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2023, 2024, 2025, 2026, 2027, 2054, 2055, 2056, 2057, 2058, 2059, 2065, 2068, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2134, 2135, 2159, 2160, 2163, 2237, 2239, 2246, 2251, 2252, 2255, 2258, 2266], "normalize_axis_tupl": [51, 54, 55, 100, 105, 106], "num_arrays_in_memori": [51, 54, 55, 100, 105, 106, 1417], "num_cpu_cor": [51, 54, 55, 100, 105, 106, 155, 446], "num_gpu": [51, 54, 55, 100, 105, 106, 155, 166, 446], "num_ivy_arrays_on_dev": [51, 54, 55, 100, 105, 106, 446], "ones": [51, 54, 55, 61, 62, 69, 72, 73, 76, 77, 86, 87, 100, 103, 104, 105, 106, 109, 110, 117, 124, 125, 134, 135, 150, 153, 156, 160, 166, 172, 173, 255, 276, 277, 285, 286, 288, 310, 311, 312, 313, 314, 318, 319, 320, 321, 322, 336, 340, 446, 459, 460, 481, 557, 560, 896, 897, 997, 998, 999, 1000, 1001, 1612, 1614, 1615, 1617, 1650, 1672, 1673, 1674, 1675, 1676, 1986, 1987, 1988, 1991, 1992, 1993, 1996, 1997, 1998, 2128, 2140], "outputs_to_ivy_arrai": [51, 54, 55, 100, 105, 106, 150, 154, 155, 160, 162, 188], "percent_used_mem_on_dev": [51, 54, 55, 100, 105, 106, 446], "print_all_arrays_in_memori": [51, 54, 55, 100, 105, 106, 1417], "print_all_ivy_arrays_on_dev": [51, 54, 55, 100, 105, 106, 446], "promote_typ": [51, 54, 55, 100, 105, 106, 154, 341], "promote_types_of_input": [51, 54, 55, 100, 105, 106, 154, 163, 341], "seed": [51, 54, 55, 69, 76, 77, 86, 87, 90, 91, 100, 103, 104, 105, 106, 117, 124, 125, 134, 135, 165, 166, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 927, 928, 929, 930, 931, 1047, 1048, 1049, 1300, 1301, 1302, 1303, 1304, 1315, 1316, 1317, 1318, 1319, 1320, 1650, 1689, 1690, 1691, 1692, 1693, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2033, 2034, 2036, 2038, 2128, 2282], "set_array_mod": [51, 54, 55, 100, 105, 106, 1417, 1487, 1600], "set_default_complex_dtyp": [51, 54, 55, 100, 105, 106, 341, 371, 372, 440], "set_default_devic": [51, 54, 55, 100, 105, 106, 155, 446, 479], "set_default_dtyp": [51, 54, 55, 100, 105, 106, 154, 161, 341, 441], "set_default_float_dtyp": [51, 54, 55, 100, 105, 106, 154, 341, 375, 376, 401, 434, 442], "set_default_int_dtyp": [51, 54, 55, 100, 105, 106, 154, 341, 378, 401, 443], "set_default_uint_dtyp": [51, 54, 55, 100, 105, 106, 341, 379, 401, 444], "set_exception_trace_mod": [51, 54, 55, 100, 105, 106, 158, 1417, 1488, 1601], "set_min_bas": [51, 54, 55, 100, 105, 106, 1417], "set_min_denomin": [51, 54, 55, 100, 105, 106, 1417], "set_nestable_mod": [51, 54, 55, 100, 105, 106, 1417, 1492, 1602], "set_queue_timeout": [51, 54, 55, 100, 105, 106, 1417, 1498, 1603], "set_shape_array_mod": [51, 54, 55, 100, 105, 106, 1417, 1567, 1604], "set_show_func_wrapper_trace_mod": [51, 54, 55, 100, 105, 106, 158, 1417, 1500, 1605], "set_split_factor": [51, 54, 55, 100, 105, 106, 158, 446], "set_tmp_dir": [51, 54, 55, 100, 105, 106, 1417], "set_with_grad": [51, 54, 55, 100, 105, 106, 1612, 1647, 1649], "shape_array_mod": [51, 54, 55, 100, 105, 106, 1417, 1563, 1604], "size": [51, 54, 55, 69, 70, 71, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 100, 103, 104, 105, 106, 117, 118, 119, 124, 125, 126, 127, 130, 131, 134, 135, 136, 137, 165, 166, 173, 255, 290, 293, 446, 469, 470, 471, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 891, 892, 893, 894, 895, 896, 899, 904, 927, 928, 929, 930, 931, 933, 936, 953, 958, 974, 1068, 1069, 1070, 1071, 1113, 1114, 1115, 1116, 1117, 1149, 1150, 1151, 1161, 1162, 1163, 1171, 1174, 1200, 1205, 1221, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1244, 1245, 1246, 1247, 1248, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1310, 1311, 1312, 1313, 1314, 1315, 1318, 1343, 1344, 1353, 1355, 1356, 1357, 1358, 1370, 1371, 1372, 1373, 1374, 1392, 1395, 1417, 1547, 1548, 1549, 1550, 1551, 1650, 1709, 1710, 1711, 1712, 1713, 1714, 1735, 1736, 1738, 1751, 1754, 1766, 1767, 1768, 1769, 1770, 1786, 1789, 1796, 1797, 1798, 1799, 1800, 1811, 1812, 1813, 1814, 1815, 1839, 1843, 1870, 1886, 1887, 1888, 1889, 1890, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1924, 1980, 1981, 1982, 1983, 1984, 1985, 2007, 2008, 2009, 2010, 2011, 2012, 2023, 2024, 2025, 2026, 2027, 2116, 2117, 2120, 2122, 2125, 2169, 2170, 2171, 2237, 2239, 2240, 2245, 2246, 2248, 2255, 2261, 2266, 2267, 2268], "split_factor": [51, 54, 55, 100, 105, 106, 158, 446, 469], "split_func_cal": [51, 54, 55, 100, 105, 106, 446], "to_ivi": [51, 54, 55, 56, 107, 108, 1955, 1969], "to_ivy_shap": [51, 54, 55, 100, 105, 106, 1417], "to_n": [51, 54, 55, 56, 107, 108, 170], "to_native_arrays_and_back": [51, 54, 55, 100, 105, 106, 160, 162, 170, 188], "to_native_shap": [51, 54, 55, 100, 105, 106, 1417], "total_mem_on_dev": [51, 54, 55, 100, 105, 106, 155, 446], "tpu_is_avail": [51, 54, 55, 100, 105, 106, 446], "try_else_non": [51, 54, 55, 100, 105, 106, 1417], "type_promote_arrai": [51, 54, 55, 100, 105, 106, 154, 341], "unset_array_mod": [51, 54, 55, 100, 105, 106, 1417], "unset_default_complex_dtyp": [51, 54, 55, 100, 105, 106, 341], "unset_default_devic": [51, 54, 55, 100, 105, 106, 446], "unset_default_dtyp": [51, 54, 55, 100, 105, 106, 341, 435], "unset_default_float_dtyp": [51, 54, 55, 100, 105, 106, 341], "unset_default_int_dtyp": [51, 54, 55, 100, 105, 106, 341], "unset_default_uint_dtyp": [51, 54, 55, 100, 105, 106, 341], "unset_exception_trace_mod": [51, 54, 55, 100, 105, 106, 1417], "unset_nestable_mod": [51, 54, 55, 100, 105, 106, 1417], "unset_queue_timeout": [51, 54, 55, 100, 105, 106, 1417], "unset_shape_array_mod": [51, 54, 55, 100, 105, 106, 1417, 1600, 1603], "unset_show_func_wrapper_trace_mod": [51, 54, 55, 100, 105, 106, 1417], "unset_with_grad": [51, 54, 55, 100, 105, 106, 1612], "used_mem_on_dev": [51, 54, 55, 100, 105, 106, 446], "valid_dtyp": [51, 54, 55, 100, 105, 106, 341], "value_and_grad": [51, 54, 55, 100, 105, 106, 1612], "vmap": [51, 54, 55, 100, 105, 106, 187, 1417, 2140], "with_grad": [51, 54, 55, 100, 105, 106, 1612, 1613, 1641, 1647, 2181, 2182], "overview": [51, 100, 153, 166, 169, 186, 205, 248, 249, 255, 341, 446, 481, 1416, 1417, 1612, 1650, 1714, 1854, 1870, 1951, 1955, 1975, 1980, 2007, 2054, 2070, 2116, 2149, 2152, 2159, 2169, 2181, 2183, 2185, 2191], "forum": [51, 100, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 205, 248, 249, 255, 341, 446, 481, 1416, 1417, 1612, 1650, 1714, 1854, 1870, 1951, 1955, 1975, 1980, 2007, 2054, 2070, 2116, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2149, 2152, 2159, 2169, 2181, 2183, 2185, 2191], "abc": [52, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 103, 104, 172, 446, 448, 1417, 1466, 1468, 1955, 1974, 2134, 2135, 2157, 2158, 2159, 2163, 2185, 2189], "gelu": [52, 53, 101, 102, 205, 211, 2149], "approxim": [52, 53, 69, 78, 79, 101, 102, 115, 116, 117, 126, 127, 157, 164, 205, 207, 208, 209, 210, 211, 481, 487, 490, 492, 495, 502, 505, 507, 510, 512, 515, 517, 520, 562, 565, 567, 570, 592, 595, 597, 600, 652, 655, 657, 660, 662, 665, 667, 670, 727, 730, 757, 760, 762, 765, 782, 786, 787, 791, 953, 967, 978, 979, 1057, 1058, 1059, 1060, 1338, 1341, 1375, 1376, 1377, 1714, 1776, 1777, 1778, 1779, 1780, 1791, 1793, 1794, 1795, 2149, 2151], "138": [52, 53, 205, 207, 208, 210], "165": [52, 53, 205, 207, 208, 210, 1650, 1694, 1697], "leaky_relu": [52, 53, 101, 102, 205, 217, 2128], "alpha": [52, 53, 67, 68, 69, 101, 102, 115, 116, 117, 164, 165, 205, 213, 214, 215, 216, 217, 481, 497, 498, 499, 500, 501, 777, 778, 779, 780, 781, 859, 860, 861, 862, 863, 896, 898, 927, 928, 929, 930, 931, 1047, 1048, 1049, 1064, 1065, 1066, 1067, 1315, 1317, 1318, 1319], "slope": [52, 53, 69, 101, 102, 117, 205, 213, 214, 215, 216, 217, 805, 807, 1305, 1306, 1307, 1308, 1309], "neg": [52, 53, 67, 68, 69, 78, 79, 82, 83, 86, 87, 96, 97, 101, 102, 115, 116, 117, 126, 127, 130, 131, 134, 135, 144, 145, 152, 161, 163, 205, 213, 214, 215, 216, 217, 255, 257, 258, 276, 277, 481, 622, 625, 627, 628, 629, 630, 631, 716, 727, 730, 742, 745, 896, 897, 902, 903, 917, 920, 953, 973, 997, 998, 999, 1000, 1176, 1178, 1260, 1261, 1262, 1263, 1264, 1378, 1381, 1382, 1385, 1714, 1730, 1733, 1811, 1815, 1829, 1830, 1831, 1832, 1839, 1843, 1844, 1845, 1847, 1848, 1870, 1876, 1877, 1879, 1886, 1889, 1891, 1892, 1893, 1894, 1895, 1911, 1912, 1913, 1914, 1915, 1980, 1991, 1992, 1993, 1994, 1995, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2237, 2246, 2255, 2258], "leaki": [52, 53, 101, 102, 205, 213, 214, 215, 216, 217], "relu": [52, 53, 69, 98, 99, 101, 102, 165, 173, 174, 205, 213, 214, 215, 216, 217, 232, 805, 807, 1305, 1308, 1365, 1367, 2128], "39": [52, 53, 67, 68, 69, 86, 87, 101, 102, 115, 116, 117, 120, 121, 134, 135, 205, 213, 214, 215, 216, 217, 481, 507, 510, 592, 595, 652, 653, 655, 662, 663, 665, 666, 672, 675, 844, 847, 907, 908, 909, 910, 911, 1149, 1151, 1154, 1164, 1239, 1240, 1242, 1612, 1614, 1616, 1617, 1714, 1786, 1789, 1991, 1992, 1993, 1995, 2070, 2081, 2084], "85": [52, 53, 86, 87, 100, 101, 102, 105, 106, 115, 116, 120, 121, 124, 125, 134, 135, 205, 213, 214, 215, 216, 217, 481, 502, 504, 547, 550, 552, 554, 555, 556, 732, 734, 735, 736, 1417, 1568, 1571, 1612, 1624, 1626, 1627, 1650, 1694, 1696, 1697, 1698, 1980, 1986, 1987, 1991, 1992, 1993, 1996, 1997, 1999], "17": [52, 53, 69, 100, 101, 102, 105, 106, 115, 116, 117, 118, 119, 120, 121, 124, 125, 134, 135, 152, 156, 205, 213, 214, 215, 216, 217, 218, 220, 222, 255, 295, 298, 481, 497, 499, 577, 580, 672, 675, 707, 709, 711, 839, 840, 841, 842, 843, 844, 845, 907, 910, 911, 1002, 1003, 1004, 1005, 1006, 1012, 1013, 1015, 1097, 1098, 1099, 1100, 1101, 1149, 1150, 1154, 1158, 1159, 1162, 1163, 1200, 1208, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1237, 1417, 1456, 1458, 1513, 1516, 1517, 1612, 1614, 1616, 1617, 1650, 1652, 1654, 1656, 1689, 1692, 1694, 1696, 1697, 1698, 1714, 1735, 1738, 1816, 1820, 1955, 1964, 1980, 1986, 1988, 1990, 1991, 1993, 1996, 1998, 2000, 2002, 2005], "log_softmax": [52, 53, 101, 102, 205, 222], "98": [52, 53, 72, 73, 86, 87, 101, 102, 115, 116, 120, 121, 134, 135, 205, 218, 219, 220, 221, 222, 481, 552, 555, 567, 569, 571, 762, 764, 766, 1612, 1624, 1625, 1626, 1627, 1714, 1786, 1789, 1955, 1957, 1986, 1987, 1996, 1998, 2007, 2028, 2032, 2070, 2081, 2084], "35": [52, 53, 76, 77, 101, 102, 115, 116, 117, 124, 125, 126, 127, 134, 135, 218, 219, 220, 222, 481, 517, 519, 520, 521, 767, 769, 771, 849, 853, 907, 910, 1149, 1154, 1650, 1694, 1695, 1696, 1697, 1698, 1709, 1711, 1712, 1713, 1714, 1720, 1722, 1723, 1724, 1991, 1993, 1995, 1996, 2000, 2007, 2028, 2032, 2070, 2081, 2084], "0719": [52, 53, 101, 102, 218, 219, 220, 222], "62": [52, 53, 101, 102, 117, 132, 133, 134, 135, 218, 219, 220, 222, 481, 762, 765, 1166, 1168, 1170, 1975, 1976, 1978, 1979, 1980, 1986, 1988, 1996, 1999], "221": [52, 53, 218, 219], "82": [52, 53, 67, 68, 120, 121, 134, 135, 158, 218, 219, 507, 508, 1612, 1614, 1616, 1617, 1991, 1993, 1996, 1998], "mish": [52, 53, 101, 102, 205, 227], "30340147": [52, 53, 205, 223, 224, 226], "86509842": [52, 53, 101, 102, 205, 223, 224, 225, 226, 227], "sigmoid": [52, 53, 69, 101, 102, 117, 170, 173, 174, 205, 206, 212, 237, 854, 855, 856, 857, 858, 1315, 1316, 2128], "269": [52, 53, 205, 233, 234, 236], "731": [52, 53, 205, 233, 234, 236], "881": [52, 53, 67, 68, 115, 116, 205, 233, 234, 236, 481, 507, 508, 509, 510, 572, 574, 575, 732, 734], "softmax": [52, 53, 76, 77, 98, 99, 101, 102, 124, 125, 205, 242, 1650, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 2128], "union": [52, 53, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 154, 155, 156, 158, 159, 160, 161, 163, 167, 168, 170, 175, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 255, 257, 258, 260, 261, 262, 267, 269, 270, 271, 272, 274, 276, 277, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 327, 328, 332, 333, 335, 336, 337, 338, 339, 340, 341, 347, 348, 349, 352, 354, 355, 356, 357, 358, 359, 362, 364, 366, 368, 370, 371, 372, 374, 375, 376, 378, 379, 380, 382, 384, 385, 388, 396, 398, 399, 400, 401, 402, 403, 406, 408, 409, 410, 411, 412, 414, 415, 416, 417, 420, 422, 425, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 445, 446, 447, 449, 450, 451, 452, 453, 454, 456, 458, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 747, 749, 750, 751, 752, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 769, 770, 771, 772, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 785, 786, 787, 788, 790, 791, 792, 793, 795, 796, 797, 798, 799, 800, 801, 805, 806, 807, 808, 809, 812, 814, 816, 818, 819, 822, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 866, 867, 868, 869, 870, 871, 872, 874, 876, 877, 881, 882, 884, 885, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 910, 913, 914, 915, 916, 917, 920, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 943, 946, 947, 948, 951, 952, 953, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 985, 987, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1030, 1031, 1032, 1035, 1036, 1037, 1040, 1041, 1042, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1087, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1105, 1106, 1107, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1119, 1121, 1123, 1124, 1125, 1126, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1142, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1166, 1168, 1169, 1170, 1171, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1183, 1184, 1186, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1215, 1218, 1219, 1220, 1221, 1222, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1285, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1297, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1323, 1324, 1325, 1326, 1328, 1329, 1330, 1333, 1334, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1344, 1345, 1353, 1355, 1356, 1357, 1358, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1373, 1374, 1378, 1381, 1382, 1385, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1406, 1407, 1409, 1410, 1411, 1412, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1425, 1426, 1427, 1428, 1429, 1430, 1432, 1433, 1434, 1436, 1438, 1439, 1440, 1441, 1443, 1444, 1445, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1469, 1470, 1471, 1472, 1473, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1489, 1493, 1495, 1496, 1497, 1502, 1505, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1526, 1528, 1529, 1531, 1532, 1533, 1537, 1539, 1540, 1541, 1543, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1581, 1582, 1583, 1584, 1585, 1587, 1588, 1589, 1590, 1592, 1593, 1594, 1595, 1597, 1598, 1606, 1607, 1609, 1610, 1611, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1642, 1643, 1645, 1646, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1730, 1733, 1735, 1738, 1739, 1740, 1741, 1744, 1746, 1748, 1749, 1750, 1751, 1754, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1784, 1785, 1786, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1798, 1799, 1800, 1801, 1803, 1804, 1805, 1806, 1809, 1811, 1812, 1813, 1815, 1816, 1820, 1821, 1824, 1829, 1830, 1832, 1833, 1834, 1835, 1838, 1839, 1843, 1844, 1845, 1847, 1848, 1849, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1879, 1881, 1884, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1899, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1935, 1936, 1940, 1941, 1942, 1944, 1945, 1946, 1947, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1963, 1964, 1965, 1966, 1967, 1968, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2047, 2048, 2049, 2053, 2054, 2055, 2057, 2058, 2059, 2060, 2063, 2065, 2068, 2070, 2071, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2159, 2160, 2163, 2185, 2186, 2187, 2189, 2191, 2192, 2205, 2223, 2224, 2225, 2226], "422": [52, 53, 205, 238, 239, 241], "155": [52, 53, 124, 125, 205, 238, 239, 241, 1650, 1694, 1696, 1697, 1698], "softplu": [52, 53, 101, 102, 168, 205, 247, 2128], "beta": [52, 53, 69, 84, 85, 101, 102, 117, 132, 133, 168, 205, 243, 244, 245, 246, 247, 863, 896, 898, 900, 901, 927, 930, 1047, 1048, 1049, 1064, 1065, 1066, 1067, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1315, 1318, 1319, 1975, 1976, 1977, 1978, 1979], "threshold": [52, 53, 67, 68, 69, 101, 102, 115, 116, 117, 168, 205, 243, 244, 245, 246, 247, 481, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 805, 808, 864, 865, 866, 867, 868, 953, 956, 1365, 1366, 1367, 1368, 1369], "3461": [52, 53, 101, 102, 205, 243, 244, 245, 246, 247], "6491": [52, 53, 101, 102, 205, 243, 244, 245, 246, 247], "535": [52, 53, 101, 102, 205, 243, 244, 245, 246], "42": [52, 53, 86, 87, 101, 102, 120, 121, 132, 133, 134, 135, 170, 175, 205, 243, 244, 245, 246, 481, 547, 550, 907, 910, 1149, 1154, 1612, 1614, 1617, 1624, 1626, 1627, 1714, 1766, 1769, 1786, 1789, 1975, 1976, 1978, 1979, 1980, 1981, 1984, 1986, 1989, 1991, 1992, 1993, 1994, 1996, 1999, 2001, 2070, 2071, 2074, 2081, 2084], "22": [52, 53, 67, 68, 69, 70, 71, 86, 87, 94, 95, 101, 102, 117, 118, 119, 124, 125, 134, 135, 152, 205, 218, 220, 222, 243, 244, 246, 481, 552, 553, 555, 839, 840, 842, 844, 845, 849, 851, 907, 910, 911, 1149, 1150, 1154, 1162, 1163, 1164, 1229, 1230, 1232, 1234, 1235, 1237, 1239, 1240, 1241, 1242, 1243, 1353, 1359, 1386, 1387, 1388, 1389, 1390, 1456, 1458, 1552, 1553, 1606, 1607, 1609, 1650, 1689, 1692, 1694, 1696, 1697, 1698, 1714, 1735, 1738, 1756, 1759, 1786, 1789, 1955, 1964, 1974, 1986, 1988, 1991, 1992, 1993, 1996, 1998, 2007, 2028, 2032, 2070, 2076, 2077, 2081, 2082, 2084], "09": [52, 53, 67, 68, 120, 121, 134, 135, 205, 243, 244, 246, 481, 727, 728, 730, 772, 775, 1612, 1614, 1616, 1617, 1650, 1709, 1712, 1991, 1993], "31": [52, 53, 67, 68, 69, 115, 116, 117, 118, 119, 124, 125, 134, 135, 173, 205, 218, 221, 243, 244, 246, 255, 295, 298, 481, 547, 550, 672, 673, 675, 707, 709, 711, 849, 850, 852, 907, 910, 911, 1149, 1152, 1154, 1321, 1325, 1417, 1436, 1439, 1513, 1517, 1694, 1696, 1698, 1714, 1816, 1820, 1991, 1993, 1996, 1998], "55": [52, 53, 134, 135, 149, 243, 244, 481, 547, 550, 792, 796, 1417, 1508, 1511, 1714, 1756, 1759, 1786, 1789, 1816, 1820, 1980, 1991, 1993, 1994, 1996, 1998, 2070, 2081, 2084], "collect": [56, 103, 104, 107, 153, 158, 165, 166, 186, 205, 446, 1417, 1612, 1650, 1854, 1955, 1969, 1975, 1980, 2138, 2140, 2143, 2149, 2169, 2183, 2185], "include_deriv": [56, 57, 58, 59, 60, 107, 108, 1955, 1957, 1968], "nest": [56, 57, 58, 59, 60, 100, 103, 104, 105, 106, 107, 108, 150, 152, 161, 167, 173, 174, 187, 1417, 1584, 1587, 1611, 1612, 1622, 1641, 1647, 1649, 1951, 1952, 1953, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 2127, 2135, 2140, 2157, 2158, 2181, 2182, 2185, 2186, 2187, 2188, 2189, 2190], "unchang": [56, 57, 58, 59, 60, 69, 1012, 1015, 1200, 1208, 1321, 1322, 1650, 1689, 1692], "deriv": [56, 57, 58, 59, 60, 61, 62, 69, 72, 73, 107, 108, 109, 110, 117, 120, 121, 154, 155, 172, 174, 255, 271, 272, 274, 285, 286, 288, 318, 319, 320, 321, 322, 336, 337, 338, 339, 340, 896, 897, 900, 997, 998, 999, 1000, 1001, 1131, 1132, 1133, 1134, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1639, 1640, 1955, 1957, 1968, 2181, 2182, 2185, 2189, 2191], "tupl": [56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 76, 77, 78, 79, 82, 83, 88, 89, 90, 91, 94, 95, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 154, 158, 159, 160, 165, 166, 170, 173, 174, 187, 207, 209, 211, 213, 215, 217, 218, 220, 222, 223, 225, 227, 228, 230, 232, 233, 235, 237, 238, 240, 242, 243, 245, 247, 255, 260, 261, 262, 285, 287, 289, 305, 308, 310, 312, 314, 318, 320, 322, 336, 337, 339, 341, 354, 356, 358, 359, 360, 361, 362, 363, 364, 366, 368, 390, 391, 393, 394, 396, 398, 400, 408, 409, 411, 412, 414, 416, 428, 429, 431, 433, 439, 446, 452, 459, 460, 472, 473, 475, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 669, 671, 672, 674, 676, 677, 679, 681, 682, 684, 686, 687, 689, 691, 692, 694, 696, 697, 699, 701, 702, 704, 706, 707, 709, 711, 712, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 778, 780, 782, 783, 785, 787, 788, 790, 792, 793, 795, 797, 798, 800, 814, 816, 818, 824, 826, 828, 829, 831, 833, 834, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 858, 859, 861, 863, 864, 866, 868, 873, 874, 876, 877, 891, 892, 893, 894, 895, 896, 902, 903, 913, 914, 915, 916, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 933, 934, 935, 936, 937, 943, 944, 945, 946, 947, 953, 958, 959, 960, 961, 962, 966, 967, 972, 974, 977, 987, 988, 990, 991, 997, 999, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1017, 1021, 1027, 1028, 1030, 1031, 1050, 1051, 1053, 1054, 1057, 1058, 1059, 1060, 1062, 1063, 1077, 1078, 1079, 1080, 1081, 1087, 1089, 1091, 1097, 1098, 1099, 1100, 1101, 1121, 1123, 1125, 1144, 1146, 1148, 1149, 1150, 1151, 1152, 1155, 1158, 1159, 1162, 1163, 1164, 1176, 1179, 1183, 1184, 1186, 1187, 1195, 1197, 1199, 1200, 1204, 1205, 1212, 1217, 1218, 1219, 1221, 1222, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1255, 1258, 1259, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1283, 1285, 1287, 1289, 1294, 1297, 1300, 1302, 1304, 1315, 1318, 1321, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1333, 1334, 1336, 1337, 1338, 1340, 1342, 1343, 1345, 1353, 1355, 1356, 1357, 1359, 1360, 1361, 1363, 1365, 1366, 1368, 1370, 1371, 1372, 1373, 1374, 1378, 1381, 1382, 1385, 1386, 1387, 1388, 1389, 1390, 1396, 1397, 1398, 1399, 1400, 1406, 1407, 1409, 1411, 1412, 1414, 1417, 1418, 1420, 1422, 1425, 1427, 1429, 1430, 1432, 1434, 1436, 1438, 1440, 1441, 1443, 1445, 1451, 1453, 1455, 1456, 1458, 1460, 1461, 1463, 1465, 1469, 1470, 1471, 1472, 1473, 1476, 1478, 1480, 1481, 1483, 1485, 1489, 1493, 1495, 1497, 1508, 1510, 1512, 1513, 1515, 1517, 1518, 1520, 1522, 1524, 1526, 1528, 1529, 1531, 1533, 1537, 1539, 1541, 1547, 1549, 1551, 1552, 1554, 1556, 1568, 1570, 1572, 1573, 1575, 1577, 1578, 1579, 1581, 1584, 1585, 1589, 1590, 1592, 1594, 1595, 1597, 1606, 1607, 1609, 1611, 1612, 1614, 1617, 1618, 1621, 1624, 1626, 1629, 1632, 1642, 1643, 1645, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1693, 1694, 1696, 1698, 1699, 1700, 1701, 1702, 1703, 1709, 1711, 1713, 1714, 1715, 1717, 1719, 1720, 1722, 1724, 1740, 1741, 1742, 1744, 1746, 1748, 1750, 1756, 1758, 1760, 1761, 1763, 1765, 1766, 1767, 1768, 1769, 1770, 1776, 1777, 1778, 1779, 1780, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1811, 1812, 1813, 1815, 1821, 1824, 1825, 1826, 1829, 1830, 1832, 1844, 1845, 1847, 1848, 1855, 1857, 1859, 1860, 1862, 1864, 1865, 1867, 1869, 1870, 1871, 1873, 1875, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1890, 1891, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1906, 1908, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1918, 1920, 1921, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1941, 1942, 1944, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1959, 1961, 1963, 1964, 1965, 1966, 1967, 1968, 1971, 1972, 1973, 1974, 1981, 1983, 1985, 1986, 1988, 1990, 1991, 1993, 1995, 1996, 1998, 2000, 2002, 2004, 2006, 2007, 2018, 2020, 2022, 2023, 2024, 2025, 2026, 2027, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2055, 2057, 2059, 2070, 2071, 2073, 2075, 2076, 2078, 2080, 2085, 2086, 2087, 2088, 2089, 2091, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2152, 2154, 2159, 2160, 2163, 2164, 2167, 2237, 2245, 2246, 2251, 2253, 2255, 2258, 2261, 2263], "kei": [56, 57, 58, 69, 76, 77, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 153, 159, 164, 165, 166, 173, 207, 209, 211, 213, 215, 217, 218, 220, 222, 223, 225, 227, 228, 230, 232, 233, 235, 237, 238, 240, 242, 243, 245, 247, 285, 287, 289, 310, 312, 314, 318, 320, 322, 336, 337, 339, 354, 356, 358, 364, 366, 368, 396, 398, 400, 408, 409, 411, 412, 414, 416, 429, 431, 433, 472, 473, 475, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 669, 671, 672, 674, 676, 677, 679, 681, 682, 684, 686, 687, 689, 691, 692, 694, 696, 697, 699, 701, 702, 704, 706, 707, 709, 711, 712, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 778, 780, 782, 783, 785, 787, 788, 790, 792, 793, 795, 797, 798, 800, 814, 816, 818, 854, 858, 859, 861, 863, 864, 866, 868, 891, 893, 895, 922, 926, 933, 937, 997, 999, 1001, 1017, 1021, 1087, 1089, 1091, 1121, 1123, 1125, 1144, 1146, 1148, 1171, 1172, 1173, 1174, 1175, 1195, 1197, 1199, 1285, 1287, 1289, 1321, 1323, 1325, 1326, 1328, 1330, 1338, 1340, 1342, 1343, 1344, 1365, 1366, 1368, 1370, 1371, 1373, 1396, 1397, 1406, 1407, 1409, 1411, 1412, 1414, 1417, 1418, 1420, 1422, 1423, 1425, 1427, 1429, 1430, 1432, 1434, 1436, 1438, 1440, 1441, 1443, 1445, 1446, 1451, 1453, 1455, 1456, 1458, 1460, 1461, 1463, 1465, 1469, 1471, 1473, 1476, 1478, 1480, 1481, 1483, 1485, 1493, 1495, 1497, 1508, 1510, 1512, 1513, 1515, 1517, 1518, 1520, 1522, 1524, 1526, 1528, 1529, 1531, 1533, 1537, 1539, 1541, 1547, 1549, 1551, 1552, 1554, 1556, 1568, 1570, 1572, 1573, 1575, 1577, 1578, 1579, 1581, 1584, 1585, 1589, 1590, 1592, 1594, 1595, 1597, 1606, 1607, 1609, 1624, 1626, 1642, 1643, 1645, 1650, 1652, 1654, 1656, 1662, 1664, 1666, 1667, 1669, 1671, 1689, 1691, 1693, 1694, 1696, 1698, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1715, 1717, 1719, 1720, 1722, 1724, 1746, 1748, 1750, 1756, 1758, 1760, 1761, 1763, 1765, 1766, 1768, 1770, 1776, 1778, 1780, 1796, 1798, 1800, 1801, 1803, 1805, 1829, 1830, 1832, 1855, 1857, 1859, 1860, 1862, 1864, 1865, 1867, 1869, 1871, 1873, 1875, 1886, 1890, 1891, 1893, 1895, 1906, 1908, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1921, 1923, 1925, 1926, 1928, 1930, 1941, 1942, 1944, 1946, 1947, 1949, 1951, 1952, 1953, 1955, 1959, 1965, 1969, 1981, 1983, 1985, 1986, 1988, 1990, 1991, 1993, 1995, 1996, 1998, 2000, 2002, 2004, 2006, 2018, 2020, 2022, 2034, 2035, 2037, 2039, 2040, 2042, 2044, 2045, 2047, 2055, 2057, 2059, 2071, 2073, 2075, 2076, 2078, 2080, 2089, 2091, 2097, 2099, 2101, 2102, 2104, 2111, 2112, 2114, 2117, 2119, 2121, 2122, 2124, 2126, 2140, 2143, 2147, 2152, 2153, 2156, 2157, 2158, 2169, 2180, 2185, 2189, 2237, 2239, 2251, 2252, 2254, 2272, 2277], "word": [56, 57, 58, 152, 164, 255, 257, 258, 1980, 1996, 1999, 2127, 2152, 2153, 2156], "cont_inplac": [56, 58, 60], "leaf": [56, 59, 103, 104, 142, 143, 152, 161, 173, 1955, 1966, 1967, 1969, 2076, 2078, 2080], "travers": [56, 59, 60, 107, 108, 152, 154, 170, 1955, 1968], "lowest": [56, 59, 60, 86, 87, 107, 108, 134, 135, 161, 187, 1955, 1968, 1980, 1986, 1987, 1988, 1989, 1990, 2127, 2137, 2141, 2145], "asarrai": [61, 62, 69, 70, 71, 100, 105, 106, 117, 118, 119, 162, 163, 164, 165, 255, 1171, 1172, 1173, 1175, 1255, 1256, 1257, 1258, 1259, 1343, 1345, 1417, 1451, 1454, 1493, 1495, 1496, 1497, 1508, 1509, 1513, 1514, 1568, 1569, 1570, 1571, 1572, 1650, 1652, 1655, 2033, 2039, 2043], "nativedtyp": [61, 62, 63, 64, 69, 76, 77, 86, 87, 88, 89, 94, 95, 109, 110, 117, 126, 127, 134, 135, 136, 137, 142, 143, 154, 155, 160, 167, 170, 255, 257, 258, 260, 261, 262, 270, 271, 272, 274, 276, 277, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 305, 306, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 333, 335, 336, 337, 338, 339, 340, 341, 348, 349, 352, 370, 371, 372, 374, 375, 376, 378, 379, 380, 382, 384, 401, 402, 427, 435, 445, 854, 855, 856, 857, 858, 859, 860, 862, 891, 892, 893, 894, 895, 896, 897, 899, 900, 904, 905, 906, 927, 928, 929, 930, 931, 953, 958, 974, 997, 998, 999, 1000, 1001, 1047, 1048, 1049, 1068, 1069, 1070, 1071, 1119, 1131, 1133, 1265, 1266, 1267, 1268, 1269, 1275, 1276, 1277, 1278, 1279, 1300, 1301, 1302, 1303, 1304, 1315, 1316, 1317, 1318, 1319, 1320, 1353, 1356, 1392, 1395, 1650, 1689, 1690, 1692, 1714, 1844, 1845, 1847, 1848, 1980, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2015, 2016, 2070, 2071, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2097, 2098, 2099, 2100, 2101, 2106, 2110, 2159, 2160, 2163], "datatyp": [61, 62, 103, 104, 167, 255, 260, 261, 285, 286, 288, 305, 306, 308, 341, 370, 427, 435, 2194, 2200], "nativedevic": [61, 62, 65, 66, 69, 86, 87, 109, 110, 113, 114, 117, 134, 135, 154, 155, 158, 160, 167, 255, 257, 258, 260, 261, 262, 270, 271, 272, 274, 276, 277, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 305, 306, 308, 310, 311, 313, 315, 316, 318, 319, 320, 321, 322, 333, 335, 336, 337, 338, 339, 340, 446, 447, 450, 451, 452, 453, 454, 456, 458, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 480, 854, 855, 856, 857, 858, 859, 860, 862, 896, 897, 902, 903, 992, 993, 994, 996, 997, 998, 999, 1000, 1001, 1047, 1048, 1049, 1300, 1301, 1302, 1303, 1304, 1315, 1316, 1317, 1319, 1320, 1378, 1381, 1382, 1385, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2159, 2160, 2163, 2185, 2186, 2187, 2189, 2191, 2192], "interpret": [61, 62, 153, 255, 260, 261, 262, 305, 306, 308, 2141], "copy_arrai": [61, 62, 100, 105, 106, 255], "to_ivy_arrai": [61, 62, 255, 267, 268, 269], "empty_lik": [61, 62, 109, 110, 168, 255], "deafult": [61, 62, 88, 89, 136, 137, 255, 271, 272, 274, 2007, 2008, 2009, 2010, 2011, 2012], "uniniti": [61, 62, 255, 270, 271, 272, 274], "from_dlpack": [61, 62, 109, 110, 255], "full_lik": [61, 62, 109, 110, 167, 255, 289], "scalar": [61, 62, 67, 68, 69, 70, 71, 101, 102, 109, 110, 115, 116, 117, 118, 119, 126, 127, 154, 164, 187, 213, 215, 217, 255, 285, 286, 287, 288, 289, 310, 311, 312, 313, 314, 481, 497, 498, 499, 500, 501, 777, 778, 779, 780, 781, 824, 825, 827, 829, 830, 832, 834, 835, 837, 881, 882, 883, 884, 885, 922, 923, 924, 925, 926, 953, 957, 959, 960, 962, 967, 970, 977, 987, 988, 990, 1027, 1028, 1030, 1057, 1058, 1059, 1060, 1072, 1073, 1075, 1121, 1124, 1200, 1201, 1202, 1203, 1211, 1333, 1336, 1417, 1594, 1595, 1596, 1597, 1598, 1606, 1610, 1714, 1844, 1845, 1847, 1848, 2140, 2152, 2154], "fill": [61, 62, 69, 86, 87, 88, 89, 103, 104, 109, 110, 117, 134, 135, 136, 137, 165, 255, 270, 284, 285, 286, 287, 288, 289, 295, 297, 299, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 333, 335, 336, 337, 338, 339, 340, 859, 862, 896, 897, 953, 973, 997, 998, 999, 1000, 1001, 1047, 1049, 1260, 1261, 1262, 1263, 1264, 1315, 1317, 1319, 1980, 1986, 1987, 1988, 1989, 1990, 2007, 2023, 2024, 2025, 2026, 2027, 2159, 2160, 2165, 2167, 2168], "000123": [61, 62, 255, 285, 286, 288], "linspac": [61, 62, 109, 110, 160, 168, 170, 255, 257, 258, 2128, 2147], "stop": [61, 62, 72, 73, 109, 110, 120, 121, 160, 168, 170, 187, 255, 257, 258, 259, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 446, 448, 471, 1612, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1642, 1643, 1644, 1645, 1646, 1951, 1952, 1953, 1954, 1955, 1967, 2140, 2185, 2186, 2187, 2188, 2189, 2190], "endpoint": [61, 62, 109, 110, 160, 255, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 2159, 2167], "logspac": [61, 62, 109, 110, 170, 255, 299], "rang": [61, 62, 109, 110, 154, 158, 166, 170, 173, 174, 175, 255, 257, 258, 290, 293, 295, 296, 297, 298, 299, 1417, 1451, 1454, 1611, 1612, 1647, 2033, 2034, 2038, 2070, 2071, 2074, 2076, 2079, 2097, 2100, 2106, 2110, 2128, 2140, 2146, 2159, 2167, 2237, 2241, 2245, 2246, 2248, 2255, 2262, 2266, 2267, 2268, 2269], "sampl": [61, 62, 69, 86, 87, 94, 95, 109, 110, 115, 116, 117, 134, 135, 142, 143, 162, 165, 166, 255, 290, 293, 295, 296, 297, 298, 299, 854, 855, 856, 857, 858, 859, 860, 862, 927, 928, 929, 930, 931, 932, 953, 979, 1047, 1048, 1049, 1113, 1114, 1115, 1116, 1117, 1149, 1156, 1161, 1300, 1301, 1302, 1303, 1304, 1315, 1316, 1317, 1318, 1319, 1320, 1375, 1376, 1377, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2070, 2102, 2103, 2104, 2105, 2111, 2113, 2114, 2115, 2169, 2177], "on_valu": [61, 62, 109, 110, 255, 295, 296, 297, 298, 299, 310, 311, 312, 313, 314], "off_valu": [61, 62, 109, 110, 255, 295, 296, 297, 298, 299, 310, 311, 312, 313, 314], "float32": [61, 62, 63, 64, 76, 77, 109, 110, 111, 112, 118, 119, 124, 125, 142, 143, 154, 156, 165, 166, 255, 295, 296, 297, 298, 299, 310, 311, 312, 314, 318, 321, 336, 340, 341, 347, 348, 364, 365, 366, 368, 375, 376, 380, 382, 384, 385, 386, 388, 390, 391, 401, 408, 409, 411, 412, 414, 415, 416, 417, 420, 429, 432, 433, 436, 442, 896, 904, 907, 910, 953, 962, 1027, 1030, 1149, 1154, 1392, 1395, 1417, 1589, 1590, 1593, 1650, 1662, 1664, 1665, 1672, 1673, 1675, 1684, 1685, 1686, 1688, 2076, 2080, 2205, 2225], "cuda": [61, 62, 69, 86, 87, 109, 110, 117, 118, 119, 134, 135, 170, 187, 255, 290, 293, 295, 296, 297, 298, 299, 310, 311, 313, 446, 449, 450, 451, 468, 469, 854, 855, 856, 857, 859, 862, 1047, 1049, 1300, 1301, 1302, 1303, 1304, 1315, 1316, 1317, 1319, 1320, 1481, 1483, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2127, 2145, 2159, 2160, 2163, 2164, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2189, 2191, 2192], "evenli": [61, 62, 69, 82, 83, 103, 104, 109, 110, 115, 116, 130, 131, 255, 257, 258, 290, 293, 295, 296, 297, 298, 299, 953, 979, 1375, 1376, 1377, 1650, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1683, 1684, 1687, 1870, 1916, 1917, 1918, 1919, 1920], "simplic": [61, 62, 67, 68, 78, 79, 115, 116, 157, 168, 174, 186, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 296, 298, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 403, 406, 417, 420, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 688, 689, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 839, 842, 844, 847, 849, 852, 896, 897, 907, 910, 917, 920, 922, 925, 932, 943, 946, 953, 959, 976, 997, 1000, 1149, 1150, 1151, 1152, 1154, 1156, 1162, 1163, 1164, 1176, 1178, 1179, 1200, 1218, 1229, 1232, 1234, 1237, 1239, 1242, 1294, 1297, 1321, 1324, 1417, 1476, 1479, 1493, 1496, 1502, 1505, 1508, 1511, 1594, 1598, 1612, 1642, 1646, 1650, 1652, 1655, 1662, 1665, 1667, 1670, 1672, 1675, 1684, 1687, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1712, 1714, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1733, 1735, 1738, 1740, 1741, 1744, 1746, 1747, 1749, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1804, 1806, 1809, 1811, 1815, 1816, 1820, 1821, 1824, 1839, 1843, 1844, 1848, 1849, 1853, 1870, 1871, 1874, 1876, 1879, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1899, 1901, 1904, 1906, 1909, 1911, 1914, 1916, 1919, 1921, 1924, 1926, 1929, 1931, 1935, 1936, 1940, 1941, 1945, 1946, 1950, 1975, 1976, 1979, 2007, 2008, 2011, 2013, 2016, 2023, 2026, 2028, 2032, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2054, 2055, 2058, 2065, 2068, 2070, 2085, 2088, 2089, 2092, 2093, 2096, 2097, 2100, 2102, 2105, 2106, 2110, 2111, 2115], "nestabl": [61, 62, 67, 68, 78, 79, 115, 116, 148, 156, 157, 163, 166, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 296, 298, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 403, 406, 417, 420, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 688, 689, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 839, 842, 844, 847, 849, 852, 896, 897, 902, 903, 907, 910, 917, 920, 922, 925, 932, 943, 946, 953, 959, 997, 1000, 1149, 1150, 1151, 1152, 1154, 1156, 1162, 1163, 1164, 1176, 1178, 1179, 1200, 1218, 1229, 1232, 1234, 1237, 1239, 1242, 1294, 1297, 1378, 1381, 1382, 1385, 1417, 1476, 1479, 1493, 1496, 1502, 1505, 1508, 1511, 1578, 1582, 1594, 1598, 1612, 1642, 1646, 1650, 1652, 1655, 1662, 1665, 1667, 1670, 1672, 1675, 1684, 1687, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1712, 1714, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1733, 1735, 1738, 1740, 1741, 1744, 1746, 1747, 1749, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1804, 1806, 1809, 1811, 1815, 1816, 1820, 1821, 1824, 1839, 1843, 1844, 1848, 1849, 1853, 1870, 1871, 1874, 1876, 1879, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1899, 1901, 1904, 1906, 1909, 1911, 1914, 1916, 1919, 1921, 1924, 1926, 1929, 1931, 1935, 1936, 1940, 1941, 1945, 1946, 1950, 1975, 1976, 1979, 2007, 2008, 2011, 2013, 2016, 2023, 2026, 2028, 2032, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2054, 2055, 2058, 2065, 2068, 2070, 2085, 2088, 2089, 2092, 2093, 2096, 2097, 2100, 2102, 2105, 2106, 2110, 2111, 2115, 2116, 2117, 2120, 2122, 2125, 2127], "01": [61, 62, 69, 70, 71, 72, 73, 117, 118, 119, 120, 121, 126, 127, 134, 135, 151, 175, 255, 295, 296, 298, 481, 672, 675, 747, 750, 752, 755, 869, 871, 896, 901, 907, 910, 943, 946, 1097, 1100, 1121, 1122, 1123, 1125, 1135, 1137, 1149, 1154, 1159, 1176, 1179, 1193, 1194, 1417, 1469, 1470, 1471, 1472, 1473, 1568, 1571, 1612, 1614, 1616, 1617, 1618, 1619, 1620, 1621, 1629, 1630, 1631, 1632, 1714, 1746, 1749, 1750, 1816, 1820, 1980, 1991, 1994, 1996, 1998], "02": [61, 62, 72, 73, 84, 85, 86, 87, 115, 116, 120, 121, 134, 135, 165, 255, 295, 296, 298, 481, 502, 504, 507, 509, 672, 675, 907, 910, 1097, 1100, 1149, 1154, 1159, 1417, 1568, 1571, 1612, 1614, 1616, 1617, 1618, 1619, 1620, 1621, 1629, 1630, 1631, 1632, 1975, 1976, 1977, 1979, 1980, 1991, 1992, 1993, 1996, 1999], "03": [61, 62, 67, 68, 72, 73, 115, 116, 120, 121, 134, 135, 255, 295, 296, 298, 481, 567, 568, 569, 571, 662, 665, 1417, 1568, 1571, 1612, 1618, 1619, 1620, 1621, 1629, 1631, 1632, 1650, 1709, 1712, 1714, 1756, 1759, 1991, 1993, 1996, 2000], "04": [61, 62, 72, 73, 101, 102, 111, 112, 120, 121, 166, 205, 213, 215, 216, 217, 218, 221, 255, 295, 296, 298, 341, 385, 387, 388, 389, 481, 597, 600, 1417, 1559, 1612, 1614, 1616, 1617, 1618, 1620, 1621, 1629, 1630, 1631, 1632, 1650, 1709, 1712], "05": [61, 62, 67, 68, 69, 72, 73, 84, 85, 115, 116, 117, 120, 121, 132, 133, 165, 166, 255, 295, 296, 298, 481, 672, 673, 674, 675, 676, 814, 815, 816, 817, 818, 896, 901, 953, 954, 970, 1107, 1108, 1109, 1110, 1111, 1121, 1122, 1123, 1124, 1125, 1135, 1137, 1290, 1291, 1417, 1490, 1508, 1511, 1559, 1612, 1614, 1617, 1618, 1619, 1620, 1621, 1629, 1630, 1631, 1632, 1714, 1766, 1769, 1975, 1976, 1977, 1978, 1979, 2183, 2184, 2194, 2195], "464": [61, 62, 67, 68, 134, 135, 255, 295, 296, 298, 481, 512, 513, 517, 520, 1991, 1995], "15888336": [61, 62, 255, 295, 296, 298], "1000": [61, 62, 109, 110, 173, 255, 295, 296, 297, 298, 299], "2154": [61, 62, 255, 295, 296, 298], "43469003": [61, 62, 255, 295, 296, 298], "10000": [61, 62, 109, 110, 255, 295, 296, 297, 298, 299], "meshgrid": [61, 62, 109, 110, 255], "spars": [61, 62, 80, 81, 109, 110, 128, 129, 255, 300, 301, 302, 303, 304, 1854, 1865, 1866, 1867, 1868, 1869], "xy": [61, 62, 109, 110, 255, 300, 301, 302, 303, 304], "arbitrari": [61, 62, 63, 64, 69, 103, 104, 111, 112, 152, 160, 161, 163, 164, 166, 174, 187, 255, 300, 301, 303, 341, 354, 355, 356, 357, 358, 429, 430, 431, 432, 433, 824, 825, 829, 830, 834, 835, 1612, 1622, 2141, 2146], "grid": [61, 62, 156, 166, 186, 255, 300, 301, 303], "coordin": [61, 62, 67, 68, 88, 89, 115, 116, 117, 136, 137, 255, 300, 301, 303, 481, 517, 518, 519, 520, 521, 896, 902, 903, 1057, 1059, 1200, 1216, 1217, 1282, 1283, 1353, 1359, 1378, 1381, 1382, 1385, 1386, 1390, 2007, 2023, 2024, 2025, 2026, 2027], "cartesian": [61, 62, 255, 300, 301, 303], "ij": [61, 62, 94, 95, 255, 300, 301, 303, 2070, 2081, 2082, 2084], "vector": [61, 62, 69, 70, 71, 76, 77, 78, 79, 118, 119, 124, 125, 126, 127, 186, 255, 300, 301, 303, 913, 915, 927, 928, 930, 1149, 1155, 1200, 1218, 1294, 1297, 1315, 1318, 1417, 1441, 1442, 1443, 1444, 1445, 1451, 1454, 1518, 1520, 1522, 1611, 1650, 1694, 1695, 1696, 1697, 1698, 1714, 1720, 1721, 1722, 1723, 1724, 1740, 1741, 1744, 1751, 1754, 1761, 1764, 1786, 1789, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1834, 1838, 1839, 1843, 1844, 1845, 1847, 1848, 1849, 1850, 1853, 2140, 2169, 2179], "ignor": [61, 62, 103, 104, 153, 156, 166, 187, 255, 300, 301, 303, 932, 1149, 1156, 1955, 1967, 1968, 2146, 2152, 2155, 2185, 2189], "rank": [61, 62, 69, 78, 79, 82, 83, 96, 97, 117, 126, 127, 130, 131, 144, 145, 158, 255, 300, 301, 303, 896, 897, 997, 1000, 1200, 1218, 1294, 1297, 1310, 1311, 1312, 1313, 1314, 1353, 1358, 1714, 1720, 1723, 1730, 1733, 1776, 1777, 1778, 1779, 1780, 1796, 1797, 1798, 1799, 1800, 1806, 1809, 1829, 1830, 1831, 1832, 1833, 1839, 1843, 1844, 1845, 1847, 1848, 1870, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1926, 1929, 1941, 1945, 1946, 1947, 1948, 1949, 1950, 2007, 2023, 2026, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126], "length": [61, 62, 69, 82, 83, 100, 103, 104, 105, 106, 117, 130, 131, 159, 166, 173, 255, 257, 258, 300, 301, 303, 869, 870, 871, 872, 896, 898, 900, 901, 904, 913, 915, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 943, 946, 953, 959, 1002, 1003, 1004, 1005, 1006, 1064, 1066, 1097, 1098, 1099, 1100, 1101, 1131, 1133, 1135, 1137, 1149, 1155, 1158, 1159, 1171, 1174, 1176, 1179, 1193, 1194, 1200, 1218, 1294, 1297, 1315, 1318, 1343, 1344, 1360, 1361, 1363, 1392, 1395, 1417, 1611, 1714, 1811, 1815, 1816, 1820, 1870, 1906, 1907, 1908, 1909, 1910, 2157, 2158, 2237, 2247], "ni": [61, 62, 255, 300, 301, 303], "len": [61, 62, 69, 78, 79, 117, 126, 127, 152, 153, 163, 164, 166, 172, 175, 255, 300, 301, 303, 1310, 1311, 1312, 1313, 1314, 1353, 1358, 1714, 1834, 1835, 1836, 1837, 1838], "xi": [61, 62, 255, 300, 301, 303], "one_hot": [61, 62, 109, 110, 175, 255, 314, 2128], "scatter": [61, 62, 70, 71, 109, 110, 118, 119, 168, 255, 310, 311, 312, 313, 314, 1417, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 2147], "hot": [61, 62, 109, 110, 255, 310, 311, 312, 313, 314], "unless": [61, 62, 69, 78, 79, 109, 110, 117, 151, 155, 163, 187, 255, 310, 311, 312, 313, 314, 814, 816, 818, 953, 974, 1121, 1122, 1123, 1125, 1275, 1276, 1277, 1278, 1279, 1714, 1776, 1777, 1779], "overrid": [61, 62, 109, 110, 150, 255, 310, 311, 312, 313, 314], "ones_lik": [61, 62, 109, 110, 151, 175, 255, 322, 2128], "tril": [61, 62, 109, 110, 255], "k": [61, 62, 69, 76, 77, 78, 79, 86, 87, 109, 110, 115, 116, 117, 124, 125, 126, 127, 134, 135, 148, 149, 164, 165, 170, 255, 276, 277, 278, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 677, 679, 681, 854, 855, 856, 857, 858, 859, 862, 896, 897, 902, 903, 917, 918, 919, 920, 927, 928, 929, 930, 931, 997, 998, 999, 1000, 1001, 1171, 1174, 1176, 1178, 1200, 1219, 1221, 1300, 1301, 1303, 1315, 1316, 1317, 1318, 1320, 1326, 1327, 1328, 1329, 1330, 1343, 1344, 1370, 1371, 1372, 1373, 1374, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1417, 1425, 1428, 1650, 1709, 1710, 1711, 1712, 1713, 1714, 1730, 1731, 1732, 1733, 1734, 1761, 1764, 1766, 1768, 1769, 1770, 1796, 1797, 1798, 1799, 1800, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1829, 1830, 1831, 1832, 1833, 1955, 1964, 1980, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2007, 2023, 2026, 2136, 2140], "innermost": [61, 62, 78, 79, 126, 127, 255, 323, 325, 327, 328, 330, 332, 1714, 1715, 1716, 1717, 1718, 1719, 1725, 1728, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1756, 1757, 1758, 1759, 1760, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1829, 1830, 1831, 1832, 1833], "mxn": [61, 62, 78, 79, 126, 127, 255, 323, 325, 327, 328, 330, 332, 1714, 1735, 1736, 1737, 1738, 1739, 1766, 1767, 1768, 1769, 1770, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1816, 1820, 1829, 1830, 1831, 1832, 1833], "diagon": [61, 62, 69, 78, 79, 117, 126, 127, 255, 276, 277, 323, 325, 327, 328, 330, 332, 896, 897, 902, 903, 917, 920, 997, 998, 999, 1000, 1001, 1176, 1178, 1378, 1381, 1382, 1385, 1714, 1730, 1733, 1739, 1829, 1830, 1831, 1832, 1833], "triangular": [61, 62, 78, 79, 126, 127, 255, 323, 325, 327, 328, 330, 332, 896, 902, 903, 1378, 1381, 1382, 1385, 1714, 1715, 1716, 1717, 1718, 1719, 1746, 1749, 1796, 1797, 1798, 1799, 1800], "triu": [61, 62, 109, 110, 255], "upper": [61, 62, 69, 78, 79, 86, 87, 117, 126, 127, 134, 135, 163, 166, 255, 276, 277, 328, 330, 332, 896, 897, 903, 997, 998, 999, 1000, 1382, 1385, 1714, 1715, 1716, 1717, 1718, 1719, 1746, 1749, 1796, 1797, 1798, 1799, 1800, 1980, 1996, 1997, 1998, 1999, 2000, 2157, 2158], "zeros_lik": [61, 62, 109, 110, 126, 127, 164, 168, 255, 337, 341, 349, 352, 481, 687, 690, 1612, 1614, 1617, 1618, 1621, 1624, 1627, 1629, 1632, 1637, 1640, 1650, 1667, 1670, 1684, 1687, 1791, 1793, 1870, 1871, 1874, 2128], "creation": [62, 100, 103, 104, 105, 106, 110, 154, 155, 158, 160, 162, 164, 165, 166, 167, 170, 256, 257, 258, 260, 262, 264, 265, 266, 267, 269, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 299, 300, 303, 305, 308, 310, 313, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 897, 898, 899, 900, 901, 902, 903, 904, 2140, 2142, 2146], "data_typ": [63, 64, 111, 112, 154, 166, 167, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 354, 357, 359, 362, 364, 367, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 382, 384, 385, 388, 390, 391, 393, 394, 396, 399, 401, 402, 403, 406, 408, 410, 412, 415, 417, 420, 422, 425, 427, 428, 429, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 905, 906], "astyp": [63, 64, 76, 77, 111, 112, 124, 125, 154, 163, 164, 168, 341, 1650, 1662, 1665, 1672, 1673, 1675, 1684, 1685, 1686, 1688], "irrespect": [63, 64, 78, 79, 111, 112, 126, 127, 152, 163, 172, 341, 349, 350, 351, 352, 353, 1714, 1811, 1812, 1813, 1814, 1815, 2147], "rule": [63, 64, 69, 78, 79, 111, 112, 115, 116, 126, 127, 149, 150, 152, 153, 154, 156, 159, 160, 161, 166, 168, 341, 349, 350, 351, 352, 353, 364, 365, 366, 367, 368, 427, 428, 429, 432, 481, 522, 525, 577, 580, 707, 710, 742, 745, 797, 801, 953, 979, 992, 995, 1200, 1207, 1375, 1376, 1377, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1723, 1751, 1754, 1771, 1774, 1786, 1789, 1806, 1809, 1870, 1876, 1879, 2141, 2255, 2262], "cast": [63, 64, 69, 111, 112, 117, 126, 127, 154, 161, 165, 170, 341, 349, 350, 351, 352, 353, 364, 365, 366, 367, 368, 429, 430, 431, 433, 953, 973, 1260, 1261, 1262, 1263, 1264, 1714, 1844, 1845, 1847, 1848, 2070, 2071, 2074, 2076, 2079, 2097, 2100, 2106, 2110, 2128, 2251, 2253], "nan": [63, 64, 67, 68, 69, 70, 71, 94, 95, 111, 112, 115, 116, 117, 118, 119, 149, 154, 157, 167, 249, 341, 349, 350, 351, 352, 353, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 503, 504, 505, 506, 507, 510, 512, 515, 517, 518, 520, 557, 560, 562, 565, 567, 570, 572, 574, 575, 576, 592, 595, 597, 600, 602, 605, 622, 623, 624, 625, 626, 632, 633, 634, 635, 636, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 667, 670, 672, 675, 682, 685, 727, 730, 732, 734, 735, 736, 742, 745, 747, 750, 757, 760, 762, 765, 767, 770, 782, 786, 787, 791, 792, 796, 805, 806, 814, 815, 816, 817, 818, 886, 887, 953, 954, 963, 964, 965, 970, 973, 974, 978, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1121, 1122, 1123, 1124, 1125, 1188, 1189, 1190, 1191, 1192, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1338, 1341, 1353, 1356, 1357, 1417, 1502, 1503, 1504, 1505, 1506, 1606, 1607, 1608, 1609, 1610, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2070, 2085, 2088, 2089, 2090, 2092, 2093, 2096, 2102, 2105, 2106, 2110, 2111, 2113, 2115, 2116, 2117, 2120, 2122, 2125, 2237, 2241, 2245, 2246, 2266, 2267], "infin": [63, 64, 67, 68, 69, 70, 71, 111, 112, 115, 116, 117, 126, 127, 149, 157, 249, 341, 349, 350, 351, 352, 353, 481, 482, 485, 492, 495, 497, 500, 507, 510, 512, 515, 517, 518, 520, 557, 560, 562, 565, 567, 570, 592, 595, 597, 600, 602, 605, 607, 610, 622, 625, 627, 628, 629, 630, 631, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 682, 685, 727, 730, 742, 745, 747, 750, 757, 760, 762, 765, 767, 770, 782, 786, 787, 791, 792, 796, 953, 973, 978, 1260, 1261, 1262, 1263, 1264, 1338, 1341, 1417, 1502, 1503, 1505, 1714, 1801, 1804, 1844, 1845, 1847, 1848, 2070, 2085, 2088, 2093, 2096, 2116, 2117, 2120, 2122, 2125], "non": [63, 64, 69, 78, 79, 86, 87, 88, 89, 94, 95, 96, 97, 111, 112, 117, 126, 127, 134, 135, 136, 137, 142, 143, 144, 145, 150, 152, 154, 156, 162, 170, 341, 349, 350, 351, 352, 353, 402, 428, 481, 682, 685, 687, 690, 829, 832, 834, 837, 891, 892, 893, 894, 895, 953, 958, 963, 964, 973, 1032, 1035, 1037, 1040, 1200, 1202, 1203, 1260, 1261, 1262, 1263, 1264, 1265, 1268, 1353, 1356, 1714, 1725, 1728, 1766, 1769, 1776, 1777, 1778, 1779, 1780, 1811, 1815, 1821, 1824, 1839, 1843, 1844, 1845, 1847, 1848, 1955, 1969, 1980, 1991, 1992, 1993, 1994, 1995, 2007, 2008, 2009, 2011, 2013, 2014, 2016, 2018, 2021, 2023, 2024, 2025, 2026, 2027, 2070, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2140, 2159, 2164, 2181, 2182, 2185, 2189], "float64": [63, 64, 86, 87, 94, 95, 111, 112, 117, 134, 135, 142, 143, 154, 165, 166, 255, 284, 341, 349, 350, 352, 364, 365, 367, 375, 376, 385, 387, 388, 389, 390, 391, 401, 402, 417, 420, 429, 430, 431, 432, 433, 435, 436, 442, 445, 905, 906, 953, 962, 1027, 1030, 1119, 1260, 1262, 1980, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2076, 2077, 2078, 2205, 2225], "broadcast_arrai": [63, 64, 111, 112, 341, 358], "x3": [63, 64, 70, 71, 255, 318, 321, 336, 340, 341, 354, 355, 357, 1417, 1418, 1419, 1421], "broadcast_to": [63, 64, 111, 112, 154, 341, 363], "can_cast": [63, 64, 111, 112, 154, 161, 164, 341, 368], "occur": [63, 64, 69, 90, 91, 111, 112, 117, 138, 139, 149, 153, 158, 341, 364, 365, 366, 367, 368, 953, 973, 1260, 1261, 1262, 1263, 1264, 2007, 2008, 2011, 2013, 2016, 2033, 2034, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2048, 2049, 2053], "as_n": [63, 64, 65, 66, 111, 112, 113, 114, 154, 341, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 401, 446, 452, 453, 454, 455, 456, 457, 468], "int32": [63, 64, 86, 87, 88, 89, 94, 95, 111, 112, 118, 119, 134, 135, 136, 137, 154, 164, 166, 170, 255, 276, 277, 318, 321, 336, 340, 341, 349, 351, 352, 353, 364, 366, 367, 368, 370, 378, 380, 381, 382, 390, 391, 396, 398, 399, 400, 401, 412, 414, 416, 417, 420, 429, 430, 431, 432, 433, 437, 441, 443, 446, 467, 905, 906, 1119, 1417, 1481, 1484, 1589, 1590, 1592, 1593, 1980, 1986, 1987, 1988, 1990, 1991, 1994, 1996, 1999, 2007, 2013, 2014, 2015, 2016, 2017, 2070, 2071, 2072, 2074, 2076, 2079, 2097, 2100, 2106, 2110], "finfo": [63, 64, 111, 112, 166, 341, 389], "1e": [63, 64, 69, 72, 73, 78, 79, 80, 81, 84, 85, 111, 112, 117, 120, 121, 126, 127, 128, 129, 132, 133, 152, 161, 163, 165, 174, 175, 341, 385, 386, 387, 388, 389, 814, 815, 816, 817, 818, 869, 870, 871, 872, 953, 954, 970, 1107, 1108, 1109, 1110, 1111, 1121, 1122, 1123, 1124, 1125, 1193, 1194, 1290, 1291, 1417, 1490, 1491, 1559, 1560, 1568, 1571, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1629, 1630, 1631, 1632, 1637, 1640, 1714, 1791, 1795, 1811, 1813, 1815, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1975, 1976, 1977, 1978, 1979, 2128, 2183, 2184, 2185, 2186, 2187, 2188, 2190, 2194, 2195, 2201, 2205, 2219, 2223, 2224, 2225, 2226], "06": [63, 64, 86, 87, 115, 116, 120, 121, 166, 173, 205, 207, 210, 341, 385, 386, 388, 492, 494, 496, 567, 569, 571, 907, 910, 1149, 1154, 1612, 1629, 1631, 1632, 1996, 1997, 2194, 2201, 2205, 2219, 2223, 2224, 2225, 2226], "min": [63, 64, 70, 71, 78, 79, 94, 95, 111, 112, 118, 119, 126, 127, 142, 143, 341, 385, 386, 387, 388, 389, 396, 397, 398, 399, 400, 481, 702, 705, 896, 902, 903, 1378, 1381, 1382, 1385, 1417, 1456, 1457, 1458, 1459, 1460, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1568, 1571, 1714, 1766, 1769, 1796, 1797, 1798, 1799, 1800, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 1844, 1845, 1847, 1848, 2070], "4028235e": [63, 64, 341, 385, 386, 388], "38": [63, 64, 69, 115, 116, 117, 134, 135, 156, 341, 385, 386, 388, 481, 782, 783, 785, 786, 844, 847, 953, 975, 1149, 1151, 1164, 1239, 1240, 1242, 1285, 1286, 1287, 1288, 1289, 1714, 1771, 1774, 1996, 2000], "max": [63, 64, 69, 70, 71, 78, 79, 94, 95, 111, 112, 117, 118, 119, 126, 127, 142, 143, 153, 164, 166, 341, 385, 386, 387, 388, 389, 396, 397, 398, 399, 400, 481, 697, 700, 839, 840, 844, 845, 846, 848, 849, 850, 1149, 1162, 1163, 1164, 1229, 1230, 1232, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1242, 1417, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1456, 1457, 1458, 1459, 1460, 1518, 1520, 1522, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1714, 1766, 1769, 1776, 1777, 1778, 1779, 1780, 1791, 1794, 2070, 2185, 2187, 2237, 2248], "iinfo": [63, 64, 111, 112, 159, 341, 400], "119": [63, 64, 396, 397], "122": [63, 64, 396, 397, 481, 567, 570], "int8": [63, 64, 86, 87, 111, 112, 134, 135, 154, 166, 341, 378, 390, 391, 396, 397, 398, 399, 401, 412, 413, 1986, 1987, 1988], "128": [63, 64, 69, 76, 77, 100, 105, 106, 111, 112, 117, 124, 125, 341, 396, 397, 398, 399, 907, 910, 953, 960, 987, 988, 989, 990, 991, 1149, 1154, 1417, 1451, 1454, 1489, 1650, 1667, 1670, 1684, 1685, 1686, 1688, 1714, 1786, 1789], "127": [63, 64, 69, 111, 112, 117, 341, 396, 397, 398, 399, 953, 978, 1338, 1339, 1340, 1341, 1342], "54": [63, 64, 67, 68, 76, 77, 115, 116, 117, 124, 125, 134, 135, 156, 396, 397, 481, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 592, 594, 596, 767, 769, 771, 792, 794, 796, 896, 898, 907, 910, 911, 1064, 1065, 1066, 1067, 1149, 1154, 1166, 1168, 1170, 1650, 1694, 1695, 1696, 1697, 1698, 1709, 1711, 1712, 1713, 1714, 1771, 1774, 1786, 1789, 1986, 1988, 1990, 1991, 1993, 1995, 1996, 1998, 2000, 2070, 2081, 2084], "1220": [63, 64, 396, 397], "int16": [63, 64, 86, 87, 111, 112, 134, 135, 154, 164, 166, 170, 341, 364, 367, 378, 390, 391, 396, 397, 398, 400, 417, 420, 443, 1986, 1987, 1988, 2070, 2071, 2074, 2076, 2079, 2097, 2100, 2106, 2110], "32768": [63, 64, 111, 112, 396, 397, 398, 400], "32767": [63, 64, 111, 112, 396, 397, 398, 400], "is_bool_dtyp": [63, 64, 111, 112, 341], "is_float_dtyp": [63, 64, 111, 112, 167, 341, 416], "is_int_dtyp": [63, 64, 111, 112, 165, 167, 341], "is_uint_dtyp": [63, 64, 111, 112, 165, 167, 341], "result_typ": [63, 64, 111, 112, 154, 341, 433], "arrays_and_dtyp": [63, 64, 111, 112, 341, 429, 430, 431, 432, 433], "handl": [65, 66, 72, 73, 100, 103, 104, 105, 106, 113, 114, 148, 152, 153, 154, 155, 160, 161, 162, 163, 164, 165, 166, 168, 174, 446, 449, 450, 451, 452, 453, 454, 455, 456, 461, 465, 466, 477, 480, 1624, 1625, 2137, 2147, 2185, 2186, 2187, 2188, 2189, 2190], "to_devic": [65, 66, 113, 114, 446, 452, 473], "stream": [65, 66, 113, 114, 446, 472, 473, 474, 475, 476, 2144], "__dlpack__": [65, 66, 113, 114, 255, 279, 282, 446, 472, 473, 474, 475, 476], "caveat": [65, 66, 113, 114, 446, 472, 473, 474, 475, 476], "portabl": [65, 66, 113, 114, 446, 472, 473, 474, 475, 476, 2128, 2138], "aco": [67, 68, 115, 116, 481, 491, 2128], "real": [67, 68, 69, 94, 95, 115, 116, 117, 142, 143, 152, 481, 487, 488, 489, 491, 492, 493, 502, 503, 504, 506, 512, 513, 514, 516, 517, 518, 519, 521, 577, 578, 579, 581, 592, 594, 596, 597, 599, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 671, 672, 673, 674, 676, 692, 693, 707, 708, 711, 727, 728, 729, 731, 742, 743, 744, 746, 767, 768, 769, 771, 772, 773, 774, 776, 777, 779, 787, 788, 789, 790, 791, 792, 793, 794, 795, 797, 798, 799, 800, 864, 868, 913, 915, 953, 1149, 1155, 1325, 1714, 1740, 1801, 1804, 2070, 2085, 2087, 2093, 2094, 2095, 2096, 2102, 2105, 2142], "cosin": [67, 68, 115, 116, 481, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 896, 899, 907, 910, 1068, 1070, 1149, 1154], "57": [67, 68, 115, 116, 446, 458, 481, 487, 488, 489, 490, 491, 492, 495, 502, 503, 504, 505, 506, 507, 510, 517, 518, 520, 567, 570, 572, 573, 575, 576, 732, 733, 735], "69": [67, 68, 120, 121, 134, 135, 166, 173, 481, 487, 488, 662, 665, 907, 910, 1149, 1154, 1612, 1624, 1626, 1627, 1714, 1766, 1769, 1771, 1774, 1991, 1993, 1996, 2000], "acosh": [67, 68, 115, 116, 341, 390, 391, 393, 394, 481, 2128], "hyperbol": [67, 68, 115, 116, 481, 492, 493, 494, 495, 496, 507, 508, 509, 510, 511, 522, 523, 524, 525, 526, 567, 568, 569, 570, 571, 762, 763, 764, 765, 766, 787, 788, 789, 790, 791], "99": [67, 68, 72, 73, 111, 112, 115, 116, 134, 135, 255, 284, 396, 400, 481, 492, 493, 494, 495, 496, 562, 563, 1417, 1568, 1571, 1612, 1624, 1625, 1627, 1991, 1993, 2070, 2081, 2084], "asin": [67, 68, 115, 116, 481, 506, 2128], "sine": [67, 68, 115, 116, 481, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766], "927": [67, 68, 115, 116, 502, 503, 504, 506], "asinh": [67, 68, 115, 116, 481, 511, 2128], "atan": [67, 68, 115, 116, 481, 516, 2128], "tangent": [67, 68, 115, 116, 157, 481, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791], "785": [67, 68, 115, 116, 481, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "atan2": [67, 68, 115, 116, 481, 521, 2128], "quotient": [67, 68, 115, 116, 481, 517, 518, 519, 520, 521], "245": [67, 68, 124, 125, 517, 518, 1650, 1689, 1692, 1694, 1696, 1697, 1698], "68": [67, 68, 134, 135, 205, 218, 221, 255, 284, 481, 517, 518, 520, 907, 910, 1149, 1154, 1975, 1976, 1979, 1991, 1993, 1996, 1998], "588": [67, 68, 481, 517, 518, 520], "inf": [67, 68, 69, 70, 71, 78, 79, 115, 116, 117, 118, 119, 126, 127, 154, 249, 481, 517, 518, 520, 597, 600, 622, 623, 625, 627, 628, 629, 630, 631, 632, 633, 635, 637, 639, 640, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 805, 806, 953, 973, 1188, 1189, 1190, 1191, 1192, 1260, 1261, 1262, 1263, 1264, 1417, 1502, 1504, 1505, 1506, 1606, 1607, 1608, 1609, 1610, 1714, 1766, 1767, 1768, 1769, 1770, 1844, 1845, 1847, 1848, 2237, 2240, 2241, 2245, 2246, 2266, 2267], "36": [67, 68, 69, 76, 77, 94, 95, 117, 118, 119, 126, 127, 481, 517, 518, 520, 747, 748, 752, 753, 849, 853, 907, 910, 953, 967, 1057, 1058, 1059, 1060, 1149, 1154, 1417, 1451, 1454, 1456, 1459, 1460, 1694, 1695, 1714, 1771, 1774, 1786, 1789, 1816, 1820, 1834, 1835, 1837, 1955, 1967, 2070, 2081, 2082, 2084], "75": [67, 68, 69, 115, 116, 117, 118, 119, 124, 125, 134, 135, 255, 290, 293, 481, 507, 510, 511, 517, 518, 519, 520, 521, 577, 580, 896, 899, 907, 910, 953, 967, 1057, 1058, 1059, 1060, 1068, 1070, 1102, 1104, 1106, 1149, 1154, 1195, 1198, 1290, 1293, 1310, 1312, 1314, 1417, 1461, 1463, 1465, 1508, 1511, 1512, 1513, 1517, 1568, 1570, 1652, 1654, 1656, 1714, 1756, 1759, 1786, 1789, 1955, 1964, 1980, 1991, 1995, 1996, 1999], "52": [67, 68, 115, 116, 118, 119, 120, 121, 134, 135, 481, 517, 518, 520, 567, 569, 571, 577, 579, 580, 581, 1417, 1451, 1454, 1456, 1459, 1460, 1513, 1516, 1612, 1614, 1616, 1617, 1650, 1694, 1697, 1714, 1786, 1789, 1996, 1998, 2070, 2081, 2084], "719": [67, 68, 481, 517, 518, 520], "197": [67, 68, 481, 517, 518, 520], "atanh": [67, 68, 115, 116, 481, 526, 2128], "549": [67, 68, 115, 116, 124, 125, 481, 522, 523, 524, 525, 526, 1650, 1694, 1696, 1697, 1698], "47": [67, 68, 69, 86, 87, 115, 116, 117, 118, 119, 120, 121, 134, 135, 481, 522, 523, 524, 526, 767, 770, 844, 845, 849, 851, 1149, 1163, 1164, 1234, 1235, 1237, 1239, 1240, 1241, 1242, 1243, 1417, 1451, 1454, 1456, 1459, 1460, 1612, 1624, 1626, 1627, 1650, 1694, 1697, 1980, 1991, 1993, 1996, 1997, 1999], "bitwise_and": [67, 68, 115, 116, 158, 481, 531], "11": [67, 68, 69, 70, 71, 76, 77, 78, 79, 86, 87, 94, 95, 100, 105, 106, 115, 116, 117, 118, 119, 124, 125, 126, 127, 130, 131, 134, 135, 142, 143, 152, 153, 154, 156, 167, 481, 497, 499, 501, 512, 515, 527, 528, 530, 597, 599, 742, 743, 745, 747, 750, 777, 778, 780, 839, 840, 842, 844, 845, 847, 849, 853, 907, 911, 933, 934, 935, 936, 937, 948, 951, 1012, 1013, 1014, 1015, 1016, 1077, 1078, 1079, 1080, 1081, 1092, 1094, 1096, 1149, 1150, 1151, 1162, 1163, 1176, 1180, 1200, 1205, 1208, 1212, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1237, 1396, 1397, 1399, 1417, 1435, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1476, 1479, 1513, 1516, 1552, 1553, 1555, 1650, 1652, 1653, 1654, 1655, 1656, 1689, 1690, 1691, 1692, 1693, 1694, 1696, 1697, 1698, 1714, 1735, 1738, 1746, 1749, 1750, 1756, 1759, 1761, 1762, 1764, 1766, 1767, 1768, 1769, 1770, 1786, 1789, 1811, 1815, 1816, 1820, 1854, 1865, 1868, 1870, 1891, 1894, 1916, 1918, 1920, 1921, 1923, 1925, 1931, 1932, 1934, 1941, 1942, 1944, 1945, 1955, 1962, 1964, 1974, 1980, 1986, 1989, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2007, 2028, 2032, 2033, 2034, 2038, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2078, 2079, 2080, 2081, 2082, 2084, 2111, 2114], "bitwise_invert": [67, 68, 115, 116, 481, 536], "bitiwse_invert": [67, 68, 532, 533], "bitwise_left_shift": [67, 68, 115, 116, 481, 541], "bitwise_or": [67, 68, 115, 116, 481, 546], "89": [67, 68, 86, 87, 100, 105, 106, 111, 112, 115, 116, 117, 134, 135, 341, 396, 398, 399, 481, 552, 553, 554, 555, 556, 907, 910, 911, 1149, 1154, 1714, 1821, 1824, 1991, 1993, 1996, 1997, 2070, 2106, 2110], "51": [67, 68, 69, 115, 116, 117, 118, 119, 134, 135, 481, 552, 553, 707, 709, 762, 763, 765, 907, 908, 909, 910, 911, 1149, 1154, 1513, 1517, 1991, 1995, 1996, 1998], "18": [67, 68, 69, 86, 87, 115, 116, 117, 124, 125, 134, 135, 142, 143, 152, 156, 158, 205, 218, 221, 481, 497, 501, 552, 553, 577, 580, 742, 743, 762, 763, 764, 765, 766, 907, 910, 953, 967, 1002, 1005, 1012, 1013, 1015, 1057, 1058, 1059, 1060, 1097, 1098, 1099, 1100, 1101, 1149, 1154, 1158, 1159, 1162, 1200, 1208, 1229, 1230, 1231, 1232, 1233, 1672, 1674, 1676, 1714, 1735, 1738, 1761, 1764, 1786, 1789, 1980, 1986, 1987, 1988, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1998, 2000, 2070, 2076, 2078, 2079, 2081, 2084, 2097, 2099, 2101], "19": [67, 68, 69, 86, 87, 115, 116, 117, 126, 127, 134, 135, 156, 481, 507, 509, 511, 552, 553, 597, 601, 662, 664, 707, 709, 711, 782, 783, 784, 785, 786, 849, 850, 852, 907, 910, 911, 1012, 1013, 1015, 1097, 1100, 1149, 1152, 1154, 1159, 1162, 1200, 1208, 1229, 1230, 1231, 1232, 1233, 1714, 1735, 1738, 1766, 1768, 1770, 1829, 1830, 1832, 1833, 1955, 1967, 1980, 1986, 1988, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1998, 2000, 2054, 2065, 2068], "26": [67, 68, 84, 85, 86, 87, 117, 118, 119, 120, 121, 134, 135, 481, 552, 553, 577, 580, 762, 765, 907, 910, 911, 1149, 1154, 1417, 1508, 1511, 1512, 1612, 1614, 1616, 1617, 1650, 1684, 1687, 1714, 1735, 1738, 1786, 1789, 1821, 1824, 1955, 1957, 1975, 1976, 1977, 1979, 1986, 1988, 1991, 1992, 2070, 2081, 2084], "27": [67, 68, 69, 78, 79, 86, 87, 115, 116, 117, 124, 125, 126, 127, 134, 135, 142, 143, 481, 547, 550, 552, 553, 567, 570, 727, 728, 729, 730, 762, 765, 767, 769, 771, 907, 910, 953, 962, 1027, 1028, 1030, 1149, 1154, 1275, 1279, 1417, 1513, 1516, 1650, 1709, 1711, 1712, 1713, 1714, 1761, 1764, 1786, 1789, 1834, 1835, 1836, 1837, 1838, 1955, 1957, 1964, 1986, 1990, 1991, 1992, 2070, 2081, 2084, 2097, 2099, 2101], "23": [67, 68, 69, 76, 77, 86, 87, 109, 110, 115, 116, 117, 118, 119, 134, 135, 166, 170, 255, 285, 287, 288, 289, 481, 552, 553, 555, 567, 568, 569, 571, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 742, 745, 747, 748, 752, 755, 762, 763, 764, 765, 766, 792, 796, 839, 840, 842, 844, 845, 849, 851, 881, 884, 885, 907, 910, 911, 953, 957, 976, 1149, 1150, 1154, 1162, 1163, 1164, 1229, 1230, 1232, 1234, 1235, 1237, 1239, 1240, 1241, 1242, 1243, 1321, 1323, 1324, 1513, 1517, 1650, 1677, 1680, 1709, 1710, 1712, 1714, 1735, 1738, 1766, 1769, 1816, 1820, 1955, 1957, 1964, 1986, 1987, 1988, 1990, 1991, 1993, 1995, 1996, 1998, 2000, 2007, 2028, 2032], "20": [67, 68, 69, 76, 77, 86, 87, 94, 95, 115, 116, 117, 118, 119, 124, 125, 134, 135, 142, 143, 153, 158, 168, 172, 481, 552, 553, 572, 575, 592, 593, 594, 595, 732, 734, 735, 747, 749, 750, 751, 767, 770, 839, 840, 842, 849, 850, 851, 852, 953, 967, 970, 1057, 1058, 1059, 1060, 1121, 1124, 1149, 1150, 1152, 1162, 1229, 1230, 1232, 1239, 1241, 1243, 1417, 1451, 1454, 1481, 1483, 1484, 1485, 1489, 1552, 1554, 1555, 1556, 1568, 1571, 1572, 1652, 1653, 1699, 1700, 1701, 1714, 1735, 1738, 1756, 1759, 1766, 1769, 1786, 1789, 1821, 1824, 1980, 1986, 1987, 1988, 1989, 2007, 2023, 2026, 2028, 2032, 2070, 2071, 2073, 2075, 2076, 2077, 2078, 2081, 2084, 2097, 2100, 2106, 2110], "74": [67, 68, 134, 135, 481, 552, 553, 672, 675, 907, 910, 1149, 1154, 1714, 1771, 1774, 1996, 2000], "41": [67, 68, 69, 115, 116, 117, 118, 119, 126, 127, 205, 218, 221, 481, 512, 514, 515, 516, 552, 553, 707, 709, 767, 768, 770, 844, 845, 1149, 1163, 1234, 1235, 1237, 1353, 1359, 1386, 1387, 1388, 1389, 1390, 1417, 1436, 1439, 1440, 1441, 1444, 1445, 1714, 1715, 1717, 1718, 1719, 2070, 2106, 2110], "59": [67, 68, 552, 553], "ceil": [67, 68, 115, 116, 163, 255, 257, 258, 481, 561, 2128], "radian": [67, 68, 69, 115, 116, 117, 157, 481, 487, 490, 502, 505, 512, 515, 517, 520, 562, 563, 564, 565, 566, 572, 573, 574, 575, 576, 732, 733, 734, 735, 736, 757, 758, 759, 760, 761, 782, 783, 784, 785, 786, 819, 820, 821, 822, 823, 953, 955, 978, 1338, 1339, 1340, 1341, 1342], "416": [67, 68, 481, 562, 563, 565], "540": [67, 68, 562, 563], "990": [67, 68, 562, 563], "cosh": [67, 68, 115, 116, 481, 492, 496, 571, 2128], "angl": [67, 68, 69, 115, 116, 117, 186, 481, 517, 520, 567, 568, 569, 570, 571, 762, 763, 764, 765, 766, 787, 788, 789, 790, 791, 823, 953, 968, 1087, 1090], "76": [67, 68, 94, 95, 111, 112, 115, 116, 134, 135, 341, 396, 398, 399, 481, 492, 494, 496, 567, 568, 569, 570, 571, 762, 764, 766, 787, 788, 1714, 1821, 1824, 1955, 1964, 1991, 1993, 2070, 2081, 2082, 2084], "81": [67, 68, 111, 112, 115, 116, 126, 127, 134, 135, 166, 341, 396, 398, 399, 481, 567, 568, 662, 665, 666, 772, 773, 775, 1714, 1771, 1774, 1834, 1835, 1837, 1955, 1964, 1980, 1996, 1998, 1999, 2070, 2081, 2084], "deg2rad": [67, 68, 115, 116, 481, 576], "degre": [67, 68, 69, 94, 95, 115, 116, 117, 142, 143, 481, 572, 573, 574, 575, 576, 732, 733, 734, 735, 736, 819, 820, 821, 822, 823, 953, 955, 1200, 1219, 1326, 1327, 1328, 1329, 1330, 2070, 2102, 2103, 2104, 2105, 2111, 2113, 2114, 2115, 2139], "180": [67, 68, 115, 116, 481, 572, 573, 575, 576, 732, 735, 736], "270": [67, 68, 115, 116, 481, 572, 573, 575, 576, 732, 735, 736], "360": [67, 68, 115, 116, 153, 481, 572, 573, 575, 576, 732, 735, 736], "71": [67, 68, 115, 116, 481, 572, 573, 575, 576, 732, 735], "28": [67, 68, 76, 77, 84, 85, 115, 116, 117, 118, 119, 124, 125, 134, 135, 142, 143, 481, 572, 573, 575, 576, 662, 664, 732, 735, 907, 910, 911, 1149, 1154, 1417, 1508, 1511, 1512, 1612, 1614, 1617, 1650, 1667, 1668, 1669, 1670, 1671, 1677, 1678, 1679, 1680, 1681, 1684, 1687, 1694, 1697, 1714, 1786, 1789, 1975, 1976, 1977, 1979, 1986, 1988, 1991, 1993, 1996, 1998, 2070, 2081, 2084, 2097, 2099, 2101], "dividend": [67, 68, 115, 116, 481, 577, 578, 579, 580, 581, 607, 608, 609, 611, 742, 743, 745, 797, 798, 799, 800, 801], "divisor": [67, 68, 69, 72, 73, 94, 95, 115, 116, 117, 120, 121, 142, 143, 481, 577, 578, 579, 580, 581, 607, 608, 609, 611, 612, 614, 616, 742, 743, 745, 797, 798, 799, 800, 801, 933, 934, 935, 937, 953, 966, 1050, 1053, 1077, 1078, 1079, 1080, 1081, 1200, 1212, 1222, 1396, 1397, 1398, 1399, 1400, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1629, 1630, 1631, 1632, 2070, 2102, 2103, 2104, 2105, 2111, 2113, 2114, 2115, 2185, 2186, 2187], "375": [67, 68, 582, 583, 717, 718], "erf": [67, 68, 115, 116, 481, 591], "exponenti": [67, 68, 115, 116, 481, 587, 588, 589, 590, 591, 592, 593, 595, 672, 675, 727, 728, 730, 1176, 1182, 1224, 1227], "gauss": [67, 68, 115, 116, 481, 587, 588, 589, 590, 591], "328": [67, 68, 481, 587, 588, 590, 782, 786], "677": [67, 68, 481, 587, 588, 590], "842": [67, 68, 481, 587, 588, 590, 782, 786], "exp": [67, 68, 69, 115, 116, 117, 164, 481, 596, 597, 600, 672, 675, 1002, 1003, 1004, 1005, 1006, 1097, 1098, 1099, 1100, 1101, 1149, 1158, 1159, 1714, 1801, 1804, 2128], "71828198": [67, 68, 115, 116, 592, 593, 594, 596], "38905573": [67, 68, 115, 116, 592, 593, 594, 596], "08553696": [67, 68, 115, 116, 592, 593, 594, 597, 601], "expm1": [67, 68, 115, 116, 154, 481, 601], "244": [67, 68, 597, 598, 907, 910, 1149, 1154], "918": [67, 68, 597, 598], "48": [67, 68, 69, 115, 116, 117, 118, 119, 120, 121, 134, 135, 205, 213, 216, 481, 492, 494, 495, 496, 597, 598, 767, 770, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 907, 908, 909, 910, 911, 1149, 1151, 1152, 1154, 1163, 1164, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1417, 1508, 1511, 1512, 1612, 1614, 1616, 1617, 1624, 1626, 1627, 1714, 1786, 1789, 1955, 1957, 1991, 1993, 1996, 2000, 2070, 2081, 2084], "147": [67, 68, 481, 597, 598, 600], "floor": [67, 68, 69, 115, 116, 163, 481, 547, 550, 606, 913, 915, 1149, 1155, 2128], "floor_divid": [67, 68, 115, 116, 481, 611, 2282, 2287], "isfinit": [67, 68, 115, 116, 164, 481, 626], "out_i": [67, 68, 115, 116, 117, 481, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 953, 976, 1321, 1323, 1324, 1325], "self_i": [67, 68, 115, 116, 117, 622, 623, 624, 627, 628, 629, 632, 633, 634, 637, 638, 639, 1321, 1323], "finit": [67, 68, 69, 115, 116, 117, 481, 497, 500, 517, 520, 622, 623, 624, 625, 626, 727, 730, 742, 745, 953, 973, 1260, 1261, 1262, 1263, 1264], "isinf": [67, 68, 115, 116, 481, 631], "detect_posit": [67, 68, 115, 116, 481, 627, 628, 629, 630, 631], "detect_neg": [67, 68, 115, 116, 481, 627, 628, 629, 630, 631], "isnan": [67, 68, 115, 116, 481, 636], "isreal": [67, 68, 115, 116, 481, 641], "1j": [67, 68, 69, 115, 116, 117, 637, 638, 639, 819, 820, 822, 953, 955, 1321, 1323, 1417, 1568, 1571], "5j": [67, 68, 115, 116, 117, 481, 637, 638, 640, 641, 953, 976, 1321, 1324, 1325], "6j": [67, 68, 69, 117, 481, 637, 638, 640, 953, 969, 1102, 1103, 1104, 1105, 1106, 1321, 1322], "61": [67, 68, 69, 115, 116, 117, 120, 121, 128, 129, 134, 135, 481, 507, 509, 652, 653, 655, 662, 665, 666, 772, 773, 775, 907, 908, 909, 910, 911, 1149, 1154, 1612, 1614, 1616, 1617, 1650, 1684, 1687, 1854, 1855, 1857, 1858, 1859, 1865, 1867, 1869, 1996, 1998], "log10": [67, 68, 115, 116, 481, 661], "logarithm": [67, 68, 115, 116, 481, 592, 595, 652, 655, 657, 658, 659, 660, 661, 662, 665, 667, 668, 669, 670, 671, 672, 675, 1714, 1801, 1804], "602": [67, 68, 481, 657, 658, 660], "699": [67, 68, 481, 657, 658, 660], "log1p": [67, 68, 115, 116, 481, 666], "693": [67, 68, 115, 116, 205, 238, 241, 481, 507, 510, 662, 663, 665, 666, 1854, 1865, 1868], "001": [67, 68, 69, 84, 85, 111, 112, 117, 120, 121, 173, 174, 341, 385, 387, 388, 389, 662, 663, 953, 976, 1121, 1122, 1123, 1125, 1321, 1324, 1612, 1618, 1620, 1621, 1975, 1976, 1977, 1979], "0953": [67, 68, 115, 116, 481, 652, 654, 655, 656, 662, 663], "log2": [67, 68, 115, 116, 481, 671, 953, 972, 1183, 1186], "logaddexp": [67, 68, 115, 116, 481], "logical_and": [67, 68, 115, 116, 164, 168, 481, 681, 2128, 2147], "logical_not": [67, 68, 115, 116, 154, 481, 686, 2128], "logical_or": [67, 68, 115, 116, 481, 691, 2128, 2147], "conform": [67, 68, 78, 79, 115, 116, 157, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 385, 388, 396, 399, 429, 432, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 688, 689, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 917, 920, 943, 946, 1176, 1178, 1179, 1714, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1733, 1735, 1738, 1740, 1741, 1744, 1746, 1747, 1749, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1804, 1806, 1809, 1811, 1815, 1816, 1820, 1821, 1824, 1839, 1843, 1844, 1848, 1870, 1876, 1879, 1886, 1889, 1891, 1894, 1896, 1899, 1906, 1909, 1911, 1914, 1921, 1924, 1926, 1929, 1946, 1950, 2007, 2008, 2011, 2013, 2016, 2023, 2026, 2028, 2032, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2054, 2055, 2058, 2065, 2068, 2070, 2085, 2088, 2089, 2092, 2093, 2096, 2097, 2100, 2102, 2105, 2106, 2110, 2111, 2115, 2116, 2117, 2120, 2122, 2125], "org": [67, 68, 115, 116, 120, 121, 157, 341, 364, 367, 481, 622, 625, 687, 688, 689, 747, 750, 896, 902, 903, 943, 946, 1176, 1179, 1378, 1381, 1382, 1385, 1612, 1614, 1617, 1618, 1621, 1714, 1746, 1747, 1801, 1804, 1849, 1853, 1870, 1946, 1950, 2070, 2102, 2105, 2152, 2154], "api_specif": [67, 68, 115, 116, 157, 341, 364, 367, 481, 622, 625, 687, 688, 689, 747, 750, 1870, 1946, 1950, 2070, 2102, 2105], "elementwise_funct": [67, 68, 115, 116, 157, 481, 622, 625, 687, 688, 689, 747, 750], "logical_xor": [67, 68, 115, 116, 481, 696], "use_wher": [67, 68, 115, 116, 481, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "formula": [67, 68, 115, 116, 481, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "clip": [67, 68, 82, 83, 115, 116, 118, 119, 130, 131, 152, 161, 163, 173, 175, 481, 697, 698, 699, 700, 701, 702, 703, 705, 1417, 1436, 1438, 1439, 1440, 1441, 1444, 1870, 1875, 2128], "minimum": [67, 68, 69, 70, 71, 82, 83, 88, 89, 94, 95, 115, 116, 117, 118, 119, 130, 131, 136, 137, 142, 143, 481, 482, 485, 706, 953, 962, 964, 1027, 1030, 1037, 1038, 1039, 1040, 1041, 1200, 1218, 1294, 1297, 1417, 1490, 1491, 1559, 1560, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1870, 1871, 1872, 1873, 1874, 1875, 2007, 2013, 2014, 2015, 2016, 2017, 2070, 2085, 2088, 2093, 2094, 2095, 2096, 2128, 2137, 2143, 2147, 2237, 2240, 2241, 2245, 2246, 2255, 2256, 2258, 2261, 2266, 2267, 2268, 2269, 2282, 2287, 2288], "exce": [67, 68, 69, 117, 481, 702, 703, 705, 1200, 1221, 1370, 1371, 1372, 1373, 1374], "30": [67, 68, 69, 100, 105, 106, 117, 118, 119, 134, 135, 142, 143, 153, 481, 707, 708, 710, 907, 910, 953, 967, 1057, 1058, 1059, 1060, 1149, 1154, 1285, 1287, 1289, 1386, 1387, 1389, 1417, 1451, 1454, 1461, 1463, 1465, 1481, 1483, 1484, 1485, 1508, 1511, 1512, 1513, 1516, 1517, 1552, 1554, 1555, 1556, 1562, 1568, 1571, 1572, 1714, 1756, 1759, 1786, 1789, 1955, 1965, 1986, 1988, 1991, 1993, 1995, 2070, 2076, 2078, 2081, 2084, 2097, 2100, 2159, 2166, 2255, 2262], "56": [67, 68, 69, 76, 77, 86, 87, 115, 116, 117, 124, 125, 156, 255, 295, 298, 481, 707, 708, 710, 767, 770, 782, 783, 784, 785, 786, 792, 796, 907, 908, 909, 910, 911, 1149, 1154, 1612, 1614, 1617, 1650, 1667, 1668, 1669, 1670, 1671, 1677, 1678, 1679, 1680, 1681, 1694, 1695, 1714, 1786, 1789, 1816, 1820, 1991, 1992, 2070, 2081, 2084], "expon": [67, 68, 69, 70, 71, 117, 118, 119, 481, 727, 728, 730, 953, 962, 1027, 1028, 1029, 1030, 1031, 1417, 1573, 1574, 1575, 1576, 1577, 1714, 1771, 1774], "rad2deg": [67, 68, 115, 116, 481, 736], "286": [67, 68, 117, 732, 733, 907, 911], "458": [67, 68, 732, 733], "573": [67, 68, 481, 732, 733, 735], "reciproc": [67, 68, 115, 116, 481, 741], "333": [67, 68, 115, 116, 481, 577, 579, 580, 581, 737, 738, 1417, 1441, 1444, 1650, 1684, 1687], "remaind": [67, 68, 69, 82, 83, 103, 104, 115, 116, 117, 130, 131, 149, 163, 481, 746, 953, 965, 1042, 1043, 1044, 1045, 1046, 1870, 1916, 1917, 1918, 1919, 1920], "modulu": [67, 68, 115, 116, 163, 481, 742, 743, 744, 745, 746], "x2_i": [67, 68, 115, 116, 149, 481, 497, 500, 517, 520, 527, 530, 537, 540, 542, 545, 547, 550, 552, 555, 577, 580, 582, 585, 607, 610, 612, 615, 617, 620, 642, 645, 647, 650, 672, 675, 677, 680, 687, 690, 692, 695, 707, 710, 717, 720, 727, 730, 742, 743, 744, 745, 746, 777, 781], "94": [67, 68, 72, 73, 86, 87, 115, 116, 120, 121, 134, 135, 446, 466, 507, 511, 747, 748, 752, 753, 907, 910, 1149, 1154, 1612, 1624, 1625, 1626, 1627, 1996, 1997, 1998], "256": [67, 68, 747, 748, 752, 753, 1650, 1667, 1670, 1677, 1680], "0001": [67, 68, 747, 748, 752, 753, 2185, 2186, 2187, 2188, 2190, 2237, 2241, 2245, 2246, 2266, 2267, 2269], "45": [67, 68, 69, 94, 95, 100, 105, 106, 115, 116, 117, 120, 121, 134, 135, 481, 517, 519, 520, 521, 577, 579, 580, 581, 747, 748, 752, 753, 819, 820, 822, 849, 851, 907, 910, 953, 955, 975, 1149, 1154, 1239, 1241, 1243, 1285, 1286, 1287, 1288, 1289, 1612, 1614, 1617, 1629, 1631, 1632, 1714, 1786, 1789, 1870, 1916, 1919, 1991, 1993, 1996, 1998, 2070, 2081, 2082, 2084], "678": [67, 68, 747, 748, 752, 753], "33": [67, 68, 86, 87, 94, 95, 115, 116, 118, 119, 120, 121, 124, 125, 481, 507, 509, 512, 515, 547, 550, 747, 748, 844, 847, 1149, 1151, 1417, 1441, 1443, 1568, 1571, 1612, 1624, 1626, 1627, 1650, 1689, 1692, 1694, 1696, 1697, 1698, 1714, 1786, 1789, 1955, 1974, 1986, 1987, 2070, 2081, 2084, 2111, 2113, 2237, 2241, 2245, 2246, 2266, 2267, 2268, 2269], "sin": [67, 68, 70, 71, 115, 116, 150, 170, 481, 761, 1417, 1469, 1470, 1472, 2128], "841": [67, 68, 101, 102, 115, 116, 205, 207, 209, 210, 481, 757, 758, 759, 760, 761], "909": [67, 68, 115, 116, 118, 119, 481, 757, 758, 759, 760, 761, 1568, 1572], "141": [67, 68, 115, 116, 341, 349, 352, 481, 757, 758, 759, 760, 761], "sinh": [67, 68, 115, 116, 481, 766, 2128], "63": [67, 68, 101, 102, 115, 116, 126, 127, 243, 245, 247, 481, 732, 735, 762, 763, 764, 765, 766, 767, 770, 907, 910, 1149, 1154, 1714, 1715, 1717, 1718, 1719, 1786, 1789, 1955, 1957, 2070, 2081, 2084], "232": [67, 68, 115, 116, 481, 762, 763, 764, 765, 766], "sqrt": [67, 68, 69, 115, 116, 117, 481, 771, 913, 915, 1002, 1003, 1004, 1005, 1006, 1097, 1098, 1099, 1100, 1101, 1149, 1155, 1158, 1159, 1844, 1845, 1847, 2159, 2162, 2164, 2166], "squar": [67, 68, 78, 79, 115, 116, 126, 127, 481, 767, 768, 769, 770, 771, 776, 1176, 1182, 1224, 1227, 1612, 1623, 1628, 1648, 1714, 1715, 1716, 1717, 1718, 1719, 1725, 1728, 1730, 1733, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750, 1756, 1757, 1758, 1759, 1760, 1771, 1774, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1834, 1835, 1836, 1837, 1838, 1955, 1962], "73": [67, 68, 126, 127, 166, 767, 768, 1714, 1715, 1717, 1718, 1719, 1980, 1991, 1994], "44": [67, 68, 69, 86, 87, 115, 116, 117, 134, 135, 481, 507, 510, 707, 709, 747, 750, 767, 770, 772, 773, 775, 849, 850, 851, 852, 881, 884, 907, 909, 911, 953, 957, 1149, 1152, 1239, 1241, 1243, 1417, 1435, 1650, 1689, 1692, 1714, 1786, 1789, 1955, 1964, 1986, 1988, 1990, 1991, 1992, 1993, 2007, 2028, 2032, 2070, 2081, 2084], "tan": [67, 68, 115, 116, 152, 157, 160, 161, 163, 164, 170, 481, 783, 1417, 1424, 2128], "tanh": [67, 68, 115, 116, 170, 481, 788, 2128], "762": [67, 68, 115, 116, 481, 787, 789, 790, 791], "964": [67, 68, 115, 116, 481, 787, 789, 790, 791], "trunc": [67, 68, 115, 116, 481, 793], "025": [67, 68, 481, 792, 794, 796], "trunc_divid": [67, 68, 115, 116, 481, 798], "elementwis": [68, 69, 84, 85, 116, 132, 133, 161, 167, 170, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 805, 806, 807, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 1188, 1189, 1191, 1305, 1306, 1308, 1411, 1415, 1714, 1834, 1838, 1975, 1976, 1977, 1978, 1979], "logit": [69, 80, 81, 117, 128, 129, 805, 854, 855, 856, 857, 858, 869, 870, 871, 872, 1192, 1193, 1194, 1315, 1316, 1854, 1865, 1866, 1867, 1868, 1869], "ep": [69, 78, 79, 117, 126, 127, 341, 385, 388, 805, 806, 1107, 1108, 1109, 1110, 1111, 1188, 1189, 1190, 1191, 1192, 1290, 1291, 1714, 1776, 1777, 1778, 1779, 1780, 1791, 1794], "outpu": [69, 117, 805, 806, 1188, 1189, 1190, 1191, 1192], "clamp": [69, 117, 175, 805, 806, 1188, 1189, 1190, 1191, 1192], "19722438": [69, 117, 805, 806, 1188, 1189, 1190, 1191, 1192], "38629448": [69, 117, 805, 806, 1188, 1189, 1190, 1191, 1192], "38629436": [69, 117, 805, 806, 1188, 1189, 1190, 1191, 1192], "prelu": [69, 117, 805], "unidirect": [69, 805, 807, 1305, 1306, 1308], "thresholded_relu": [69, 117, 805, 1366], "linear": [69, 70, 71, 76, 77, 101, 102, 117, 118, 119, 124, 125, 152, 157, 164, 166, 168, 170, 173, 174, 175, 205, 207, 210, 212, 213, 216, 223, 225, 226, 227, 228, 230, 231, 232, 243, 245, 246, 247, 805, 808, 1113, 1114, 1115, 1116, 1117, 1149, 1161, 1200, 1218, 1294, 1297, 1310, 1311, 1312, 1313, 1314, 1353, 1358, 1365, 1366, 1367, 1368, 1369, 1417, 1469, 1470, 1471, 1472, 1473, 1543, 1650, 1698, 1806, 1809, 1955, 1963, 2128, 2138, 2139, 2140, 2143, 2159, 2164, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2237, 2241, 2245, 2246, 2255, 2256, 2266, 2267, 2268, 2269], "eye_lik": [69, 117, 896, 1001], "allclos": [69, 117, 818, 953], "rtol": [69, 78, 79, 117, 126, 127, 165, 814, 815, 816, 817, 818, 953, 954, 970, 1121, 1122, 1123, 1124, 1125, 1714, 1776, 1777, 1778, 1779, 1780, 1791, 1792, 1793, 1794, 1795, 2194, 2195, 2201, 2205, 2223, 2224, 2225, 2226], "atol": [69, 78, 79, 117, 126, 127, 165, 814, 815, 816, 817, 818, 953, 954, 970, 1121, 1122, 1123, 1124, 1125, 1714, 1776, 1777, 1778, 1779, 1780, 2194, 2195, 2201, 2205, 2223, 2224, 2225, 2226], "08": [69, 94, 95, 117, 134, 135, 481, 507, 510, 814, 815, 816, 817, 818, 953, 954, 970, 1121, 1122, 1123, 1124, 1125, 1650, 1709, 1712, 1991, 1993, 1996, 1998, 2111, 2113, 2194, 2195], "equal_nan": [69, 117, 814, 815, 816, 817, 818, 953, 954, 970, 1121, 1122, 1123, 1124, 1125], "toler": [69, 78, 79, 117, 126, 127, 149, 165, 814, 815, 816, 817, 818, 953, 954, 970, 1121, 1122, 1123, 1124, 1125, 1714, 1776, 1777, 1778, 1779, 1780, 1791, 1792, 1793, 1794, 1795, 2140, 2194, 2195, 2201, 2205, 2223, 2224, 2225, 2226], "compar": [69, 70, 71, 92, 93, 103, 104, 117, 118, 119, 140, 141, 151, 156, 158, 159, 165, 166, 173, 814, 815, 816, 817, 818, 953, 954, 970, 1121, 1122, 1123, 1124, 1125, 1417, 1418, 1419, 1420, 1421, 1422, 1425, 1426, 1427, 1428, 1429, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2065, 2068, 2136, 2138, 2140, 2146, 2147, 2205, 2223, 2224, 2225, 2226], "1e10": [69, 814, 815, 817, 953, 954, 970, 1121, 1124], "00001e10": [69, 814, 815, 817, 953, 954, 970, 1121, 1124], "00001e": [69, 814, 815, 817, 953, 954], "005": [69, 814, 815, 817, 953, 954, 970, 1121, 1124], "deg": [69, 117, 819, 820, 821, 822, 823, 953, 955], "2j": [69, 117, 819, 820, 822, 953, 955, 969, 1002, 1003, 1004, 1005, 1006, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1149, 1158, 1159, 1321, 1322], "3j": [69, 115, 116, 117, 481, 637, 639, 640, 641, 819, 820, 822, 953, 955, 976, 1321, 1322, 1323, 1324, 1325], "35619449": [69, 819, 820, 822, 953, 955], "78539816": [69, 819, 820, 822, 953, 955], "135": [69, 819, 820, 822, 953, 955, 1417, 1436, 1439], "binar": [69, 117, 868, 953], "map": [69, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 154, 160, 161, 164, 166, 167, 173, 186, 187, 207, 209, 211, 213, 215, 217, 218, 220, 222, 223, 225, 227, 228, 230, 232, 233, 235, 237, 238, 240, 242, 243, 245, 247, 285, 287, 289, 310, 312, 314, 318, 320, 322, 336, 337, 339, 354, 356, 358, 364, 366, 368, 396, 398, 400, 408, 409, 411, 412, 414, 416, 429, 431, 433, 472, 473, 475, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 669, 671, 672, 674, 676, 677, 679, 681, 682, 684, 686, 687, 689, 691, 692, 694, 696, 697, 699, 701, 702, 704, 706, 707, 709, 711, 712, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 778, 780, 782, 783, 785, 787, 788, 790, 792, 793, 795, 797, 798, 800, 814, 816, 818, 824, 826, 828, 829, 831, 833, 834, 836, 838, 854, 858, 859, 861, 863, 864, 865, 866, 867, 868, 891, 893, 895, 922, 926, 932, 933, 937, 953, 956, 997, 999, 1001, 1017, 1021, 1077, 1081, 1087, 1089, 1091, 1121, 1123, 1125, 1144, 1146, 1148, 1149, 1156, 1195, 1197, 1199, 1285, 1287, 1289, 1321, 1323, 1325, 1326, 1328, 1330, 1338, 1340, 1342, 1360, 1361, 1363, 1365, 1366, 1368, 1370, 1371, 1373, 1396, 1397, 1406, 1407, 1409, 1411, 1412, 1414, 1417, 1418, 1420, 1422, 1425, 1427, 1429, 1430, 1432, 1434, 1436, 1438, 1440, 1441, 1443, 1445, 1451, 1453, 1455, 1456, 1458, 1460, 1461, 1463, 1465, 1469, 1471, 1473, 1476, 1478, 1480, 1481, 1483, 1485, 1493, 1495, 1497, 1508, 1510, 1512, 1513, 1515, 1517, 1518, 1520, 1522, 1524, 1526, 1528, 1529, 1531, 1533, 1537, 1539, 1541, 1547, 1549, 1551, 1552, 1554, 1556, 1568, 1570, 1572, 1573, 1575, 1577, 1578, 1579, 1581, 1584, 1585, 1589, 1590, 1592, 1594, 1595, 1597, 1606, 1607, 1609, 1611, 1624, 1626, 1642, 1643, 1645, 1652, 1654, 1656, 1662, 1664, 1666, 1667, 1669, 1671, 1689, 1691, 1693, 1694, 1696, 1698, 1709, 1711, 1713, 1715, 1717, 1719, 1720, 1722, 1724, 1746, 1748, 1750, 1756, 1758, 1760, 1761, 1763, 1765, 1766, 1768, 1770, 1776, 1778, 1780, 1796, 1798, 1800, 1801, 1803, 1805, 1829, 1830, 1832, 1855, 1857, 1859, 1860, 1862, 1864, 1865, 1867, 1869, 1871, 1873, 1875, 1886, 1890, 1891, 1893, 1895, 1906, 1908, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1921, 1923, 1925, 1926, 1928, 1930, 1941, 1942, 1944, 1946, 1947, 1949, 1955, 1963, 1964, 1968, 1969, 1981, 1983, 1985, 1986, 1988, 1990, 1991, 1993, 1995, 1996, 1998, 2000, 2002, 2004, 2006, 2018, 2020, 2022, 2034, 2035, 2037, 2039, 2040, 2042, 2044, 2045, 2047, 2055, 2057, 2059, 2071, 2073, 2075, 2076, 2078, 2080, 2089, 2091, 2097, 2099, 2101, 2102, 2104, 2111, 2112, 2114, 2117, 2119, 2121, 2122, 2124, 2126, 2127, 2141, 2169, 2180], "outcom": [69, 117, 864, 865, 866, 867, 868, 953, 956, 967, 1057, 1058, 1059, 1060], "comparison": [69, 117, 158, 864, 865, 866, 867, 868, 953, 956, 1714, 1816, 1820], "copysign": [69, 117, 885, 953], "unsign": [69, 117, 154, 170, 881, 882, 883, 884, 885, 953, 957, 2070, 2071, 2074, 2076, 2079, 2097, 2100, 2106, 2110, 2251, 2254], "count_nonzero": [69, 117, 895, 953], "keepdim": [69, 78, 79, 82, 83, 88, 89, 94, 95, 96, 97, 103, 104, 117, 126, 127, 130, 131, 136, 137, 142, 143, 144, 145, 158, 164, 170, 891, 892, 893, 894, 895, 953, 958, 974, 1244, 1245, 1246, 1247, 1248, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1310, 1311, 1312, 1313, 1314, 1353, 1355, 1356, 1357, 1358, 1714, 1766, 1767, 1768, 1769, 1770, 1844, 1845, 1846, 1847, 1848, 1870, 1941, 1942, 1943, 1944, 1945, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2070, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126], "count": [69, 82, 83, 90, 91, 96, 97, 117, 130, 131, 138, 139, 144, 145, 152, 156, 173, 446, 465, 891, 892, 893, 894, 895, 953, 958, 1714, 1839, 1843, 1870, 1876, 1877, 1879, 1891, 1892, 1893, 1894, 1895, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126], "flatten": [69, 70, 71, 82, 83, 88, 89, 90, 91, 117, 118, 119, 126, 127, 130, 131, 136, 137, 138, 139, 168, 891, 892, 893, 894, 895, 917, 920, 953, 958, 974, 1016, 1176, 1178, 1200, 1244, 1245, 1246, 1247, 1248, 1250, 1252, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1310, 1311, 1312, 1313, 1314, 1353, 1355, 1356, 1357, 1358, 1417, 1451, 1454, 1469, 1470, 1471, 1472, 1473, 1714, 1751, 1754, 1786, 1789, 1844, 1845, 1847, 1848, 1870, 1876, 1877, 1879, 1901, 1902, 1903, 1904, 1911, 1912, 1913, 1914, 1915, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2053, 2157, 2158, 2194, 2201, 2205, 2214, 2217, 2225, 2226], "diff": [69, 103, 104, 117, 156, 163, 926, 953], "prepend": [69, 117, 922, 923, 924, 925, 926, 953, 959, 1714, 1761, 1764, 1870, 1886, 1889], "differenc": [69, 117, 922, 923, 924, 925, 926, 953, 959], "taken": [69, 78, 79, 117, 126, 127, 153, 159, 164, 167, 175, 922, 923, 924, 925, 926, 953, 959, 1714, 1735, 1736, 1737, 1738, 1739, 2141], "prior": [69, 117, 167, 922, 923, 924, 925, 926, 927, 930, 953, 959, 1315, 1318], "expand": [69, 70, 71, 82, 83, 117, 118, 119, 152, 922, 923, 924, 925, 926, 953, 959, 1200, 1417, 1469, 1470, 1471, 1472, 1473, 1870, 1886, 1887, 1889], "th": [69, 117, 917, 920, 922, 923, 924, 925, 926, 953, 959, 1176, 1178, 1310, 1313, 1353, 1358], "discret": [69, 117, 907, 910, 913, 915, 922, 923, 924, 925, 926, 953, 959, 1002, 1005, 1097, 1100, 1149, 1154, 1155, 1158, 1159, 1854, 1860, 1863], "exp2": [69, 117, 953, 991], "nearest": [69, 117, 481, 497, 500, 747, 750, 953, 961, 1007, 1008, 1010, 1113, 1114, 1115, 1116, 1117, 1149, 1161, 1310, 1311, 1312, 1313, 1314, 1353, 1358], "float_pow": [69, 117, 953, 1031], "125": [69, 78, 79, 126, 127, 481, 547, 550, 953, 962, 1027, 1028, 1030, 1714, 1834, 1835, 1836, 1837, 1838], "fmax": [69, 117, 953, 1036], "fmin": [69, 117, 953, 1041], "fmod": [69, 117, 953, 1046], "divis": [69, 70, 71, 72, 73, 117, 118, 119, 120, 121, 161, 481, 547, 550, 577, 580, 607, 610, 742, 745, 797, 801, 933, 936, 953, 965, 1042, 1043, 1044, 1045, 1046, 1107, 1108, 1109, 1110, 1111, 1200, 1205, 1290, 1291, 1417, 1491, 1560, 1568, 1569, 1570, 1571, 1572, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1629, 1630, 1631, 1632, 1650, 1651, 1682, 1683, 2185, 2186, 2187], "gcd": [69, 117, 953, 1054], "gradient": [69, 73, 117, 121, 167, 173, 174, 186, 187, 446, 471, 873, 953, 1063, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1951, 1952, 1953, 1954, 2128, 2140, 2181, 2182, 2185, 2186, 2187, 2188, 2189, 2190, 2205, 2225, 2226, 2282, 2286], "edge_ord": [69, 117, 953, 967, 1057, 1058, 1059, 1060, 1061], "w": [69, 70, 71, 72, 73, 76, 77, 103, 104, 115, 116, 117, 118, 119, 120, 121, 124, 125, 170, 173, 174, 677, 679, 681, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 873, 886, 888, 890, 913, 915, 943, 946, 948, 951, 953, 967, 1057, 1058, 1059, 1060, 1062, 1063, 1149, 1150, 1151, 1152, 1155, 1162, 1163, 1164, 1165, 1176, 1179, 1180, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1299, 1417, 1451, 1452, 1453, 1454, 1455, 1461, 1463, 1464, 1465, 1568, 1571, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1694, 1695, 1696, 1697, 1698, 1955, 1962], "scale": [69, 76, 77, 84, 85, 117, 120, 121, 124, 125, 132, 133, 446, 469, 470, 879, 932, 953, 967, 1057, 1058, 1059, 1060, 1107, 1108, 1109, 1110, 1111, 1139, 1142, 1149, 1153, 1156, 1176, 1181, 1290, 1291, 1612, 1633, 1635, 1636, 1650, 1689, 1690, 1691, 1692, 1693, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1975, 1976, 1977, 1978, 1979, 2140, 2142, 2159, 2167, 2169, 2177, 2180, 2185, 2188, 2237, 2245, 2255, 2256, 2266, 2267, 2268, 2269], "frist": [69, 117, 953, 967, 1057, 1058, 1059, 1060], "estim": [69, 117, 953, 967, 1057, 1058, 1059, 1060], "boundari": [69, 86, 87, 117, 134, 135, 953, 967, 1057, 1058, 1059, 1060, 1113, 1114, 1115, 1116, 1117, 1149, 1161, 1980, 1996, 1997, 1998, 1999, 2000, 2140], "diment": [69, 953, 967, 1057, 1058, 1060], "40": [69, 70, 71, 100, 105, 106, 117, 118, 119, 134, 135, 142, 143, 153, 481, 547, 550, 567, 570, 767, 770, 844, 845, 907, 908, 909, 910, 911, 953, 967, 1057, 1058, 1059, 1060, 1149, 1154, 1163, 1166, 1168, 1170, 1234, 1235, 1237, 1417, 1451, 1454, 1461, 1463, 1465, 1481, 1483, 1484, 1485, 1552, 1553, 1554, 1555, 1556, 1568, 1571, 1572, 1611, 1714, 1756, 1759, 1786, 1789, 1955, 1965, 1991, 1993, 2070, 2081, 2084, 2097, 2099, 2101], "72": [69, 86, 87, 117, 120, 121, 481, 592, 595, 597, 600, 907, 910, 953, 967, 1057, 1058, 1059, 1060, 1149, 1154, 1612, 1624, 1626, 1627, 1714, 1786, 1789, 1991, 1992, 2070, 2081, 2084], "33333333": [69, 117, 481, 737, 740, 953, 967, 1057, 1058, 1059, 1060], "hypot": [69, 117, 953, 1091], "hypotenus": [69, 953, 968, 1087, 1088, 1090], "4031": [69, 953, 968, 1087, 1088, 1090], "8102": [69, 953, 968, 1087, 1088, 1090], "val": [69, 70, 71, 103, 104, 117, 118, 119, 163, 172, 953, 969, 1102, 1103, 1104, 1105, 1106, 1417, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1559, 1560], "imaginari": [69, 117, 156, 953, 969, 1102, 1103, 1104, 1105, 1106], "4j": [69, 117, 953, 969, 1102, 1103, 1104, 1105, 1106], "isclos": [69, 117, 149, 953, 1125], "hold": [69, 70, 71, 78, 79, 94, 95, 117, 126, 127, 142, 143, 173, 814, 816, 818, 933, 935, 937, 953, 974, 1121, 1122, 1123, 1125, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1353, 1357, 1396, 1397, 1399, 1417, 1547, 1548, 1550, 1552, 1555, 1714, 1766, 1767, 1768, 1769, 1770, 2070, 2076, 2077, 2078, 2079, 2080, 2141, 2228], "lcm": [69, 117, 953, 1170], "60": [69, 94, 95, 117, 118, 119, 134, 135, 142, 143, 153, 819, 821, 823, 953, 971, 1166, 1167, 1168, 1169, 1170, 1417, 1481, 1483, 1513, 1516, 1517, 1552, 1554, 1556, 1568, 1571, 1611, 1714, 1786, 1789, 1955, 1959, 1986, 1988, 2070, 2071, 2074, 2081, 2084, 2097, 2098, 2099, 2100, 2101], "logaddexp2": [69, 117, 953, 1187], "169925": [69, 117, 953, 972, 1183, 1184, 1185, 1186, 1187], "nan_to_num": [69, 117, 953, 1264], "posinf": [69, 117, 953, 973, 1260, 1261, 1262, 1263, 1264], "neginf": [69, 117, 953, 973, 1260, 1261, 1262, 1263, 1264], "small": [69, 78, 79, 84, 85, 117, 126, 127, 132, 133, 153, 156, 161, 165, 168, 170, 174, 187, 814, 817, 953, 954, 970, 973, 1107, 1108, 1109, 1110, 1111, 1121, 1124, 1260, 1261, 1262, 1263, 1264, 1290, 1291, 1714, 1776, 1777, 1778, 1779, 1780, 1791, 1792, 1793, 1794, 1795, 1801, 1804, 1975, 1976, 1977, 1978, 1979, 2141, 2159, 2163, 2183, 2184], "5e": [69, 72, 73, 117, 953, 973, 1260, 1261, 1262, 1263, 1264, 1285, 1287, 1289, 1612, 1629, 1630, 1632], "nansum": [69, 117, 953, 1279], "accumul": [69, 117, 953, 974, 1275, 1276, 1277, 1278, 1279], "By": [69, 82, 83, 94, 95, 96, 97, 117, 130, 131, 142, 143, 144, 145, 154, 156, 158, 161, 163, 164, 170, 174, 175, 896, 897, 904, 913, 915, 953, 974, 997, 1000, 1057, 1059, 1149, 1155, 1171, 1172, 1173, 1174, 1175, 1275, 1276, 1277, 1278, 1279, 1343, 1344, 1392, 1395, 1714, 1839, 1843, 1870, 1901, 1902, 1903, 1904, 2070, 2071, 2074, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126], "reduc": [69, 70, 71, 78, 79, 88, 89, 94, 95, 96, 97, 103, 104, 117, 118, 119, 126, 127, 136, 137, 142, 143, 144, 145, 153, 158, 164, 168, 170, 172, 446, 471, 953, 974, 1244, 1245, 1246, 1247, 1248, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1310, 1311, 1312, 1313, 1314, 1353, 1355, 1356, 1357, 1358, 1417, 1456, 1457, 1458, 1459, 1460, 1714, 1796, 1797, 1798, 1799, 1800, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2070, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2138, 2142, 2143, 2144], "nextaft": [69, 117, 953, 1289], "represent": [69, 70, 71, 100, 103, 104, 105, 106, 117, 118, 119, 186, 249, 341, 347, 348, 385, 388, 396, 399, 446, 449, 450, 481, 482, 485, 497, 500, 527, 530, 542, 545, 552, 555, 692, 695, 953, 975, 980, 1285, 1286, 1287, 1288, 1289, 1406, 1407, 1408, 1409, 1410, 1417, 1423, 1584, 1585, 1586, 1587, 2138, 2139, 2141, 2145, 2146, 2237, 2241, 2245, 2246, 2255, 2256, 2266, 2267, 2269], "0e": [69, 72, 73, 117, 120, 121, 953, 975, 1285, 1286, 1287, 1288, 1289, 1612, 1629, 1630, 1631, 1632], "50": [69, 94, 95, 115, 116, 117, 118, 119, 172, 481, 572, 574, 575, 576, 732, 734, 735, 736, 953, 975, 1139, 1141, 1143, 1285, 1286, 1287, 1288, 1289, 1417, 1461, 1463, 1465, 1481, 1483, 1484, 1485, 1508, 1511, 1512, 1513, 1516, 1517, 1552, 1554, 1555, 1556, 1568, 1571, 1572, 1714, 1756, 1759, 1786, 1789, 1955, 1957, 1959, 2007, 2023, 2026, 2070, 2081, 2082, 2084, 2237, 2241, 2245, 2246, 2266, 2267, 2268, 2269], "4013e": [69, 117, 953, 975, 1285, 1286, 1287, 1288, 1289], "4028e": [69, 117, 953, 975, 1285, 1286, 1287, 1288, 1289], "hand": [69, 149, 154, 161, 166, 187, 1321, 1322], "signbit": [69, 117, 953, 1337], "637": [69, 117, 953, 978, 1338, 1339, 1340, 1341], "212": [69, 76, 77, 117, 953, 978, 1338, 1339, 1340, 1341, 1342, 1694, 1695], "0909": [69, 117, 953, 978, 1338, 1339, 1340, 1341], "trapz": [69, 115, 116, 953], "dx": [69, 115, 116, 953, 979, 1375, 1376, 1377], "apart": [69, 115, 116, 953, 979, 1375, 1376, 1377], "trapezoid": [69, 115, 116, 953, 979, 1375, 1376, 1377], "xlogi": [69, 117, 953, 1407], "0986": [69, 117, 953, 980, 1406, 1407, 1408, 1409, 1410], "3863": [69, 117, 953, 980, 1406, 1407, 1408, 1409, 1410], "0000": [69, 117, 896, 898, 901, 953, 980, 1064, 1066, 1068, 1069, 1071, 1072, 1073, 1075, 1135, 1137, 1176, 1182, 1200, 1211, 1224, 1225, 1226, 1227, 1406, 1407, 1408, 1409, 1410], "zeta": [69, 117, 953, 1412], "0369": [69, 117, 953, 981, 1411, 1412, 1413, 1414, 1415], "2021": [69, 117, 953, 981, 1411, 1412, 1413, 1414, 1415, 2128], "isin": [69, 117, 1055, 1130], "test_el": [69, 117, 1055, 1056, 1126, 1127, 1128, 1129, 1130], "assume_uniqu": [69, 117, 1055, 1056, 1126, 1127, 1128, 1129, 1130], "invert": [69, 117, 481, 532, 535, 1055, 1056, 1126, 1127, 1128, 1129, 1130, 1714, 1771, 1774], "avg_pool1d": [69, 117, 843, 1149], "kernel": [69, 76, 77, 117, 124, 125, 168, 170, 187, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 1149, 1150, 1151, 1152, 1162, 1163, 1164, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1650, 1699, 1700, 1701, 1702, 1703, 2140, 2143, 2144], "stride": [69, 76, 77, 117, 124, 125, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 1149, 1150, 1151, 1152, 1162, 1163, 1164, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 2140, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176], "pad": [69, 76, 77, 82, 83, 117, 124, 125, 130, 131, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 907, 908, 909, 910, 911, 913, 915, 1002, 1003, 1004, 1005, 1006, 1097, 1098, 1099, 1100, 1101, 1113, 1114, 1115, 1116, 1117, 1149, 1150, 1151, 1152, 1154, 1155, 1158, 1159, 1161, 1162, 1163, 1164, 1200, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1298, 1417, 1469, 1472, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1870, 1881, 1882, 1883, 1884, 1885, 1946, 1947, 1948, 1949, 1950, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176], "data_format": [69, 76, 77, 117, 124, 125, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 932, 1107, 1108, 1109, 1110, 1111, 1149, 1150, 1151, 1152, 1156, 1162, 1163, 1164, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1290, 1291, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176], "nwc": [69, 76, 77, 117, 124, 125, 839, 840, 841, 842, 843, 932, 1149, 1150, 1156, 1162, 1229, 1230, 1231, 1232, 1233, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1682, 1683, 2169, 2170, 2171], "batch_siz": [69, 76, 77, 86, 87, 117, 124, 125, 134, 135, 173, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 1149, 1150, 1151, 1152, 1162, 1163, 1164, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1980, 1981, 1982, 1983, 1984, 1985], "d_in": [69, 76, 77, 117, 124, 125, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 913, 915, 1002, 1003, 1004, 1005, 1006, 1097, 1098, 1099, 1100, 1101, 1149, 1150, 1151, 1152, 1155, 1158, 1159, 1162, 1163, 1164, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688], "slide": [69, 76, 77, 117, 124, 125, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 1149, 1150, 1151, 1152, 1162, 1163, 1164, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176], "algorithm": [69, 76, 77, 101, 102, 117, 124, 125, 154, 164, 168, 187, 207, 209, 211, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 1113, 1114, 1115, 1116, 1117, 1149, 1150, 1151, 1152, 1161, 1162, 1163, 1164, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1652, 1653, 1654, 1656, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1681, 1684, 1685, 1686, 1688, 1714, 1801, 1804, 2140, 2142, 2144, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176], "ncw": [69, 76, 77, 117, 124, 125, 839, 840, 841, 842, 843, 932, 1149, 1150, 1156, 1162, 1229, 1230, 1231, 1232, 1233, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1682, 1683, 2169, 2170, 2171], "pool": [69, 117, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 1149, 1150, 1151, 1152, 1162, 1163, 1164, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243], "reshap": [69, 76, 77, 78, 79, 82, 83, 103, 104, 117, 124, 125, 126, 127, 130, 131, 163, 164, 166, 168, 170, 172, 175, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 932, 1012, 1013, 1014, 1015, 1016, 1107, 1108, 1109, 1110, 1111, 1149, 1150, 1151, 1152, 1156, 1162, 1163, 1164, 1200, 1208, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1290, 1291, 1417, 1611, 1650, 1662, 1664, 1665, 1666, 1672, 1675, 1684, 1687, 1714, 1766, 1767, 1768, 1769, 1770, 1870, 1910, 2128, 2134, 2135], "avg_pool2d": [69, 117, 848, 1149], "nhwc": [69, 76, 77, 117, 124, 125, 844, 845, 846, 847, 848, 1107, 1108, 1109, 1110, 1111, 1149, 1151, 1163, 1234, 1235, 1236, 1237, 1238, 1290, 1291, 1650, 1651, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 2169, 2172, 2173, 2176], "h": [69, 70, 71, 76, 77, 117, 118, 119, 124, 125, 148, 152, 153, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 1149, 1151, 1152, 1163, 1164, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1417, 1451, 1452, 1453, 1454, 1455, 1461, 1463, 1464, 1465, 1650, 1651, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1955, 1959, 1963, 1965, 1973, 2136], "nchw": [69, 76, 77, 117, 124, 125, 844, 845, 846, 847, 848, 1107, 1108, 1109, 1110, 1111, 1149, 1151, 1163, 1234, 1235, 1236, 1237, 1238, 1290, 1291, 1650, 1651, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 2169, 2172, 2173, 2176], "max_pool2d": [69, 117, 844, 845, 1149, 1238], "46": [69, 86, 87, 117, 124, 125, 134, 135, 255, 295, 298, 481, 662, 665, 752, 755, 844, 845, 849, 851, 896, 898, 1064, 1065, 1066, 1067, 1149, 1163, 1164, 1234, 1235, 1237, 1239, 1240, 1241, 1242, 1243, 1694, 1696, 1698, 1955, 1957, 1986, 1987, 1991, 1993], "avg_pool3d": [69, 117, 853, 1149], "ndhwc": [69, 76, 77, 117, 124, 125, 849, 850, 851, 852, 853, 1149, 1152, 1164, 1239, 1240, 1241, 1242, 1243, 1650, 1651, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 2169, 2174, 2175], "convolut": [69, 76, 77, 117, 124, 125, 849, 850, 851, 852, 853, 1149, 1152, 1164, 1239, 1240, 1241, 1242, 1243, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 2138, 2140, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176], "ncdhw": [69, 76, 77, 117, 124, 125, 849, 850, 851, 852, 853, 1149, 1152, 1164, 1239, 1240, 1241, 1242, 1243, 1650, 1651, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 2169, 2174, 2175], "43": [69, 100, 105, 106, 134, 135, 481, 547, 550, 849, 850, 852, 1149, 1152, 1980, 1991, 1993, 1994, 1996, 1998, 1999, 2007, 2028, 2032], "dct": [69, 117, 173, 911, 1149], "norm": [69, 70, 71, 78, 79, 85, 117, 118, 119, 126, 127, 133, 167, 907, 908, 909, 910, 911, 913, 914, 915, 916, 982, 985, 1002, 1003, 1004, 1005, 1006, 1097, 1098, 1099, 1100, 1101, 1144, 1145, 1147, 1149, 1154, 1155, 1157, 1158, 1159, 1195, 1196, 1198, 1199, 1291, 1292, 1293, 1417, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1518, 1520, 1522, 1714, 1766, 1767, 1768, 1769, 1770, 1844, 1845, 1847, 1848, 1976, 1977, 1978, 1979, 2128, 2184, 2185, 2187], "signal": [69, 117, 907, 908, 909, 910, 911, 913, 915, 1149, 1154, 1155, 2139, 2140], "liter": [69, 78, 79, 117, 126, 127, 159, 907, 908, 909, 910, 911, 1113, 1114, 1115, 1116, 1117, 1149, 1154, 1161, 1200, 1218, 1294, 1297, 1714, 1766, 1767, 1768, 1769, 1770, 1844, 1845, 1847, 1848], "lenght": [69, 117, 907, 908, 909, 910, 911, 1064, 1065, 1067, 1131, 1132, 1134, 1135, 1136, 1138, 1149, 1154, 1392, 1393, 1394], "transform": [69, 76, 77, 117, 124, 125, 166, 175, 186, 907, 908, 909, 910, 911, 913, 915, 1002, 1003, 1004, 1005, 1006, 1097, 1098, 1099, 1100, 1101, 1107, 1108, 1109, 1110, 1111, 1149, 1154, 1155, 1158, 1159, 1290, 1291, 1650, 1694, 1695, 1696, 1697, 1698, 2127, 2138, 2140, 2141, 2142, 2237, 2241, 2245, 2246, 2266, 2267, 2268, 2269], "truncat": [69, 117, 158, 173, 907, 908, 909, 910, 911, 1002, 1003, 1004, 1005, 1006, 1097, 1098, 1099, 1100, 1101, 1149, 1154, 1158, 1159, 1417, 1558, 2157, 2158], "larger": [69, 82, 83, 94, 95, 117, 130, 131, 142, 143, 166, 341, 385, 388, 907, 908, 909, 910, 911, 1149, 1154, 1870, 1871, 1874, 1911, 1912, 1913, 1914, 1915, 2070, 2102, 2103, 2104, 2105, 2111, 2113, 2114, 2115, 2147], "ortho": [69, 117, 907, 908, 909, 910, 911, 913, 915, 1002, 1003, 1004, 1005, 1006, 1097, 1098, 1099, 1100, 1101, 1149, 1154, 1155, 1158, 1159], "102": [69, 117, 134, 135, 907, 908, 909, 910, 911, 1149, 1154, 1986, 1988], "406": [69, 117, 907, 908, 909, 910, 911, 1149, 1154, 1417, 1436, 1439], "dft": [69, 117, 1149], "onesid": [69, 117, 913, 914, 915, 916, 1149, 1155], "dft_length": [69, 117, 913, 914, 915, 916, 1149, 1155], "backward": [69, 96, 97, 117, 144, 145, 187, 481, 742, 745, 913, 914, 915, 916, 1002, 1003, 1004, 1005, 1006, 1097, 1098, 1099, 1100, 1101, 1149, 1155, 1158, 1159, 1714, 1839, 1843, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126], "fourier": [69, 913, 915, 1002, 1005, 1097, 1100, 1149, 1155, 1158, 1159, 1417, 1469, 1472], "batch": [69, 70, 71, 103, 104, 117, 118, 119, 126, 127, 152, 161, 173, 446, 469, 470, 913, 915, 1113, 1114, 1115, 1116, 1117, 1149, 1155, 1161, 1417, 1469, 1470, 1471, 1472, 1473, 1476, 1477, 1478, 1479, 1480, 1611, 1650, 1694, 1697, 1714, 1844, 1845, 1847, 1848, 1951, 1952, 1953, 1954, 1975, 1976, 1979, 2138, 2183, 2184], "n_fft": [69, 913, 915, 1149, 1155], "satisfi": [69, 156, 913, 915, 1149, 1155], "conjug": [69, 78, 79, 117, 126, 127, 809, 812, 813, 913, 915, 927, 930, 1149, 1155, 1176, 1177, 1315, 1318, 1714, 1761, 1764, 1781, 1782, 1783, 1784, 1785], "symmetri": [69, 913, 915, 1149, 1155], "fast": [69, 913, 915, 1149, 1155, 2140], "rfft": [69, 913, 915, 1149, 1155], "batch_idx": [69, 913, 915, 1149, 1155], "signal_dim1": [69, 913, 915, 1149, 1155], "signal_dim2": [69, 913, 915, 1149, 1155], "signal_dimn": [69, 913, 915, 1149, 1155], "signal_dim": [69, 913, 915, 1149, 1155], "embed": [69, 117, 1149, 2140], "max_norm": [69, 70, 71, 117, 118, 119, 982, 983, 984, 985, 986, 1149, 1157, 1417, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445], "dim": [69, 103, 104, 109, 110, 117, 154, 158, 164, 165, 168, 255, 310, 312, 313, 314, 1002, 1003, 1004, 1005, 1006, 1012, 1013, 1014, 1015, 1016, 1097, 1098, 1099, 1100, 1101, 1149, 1158, 1159, 1200, 1208, 1650, 1651, 1682, 1683, 2169, 2180, 2255, 2265], "ifft": [69, 117, 1002, 1003, 1101, 1149], "pi": [69, 117, 249, 1002, 1003, 1004, 1005, 1006, 1097, 1098, 1099, 1100, 1101, 1149, 1158, 1159], "44509285e": [69, 117, 1002, 1003, 1004, 1005, 1006, 1149, 1158], "14423775e": [69, 117, 1002, 1003, 1004, 1005, 1006, 1149, 1158], "17j": [69, 117, 1002, 1003, 1004, 1005, 1006, 1097, 1098, 1099, 1100, 1101, 1149, 1158, 1159], "00000000e": [69, 117, 118, 119, 1002, 1003, 1004, 1005, 1006, 1097, 1098, 1099, 1100, 1101, 1149, 1158, 1159, 1469, 1471, 1473], "00": [69, 70, 71, 117, 118, 119, 126, 127, 166, 481, 597, 600, 907, 910, 943, 946, 1002, 1003, 1004, 1005, 1006, 1097, 1098, 1099, 1100, 1101, 1149, 1154, 1158, 1159, 1176, 1179, 1417, 1469, 1470, 1471, 1472, 1473, 1714, 1746, 1749, 1750], "11483250e": [69, 117, 1002, 1003, 1004, 1005, 1006, 1149, 1158], "16j": [69, 117, 1002, 1003, 1004, 1005, 1006, 1097, 1098, 1099, 1100, 1101, 1149, 1158, 1159], "33486982e": [69, 117, 1002, 1003, 1004, 1005, 1006, 1149, 1158], "22464680e": [69, 117, 1002, 1003, 1004, 1005, 1006, 1149, 1158], "95799250e": [69, 117, 1002, 1003, 1004, 1005, 1006, 1149, 1158], "66951701e": [69, 117, 1002, 1003, 1004, 1005, 1006, 1149, 1158], "30636606e": [69, 117, 1097, 1098, 1099, 1100, 1101, 1149, 1159], "43029718e": [69, 117, 1097, 1098, 1099, 1100, 1101, 1149, 1159], "18j": [69, 117, 1002, 1005, 1097, 1098, 1099, 1100, 1101, 1149, 1158, 1159], "53080850e": [69, 117, 1097, 1098, 1099, 1100, 1101, 1149, 1159], "58689626e": [69, 117, 1097, 1098, 1099, 1100, 1101, 1149, 1159], "24474906e": [69, 117, 1097, 1098, 1099, 1100, 1101, 1149, 1159], "91858728e": [69, 117, 1097, 1098, 1099, 1100, 1101, 1149, 1159], "01435406e": [69, 117, 1097, 1098, 1099, 1100, 1101, 1149, 1159], "interpol": [69, 117, 1117, 1149, 1310, 1311, 1312, 1313, 1314, 1353, 1358, 2140], "align_corn": [69, 117, 879, 1113, 1114, 1115, 1116, 1117, 1149, 1153, 1161], "antialia": [69, 117, 879, 1113, 1114, 1115, 1116, 1117, 1149, 1153, 1161], "height": [69, 70, 71, 76, 77, 117, 118, 119, 124, 125, 173, 1113, 1114, 1115, 1116, 1117, 1149, 1161, 1417, 1451, 1452, 1453, 1454, 1455, 1650, 1662, 1665, 1667, 1668, 1670, 1672, 1675, 1677, 1678, 1679, 1680, 1681, 1684, 1687, 2157, 2158], "width": [69, 70, 71, 76, 77, 117, 118, 119, 124, 125, 1113, 1114, 1115, 1116, 1117, 1149, 1161, 1200, 1218, 1294, 1297, 1417, 1451, 1452, 1453, 1454, 1455, 1650, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1668, 1670, 1672, 1675, 1677, 1678, 1679, 1680, 1681, 1684, 1687], "bilinear": [69, 117, 1113, 1114, 1115, 1116, 1117, 1149, 1161], "trilinear": [69, 117, 1113, 1114, 1115, 1116, 1117, 1149, 1161], "pixel": [69, 117, 1113, 1114, 1115, 1116, 1117, 1149, 1161], "preserv": [69, 72, 73, 100, 103, 104, 105, 106, 117, 120, 121, 166, 175, 187, 824, 827, 829, 832, 834, 837, 1017, 1020, 1022, 1025, 1113, 1114, 1115, 1116, 1117, 1149, 1161, 1200, 1201, 1202, 1203, 1209, 1210, 1270, 1271, 1272, 1273, 1353, 1357, 1612, 1642, 1643, 1644, 1645, 1646, 1870, 1891, 1894, 2237, 2241], "edg": [69, 82, 83, 117, 130, 131, 149, 166, 1113, 1114, 1115, 1116, 1117, 1149, 1161, 1200, 1218, 1294, 1297, 1870, 1871, 1874, 1881, 1882, 1883, 1884, 1885, 1946, 1947, 1948, 1949, 1950, 2128, 2140, 2142, 2146, 2266, 2267], "bicub": [69, 117, 1113, 1114, 1115, 1116, 1117, 1149, 1161], "antialias": [69, 117, 1113, 1114, 1115, 1116, 1117, 1149, 1161], "downsampl": [69, 117, 1113, 1114, 1115, 1116, 1117, 1149, 1161], "resiz": [69, 117, 1113, 1114, 1115, 1116, 1117, 1149, 1161], "max_pool1d": [69, 117, 1149, 1233], "dilat": [69, 76, 77, 117, 124, 125, 1149, 1163, 1234, 1235, 1236, 1237, 1238, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176], "ceil_mod": [69, 117, 1149, 1163, 1234, 1235, 1236, 1237, 1238], "max_pool3d": [69, 117, 849, 851, 1149, 1243], "adjoint": [69, 78, 79, 117, 126, 127, 813, 1176, 1714, 1756, 1757, 1758, 1759, 1760, 1811, 1815], "diagflat": [69, 117, 1139, 1140, 1176, 1224, 1226], "offset": [69, 78, 79, 117, 126, 127, 917, 918, 919, 920, 921, 1176, 1178, 1714, 1735, 1736, 1737, 1738, 1739, 1829, 1830, 1831, 1832, 1833], "padding_valu": [69, 117, 917, 918, 919, 920, 921, 1176, 1178], "right_left": [69, 117, 917, 918, 919, 920, 921, 1176, 1178], "num_row": [69, 117, 917, 918, 919, 920, 921, 1176, 1178], "num_col": [69, 117, 917, 918, 919, 920, 921, 1176, 1178], "eig": [69, 78, 79, 117, 947, 1176, 1714, 1741, 1744, 1746, 1749], "37228132": [69, 117, 943, 946, 948, 949, 950, 951, 952, 1176, 1179, 1180], "82456484": [69, 943, 946, 1176, 1179], "41597356": [69, 943, 946, 1176, 1179], "56576746": [69, 943, 946, 1176, 1179], "90937671": [69, 943, 946, 1176, 1179], "eigval": [69, 117, 952, 1176], "kron": [69, 117, 1143, 1176, 1224, 1225, 2147], "matrix_exp": [69, 117, 1176], "7183": [69, 117, 1176, 1182, 1224, 1225, 1226, 1227], "3891": [69, 117, 1176, 1182, 1224, 1225, 1226, 1227], "atleast_1d": [69, 117, 828, 1200], "ari": [69, 117, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 933, 934, 935, 936, 937, 1077, 1078, 1079, 1080, 1081, 1200, 1201, 1202, 1203, 1205, 1212, 1222, 1396, 1397, 1398, 1399, 1400], "a1": [69, 118, 119, 255, 276, 277, 824, 825, 829, 830, 834, 835, 1425, 1427, 1429], "a2": [69, 824, 825, 829, 830, 834, 835], "atleast_2d": [69, 117, 833, 1200], "atleast_3d": [69, 117, 838, 1200], "dsplit": [69, 117, 937, 1200], "indices_or_sect": [69, 117, 933, 934, 935, 936, 937, 1077, 1078, 1079, 1080, 1081, 1200, 1205, 1212, 1222, 1396, 1397, 1398, 1399, 1400], "3rd": [69, 117, 933, 934, 935, 936, 937, 1200, 1205], "dstack": [69, 117, 942, 1200], "nativeshap": [69, 76, 77, 82, 83, 86, 87, 117, 130, 131, 134, 135, 255, 270, 284, 315, 316, 333, 335, 854, 855, 856, 857, 858, 859, 861, 862, 863, 927, 928, 929, 930, 931, 992, 993, 994, 995, 996, 1200, 1207, 1300, 1301, 1302, 1303, 1304, 1315, 1316, 1317, 1318, 1320, 1417, 1552, 1555, 1566, 1583, 1588, 1650, 1651, 1657, 1660, 1667, 1668, 1670, 1677, 1678, 1680, 1683, 1870, 1906, 1907, 1908, 1909, 1910, 1980, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000], "start_dim": [69, 117, 1012, 1013, 1014, 1015, 1016, 1200, 1208], "end_dim": [69, 117, 1012, 1013, 1014, 1015, 1016, 1200, 1208], "fastest": [69, 82, 83, 117, 130, 131, 1012, 1013, 1014, 1015, 1016, 1200, 1208, 1870, 1906, 1907, 1908, 1909, 1910], "slowest": [69, 82, 83, 117, 130, 131, 1012, 1013, 1014, 1015, 1016, 1200, 1208, 1870, 1906, 1907, 1908, 1909, 1910], "fortran": [69, 82, 83, 117, 130, 131, 1012, 1013, 1014, 1015, 1016, 1200, 1208, 1870, 1906, 1907, 1908, 1909, 1910, 2140, 2144], "memori": [69, 82, 83, 117, 130, 131, 153, 154, 155, 163, 164, 168, 170, 185, 187, 255, 300, 303, 446, 451, 466, 471, 477, 480, 1012, 1013, 1014, 1015, 1016, 1200, 1208, 1270, 1271, 1272, 1273, 1353, 1357, 1650, 1699, 1702, 1870, 1906, 1907, 1908, 1909, 1910, 2128, 2140, 2142, 2143, 2144], "layout": [69, 82, 83, 117, 130, 131, 151, 164, 168, 1012, 1013, 1014, 1015, 1016, 1200, 1208, 1870, 1906, 1907, 1908, 1909, 1910], "underli": [69, 82, 83, 117, 130, 131, 152, 168, 481, 527, 530, 542, 545, 552, 555, 692, 695, 1012, 1013, 1014, 1015, 1016, 1200, 1208, 1714, 1801, 1804, 1870, 1906, 1907, 1908, 1909, 1910, 2140, 2152, 2154], "fliplr": [69, 117, 1021, 1200], "flip": [69, 82, 83, 117, 130, 131, 172, 173, 175, 481, 532, 535, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1200, 1209, 1210, 1870, 1895, 2128], "diag": [69, 78, 79, 117, 126, 127, 170, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1200, 1209, 1210, 1714], "flipud": [69, 117, 1026, 1200], "heavisid": [69, 117, 1076, 1200], "5000": [69, 1072, 1073, 1075, 1200, 1211, 1714, 1756, 1759], "hsplit": [69, 117, 874, 877, 1081, 1200], "horizont": [69, 117, 1077, 1078, 1079, 1080, 1081, 1200, 1212, 1417, 1451, 1454], "hstack": [69, 117, 1086, 1200], "vstack": [69, 117, 1082, 1083, 1200, 1402], "i0": [69, 117, 1096, 1200], "bessel": [69, 94, 95, 117, 142, 143, 896, 900, 1092, 1093, 1094, 1095, 1096, 1131, 1132, 1133, 1134, 1200, 1214, 2070, 2102, 2103, 2104, 2105, 2111, 2113, 2114, 2115], "26606588": [69, 117, 1092, 1093, 1094, 1095, 1096, 1200, 1214], "2795853": [69, 117, 1092, 1093, 1094, 1095, 1096, 1200, 1214], "88079259": [69, 117, 1092, 1093, 1094, 1095, 1096, 1200, 1214], "moveaxi": [69, 117, 1200, 1254], "destin": [69, 117, 1200, 1215, 1250, 1251, 1252, 1253, 1254], "unstack": [69, 82, 83, 103, 104, 130, 131, 152, 170, 173, 1250, 1251, 1870, 1942, 2128, 2147], "reorder": [69, 82, 83, 117, 130, 131, 1200, 1215, 1250, 1251, 1252, 1253, 1254, 1417, 1451, 1454, 1870, 1891, 1892, 1893, 1894, 1895], "pad_width": [69, 82, 83, 117, 130, 131, 1200, 1218, 1294, 1295, 1296, 1297, 1298, 1870, 1881, 1882, 1883, 1884, 1885, 1946, 1947, 1948, 1949, 1950], "constant": [69, 82, 83, 84, 85, 117, 130, 131, 132, 133, 161, 165, 167, 174, 175, 187, 1107, 1108, 1109, 1110, 1111, 1200, 1218, 1290, 1291, 1294, 1295, 1296, 1297, 1298, 1870, 1881, 1882, 1883, 1884, 1885, 1955, 1962, 1975, 1976, 1977, 1978, 1979, 2159, 2165, 2168, 2181, 2182, 2183, 2184], "stat_length": [69, 117, 1200, 1218, 1294, 1295, 1296, 1297, 1298], "constant_valu": [69, 117, 1200, 1218, 1294, 1295, 1296, 1297, 1298], "end_valu": [69, 117, 1200, 1218, 1294, 1295, 1296, 1297, 1298], "reflect_typ": [69, 117, 1200, 1218, 1294, 1295, 1296, 1297, 1298], "rot90": [69, 117, 1200, 1330], "rotat": [69, 117, 186, 1200, 1219, 1326, 1327, 1328, 1329, 1330], "plane": [69, 117, 1200, 1219, 1326, 1327, 1328, 1329, 1330], "take_along_axi": [69, 117, 1200, 1361], "arr": [69, 70, 71, 111, 112, 117, 154, 155, 341, 412, 414, 415, 416, 1200, 1220, 1360, 1361, 1362, 1363, 1364, 1552, 1553], "top_k": [69, 117, 1200, 1371], "largest": [69, 103, 104, 117, 186, 341, 385, 388, 396, 399, 1200, 1221, 1370, 1371, 1372, 1373, 1374, 1714, 1766, 1769, 1811, 1815], "retun": [69, 117, 1200, 1221, 1370, 1371, 1372, 1373, 1374], "smallest": [69, 103, 104, 117, 341, 385, 388, 396, 399, 481, 557, 560, 1200, 1221, 1370, 1371, 1372, 1373, 1374, 1714, 1766, 1769, 2237, 2241, 2245, 2246, 2255, 2256], "vsplit": [69, 117, 1200, 1397], "instance_norm": [69, 117, 1111, 1290], "bia": [69, 76, 77, 117, 124, 125, 132, 133, 170, 174, 1107, 1108, 1109, 1110, 1111, 1290, 1291, 1417, 1543, 1650, 1651, 1682, 1683, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1975, 1976, 1978, 1979, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179], "running_mean": [69, 117, 1107, 1108, 1109, 1110, 1111, 1290, 1291], "running_stddev": [69, 117, 1107, 1108, 1109, 1110, 1111, 1290, 1291], "affin": [69, 117, 1107, 1108, 1109, 1110, 1111, 1290, 1291, 2183, 2184], "track_running_stat": [69, 117, 1107, 1108, 1109, 1110, 1111, 1290, 1291], "4d": [69, 1107, 1108, 1110, 1290, 1291], "stddev": [69, 117, 1107, 1108, 1109, 1110, 1111, 1290, 1291], "82836342": [69, 1107, 1108, 1110, 1290, 1291], "58581817": [69, 1107, 1108, 1110, 1290, 1291], "29290909": [69, 117, 1107, 1108, 1109, 1110, 1111, 1290, 1291], "41418171": [69, 117, 1107, 1108, 1109, 1110, 1111, 1290, 1291], "14645454": [69, 1107, 1108, 1110, 1290, 1291], "20709085": [69, 1107, 1108, 1110, 1290, 1291], "30000001": [69, 117, 1107, 1108, 1109, 1110, 1111, 1290, 1291, 1417, 1451, 1454, 2033, 2039, 2043], "52426404": [69, 117, 1107, 1108, 1109, 1110, 1111, 1290, 1291], "l2_normal": [69, 117, 1148, 1195, 1197, 1290], "l2": [69, 126, 127, 152, 1144, 1145, 1147, 1195, 1198, 1290, 1292, 1293, 1714, 1844, 1845, 1847, 1848], "4472": [69, 1144, 1145, 1147, 1195, 1196, 1290, 1292], "8944": [69, 1144, 1145, 1147, 1195, 1196, 1290, 1292], "lp_normal": [69, 117, 1199, 1290], "lp": [69, 1195, 1196, 1198, 1290, 1293], "bernoulli": [69, 117, 858, 932, 1149, 1156, 1315], "event": [69, 117, 166, 854, 855, 856, 857, 858, 1315, 1316], "parameter": [69, 86, 87, 117, 134, 135, 854, 855, 856, 857, 858, 859, 860, 1047, 1048, 1300, 1301, 1315, 1316, 1980, 1981, 1982, 1983, 1985, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000], "independ": [69, 86, 87, 117, 134, 135, 149, 154, 156, 162, 170, 175, 854, 855, 856, 857, 858, 1315, 1316, 1714, 1720, 1723, 1806, 1809, 1980, 1981, 1982, 1983, 1984, 1985, 2138], "prob": [69, 76, 77, 117, 124, 125, 134, 135, 854, 855, 856, 857, 858, 932, 1149, 1156, 1315, 1316, 1650, 1689, 1690, 1691, 1692, 1693, 1980, 1981, 1984, 1985, 2169, 2177], "drawn": [69, 86, 87, 117, 134, 135, 166, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 927, 928, 929, 930, 931, 1047, 1048, 1300, 1301, 1302, 1303, 1304, 1315, 1316, 1317, 1318, 1320, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2159, 2167, 2237, 2245, 2246, 2251, 2252, 2253, 2255, 2258, 2261, 2264], "dirichlet": [69, 117, 931, 1315], "shuffl": [69, 86, 87, 103, 104, 117, 134, 135, 927, 928, 929, 1980, 2006, 2128], "10598304": [69, 927, 928, 930, 1315, 1318], "21537054": [69, 927, 928, 930, 1315, 1318], "67864642": [69, 927, 928, 930, 1315, 1318], "48006698": [69, 927, 928, 930, 1315, 1318], "07472073": [69, 927, 928, 930, 1315, 1318], "44521229": [69, 927, 928, 930, 1315, 1318], "55479872": [69, 927, 928, 930, 1315, 1318], "05426367": [69, 927, 928, 930, 1315, 1318], "39093761": [69, 927, 928, 930, 1315, 1318], "19531053": [69, 927, 928, 930, 1315, 1318], "51675832": [69, 927, 928, 930, 1315, 1318], "28793114": [69, 927, 928, 930, 1315, 1318], "12315625": [69, 927, 928, 930, 1315, 1318], "29823365": [69, 927, 928, 930, 1315, 1318], "5786101": [69, 927, 928, 930, 1315, 1318], "15564976": [69, 927, 928, 930, 1315, 1318], "50542368": [69, 927, 928, 930, 1315, 1318], "33892656": [69, 927, 928, 930, 1315, 1318], "1325352": [69, 927, 928, 930, 1315, 1318], "44439589": [69, 927, 928, 930, 1315, 1318], "42306891": [69, 927, 928, 930, 1315, 1318], "gamma": [69, 84, 85, 132, 133, 1315, 1975, 1976, 1977, 1978, 1979], "poisson": [69, 117, 1304, 1315], "rate": [69, 72, 73, 117, 120, 121, 153, 1300, 1301, 1302, 1303, 1304, 1315, 1320, 1612, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1951, 1952, 1953, 1954, 2169, 2180, 2185, 2186, 2187, 2188, 2189, 2190], "paramt": [69, 1300, 1301, 1955, 1963, 1973], "lam": [69, 117, 1300, 1301, 1302, 1303, 1304, 1315, 1320], "lexsort": [69, 117, 1175, 1343], "indirectli": [69, 117, 1171, 1172, 1173, 1174, 1175, 1343, 1344], "column": [69, 78, 79, 117, 126, 127, 255, 276, 277, 886, 887, 888, 890, 896, 902, 903, 943, 946, 1017, 1020, 1022, 1025, 1082, 1085, 1171, 1172, 1174, 1176, 1179, 1200, 1209, 1210, 1213, 1343, 1344, 1378, 1381, 1382, 1385, 1714, 1740, 1741, 1744, 1766, 1769, 1796, 1797, 1798, 1799, 1800, 1806, 1809, 1811, 1815, 1834, 1835, 1836, 1837, 1838, 2159, 2160, 2163, 2164, 2167], "msort": [69, 117, 1259, 1343], "corrcoef": [69, 117, 890, 1353], "rowvar": [69, 117, 886, 887, 888, 889, 890, 1353, 1354], "row": [69, 117, 255, 276, 277, 886, 887, 888, 890, 896, 902, 903, 1022, 1025, 1171, 1174, 1200, 1210, 1223, 1343, 1344, 1378, 1381, 1382, 1385, 1401, 1405, 1714, 1766, 1769, 1806, 1809, 1811, 1815, 1834, 1838, 1980, 1981, 1984, 2007, 2023, 2026, 2159, 2160, 2163, 2164, 2167], "relationship": [69, 117, 886, 887, 888, 890, 2159, 2164], "median": [69, 117, 164, 1200, 1218, 1248, 1270, 1271, 1272, 1273, 1274, 1294, 1297, 1353, 1357], "nanmean": [69, 117, 1269, 1353], "6666666666666665": [69, 117, 1265, 1266, 1267, 1268, 1269, 1353, 1356], "nanmedian": [69, 117, 1353], "overwrite_input": [69, 117, 1270, 1271, 1272, 1273, 1353, 1357], "treat": [69, 103, 104, 117, 166, 171, 175, 953, 974, 1270, 1271, 1272, 1273, 1275, 1278, 1353, 1357, 2205, 2224, 2226], "undefin": [69, 117, 159, 1200, 1218, 1270, 1271, 1272, 1273, 1294, 1297, 1353, 1357], "quantil": [69, 117, 1314, 1353], "higher": [69, 72, 73, 117, 169, 170, 175, 187, 824, 827, 829, 832, 834, 837, 1200, 1201, 1202, 1203, 1310, 1311, 1312, 1313, 1314, 1353, 1358, 1624, 1625, 2137, 2140, 2141, 2144, 2146, 2147, 2159, 2164], "midpoint": [69, 117, 1310, 1311, 1312, 1313, 1314, 1353, 1358], "fraction": [69, 117, 1310, 1311, 1312, 1313, 1314, 1353, 1358, 1650, 1689, 1692], "surround": [69, 117, 168, 1310, 1311, 1312, 1313, 1314, 1353, 1358], "whichev": [69, 117, 1310, 1311, 1312, 1313, 1314, 1353, 1358], "unravel_index": [69, 117, 1353, 1387], "unravel": [69, 117, 1353, 1359, 1386, 1387, 1388, 1389, 1390], "all_equ": [70, 71, 118, 119, 1417, 1422], "equality_matrix": [70, 71, 118, 119, 1417, 1418, 1419, 1420, 1421, 1422], "array_equ": [70, 71, 118, 119, 1417, 1429], "assert_supports_inplac": [70, 71, 118, 119, 1417, 1434], "clip_matrix_norm": [70, 71, 118, 119, 1417, 1440], "downscal": [70, 71, 118, 119, 1417, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1518, 1520, 1522], "894": [70, 71, 118, 119, 1417, 1436, 1437, 1439, 1440, 1441, 1442, 1444, 1445, 1975, 1976, 1979], "clip_vector_norm": [70, 71, 118, 119, 1417, 1445], "default_v": [70, 71, 1417, 1448, 1449, 1450], "catch_except": [70, 71, 1417, 1448, 1449, 1450], "rev": [70, 71, 1417, 1448, 1449, 1450], "with_cal": [70, 71, 1417, 1448, 1449, 1450], "catch": [70, 71, 166, 1417, 1448, 1449, 1450], "callabl": [70, 71, 118, 119, 152, 158, 164, 170, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 212, 255, 264, 265, 266, 341, 390, 391, 393, 394, 446, 459, 460, 471, 1200, 1218, 1294, 1297, 1417, 1423, 1435, 1448, 1449, 1450, 1456, 1457, 1458, 1459, 1460, 1474, 1475, 1543, 1599, 1611, 1650, 1704, 1707, 1951, 1952, 1953, 1954, 1955, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 2185, 2189, 2194, 2200, 2228, 2230, 2282, 2288], "einops_rearrang": [70, 71, 118, 119, 1417, 1455], "axes_length": [70, 71, 118, 119, 1417, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465], "arrang": [70, 71, 1417, 1451, 1452, 1454], "rearrang": [70, 71, 118, 119, 1417, 1451, 1452, 1453, 1454, 1455, 1461, 1462, 1463, 1464, 1465], "einops_reduc": [70, 71, 118, 119, 1417], "reduct": [70, 71, 80, 81, 96, 97, 103, 104, 117, 118, 119, 128, 129, 144, 145, 154, 158, 166, 172, 869, 870, 871, 872, 1193, 1194, 1417, 1456, 1457, 1458, 1459, 1460, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2128], "One": [70, 71, 82, 83, 86, 87, 118, 119, 130, 131, 134, 135, 150, 152, 154, 156, 165, 166, 170, 172, 173, 824, 827, 829, 832, 834, 837, 1200, 1201, 1202, 1203, 1218, 1294, 1297, 1417, 1456, 1457, 1458, 1459, 1460, 1870, 1906, 1907, 1908, 1909, 1910, 1980, 1986, 1987, 1988, 1989, 1990], "prod": [70, 71, 94, 95, 118, 119, 142, 143, 154, 156, 170, 1417, 1456, 1457, 1458, 1459, 1460, 2070, 2101, 2237], "einops_repeat": [70, 71, 118, 119, 1417], "fourier_encod": [70, 71, 118, 119, 1417, 1473], "max_freq": [70, 71, 118, 119, 1417, 1469, 1470, 1471, 1472, 1473], "num_band": [70, 71, 118, 119, 1417, 1469, 1470, 1471, 1472, 1473], "concat": [70, 71, 82, 83, 103, 104, 130, 131, 165, 168, 170, 446, 471, 1417, 1469, 1470, 1472, 1870, 1880, 1946, 1950, 2128], "band": [70, 71, 118, 119, 1417, 1469, 1470, 1471, 1472, 1473], "linearli": [70, 71, 118, 119, 1417, 1469, 1470, 1471, 1472, 1473, 1714, 1806, 1809], "oppos": [70, 71, 118, 119, 154, 1417, 1469, 1470, 1471, 1472, 1473], "geometr": [70, 71, 118, 119, 1417, 1469, 1470, 1471, 1472, 1473, 1714, 1834, 1838], "concaten": [70, 71, 82, 83, 165, 168, 170, 173, 1417, 1451, 1454, 1469, 1470, 1472, 1870, 1876, 1877, 1879, 2128], "seper": [70, 71, 156, 165, 166, 1417, 1469, 1470, 1472], "0000000e": [70, 71, 118, 119, 1417, 1469, 1470, 1471, 1472, 1473], "2246468e": [70, 71, 118, 119, 1417, 1469, 1470, 1471, 1472, 1473], "4492936e": [70, 71, 1417, 1469, 1470, 1472], "6739404e": [70, 71, 118, 119, 1417, 1469, 1470, 1471, 1472, 1473], "gather": [70, 71, 118, 119, 1417, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 2147], "gather_nd": [70, 71, 118, 119, 1417, 2128], "get_num_dim": [70, 71, 118, 119, 1417, 1497, 2128], "as_arrai": [70, 71, 118, 119, 1417, 1493, 1494, 1495, 1496, 1497, 1566], "has_nan": [70, 71, 118, 119, 1417], "include_inf": [70, 71, 118, 119, 1417, 1502, 1503, 1504, 1505, 1506, 1606, 1607, 1608, 1609, 1610], "inplace_decr": [70, 71, 118, 119, 1417, 1512], "decrement": [70, 71, 118, 119, 1417, 1508, 1509, 1510, 1511, 1512], "inplace_incr": [70, 71, 118, 119, 1417, 1517], "inplace_upd": [70, 71, 118, 119, 163, 1417, 1522, 2152, 2153, 2156], "ensure_in_backend": [70, 71, 163, 1417, 1518, 1519, 1521], "inplac": [70, 71, 72, 73, 103, 104, 118, 119, 148, 150, 156, 160, 162, 164, 168, 172, 174, 1417, 1424, 1430, 1432, 1433, 1434, 1507, 1518, 1519, 1520, 1521, 1522, 1523, 1624, 1625, 1955, 1963, 1964, 1968, 1973, 1974, 2152, 2153, 2156, 2185, 2186, 2187, 2188, 2189, 2190, 2272, 2273, 2278, 2282, 2284], "is_arrai": [70, 71, 118, 119, 164, 1417, 1528], "exclus": [70, 71, 94, 95, 103, 104, 118, 119, 142, 143, 152, 154, 161, 167, 175, 255, 257, 258, 1417, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1537, 1538, 1539, 1540, 1541, 1980, 1986, 1989, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2144, 2146], "trace": [70, 71, 78, 79, 103, 104, 118, 119, 126, 127, 149, 154, 170, 187, 1417, 1500, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1537, 1538, 1539, 1540, 1541, 1558, 1564, 1601, 1605, 1714, 1830, 2127, 2141, 2146], "is_ivy_arrai": [70, 71, 118, 119, 163, 172, 1417, 1533], "is_ivy_contain": [70, 71, 100, 105, 106, 1417], "is_native_arrai": [70, 71, 118, 119, 172, 905, 906, 1119, 1417, 1529, 1531, 1541], "scatter_flat": [70, 71, 118, 119, 1417, 1551], "occupi": [70, 71, 341, 385, 388, 396, 399, 1417, 1547, 1548, 1550, 1552, 1555], "scatter_nd": [70, 71, 118, 119, 168, 172, 1417, 1556, 2128], "stable_divid": [70, 71, 118, 119, 161, 1417, 1572], "denomin": [70, 71, 84, 85, 118, 119, 132, 133, 161, 187, 1417, 1491, 1560, 1568, 1569, 1570, 1571, 1572, 1975, 1976, 1977, 1978, 1979, 2137, 2183, 2184], "min_denomin": [70, 71, 118, 119, 1417, 1568, 1569, 1570, 1571, 1572], "_min_denomin": [70, 71, 118, 119, 1417, 1568, 1569, 1570, 1571, 1572], "stable_pow": [70, 71, 118, 119, 1417, 1577], "min_bas": [70, 71, 118, 119, 1417, 1573, 1574, 1575, 1576, 1577], "_min_bas": [70, 71, 84, 85, 118, 119, 132, 133, 1417, 1573, 1574, 1575, 1576, 1577, 1975, 1976, 1977, 1978, 1979, 2183, 2184], "supports_inplace_upd": [70, 71, 118, 119, 1417], "supports_inplac": [70, 71, 118, 119, 1578, 1579, 1580], "to_list": [70, 71, 118, 119, 1417, 1585, 2128], "to_numpi": [70, 71, 118, 119, 165, 173, 1417, 1590, 2128], "to_scalar": [70, 71, 118, 119, 1417, 1595], "value_is_nan": [70, 71, 118, 119, 1417, 1607], "92": [70, 71, 134, 135, 1606, 1608, 1612, 1637, 1640, 1714, 1725, 1728, 1991, 1993, 1996, 1998], "adam_step": [72, 73, 120, 121, 1612], "mw": [72, 73, 120, 121, 174, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621], "vw": [72, 73, 120, 121, 174, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621], "beta1": [72, 73, 120, 121, 174, 1417, 1424, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1629, 1630, 1631, 1632, 2185, 2186, 2187], "beta2": [72, 73, 120, 121, 174, 1417, 1424, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1629, 1630, 1631, 1632, 2185, 2186, 2187], "999": [72, 73, 115, 116, 120, 121, 174, 481, 787, 788, 790, 791, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1629, 1630, 1631, 1632, 1637, 1640, 2185, 2186, 2187], "epsilon": [72, 73, 78, 79, 80, 81, 84, 85, 117, 120, 121, 126, 127, 128, 129, 132, 133, 152, 161, 163, 174, 869, 870, 871, 872, 1193, 1194, 1417, 1424, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1629, 1630, 1631, 1632, 1714, 1776, 1777, 1778, 1779, 1780, 1791, 1794, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1975, 1976, 1977, 1978, 1979, 2183, 2184, 2185, 2186, 2187], "07": [72, 73, 80, 81, 115, 116, 117, 120, 121, 128, 129, 134, 135, 174, 481, 517, 519, 520, 521, 652, 654, 655, 656, 672, 675, 752, 755, 869, 870, 871, 872, 1193, 1194, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1648, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1991, 1993, 2185, 2186, 2187], "cost": [72, 73, 120, 121, 168, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1951, 1952, 1953, 1954, 2138], "weight": [72, 73, 76, 77, 117, 120, 121, 124, 125, 152, 161, 170, 174, 175, 869, 870, 871, 872, 896, 899, 982, 985, 986, 1068, 1070, 1149, 1157, 1193, 1194, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1650, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1709, 1710, 1711, 1712, 1713, 2139, 2159, 2163, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2178, 2179, 2181, 2182, 2185, 2187, 2188], "dc": [72, 73, 120, 121, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640], "dw": [72, 73, 120, 121, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640], "averag": [72, 73, 120, 121, 844, 847, 1149, 1151, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1629, 1630, 1631, 1632, 1951, 1952, 1953, 2159, 2164, 2167], "forget": [72, 73, 120, 121, 154, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1629, 1630, 1631, 1632, 2185, 2186, 2187], "adam": [72, 73, 120, 121, 173, 174, 175, 1417, 1424, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1629, 1630, 1631, 1632, 2128, 2140, 2185, 2187], "delta": [72, 73, 120, 121, 1612, 1614, 1615, 1616, 1617], "dcdw": [72, 73, 120, 121, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636], "adam_step_delta": [72, 73, 120, 121, 1612, 1614, 1615, 1616, 1617], "2020105": [72, 73, 1612, 1614, 1615, 1617], "22187898": [72, 73, 1612, 1614, 1615, 1617], "24144873": [72, 73, 1612, 1614, 1615, 1617], "10000002": [72, 73, 142, 143, 1612, 1614, 1615, 1617, 2089, 2091], "20000005": [72, 73, 1612, 1614, 1615, 1617], "00300002": [72, 73, 1612, 1614, 1615, 1617], "00800002": [72, 73, 1612, 1614, 1615, 1617], "adam_upd": [72, 73, 120, 121, 174, 1612], "lr": [72, 73, 120, 121, 173, 174, 1417, 1424, 1612, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 2185, 2186, 2187, 2188, 2189, 2190], "mw_tm1": [72, 73, 120, 121, 1612, 1618, 1619, 1620, 1621, 1629, 1630, 1631, 1632], "vw_tm1": [72, 73, 120, 121, 1612, 1618, 1619, 1620, 1621, 1629, 1630, 1631, 1632], "stop_gradi": [72, 73, 120, 121, 174, 446, 471, 1417, 1424, 1612, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1643, 1951, 1952, 1953, 1954, 2128, 2185, 2186, 2187, 2188, 2189, 2190], "ws_new": [72, 73, 120, 121, 1612, 1618, 1619, 1620, 1621, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640], "updated_weight": [72, 73, 120, 121, 1612, 1618, 1619, 1620, 1621], "92558753": [72, 73, 1618, 1619], "92558873": [72, 73, 1612, 1618, 1619, 1621], "92558718": [72, 73, 1612, 1618, 1619, 1621], "00000063e": [72, 73, 120, 121, 1612, 1618, 1619, 1620, 1621], "00000016e": [72, 73, 120, 121, 1612, 1618, 1619, 1620, 1621], "00000086e": [72, 73, 120, 121, 1612, 1618, 1619, 1620, 1621], "gradient_descent_upd": [72, 73, 120, 121, 1612, 1951, 1952, 1953, 1954, 2128], "descent": [72, 73, 120, 121, 174, 1612, 1624, 1625, 1626, 1627, 2140, 2185, 2190], "new_weight": [72, 73, 120, 121, 173, 1612, 1624, 1625, 1627, 1629, 1630, 1631, 1632], "95": [72, 73, 86, 87, 101, 102, 120, 121, 134, 135, 205, 207, 209, 210, 907, 910, 1149, 1154, 1612, 1614, 1617, 1624, 1625, 1626, 1627, 1637, 1640, 1980, 1991, 1992, 1993, 1994, 1996, 1998], "97": [72, 73, 115, 116, 120, 121, 134, 135, 481, 507, 510, 511, 1612, 1624, 1625, 1626, 1627, 1991, 1993], "96": [72, 73, 115, 116, 117, 118, 119, 134, 135, 481, 562, 564, 565, 566, 782, 786, 787, 788, 907, 910, 911, 1149, 1154, 1166, 1168, 1170, 1417, 1451, 1454, 1456, 1459, 1460, 1612, 1624, 1625, 1627, 1714, 1786, 1789, 1996, 1998, 2070, 2081, 2084], "lamb_upd": [72, 73, 120, 121, 1612], "max_trust_ratio": [72, 73, 120, 121, 1612, 1629, 1630, 1631, 1632, 2185, 2187], "decay_lambda": [72, 73, 120, 121, 1612, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 2185, 2187, 2188], "trust": [72, 73, 120, 121, 1612, 1629, 1630, 1631, 1632, 2185, 2187], "ratio": [72, 73, 120, 121, 1612, 1629, 1630, 1631, 1632, 2185, 2187], "decai": [72, 73, 120, 121, 1612, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 2185, 2187, 2188], "lamb": [72, 73, 120, 121, 174, 1612, 1629, 1630, 1631, 1632, 2185], "784": [72, 73, 1612, 1629, 1630, 1632], "78": [72, 73, 481, 552, 555, 752, 755, 1612, 1629, 1630, 1632, 1714, 1786, 1789, 1980, 1991, 1994, 2070, 2081, 2084], "lars_upd": [72, 73, 120, 121, 1612], "lar": [72, 73, 120, 121, 174, 1612, 1633, 1634, 1635, 1636, 2185], "optimizer_upd": [72, 73, 120, 121, 1612], "effective_grad": [72, 73, 120, 121, 1612, 1637, 1638, 1639, 1640], "3e": [72, 73, 120, 121, 1612, 1637, 1638, 1639, 1640], "preserve_typ": [72, 73, 120, 121, 1612, 1642, 1643, 1644, 1645, 1646], "conv1d": [76, 77, 124, 125, 1650, 1656, 2169], "fw": [76, 77, 124, 125, 166, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 2205, 2214, 2225], "d_out": [76, 77, 124, 125, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683], "wio": [76, 77, 1650, 1652, 1653, 1655], "conv1d_transpos": [76, 77, 124, 125, 1650], "output_shap": [76, 77, 124, 125, 1650, 1651, 1657, 1658, 1659, 1660, 1661, 1667, 1668, 1669, 1670, 1671, 1677, 1678, 1679, 1680, 1681, 1683, 2169, 2171, 2173, 2175], "conv2d": [76, 77, 124, 125, 1650, 1666, 1667, 1669, 1671, 2128, 2169], "fh": [76, 77, 124, 125, 1650, 1651, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688], "hwio": [76, 77, 1650, 1662, 1663, 1665], "conv2d_transpos": [76, 77, 124, 125, 1650, 1671], "random_norm": [76, 77, 78, 79, 86, 87, 124, 125, 126, 127, 134, 135, 1417, 1451, 1454, 1650, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1677, 1678, 1679, 1680, 1681, 1684, 1685, 1686, 1687, 1688, 1699, 1700, 1701, 1714, 1811, 1812, 1813, 1814, 1815, 1980, 1995], "std": [76, 77, 86, 87, 94, 95, 124, 125, 134, 135, 142, 143, 156, 859, 862, 1315, 1317, 1650, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1677, 1678, 1679, 1680, 1681, 1684, 1685, 1686, 1687, 1688, 1980, 1986, 1989, 1991, 1992, 1993, 1994, 1995, 2070], "conv3d": [76, 77, 124, 125, 1650, 1676, 2169], "fd": [76, 77, 124, 125, 1650, 1651, 1672, 1673, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1683], "conv3d_transpos": [76, 77, 124, 125, 1650, 1681], "depthwise_conv2d": [76, 77, 124, 125, 1650, 1688, 2128], "randint": [76, 77, 86, 87, 90, 91, 124, 125, 134, 135, 154, 1684, 1685, 1686, 1688, 1699, 1700, 1980, 1990, 2033, 2034, 2036, 2038, 2128], "255": [76, 77, 117, 124, 125, 481, 547, 550, 907, 911, 1684, 1685, 1686, 1688], "dropout": [76, 77, 124, 125, 173, 932, 1149, 1156, 1650, 1693, 2169, 2180], "noise_shap": [76, 77, 124, 125, 1650, 1689, 1690, 1691, 1692, 1693], "droput": [76, 77, 1689, 1690], "reproduc": [76, 77, 124, 125, 149, 1650, 1689, 1690, 1691, 1692, 1693, 2237, 2239, 2241, 2245, 2246, 2248, 2251, 2252, 2253, 2254, 2255, 2258, 2259, 2260, 2261, 2263, 2264, 2266, 2267, 2268, 2269, 2282, 2287, 2288], "binari": [76, 77, 80, 81, 117, 124, 125, 128, 129, 481, 527, 530, 542, 545, 552, 555, 692, 695, 869, 870, 871, 872, 1193, 1194, 1650, 1689, 1690, 1691, 1692, 1693, 1854, 1855, 1856, 1857, 1858, 1859], "mask": [76, 77, 124, 125, 168, 1417, 1489, 1650, 1689, 1690, 1691, 1692, 1693, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 2152, 2154], "42857146": [76, 77, 1650, 1689, 1690, 1692], "85714293": [76, 77, 1650, 1689, 1690, 1692], "28571415": [76, 77, 124, 125, 1650, 1689, 1690, 1691, 1692, 1693], "71428585": [76, 77, 124, 125, 1650, 1689, 1690, 1691, 1692, 1693], "14285755": [76, 77, 124, 125, 1650, 1689, 1690, 1691, 1692, 1693], "5714283": [76, 77, 1650, 1689, 1690, 1692], "4285717": [76, 77, 124, 125, 1650, 1689, 1690, 1691, 1692, 1693], "8571434": [76, 77, 124, 125, 1650, 1689, 1690, 1691, 1692, 1693], "2857151": [76, 77, 1650, 1689, 1690, 1692], "dropout1d": [76, 77, 124, 125, 1149], "droput1d": [76, 77], "outer_batch_shap": [76, 77, 124, 125, 1650, 1694, 1695, 1696, 1697, 1698], "inner_batch_shap": [76, 77, 124, 125, 1650, 1694, 1695, 1696, 1697, 1698], "in_featur": [76, 77, 124, 125, 1650, 1694, 1695, 1696, 1697, 1698], "out_featur": [76, 77, 124, 125, 1650, 1694, 1695, 1696, 1697, 1698], "84": [76, 77, 94, 95, 115, 116, 132, 133, 134, 135, 341, 396, 399, 446, 458, 662, 664, 1694, 1695, 1714, 1786, 1789, 1975, 1976, 1978, 1979, 1991, 1993, 1996, 1998, 2070, 2081, 2082, 2084], "133": [76, 77, 1417, 1441, 1444, 1694, 1695], "134": [76, 77, 1694, 1695, 1714, 1771, 1774], "lstm_updat": [76, 77, 124, 125, 170, 1650], "init_h": [76, 77, 124, 125, 170, 1650, 1699, 1700, 1701, 1702, 1703], "init_c": [76, 77, 124, 125, 170, 1650, 1699, 1700, 1701, 1702, 1703], "recurrent_kernel": [76, 77, 124, 125, 170, 1650, 1699, 1700, 1701, 1702, 1703], "recurrent_bia": [76, 77, 124, 125, 170, 1650, 1699, 1700, 1701, 1702, 1703], "cell": [76, 77, 124, 125, 153, 170, 1650, 1699, 1700, 1701, 1702, 2169, 2178], "batch_shap": [76, 77, 86, 87, 109, 110, 124, 125, 134, 135, 168, 170, 172, 255, 276, 277, 310, 312, 313, 314, 1650, 1699, 1700, 1701, 1702, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1849, 1853, 1980, 1981, 1982, 1983, 1984, 1985, 2169, 2178], "hidden": [76, 77, 124, 125, 158, 170, 174, 1650, 1699, 1700, 1701, 1702, 2169, 2178], "recurr": [76, 77, 124, 125, 170, 1650, 1699, 1700, 1701, 1702, 2140, 2144], "timestep": [76, 77, 124, 125, 170, 1650, 1699, 1700, 1701, 1702, 2169, 2178], "h_i": [76, 77, 124, 125, 1699, 1700, 1701], "c_i": [76, 77, 124, 125, 1699, 1700, 1701], "rc": [76, 77, 124, 125, 1699, 1700, 1701], "multi_head_attent": [76, 77, 124, 125, 163, 1650], "num_head": [76, 77, 124, 125, 1650, 1704, 1705, 1706, 1707, 1708, 2169, 2180], "to_q_fn": [76, 77, 124, 125, 1650, 1704, 1705, 1706, 1707, 1708], "to_kv_fn": [76, 77, 124, 125, 1650, 1704, 1705, 1706, 1707, 1708], "to_out_fn": [76, 77, 124, 125, 163, 1650, 1704, 1705, 1706, 1707, 1708], "to_q_v": [76, 77, 124, 125, 1650, 1704, 1705, 1706, 1707, 1708], "to_kv_v": [76, 77, 124, 125, 1650, 1704, 1705, 1706, 1707, 1708], "to_out_v": [76, 77, 124, 125, 1650, 1704, 1705, 1706, 1707, 1708], "scaled_dot_product_attent": [76, 77, 124, 125, 1650, 1713], "queri": [76, 77, 103, 104, 124, 125, 152, 154, 172, 446, 458, 470, 1417, 1489, 1650, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 2140, 2169, 2180], "num_queri": [76, 77, 124, 125, 1650, 1704, 1707, 1709, 1710, 1711, 1712, 1713], "feat_dim": [76, 77, 124, 125, 1650, 1709, 1710, 1711, 1712, 1713], "num_kei": [76, 77, 124, 125, 1650, 1704, 1707, 1709, 1710, 1711, 1712, 1713], "pair": [76, 77, 124, 125, 153, 481, 517, 520, 953, 981, 1200, 1216, 1282, 1411, 1415, 1650, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1683, 1684, 1687, 1709, 1710, 1711, 1712, 1713, 1714, 1720, 1723], "dot": [76, 77, 124, 125, 153, 1650, 1704, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1839, 1843, 2169, 2180], "score": [76, 77, 124, 125, 1650, 1709, 1710, 1711, 1712, 1713], "linear_algebra": [78, 79, 126, 127, 167, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1714, 1715, 1718, 1720, 1723, 1725, 1728, 1730, 1733, 1735, 1738, 1740, 1741, 1744, 1746, 1749, 1751, 1754, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1799, 1801, 1804, 1806, 1809, 1811, 1815, 1816, 1820, 1821, 1824, 1825, 1828, 1829, 1833, 1834, 1838, 1839, 1843, 1844, 1848, 1849, 1853], "choleski": [78, 79, 126, 127, 163, 1714, 1719], "symmetr": [78, 79, 117, 126, 127, 152, 896, 898, 899, 900, 901, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1200, 1218, 1294, 1297, 1714, 1715, 1716, 1717, 1718, 1719, 1740, 1741, 1744, 1746, 1749, 1849, 1853], "625": [78, 79, 1714, 1715, 1716, 1718], "cross": [78, 79, 80, 81, 117, 126, 127, 128, 129, 153, 869, 870, 871, 872, 1193, 1194, 1714, 1724, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 2128], "vif": [78, 79, 126, 127, 1714, 1720, 1721, 1722, 1723, 1724], "det": [78, 79, 126, 127, 153, 1714, 1801, 1804], "axis1": [78, 79, 82, 83, 126, 127, 130, 131, 1714, 1735, 1736, 1737, 1738, 1739, 1829, 1830, 1831, 1832, 1833, 1870, 1931, 1932, 1933, 1934, 1935], "axis2": [78, 79, 126, 127, 1714, 1735, 1736, 1737, 1738, 1739, 1829, 1830, 1831, 1832, 1833], "eigh": [78, 79, 126, 127, 1714, 1740], "uplo": [78, 79, 126, 127, 1714, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750], "eigvalsh": [78, 79, 126, 127, 1714, 1750], "eigenvalu": [78, 79, 117, 126, 127, 943, 946, 948, 950, 951, 952, 1176, 1179, 1180, 1714, 1740, 1741, 1744, 1746, 1747, 1748, 1749, 1750], "inv": [78, 79, 126, 127, 1714, 1760, 2128], "matmul": [78, 79, 126, 127, 151, 166, 167, 170, 1417, 1611, 1714, 1765, 1811, 1813, 1815, 2128], "transpose_a": [78, 79, 126, 127, 1714, 1761, 1762, 1763, 1764, 1765], "transpose_b": [78, 79, 126, 127, 1714, 1761, 1762, 1763, 1764, 1765], "adjoint_a": [78, 79, 126, 127, 1714, 1761, 1762, 1763, 1764, 1765], "adjoint_b": [78, 79, 126, 127, 1714, 1761, 1762, 1763, 1764, 1765], "matrix_norm": [78, 79, 126, 127, 1714, 1770], "ord": [78, 79, 126, 127, 1714, 1766, 1767, 1768, 1769, 1770, 1844, 1845, 1846, 1847, 1848], "fro": [78, 79, 126, 127, 1714, 1766, 1767, 1768, 1769, 1770], "nuc": [78, 79, 126, 127, 1714, 1766, 1767, 1768, 1769, 1770], "matrix_pow": [78, 79, 126, 127, 1714], "matrix_rank": [78, 79, 126, 127, 1714, 1780], "singular": [78, 79, 126, 127, 154, 1714, 1766, 1769, 1776, 1777, 1778, 1779, 1780, 1791, 1792, 1793, 1794, 1795, 1811, 1812, 1813, 1814, 1815, 1816, 1820, 2255, 2262], "largest_singular_valu": [78, 79, 126, 127, 1714, 1776, 1777, 1778, 1779, 1780, 1791, 1793, 1794, 1795], "defici": [78, 79, 1714, 1776, 1777, 1779], "matrix_transpos": [78, 79, 126, 127, 172, 1714], "pinv": [78, 79, 126, 127, 1714, 1795, 2128], "pseudo": [78, 79, 126, 127, 1714, 1791, 1792, 1793, 1794, 1795], "0426": [78, 79, 126, 127, 1791, 1792, 1795], "0964": [78, 79, 126, 127, 1791, 1792, 1795], "0605": [78, 79, 126, 127, 1791, 1792, 1795], "1368": [78, 79, 126, 127, 1791, 1792, 1795], "qr": [78, 79, 126, 127, 165, 1714, 1800], "orthonorm": [78, 79, 126, 127, 1714, 1796, 1797, 1798, 1799, 1800, 1811, 1815], "namedtupl": [78, 79, 90, 91, 126, 127, 138, 139, 1714, 1740, 1741, 1744, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1811, 1812, 1813, 1814, 1815, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048], "field": [78, 79, 90, 91, 126, 127, 138, 139, 153, 186, 1714, 1740, 1741, 1744, 1796, 1797, 1798, 1799, 1800, 1801, 1804, 1811, 1815, 2033, 2034, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2138, 2146], "slogdet": [78, 79, 126, 127, 1714, 1805], "logabsdet": [78, 79, 126, 127, 1714, 1801, 1802, 1803, 1804, 1805], "6931472": [78, 79, 126, 127, 1714, 1801, 1802, 1803, 1804, 1805], "098611": [78, 79, 1714, 1801, 1802, 1804], "solv": [78, 79, 126, 127, 149, 164, 171, 186, 1714, 2142], "svd": [78, 79, 126, 127, 1714, 1812, 1816, 1820, 2128], "compute_uv": [78, 79, 126, 127, 1714, 1811, 1812, 1813, 1814, 1815], "full_matric": [78, 79, 126, 127, 1714, 1811, 1812, 1813, 1814, 1815], "svf": [78, 79, 1811, 1813], "vh": [78, 79, 126, 127, 1714, 1811, 1812, 1813, 1814, 1815], "hermitian": [78, 79, 126, 127, 1714, 1740, 1741, 1744, 1746, 1749, 1811, 1812, 1813, 1814, 1815], "reconstruct": [78, 79, 90, 91, 138, 139, 165, 1714, 1811, 1813, 1815, 2033, 2034, 2038, 2044, 2045, 2046, 2047, 2048], "reconstructed_x": [78, 79, 1714, 1811, 1813, 1815], "svdval": [78, 79, 126, 127, 1714], "tensordot": [78, 79, 126, 127, 154, 1714], "tensorsolv": [78, 79, 126, 127, 1714], "vander": [78, 79, 126, 127, 1714, 1835], "vandermond": [78, 79, 126, 127, 1714, 1834, 1835, 1836, 1837, 1838], "vecdot": [78, 79, 126, 127, 1714], "vector_norm": [78, 79, 126, 127, 1714, 1845, 2128], "vector_to_skew_symmetric_matrix": [78, 79, 126, 127, 1714, 2128], "binary_cross_entropi": [80, 81, 128, 129, 153, 1854, 1859], "pred": [80, 81, 117, 128, 129, 152, 161, 163, 869, 870, 871, 872, 1193, 1194, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869], "predict": [80, 81, 117, 128, 129, 869, 870, 871, 872, 1193, 1194, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869], "amount": [80, 81, 117, 128, 129, 153, 155, 165, 446, 477, 869, 870, 871, 872, 1193, 1194, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869], "smooth": [80, 81, 117, 128, 129, 869, 870, 871, 872, 1193, 1194, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869], "entropi": [80, 81, 117, 128, 129, 869, 870, 871, 872, 1193, 1194, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869], "357": [80, 81, 128, 129, 1854, 1855, 1856, 1857, 1858, 1859, 1865, 1866, 1868, 1869], "223": [80, 81, 128, 129, 1854, 1855, 1856, 1857, 1858, 1859, 1865, 1866, 1867, 1869], "cross_entropi": [80, 81, 128, 129, 152, 161, 163, 1854, 1864, 1865, 1868], "3862944": [80, 81, 1854, 1860, 1861, 1863], "sparse_cross_entropi": [80, 81, 128, 129, 1854, 1869], "loss": [81, 117, 129, 153, 154, 161, 164, 167, 173, 174, 175, 869, 870, 871, 872, 1194, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 2128, 2140, 2147], "x_min": [82, 83, 130, 131, 175, 1870, 1871, 1872, 1873, 1874, 1875], "x_max": [82, 83, 130, 131, 175, 1870, 1871, 1872, 1873, 1874, 1875], "join": [82, 83, 103, 104, 130, 131, 158, 1870, 1876, 1877, 1879, 1926, 1927, 1928, 1929, 1930, 2128], "constant_pad": [82, 83, 130, 131, 1870, 1885], "before_1": [82, 83, 130, 131, 1200, 1218, 1294, 1297, 1870, 1881, 1882, 1883, 1884, 1885, 1946, 1947, 1948, 1949, 1950], "after_1": [82, 83, 130, 131, 1200, 1218, 1294, 1297, 1870, 1881, 1882, 1883, 1884, 1885, 1946, 1947, 1948, 1949, 1950], "before_n": [82, 83, 130, 131, 1200, 1218, 1294, 1297, 1870, 1881, 1882, 1883, 1884, 1885, 1946, 1947, 1948, 1949, 1950], "after_n": [82, 83, 130, 131, 1200, 1218, 1294, 1297, 1870, 1881, 1882, 1883, 1884, 1885, 1946, 1947, 1948, 1949, 1950], "expand_dim": [82, 83, 130, 131, 164, 170, 173, 1650, 1684, 1687, 1870, 1890, 2128], "permute_dim": [82, 83, 130, 131, 1870, 1900], "repetit": [82, 83, 130, 131, 158, 1870, 1901, 1902, 1903, 1904, 1936, 1937, 1938, 1939, 1940], "fit": [82, 83, 130, 131, 164, 170, 1870, 1901, 1902, 1903, 1904, 2136, 2137, 2140], "flat": [82, 83, 103, 104, 130, 131, 1353, 1359, 1386, 1390, 1417, 1547, 1550, 1870, 1901, 1902, 1903, 1904, 2157, 2158], "allowzero": [82, 83, 130, 131, 1870, 1906, 1907, 1908, 1909, 1910], "valueerror": [82, 83, 118, 119, 130, 131, 158, 1417, 1578, 1579, 1582, 1870, 1906, 1907, 1908, 1909, 1910, 1921, 1924], "reus": [82, 83, 130, 131, 158, 166, 1870, 1906, 1907, 1908, 1909, 1910, 2145], "buffer": [82, 83, 130, 131, 187, 1870, 1906, 1907, 1908, 1909, 1910], "roll": [82, 83, 130, 131, 152, 160, 1870, 1915], "restor": [82, 83, 130, 131, 1870, 1911, 1912, 1913, 1914, 1915], "num_or_size_split": [82, 83, 103, 104, 130, 131, 170, 1650, 1704, 1707, 1870, 1916, 1917, 1918, 1919, 1920], "with_remaind": [82, 83, 103, 104, 130, 131, 1870, 1916, 1917, 1918, 1919, 1920], "squeez": [82, 83, 130, 131, 1870, 1925, 2128, 2140], "swapax": [82, 83, 130, 131, 1870, 1932], "axis0": [82, 83, 130, 131, 1870, 1931, 1932, 1933, 1934, 1935], "swap_ax": [82, 83, 1931, 1933], "tile": [82, 83, 118, 119, 130, 131, 1461, 1463, 1465, 1870, 1937, 2128], "unpack": [82, 83, 130, 131, 159, 165, 166, 1870, 1941, 1942, 1943, 1944, 1945], "zero_pad": [82, 83, 130, 131, 1870, 1947, 2128], "layer_norm": [84, 85, 132, 133, 1975], "normalized_idx": [84, 85, 132, 133, 1975, 1976, 1977, 1978, 1979], "new_std": [84, 85, 132, 133, 1975, 1976, 1977, 1978, 1979, 2183, 2184], "learnabl": [84, 85, 132, 133, 175, 1975, 1976, 1977, 1978, 1979, 2183, 2184], "0976": [84, 85, 1975, 1976, 1977, 1979], "3452": [84, 85, 1975, 1976, 1977, 1979], "2740": [84, 85, 1975, 1976, 1977, 1979], "1047": [84, 85, 1975, 1976, 1977, 1979], "5886": [84, 85, 1975, 1976, 1977, 1979], "2732": [84, 85, 1975, 1976, 1977, 1979], "7696": [84, 85, 1975, 1976, 1977, 1979], "7024": [84, 85, 1975, 1976, 1977, 1979], "2518": [84, 85, 1975, 1976, 1977, 1979], "826": [84, 85, 1975, 1976, 1977, 1979], "178": [84, 85, 1975, 1976, 1977, 1979], "981": [84, 85, 1975, 1976, 1977, 1979], "831": [84, 85, 1975, 1976, 1977, 1979], "421": [84, 85, 1975, 1976, 1977, 1979], "multinomi": [86, 87, 134, 135, 927, 930, 1315, 1318, 1980, 1985], "population_s": [86, 87, 134, 135, 1980, 1981, 1982, 1983, 1984, 1985], "num_sampl": [86, 87, 134, 135, 1980, 1981, 1982, 1983, 1984, 1985], "unnorm": [86, 87, 134, 135, 166, 1980, 1981, 1982, 1983, 1984, 1985], "popul": [86, 87, 94, 95, 103, 104, 134, 135, 142, 143, 154, 155, 166, 170, 896, 897, 997, 1000, 1980, 1981, 1982, 1983, 1984, 1985, 2070, 2102, 2103, 2104, 2105, 2111, 2113, 2114, 2115, 2146], "uniform": [86, 87, 134, 135, 174, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1996, 1997, 1998, 1999, 2000, 2147, 2159, 2161, 2162, 2166], "highest": [86, 87, 134, 135, 1980, 1986, 1987, 1988, 1989, 1990], "low": [86, 87, 134, 135, 152, 164, 168, 170, 1650, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1683, 1684, 1687, 1980, 1986, 1987, 1988, 1989, 1990, 1996, 1997, 1998, 1999, 2000, 2136, 2138, 2140, 2141, 2142, 2144, 2146, 2255, 2259], "half": [86, 87, 134, 135, 168, 255, 257, 258, 1980, 1986, 1987, 1988, 1989, 1990, 1996, 1999], "int64": [86, 87, 88, 89, 92, 93, 111, 112, 134, 135, 136, 137, 140, 141, 142, 143, 154, 164, 166, 170, 255, 315, 316, 341, 364, 366, 367, 368, 378, 384, 390, 391, 396, 399, 408, 409, 410, 411, 412, 414, 416, 422, 425, 437, 1171, 1174, 1343, 1344, 1986, 1987, 1988, 2007, 2008, 2009, 2011, 2013, 2014, 2015, 2016, 2017, 2018, 2021, 2054, 2060, 2061, 2062, 2063, 2064, 2070, 2071, 2074, 2076, 2078, 2079, 2097, 2100, 2106, 2110], "235": [86, 87, 1991, 1992], "float16": [86, 87, 111, 112, 134, 135, 154, 166, 341, 370, 375, 376, 385, 387, 388, 389, 393, 394, 953, 962, 1027, 1030, 1991, 1992, 1993, 1996, 1997, 1998], "49": [86, 87, 126, 127, 481, 767, 770, 907, 910, 1149, 1154, 1834, 1835, 1837, 1991, 1992, 2070, 2081, 2084], "807": [86, 87, 1991, 1992], "random_uniform": [86, 87, 134, 135, 155, 166, 170, 174, 1980, 2000, 2128], "86": [86, 87, 134, 135, 1612, 1614, 1617, 1991, 1993, 1996, 1997, 1998], "53": [86, 87, 115, 116, 446, 477, 597, 599, 601, 1612, 1623, 1628, 1648, 1975, 1976, 1979, 1996, 1997], "argmax": [88, 89, 136, 137, 164, 2007, 2012, 2128], "select_last_index": [88, 89, 136, 137, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017], "insert": [88, 89, 136, 137, 153, 1870, 1886, 1889, 1955, 1961, 2007, 2008, 2009, 2010, 2011, 2012, 2054, 2060, 2063], "occurr": [88, 89, 2007, 2008, 2009, 2011, 2013, 2014, 2016, 2033, 2034, 2038], "argmin": [88, 89, 136, 137, 2007, 2017, 2128], "output_dtyp": [88, 89, 136, 137, 2007, 2013, 2014, 2015, 2016, 2017], "singleton": [88, 89, 94, 95, 96, 97, 126, 127, 136, 137, 142, 143, 144, 145, 170, 1714, 1844, 1845, 1847, 1848, 1870, 1886, 1889, 1921, 1924, 2007, 2013, 2014, 2015, 2016, 2017, 2070, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126], "accordingli": [88, 89, 94, 95, 96, 97, 126, 127, 136, 137, 142, 143, 144, 145, 159, 164, 170, 255, 300, 303, 481, 597, 600, 662, 665, 1714, 1844, 1845, 1847, 1848, 2007, 2013, 2014, 2015, 2016, 2017, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2070, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2110, 2111, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126], "argwher": [88, 89, 136, 137, 159, 2007, 2022], "nonzero": [88, 89, 136, 137, 481, 497, 500, 2007, 2027], "as_tupl": [88, 89, 136, 137, 2007, 2023, 2024, 2025, 2026, 2027], "fewer": [88, 89, 136, 137, 2007, 2023, 2024, 2025, 2026, 2027], "yield": [88, 89, 153, 159, 1200, 1216, 1217, 1218, 1282, 1283, 1294, 1297, 2007, 2028, 2030, 2032], "condit": [88, 89, 136, 137, 149, 154, 156, 158, 163, 186, 1955, 1966, 1967, 2007, 2028, 2029, 2030, 2031, 2032, 2255, 2262], "unique_al": [90, 91, 138, 139, 2033, 2035], "inverse_indic": [90, 91, 138, 139, 2033, 2034, 2035, 2036, 2037, 2038, 2044, 2045, 2046, 2047, 2048], "vari": [90, 91, 152, 156, 164, 166, 172, 1417, 1451, 1454, 2033, 2034, 2036, 2038, 2039, 2043, 2044, 2048, 2049, 2053], "unique_count": [90, 91, 138, 139, 2033, 2040], "unique_invers": [90, 91, 138, 139, 2033, 2045], "unique_valu": [90, 91, 138, 139, 2033], "argsort": [92, 93, 140, 141, 164, 2054, 2059, 2060, 2063], "descend": [92, 93, 140, 141, 1714, 1811, 1815, 1816, 1820, 2054, 2055, 2056, 2057, 2058, 2059, 2065, 2066, 2067, 2068, 2069], "ascend": [92, 93, 140, 141, 1171, 1174, 1343, 1344, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2063], "stabil": [92, 93, 140, 141, 154, 168, 1417, 1568, 1571, 1573, 1576, 2054, 2055, 2056, 2057, 2058, 2059, 2065, 2068], "searchsort": [92, 93, 140, 141, 2054, 2064], "sorter": [92, 93, 140, 141, 2054, 2060, 2061, 2062, 2063, 2064], "ret_dtyp": [92, 93, 140, 141, 2054, 2060, 2061, 2062, 2063, 2064], "cumprod": [94, 95, 142, 143, 164, 175, 2070, 2075], "cumul": [94, 95, 142, 143, 186, 2070, 2071, 2072, 2073, 2074, 2076, 2077, 2078, 2079, 2080], "120": [94, 95, 100, 105, 106, 142, 143, 1714, 1786, 1789, 2071, 2072, 2073, 2075], "cumsum": [94, 95, 142, 143, 154, 2070, 2080, 2128], "einsum": [94, 95, 142, 143, 2070], "equat": [94, 95, 117, 142, 143, 896, 898, 1064, 1065, 1066, 1067, 1714, 1806, 1809, 2070, 2081, 2082, 2083, 2084, 2140], "contract": [94, 95, 1714, 1821, 1824, 2070, 2081, 2082, 2084], "operand": [94, 95, 150, 152, 157, 164, 481, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 552, 555, 557, 560, 562, 565, 567, 570, 592, 595, 597, 600, 602, 605, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 727, 730, 742, 745, 747, 750, 757, 760, 762, 765, 767, 770, 782, 786, 787, 791, 792, 796, 953, 978, 1338, 1341, 2070, 2081, 2082, 2084, 2085, 2088, 2093, 2096, 2106, 2110], "seq": [94, 95, 2070, 2081, 2082, 2084, 2237, 2250], "jk": [94, 95, 2070, 2081, 2082, 2084], "ik": [94, 95, 2070, 2081, 2082, 2084], "66": [94, 95, 118, 119, 120, 121, 481, 552, 555, 1417, 1451, 1454, 1456, 1459, 1460, 1612, 1624, 1626, 1627, 1714, 1786, 1789, 2070, 2081, 2082, 2084], "104": [94, 95, 1714, 1786, 1789, 2070, 2081, 2082, 2084], "126": [94, 95, 205, 207, 210, 481, 732, 735, 1714, 1771, 1774, 2070, 2081, 2082, 2084], "510": [94, 95, 2070, 2081, 2082, 2084], "arithmet": [94, 95, 142, 143, 164, 481, 547, 550, 2070, 2089, 2090, 2091, 2092], "x_i": [94, 95, 115, 116, 117, 157, 481, 482, 485, 487, 490, 492, 495, 502, 505, 507, 510, 512, 515, 532, 535, 557, 560, 562, 565, 567, 570, 592, 595, 597, 600, 602, 605, 622, 625, 626, 627, 630, 631, 632, 635, 636, 637, 640, 641, 652, 655, 657, 660, 662, 665, 667, 670, 682, 685, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 782, 786, 787, 791, 792, 796, 953, 976, 978, 1321, 1324, 1325, 1338, 1341, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2070, 2085, 2088, 2089, 2090, 2092, 2093, 2096, 2102, 2105, 2106, 2110, 2111, 2113, 2115, 2159, 2163], "propag": [94, 95, 481, 547, 550, 2070, 2085, 2088, 2089, 2090, 2092, 2093, 2096, 2102, 2105, 2106, 2110, 2111, 2113, 2115], "04999995": [94, 95, 2089, 2090], "0999999": [94, 95, 2089, 2090], "freedom": [94, 95, 142, 143, 151, 2070, 2102, 2103, 2104, 2105, 2111, 2113, 2114, 2115], "constitut": [94, 95, 142, 143, 161, 170, 2070, 2102, 2103, 2104, 2105, 2111, 2113, 2114, 2115, 2141], "commonli": [94, 95, 142, 143, 158, 161, 2070, 2102, 2103, 2104, 2105, 2111, 2113, 2114, 2115], "8164966": [94, 95, 2070, 2102, 2103, 2105], "varianc": [94, 95, 142, 143, 2070, 2111, 2112, 2113, 2114, 2115, 2159, 2167], "unbias": [94, 95, 142, 143, 2070, 2111, 2113, 2114, 2115], "6666665": [94, 95, 173, 2111, 2113], "667": [94, 95, 118, 119, 481, 577, 580, 1417, 1441, 1443, 1568, 1570, 1571, 2111, 2113], "AND": [96, 97, 144, 145, 481, 527, 530, 677, 680, 2116, 2117, 2118, 2119, 2120, 2121], "add_ivy_array_instance_method": 98, "cl": [98, 99, 146, 147], "to_ignor": [98, 99, 146, 147, 1955, 1967, 1968], "loop": [98, 99, 146, 147, 151, 159, 187, 1951, 1952, 1953, 1954], "_wrap_funct": [98, 99, 146, 147, 161, 162], "toi": [98, 99, 146, 147], "arrayexampl": [98, 99], "hasattr": [98, 99, 146, 147], "dict_in": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "queue": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 173, 1417, 1498, 1562, 1603], "queue_load_s": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "container_combine_method": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "list_join": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "queue_timeout": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "print_limit": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "key_length_limit": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "print_ind": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "print_line_spac": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "ivyh": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "default_key_color": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "keyword_color_dict": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "rebuild_child_contain": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "types_to_iteratively_nest": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "alphabetical_kei": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "containerwithactiv": [100, 101, 105, 106], "containerwithconvers": [100, 105, 106, 107], "containerwithcr": [100, 105, 106, 109], "containerwithdatatyp": [100, 105, 106, 111], "containerwithdevic": [100, 105, 106, 113], "containerwithelementwis": [100, 105, 106, 115, 152], "containerwithgener": [100, 105, 106, 118], "containerwithgradi": [100, 105, 106, 120], "containerwithimag": [100, 105, 106, 122], "containerwithlay": [100, 105, 106, 124], "containerwithlinearalgebra": [100, 105, 106, 126], "containerwithloss": [100, 105, 106, 128], "containerwithnorm": [100, 105, 106, 132], "containerwithrandom": [100, 105, 106, 134], "containerwithsearch": [100, 105, 106, 136], "containerwithset": [100, 105, 106, 138], "containerwithsort": [100, 105, 106, 140], "containerwithstatist": [100, 105, 106, 142], "containerwithutil": [100, 105, 106, 144], "containerwithactivationexperiment": [100, 105, 106, 117], "containerwithconversionexperiment": [100, 105, 106, 117], "containerwithcreationexperiment": [100, 105, 106, 117], "containerwithdata_typeexperiment": [100, 105, 106, 117], "containerwithdeviceexperiment": [100, 105, 106, 117], "containerwithelementwiseexperiment": [100, 105, 106, 117], "containerwithgeneralexperiment": [100, 105, 106, 117], "containerwithgradientsexperiment": [100, 105, 106, 117], "containerwithimageexperiment": [100, 105, 106, 117], "containerwithlayersexperiment": [100, 105, 106, 117], "containerwithlinearalgebraexperiment": [100, 105, 106, 117], "containerwithlossesexperiment": [100, 105, 106, 117], "containerwithmanipulationexperiment": [100, 105, 106, 117], "containerwithnormsexperiment": [100, 105, 106, 117], "containerwithrandomexperiment": [100, 105, 106, 117], "containerwithsearchingexperiment": [100, 105, 106, 117], "containerwithsetexperiment": [100, 105, 106, 117], "containerwithsortingexperiment": [100, 105, 106, 117], "containerwithstatisticalexperiment": [100, 105, 106, 117], "containerwithutilityexperiment": [100, 105, 106, 117], "eq": [100, 105, 106], "ge": [100, 105, 106], "gt": [100, 105, 106, 165, 170], "dictionari": [100, 103, 104, 105, 106, 150, 153, 154, 164, 173, 187, 205, 206, 212, 446, 470, 1612, 1622, 2205, 2210], "asynchron": [100, 103, 104, 105, 106, 2140], "arriv": [100, 103, 104, 105, 106, 168, 1417, 1562], "cont_list_join": [100, 103, 104, 105, 106], "timeout": [100, 103, 104, 105, 106, 1417, 1498, 1562, 1603], "whitespac": [100, 103, 104, 105, 106], "indent": [100, 103, 104, 105, 106, 173], "extra": [100, 103, 104, 105, 106, 150, 154, 156, 162, 164, 165, 168, 170, 1417, 1611, 2137, 2142], "newlin": [100, 103, 104, 105, 106, 157], "color": [100, 103, 104, 105, 106, 2290, 2291], "termcolor": [100, 103, 104, 105, 106], "constructor": [100, 103, 104, 105, 106, 154, 155, 172, 1417, 1424, 2152, 2153, 2191, 2192, 2205, 2224, 2226], "alphabet": [100, 103, 104, 105, 106], "le": [100, 105, 106], "lt": [100, 105, 106], "ne": [100, 105, 106], "75979435": [100, 105, 106], "52153397": [100, 105, 106], "13532257": [100, 105, 106], "rshift": [100, 105, 106], "143": [100, 105, 106, 115, 116, 156, 481, 782, 783, 785, 786], "truediv": [100, 105, 106], "66666669": [100, 105, 106], "60000002": [100, 105, 106, 142, 143, 2089, 2091], "key_chain": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 207, 209, 211, 213, 215, 217, 218, 220, 222, 223, 225, 227, 228, 230, 232, 233, 235, 237, 238, 240, 242, 243, 245, 247, 257, 259, 260, 263, 271, 273, 275, 276, 278, 279, 281, 283, 285, 287, 289, 290, 292, 294, 295, 297, 299, 300, 302, 304, 305, 307, 309, 310, 312, 314, 315, 317, 318, 320, 322, 323, 324, 326, 328, 329, 331, 333, 334, 336, 337, 339, 349, 351, 353, 354, 356, 358, 359, 361, 363, 364, 366, 368, 371, 373, 375, 377, 380, 381, 383, 385, 387, 389, 390, 392, 393, 395, 396, 398, 400, 403, 405, 407, 408, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 429, 431, 433, 472, 473, 475, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 669, 671, 672, 674, 676, 677, 679, 681, 682, 684, 686, 687, 689, 691, 692, 694, 696, 697, 699, 701, 702, 704, 706, 707, 709, 711, 712, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 778, 780, 782, 783, 785, 787, 788, 790, 792, 793, 795, 797, 798, 800, 809, 811, 813, 814, 816, 818, 819, 823, 824, 826, 828, 829, 831, 833, 834, 836, 838, 839, 841, 843, 844, 846, 848, 849, 851, 853, 854, 858, 859, 861, 863, 864, 866, 868, 869, 870, 872, 874, 877, 881, 885, 886, 890, 891, 893, 895, 907, 911, 913, 914, 916, 917, 919, 921, 922, 926, 927, 931, 933, 937, 938, 940, 942, 943, 945, 947, 948, 950, 952, 982, 984, 986, 987, 991, 992, 996, 997, 999, 1001, 1002, 1006, 1007, 1011, 1012, 1016, 1017, 1021, 1022, 1026, 1027, 1031, 1032, 1036, 1037, 1041, 1042, 1046, 1050, 1054, 1057, 1061, 1064, 1065, 1067, 1068, 1071, 1072, 1076, 1077, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1092, 1096, 1097, 1101, 1102, 1106, 1113, 1115, 1117, 1121, 1123, 1125, 1131, 1132, 1134, 1135, 1136, 1138, 1139, 1141, 1143, 1144, 1146, 1148, 1166, 1168, 1170, 1171, 1173, 1175, 1183, 1187, 1195, 1197, 1199, 1224, 1226, 1228, 1229, 1231, 1233, 1234, 1236, 1238, 1239, 1241, 1243, 1244, 1248, 1250, 1254, 1255, 1257, 1259, 1260, 1264, 1265, 1269, 1270, 1274, 1275, 1279, 1285, 1287, 1289, 1294, 1296, 1298, 1300, 1304, 1305, 1307, 1309, 1310, 1312, 1314, 1321, 1323, 1325, 1326, 1328, 1330, 1333, 1337, 1338, 1340, 1342, 1360, 1361, 1363, 1365, 1366, 1368, 1370, 1371, 1373, 1378, 1379, 1380, 1382, 1383, 1384, 1386, 1387, 1392, 1393, 1394, 1396, 1397, 1401, 1402, 1404, 1406, 1407, 1409, 1411, 1412, 1414, 1418, 1420, 1422, 1425, 1427, 1429, 1430, 1432, 1434, 1436, 1438, 1440, 1441, 1443, 1445, 1451, 1453, 1455, 1456, 1458, 1460, 1461, 1463, 1465, 1469, 1471, 1473, 1476, 1478, 1480, 1481, 1483, 1485, 1493, 1495, 1497, 1502, 1504, 1506, 1508, 1510, 1512, 1513, 1515, 1517, 1518, 1520, 1522, 1524, 1526, 1528, 1529, 1531, 1533, 1537, 1539, 1541, 1547, 1549, 1551, 1552, 1554, 1556, 1568, 1570, 1572, 1573, 1575, 1577, 1578, 1579, 1581, 1584, 1585, 1589, 1590, 1592, 1594, 1595, 1597, 1606, 1607, 1609, 1624, 1626, 1642, 1643, 1645, 1652, 1654, 1656, 1657, 1659, 1661, 1662, 1664, 1666, 1667, 1669, 1671, 1672, 1674, 1676, 1677, 1679, 1681, 1684, 1686, 1688, 1689, 1691, 1693, 1694, 1696, 1698, 1699, 1701, 1703, 1704, 1706, 1708, 1709, 1711, 1713, 1715, 1717, 1719, 1720, 1722, 1724, 1725, 1727, 1729, 1730, 1732, 1734, 1735, 1737, 1739, 1741, 1743, 1745, 1746, 1748, 1750, 1751, 1753, 1755, 1756, 1758, 1760, 1761, 1763, 1765, 1766, 1768, 1770, 1771, 1773, 1775, 1776, 1778, 1780, 1781, 1783, 1785, 1786, 1788, 1790, 1796, 1798, 1800, 1801, 1803, 1805, 1806, 1808, 1810, 1811, 1812, 1814, 1816, 1817, 1819, 1821, 1822, 1823, 1829, 1830, 1832, 1834, 1835, 1839, 1840, 1842, 1844, 1845, 1847, 1849, 1850, 1852, 1855, 1857, 1859, 1860, 1862, 1864, 1865, 1867, 1869, 1871, 1873, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1890, 1891, 1893, 1895, 1896, 1898, 1900, 1901, 1903, 1905, 1906, 1908, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1921, 1923, 1925, 1926, 1928, 1930, 1931, 1932, 1934, 1936, 1937, 1939, 1941, 1942, 1944, 1946, 1947, 1949, 1981, 1983, 1985, 1986, 1988, 1990, 1991, 1993, 1995, 1996, 1998, 2000, 2002, 2004, 2006, 2018, 2020, 2022, 2034, 2035, 2037, 2039, 2040, 2042, 2044, 2045, 2047, 2049, 2050, 2052, 2055, 2057, 2059, 2060, 2062, 2064, 2065, 2067, 2069, 2071, 2073, 2075, 2076, 2078, 2080, 2081, 2083, 2085, 2087, 2089, 2091, 2093, 2095, 2097, 2099, 2101, 2102, 2104, 2106, 2107, 2109, 2111, 2112, 2114, 2117, 2119, 2121, 2122, 2124, 2126], "to_appli": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 207, 209, 211, 213, 215, 217, 218, 220, 222, 223, 225, 227, 228, 230, 232, 233, 235, 237, 238, 240, 242, 243, 245, 247, 257, 259, 260, 263, 271, 273, 275, 276, 278, 279, 281, 283, 285, 287, 289, 290, 292, 294, 295, 297, 299, 300, 302, 304, 305, 307, 309, 310, 312, 314, 315, 317, 318, 320, 322, 323, 324, 326, 328, 329, 331, 333, 334, 336, 337, 339, 349, 351, 353, 354, 356, 358, 359, 361, 363, 364, 366, 368, 371, 373, 375, 377, 380, 381, 383, 385, 387, 389, 390, 392, 393, 395, 396, 398, 400, 403, 405, 407, 408, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 429, 431, 433, 472, 473, 475, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 669, 671, 672, 674, 676, 677, 679, 681, 682, 684, 686, 687, 689, 691, 692, 694, 696, 697, 699, 701, 702, 704, 706, 707, 709, 711, 712, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 778, 780, 782, 783, 785, 787, 788, 790, 792, 793, 795, 797, 798, 800, 809, 811, 813, 814, 816, 818, 819, 823, 824, 826, 828, 829, 831, 833, 834, 836, 838, 839, 841, 843, 844, 846, 848, 849, 851, 853, 854, 858, 859, 861, 863, 864, 866, 868, 869, 870, 872, 874, 877, 881, 885, 886, 890, 891, 893, 895, 907, 911, 913, 914, 916, 917, 919, 921, 922, 926, 927, 931, 933, 937, 938, 940, 942, 943, 945, 947, 948, 950, 952, 982, 984, 986, 987, 991, 992, 996, 997, 999, 1001, 1002, 1006, 1007, 1011, 1012, 1016, 1017, 1021, 1022, 1026, 1027, 1031, 1032, 1036, 1037, 1041, 1042, 1046, 1050, 1054, 1057, 1061, 1064, 1065, 1067, 1068, 1071, 1072, 1076, 1077, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1092, 1096, 1097, 1101, 1102, 1106, 1113, 1115, 1117, 1121, 1123, 1125, 1131, 1132, 1134, 1135, 1136, 1138, 1139, 1141, 1143, 1144, 1146, 1148, 1166, 1168, 1170, 1171, 1173, 1175, 1183, 1187, 1195, 1197, 1199, 1224, 1226, 1228, 1229, 1231, 1233, 1234, 1236, 1238, 1239, 1241, 1243, 1244, 1248, 1250, 1254, 1255, 1257, 1259, 1260, 1264, 1265, 1269, 1270, 1274, 1275, 1279, 1285, 1287, 1289, 1294, 1296, 1298, 1300, 1304, 1305, 1307, 1309, 1310, 1312, 1314, 1321, 1323, 1325, 1326, 1328, 1330, 1333, 1337, 1338, 1340, 1342, 1360, 1361, 1363, 1365, 1366, 1368, 1370, 1371, 1373, 1378, 1379, 1380, 1382, 1383, 1384, 1386, 1387, 1392, 1393, 1394, 1396, 1397, 1401, 1402, 1404, 1406, 1407, 1409, 1411, 1412, 1414, 1418, 1420, 1422, 1425, 1427, 1429, 1430, 1432, 1434, 1436, 1438, 1440, 1441, 1443, 1445, 1451, 1453, 1455, 1456, 1458, 1460, 1461, 1463, 1465, 1469, 1471, 1473, 1476, 1478, 1480, 1481, 1483, 1485, 1493, 1495, 1497, 1502, 1504, 1506, 1508, 1510, 1512, 1513, 1515, 1517, 1518, 1520, 1522, 1524, 1526, 1528, 1529, 1531, 1533, 1537, 1539, 1541, 1547, 1549, 1551, 1552, 1554, 1556, 1568, 1570, 1572, 1573, 1575, 1577, 1578, 1579, 1581, 1584, 1585, 1589, 1590, 1592, 1594, 1595, 1597, 1606, 1607, 1609, 1624, 1626, 1642, 1643, 1645, 1652, 1654, 1656, 1657, 1659, 1661, 1662, 1664, 1666, 1667, 1669, 1671, 1672, 1674, 1676, 1677, 1679, 1681, 1684, 1686, 1688, 1689, 1691, 1693, 1694, 1696, 1698, 1699, 1701, 1703, 1704, 1706, 1708, 1709, 1711, 1713, 1715, 1717, 1719, 1720, 1722, 1724, 1725, 1727, 1729, 1730, 1732, 1734, 1735, 1737, 1739, 1741, 1743, 1745, 1746, 1748, 1750, 1751, 1753, 1755, 1756, 1758, 1760, 1761, 1763, 1765, 1766, 1768, 1770, 1771, 1773, 1775, 1776, 1778, 1780, 1781, 1783, 1785, 1786, 1788, 1790, 1796, 1798, 1800, 1801, 1803, 1805, 1806, 1808, 1810, 1811, 1812, 1814, 1816, 1817, 1819, 1821, 1822, 1823, 1829, 1830, 1832, 1834, 1835, 1839, 1840, 1842, 1844, 1845, 1847, 1849, 1850, 1852, 1855, 1857, 1859, 1860, 1862, 1864, 1865, 1867, 1869, 1871, 1873, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1890, 1891, 1893, 1895, 1896, 1898, 1900, 1901, 1903, 1905, 1906, 1908, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1921, 1923, 1925, 1926, 1928, 1930, 1931, 1932, 1934, 1936, 1937, 1939, 1941, 1942, 1944, 1946, 1947, 1949, 1955, 1969, 1981, 1983, 1985, 1986, 1988, 1990, 1991, 1993, 1995, 1996, 1998, 2000, 2002, 2004, 2006, 2018, 2020, 2022, 2034, 2035, 2037, 2039, 2040, 2042, 2044, 2045, 2047, 2049, 2050, 2052, 2055, 2057, 2059, 2060, 2062, 2064, 2065, 2067, 2069, 2071, 2073, 2075, 2076, 2078, 2080, 2081, 2083, 2085, 2087, 2089, 2091, 2093, 2095, 2097, 2099, 2101, 2102, 2104, 2106, 2107, 2109, 2111, 2112, 2114, 2117, 2119, 2121, 2122, 2124, 2126], "prune_unappli": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 207, 209, 211, 213, 215, 217, 218, 220, 222, 223, 225, 227, 228, 230, 232, 233, 235, 237, 238, 240, 242, 243, 245, 247, 257, 259, 260, 263, 271, 273, 275, 276, 278, 279, 281, 283, 285, 287, 289, 290, 292, 294, 295, 297, 299, 300, 302, 304, 305, 307, 309, 310, 312, 314, 315, 317, 318, 320, 322, 323, 324, 326, 328, 329, 331, 333, 334, 336, 337, 339, 349, 351, 353, 354, 356, 358, 359, 361, 363, 364, 366, 368, 371, 373, 375, 377, 380, 381, 383, 385, 387, 389, 390, 392, 393, 395, 396, 398, 400, 403, 405, 407, 408, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 429, 431, 433, 472, 473, 475, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 669, 671, 672, 674, 676, 677, 679, 681, 682, 684, 686, 687, 689, 691, 692, 694, 696, 697, 699, 701, 702, 704, 706, 707, 709, 711, 712, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 778, 780, 782, 783, 785, 787, 788, 790, 792, 793, 795, 797, 798, 800, 814, 816, 818, 819, 823, 824, 826, 828, 829, 831, 833, 834, 836, 838, 839, 841, 843, 844, 846, 848, 849, 851, 853, 854, 858, 859, 861, 863, 864, 866, 868, 869, 870, 872, 874, 877, 881, 885, 886, 890, 891, 893, 895, 907, 911, 913, 914, 916, 917, 919, 921, 922, 926, 927, 931, 933, 937, 938, 940, 942, 943, 945, 947, 948, 950, 952, 982, 984, 986, 987, 991, 992, 996, 997, 999, 1001, 1002, 1006, 1007, 1011, 1012, 1016, 1017, 1021, 1022, 1026, 1027, 1031, 1032, 1036, 1037, 1041, 1042, 1046, 1050, 1054, 1057, 1061, 1064, 1065, 1067, 1068, 1071, 1072, 1076, 1077, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1092, 1096, 1097, 1101, 1102, 1106, 1113, 1115, 1117, 1121, 1123, 1125, 1131, 1132, 1134, 1135, 1136, 1138, 1139, 1141, 1143, 1144, 1146, 1148, 1166, 1168, 1170, 1171, 1173, 1175, 1183, 1187, 1195, 1197, 1199, 1229, 1231, 1233, 1234, 1236, 1238, 1239, 1241, 1243, 1244, 1248, 1250, 1254, 1255, 1257, 1259, 1260, 1264, 1265, 1269, 1270, 1274, 1275, 1279, 1285, 1287, 1289, 1294, 1296, 1298, 1300, 1304, 1305, 1307, 1309, 1310, 1312, 1314, 1321, 1323, 1325, 1326, 1328, 1330, 1333, 1337, 1338, 1340, 1342, 1360, 1361, 1363, 1365, 1366, 1368, 1370, 1371, 1373, 1378, 1379, 1380, 1382, 1383, 1384, 1386, 1387, 1392, 1393, 1394, 1396, 1397, 1401, 1402, 1404, 1406, 1407, 1409, 1411, 1412, 1414, 1418, 1420, 1422, 1425, 1427, 1429, 1430, 1432, 1434, 1436, 1438, 1440, 1441, 1443, 1445, 1451, 1453, 1455, 1456, 1458, 1460, 1461, 1463, 1465, 1469, 1471, 1473, 1476, 1478, 1480, 1481, 1483, 1485, 1493, 1495, 1497, 1502, 1504, 1506, 1508, 1510, 1512, 1513, 1515, 1517, 1518, 1520, 1522, 1524, 1526, 1528, 1529, 1531, 1533, 1537, 1539, 1541, 1547, 1549, 1551, 1552, 1554, 1556, 1568, 1570, 1572, 1573, 1575, 1577, 1578, 1579, 1581, 1584, 1585, 1589, 1590, 1592, 1594, 1595, 1597, 1606, 1607, 1609, 1624, 1626, 1642, 1643, 1645, 1652, 1654, 1656, 1657, 1659, 1661, 1662, 1664, 1666, 1667, 1669, 1671, 1672, 1674, 1676, 1677, 1679, 1681, 1684, 1686, 1688, 1689, 1691, 1693, 1694, 1696, 1698, 1699, 1701, 1703, 1704, 1706, 1708, 1709, 1711, 1713, 1715, 1717, 1719, 1720, 1722, 1724, 1725, 1727, 1729, 1730, 1732, 1734, 1735, 1737, 1739, 1741, 1743, 1745, 1746, 1748, 1750, 1751, 1753, 1755, 1756, 1758, 1760, 1761, 1763, 1765, 1766, 1768, 1770, 1771, 1773, 1775, 1776, 1778, 1780, 1781, 1783, 1785, 1786, 1788, 1790, 1796, 1798, 1800, 1801, 1803, 1805, 1806, 1808, 1810, 1811, 1812, 1814, 1816, 1817, 1819, 1821, 1822, 1823, 1829, 1830, 1832, 1834, 1835, 1839, 1840, 1842, 1844, 1845, 1847, 1849, 1850, 1852, 1855, 1857, 1859, 1860, 1862, 1864, 1865, 1867, 1869, 1871, 1873, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1890, 1891, 1893, 1895, 1896, 1898, 1900, 1901, 1903, 1905, 1906, 1908, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1921, 1923, 1925, 1926, 1928, 1930, 1931, 1932, 1934, 1936, 1937, 1939, 1941, 1942, 1944, 1946, 1947, 1949, 1955, 1969, 1981, 1983, 1985, 1986, 1988, 1990, 1991, 1993, 1995, 1996, 1998, 2000, 2002, 2004, 2006, 2018, 2020, 2022, 2034, 2035, 2037, 2039, 2040, 2042, 2044, 2045, 2047, 2049, 2050, 2052, 2055, 2057, 2059, 2060, 2062, 2064, 2065, 2067, 2069, 2071, 2073, 2075, 2076, 2078, 2080, 2081, 2083, 2085, 2087, 2089, 2091, 2093, 2095, 2097, 2099, 2101, 2102, 2104, 2106, 2107, 2109, 2111, 2112, 2114, 2117, 2119, 2121, 2122, 2124, 2126], "map_sequ": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 207, 209, 211, 213, 215, 217, 218, 220, 222, 223, 225, 227, 228, 230, 232, 233, 235, 237, 238, 240, 242, 243, 245, 247, 257, 259, 260, 263, 271, 273, 275, 276, 278, 279, 281, 283, 285, 287, 289, 290, 292, 294, 295, 297, 299, 300, 302, 304, 305, 307, 309, 310, 312, 314, 315, 317, 318, 320, 322, 323, 324, 326, 328, 329, 331, 333, 334, 336, 337, 339, 349, 351, 353, 354, 356, 358, 359, 361, 363, 364, 366, 368, 371, 373, 375, 377, 380, 381, 383, 385, 387, 389, 390, 392, 393, 395, 396, 398, 400, 403, 405, 407, 408, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 429, 431, 433, 472, 473, 475, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 669, 671, 672, 674, 676, 677, 679, 681, 682, 684, 686, 687, 689, 691, 692, 694, 696, 697, 699, 701, 702, 704, 706, 707, 709, 711, 712, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 778, 780, 782, 783, 785, 787, 788, 790, 792, 793, 795, 797, 798, 800, 814, 816, 818, 819, 823, 824, 826, 828, 829, 831, 833, 834, 836, 838, 839, 841, 843, 844, 846, 848, 849, 851, 853, 854, 858, 859, 861, 863, 864, 866, 868, 869, 870, 872, 874, 877, 881, 885, 886, 890, 891, 893, 895, 907, 911, 913, 914, 916, 917, 919, 921, 922, 926, 927, 931, 933, 937, 938, 940, 942, 943, 945, 947, 948, 950, 952, 982, 984, 986, 987, 991, 992, 996, 997, 999, 1001, 1002, 1006, 1007, 1011, 1012, 1016, 1017, 1021, 1022, 1026, 1027, 1031, 1032, 1036, 1037, 1041, 1042, 1046, 1050, 1054, 1057, 1061, 1064, 1065, 1067, 1068, 1071, 1072, 1076, 1077, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1092, 1096, 1097, 1101, 1102, 1106, 1113, 1115, 1117, 1121, 1123, 1125, 1131, 1132, 1134, 1135, 1136, 1138, 1139, 1141, 1143, 1144, 1146, 1148, 1166, 1168, 1170, 1171, 1173, 1175, 1183, 1187, 1195, 1197, 1199, 1229, 1231, 1233, 1234, 1236, 1238, 1239, 1241, 1243, 1244, 1248, 1250, 1254, 1255, 1257, 1259, 1260, 1264, 1265, 1269, 1270, 1274, 1275, 1279, 1285, 1287, 1289, 1294, 1296, 1298, 1300, 1304, 1305, 1307, 1309, 1310, 1312, 1314, 1321, 1323, 1325, 1326, 1328, 1330, 1333, 1337, 1338, 1340, 1342, 1360, 1361, 1363, 1365, 1366, 1368, 1370, 1371, 1373, 1378, 1379, 1380, 1382, 1383, 1384, 1386, 1387, 1392, 1393, 1394, 1396, 1397, 1401, 1402, 1404, 1406, 1407, 1409, 1411, 1412, 1414, 1418, 1420, 1422, 1425, 1427, 1429, 1430, 1432, 1434, 1436, 1438, 1440, 1441, 1443, 1445, 1451, 1453, 1455, 1456, 1458, 1460, 1461, 1463, 1465, 1469, 1471, 1473, 1476, 1478, 1480, 1481, 1483, 1485, 1493, 1495, 1497, 1502, 1504, 1506, 1508, 1510, 1512, 1513, 1515, 1517, 1518, 1520, 1522, 1524, 1526, 1528, 1529, 1531, 1533, 1537, 1539, 1541, 1547, 1549, 1551, 1552, 1554, 1556, 1568, 1570, 1572, 1573, 1575, 1577, 1578, 1579, 1581, 1584, 1585, 1589, 1590, 1592, 1594, 1595, 1597, 1606, 1607, 1609, 1624, 1626, 1642, 1643, 1645, 1652, 1654, 1656, 1657, 1659, 1661, 1662, 1664, 1666, 1667, 1669, 1671, 1672, 1674, 1676, 1677, 1679, 1681, 1684, 1686, 1688, 1689, 1691, 1693, 1694, 1696, 1698, 1699, 1701, 1703, 1704, 1706, 1708, 1709, 1711, 1713, 1715, 1717, 1719, 1720, 1722, 1724, 1725, 1727, 1729, 1730, 1732, 1734, 1735, 1737, 1739, 1741, 1743, 1745, 1746, 1748, 1750, 1751, 1753, 1755, 1756, 1758, 1760, 1761, 1763, 1765, 1766, 1768, 1770, 1771, 1773, 1775, 1776, 1778, 1780, 1781, 1783, 1785, 1786, 1788, 1790, 1796, 1798, 1800, 1801, 1803, 1805, 1806, 1808, 1810, 1811, 1812, 1814, 1816, 1817, 1819, 1821, 1822, 1823, 1829, 1830, 1832, 1834, 1835, 1839, 1840, 1842, 1844, 1845, 1847, 1849, 1850, 1852, 1855, 1857, 1859, 1860, 1862, 1864, 1865, 1867, 1869, 1871, 1873, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1890, 1891, 1893, 1895, 1896, 1898, 1900, 1901, 1903, 1905, 1906, 1908, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1921, 1923, 1925, 1926, 1928, 1930, 1931, 1932, 1934, 1936, 1937, 1939, 1941, 1942, 1944, 1946, 1947, 1949, 1981, 1983, 1985, 1986, 1988, 1990, 1991, 1993, 1995, 1996, 1998, 2000, 2002, 2004, 2006, 2018, 2020, 2022, 2034, 2035, 2037, 2039, 2040, 2042, 2044, 2045, 2047, 2049, 2050, 2052, 2055, 2057, 2059, 2060, 2062, 2064, 2065, 2067, 2069, 2071, 2073, 2075, 2076, 2078, 2080, 2081, 2083, 2085, 2087, 2089, 2091, 2093, 2095, 2097, 2099, 2101, 2102, 2104, 2106, 2107, 2109, 2111, 2112, 2114, 2117, 2119, 2121, 2122, 2124, 2126], "static_adam_step": [100, 105, 106], "static_adam_upd": [100, 105, 106], "static_arg_info": [100, 105, 106], "static_arg_nam": [100, 105, 106], "static_arrai": [100, 105, 106], "static_as_ivy_dev": [100, 105, 106], "static_as_ivy_dtyp": [100, 105, 106], "static_as_native_dev": [100, 105, 106], "static_as_native_dtyp": [100, 105, 106], "static_asarray_handle_nest": [100, 105, 106], "static_asarray_infer_devic": [100, 105, 106], "static_asarray_to_native_arrays_and_back": [100, 105, 106], "static_cache_fn": [100, 105, 106], "static_check_float": [100, 105, 106], "static_clear_mem_on_dev": [100, 105, 106], "static_closest_valid_dtyp": [100, 105, 106], "static_container_typ": [100, 105, 106], "static_conv": [100, 105, 106], "static_conv_general_dil": [100, 105, 106], "static_conv_general_transpos": [100, 105, 106], "static_copy_arrai": [100, 105, 106, 255, 267, 269], "static_current_backend": [100, 105, 106], "static_current_backend_str": [100, 105, 106], "static_default": [100, 105, 106], "static_default_devic": [100, 105, 106], "static_default_dtyp": [100, 105, 106], "static_default_int_dtyp": [100, 105, 106], "static_default_uint_dtyp": [100, 105, 106], "static_deseri": [100, 105, 106], "static_dev_util": [100, 105, 106], "static_dtype_bit": [100, 105, 106], "static_einsum": [100, 105, 106], "static_empti": [100, 105, 106], "static_execute_with_gradi": [100, 105, 106], "static_exist": [100, 105, 106], "static_ful": [100, 105, 106], "static_function_supported_devic": [100, 105, 106], "static_function_supported_devices_and_dtyp": [100, 105, 106], "static_function_unsupported_devic": [100, 105, 106], "static_function_unsupported_devices_and_dtyp": [100, 105, 106], "static_get": [100, 105, 106], "static_get_all_arrays_in_memori": [100, 105, 106], "static_get_all_ivy_arrays_on_dev": [100, 105, 106], "static_get_array_mod": [100, 105, 106], "static_get_exception_trace_mod": [100, 105, 106], "static_get_item": [100, 105, 106], "static_get_min_bas": [100, 105, 106], "static_get_min_denomin": [100, 105, 106], "static_get_nestable_mod": [100, 105, 106], "static_get_queue_timeout": [100, 105, 106], "static_get_referrers_recurs": [100, 105, 106], "static_get_show_func_wrapper_trace_mod": [100, 105, 106], "static_get_tmp_dir": [100, 105, 106], "static_gpu_is_avail": [100, 105, 106], "static_grad": [100, 105, 106], "static_gradient_descent_upd": [100, 105, 106], "static_handle_array_funct": [100, 105, 106], "static_handle_array_like_without_promot": [100, 105, 106], "static_handle_except": [100, 105, 106], "static_handle_nest": [100, 105, 106], "static_handle_out_argu": [100, 105, 106], "static_infer_default_dtyp": [100, 105, 106], "static_infer_devic": [100, 105, 106], "static_infer_dtyp": [100, 105, 106], "static_inplace_arrays_support": [100, 105, 106], "static_inplace_variables_support": [100, 105, 106], "static_inputs_to_ivy_arrai": [100, 105, 106], "static_inputs_to_native_arrai": [100, 105, 106], "static_integer_arrays_to_float": [100, 105, 106], "static_invalid_dtyp": [100, 105, 106], "static_is_ivy_contain": [100, 105, 106], "static_isscalar": [100, 105, 106], "static_jac": [100, 105, 106], "static_lamb_upd": [100, 105, 106], "static_lars_upd": [100, 105, 106], "static_layer_norm": [100, 105, 106], "static_match_kwarg": [100, 105, 106], "static_max": [100, 105, 106], "static_mean": [100, 105, 106], "static_min": [100, 105, 106], "static_multiprocess": [100, 105, 106], "static_normalize_axis_tupl": [100, 105, 106], "static_num_arrays_in_memori": [100, 105, 106], "static_num_cpu_cor": [100, 105, 106], "static_num_gpu": [100, 105, 106], "static_num_ivy_arrays_on_dev": [100, 105, 106], "static_optimizer_upd": [100, 105, 106], "static_outputs_to_ivy_arrai": [100, 105, 106], "static_percent_used_mem_on_dev": [100, 105, 106], "static_print_all_arrays_in_memori": [100, 105, 106], "static_print_all_ivy_arrays_on_dev": [100, 105, 106], "static_promote_typ": [100, 105, 106], "static_promote_types_of_input": [100, 105, 106], "static_se": [100, 105, 106], "static_set_array_mod": [100, 105, 106], "static_set_default_complex_dtyp": [100, 105, 106], "static_set_default_devic": [100, 105, 106], "static_set_default_dtyp": [100, 105, 106], "static_set_default_float_dtyp": [100, 105, 106], "static_set_default_int_dtyp": [100, 105, 106], "static_set_default_uint_dtyp": [100, 105, 106], "static_set_exception_trace_mod": [100, 105, 106], "static_set_min_bas": [100, 105, 106], "static_set_min_denomin": [100, 105, 106], "static_set_nestable_mod": [100, 105, 106], "static_set_queue_timeout": [100, 105, 106], "static_set_shape_array_mod": [100, 105, 106], "static_set_show_func_wrapper_trace_mod": [100, 105, 106], "static_set_split_factor": [100, 105, 106], "static_set_tmp_dir": [100, 105, 106], "static_set_with_grad": [100, 105, 106], "static_shap": [100, 105, 106], "static_shape_array_mod": [100, 105, 106], "static_split_factor": [100, 105, 106], "static_split_func_cal": [100, 105, 106], "static_std": [100, 105, 106], "static_tensorsolv": [100, 105, 106], "static_to_ivy_shap": [100, 105, 106], "static_to_native_arrays_and_back": [100, 105, 106], "static_to_native_shap": [100, 105, 106], "static_total_mem_on_dev": [100, 105, 106], "static_tpu_is_avail": [100, 105, 106], "static_try_else_non": [100, 105, 106], "static_type_promote_arrai": [100, 105, 106], "static_unset_array_mod": [100, 105, 106], "static_unset_default_complex_dtyp": [100, 105, 106], "static_unset_default_devic": [100, 105, 106], "static_unset_default_dtyp": [100, 105, 106], "static_unset_default_float_dtyp": [100, 105, 106], "static_unset_default_int_dtyp": [100, 105, 106], "static_unset_default_uint_dtyp": [100, 105, 106], "static_unset_exception_trace_mod": [100, 105, 106], "static_unset_nestable_mod": [100, 105, 106], "static_unset_queue_timeout": [100, 105, 106], "static_unset_shape_array_mod": [100, 105, 106], "static_unset_show_func_wrapper_trace_mod": [100, 105, 106], "static_unset_with_grad": [100, 105, 106], "static_used_mem_on_dev": [100, 105, 106], "static_valid_dtyp": [100, 105, 106], "static_value_and_grad": [100, 105, 106], "static_vmap": [100, 105, 106], "static_with_grad": [100, 105, 106], "static_wrap": [100, 105, 106], "containerbas": [101, 102, 103, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 1126, 1130], "formul": [101, 102, 207, 209, 211], "chain": [101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 164, 174, 175, 187, 207, 209, 211, 213, 215, 217, 218, 220, 222, 223, 225, 227, 228, 230, 232, 233, 235, 237, 238, 240, 242, 243, 245, 247, 285, 287, 289, 310, 312, 314, 318, 320, 322, 336, 337, 339, 354, 356, 358, 364, 366, 368, 396, 398, 400, 408, 409, 411, 412, 414, 416, 429, 431, 433, 472, 473, 475, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 669, 671, 672, 674, 676, 677, 679, 681, 682, 684, 686, 687, 689, 691, 692, 694, 696, 697, 699, 701, 702, 704, 706, 707, 709, 711, 712, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 778, 780, 782, 783, 785, 787, 788, 790, 792, 793, 795, 797, 798, 800, 814, 816, 818, 854, 858, 859, 861, 863, 864, 866, 868, 891, 893, 895, 922, 926, 933, 937, 997, 999, 1001, 1017, 1021, 1087, 1089, 1091, 1121, 1123, 1125, 1144, 1146, 1148, 1195, 1197, 1199, 1285, 1287, 1289, 1321, 1323, 1325, 1326, 1328, 1330, 1338, 1340, 1342, 1365, 1366, 1368, 1370, 1371, 1373, 1396, 1397, 1406, 1407, 1409, 1411, 1412, 1414, 1418, 1420, 1422, 1425, 1427, 1429, 1430, 1432, 1434, 1436, 1438, 1440, 1441, 1443, 1445, 1451, 1453, 1455, 1456, 1458, 1460, 1461, 1463, 1465, 1469, 1471, 1473, 1476, 1478, 1480, 1481, 1483, 1485, 1493, 1495, 1497, 1508, 1510, 1512, 1513, 1515, 1517, 1518, 1520, 1522, 1524, 1526, 1528, 1529, 1531, 1533, 1537, 1539, 1541, 1547, 1549, 1551, 1552, 1554, 1556, 1568, 1570, 1572, 1573, 1575, 1577, 1578, 1579, 1581, 1584, 1585, 1589, 1590, 1592, 1594, 1595, 1597, 1606, 1607, 1609, 1624, 1626, 1642, 1643, 1645, 1652, 1654, 1656, 1662, 1664, 1666, 1667, 1669, 1671, 1689, 1691, 1693, 1694, 1696, 1698, 1709, 1711, 1713, 1715, 1717, 1719, 1720, 1722, 1724, 1746, 1748, 1750, 1756, 1758, 1760, 1761, 1763, 1765, 1766, 1768, 1770, 1776, 1778, 1780, 1796, 1798, 1800, 1801, 1803, 1805, 1829, 1830, 1832, 1855, 1857, 1859, 1860, 1862, 1864, 1865, 1867, 1869, 1871, 1873, 1875, 1886, 1890, 1891, 1893, 1895, 1906, 1908, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1921, 1923, 1925, 1926, 1928, 1930, 1941, 1942, 1944, 1946, 1947, 1949, 1951, 1952, 1953, 1955, 1958, 1969, 1981, 1983, 1985, 1986, 1988, 1990, 1991, 1993, 1995, 1996, 1998, 2000, 2002, 2004, 2006, 2018, 2020, 2022, 2034, 2035, 2037, 2039, 2040, 2042, 2044, 2045, 2047, 2055, 2057, 2059, 2071, 2073, 2075, 2076, 2078, 2080, 2089, 2091, 2097, 2099, 2101, 2102, 2104, 2111, 2112, 2114, 2117, 2119, 2121, 2122, 2124, 2126, 2140, 2157, 2158, 2191, 2192], "prune": [101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 153, 207, 209, 211, 213, 215, 217, 218, 220, 222, 223, 225, 227, 228, 230, 232, 233, 235, 237, 238, 240, 242, 243, 245, 247, 285, 287, 289, 310, 312, 314, 318, 320, 322, 336, 337, 339, 354, 356, 358, 364, 366, 368, 396, 398, 400, 408, 409, 411, 412, 414, 416, 429, 431, 433, 472, 473, 475, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 669, 671, 672, 674, 676, 677, 679, 681, 682, 684, 686, 687, 689, 691, 692, 694, 696, 697, 699, 701, 702, 704, 706, 707, 709, 711, 712, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 778, 780, 782, 783, 785, 787, 788, 790, 792, 793, 795, 797, 798, 800, 814, 816, 818, 824, 826, 828, 829, 831, 833, 834, 836, 838, 854, 858, 859, 861, 863, 864, 866, 868, 891, 893, 895, 922, 926, 933, 937, 997, 999, 1001, 1017, 1021, 1077, 1081, 1087, 1089, 1091, 1121, 1123, 1125, 1144, 1146, 1148, 1195, 1197, 1199, 1285, 1287, 1289, 1321, 1323, 1325, 1326, 1328, 1330, 1338, 1340, 1342, 1360, 1361, 1363, 1365, 1366, 1368, 1370, 1371, 1373, 1396, 1397, 1406, 1407, 1409, 1411, 1412, 1414, 1418, 1420, 1422, 1425, 1427, 1429, 1430, 1432, 1434, 1436, 1438, 1440, 1441, 1443, 1445, 1451, 1453, 1455, 1456, 1458, 1460, 1461, 1463, 1465, 1469, 1471, 1473, 1476, 1478, 1480, 1481, 1483, 1485, 1493, 1495, 1497, 1508, 1510, 1512, 1513, 1515, 1517, 1518, 1520, 1522, 1524, 1526, 1528, 1529, 1531, 1533, 1537, 1539, 1541, 1547, 1549, 1551, 1552, 1554, 1556, 1568, 1570, 1572, 1573, 1575, 1577, 1578, 1579, 1581, 1584, 1585, 1589, 1590, 1592, 1594, 1595, 1597, 1606, 1607, 1609, 1624, 1626, 1642, 1643, 1645, 1652, 1654, 1656, 1662, 1664, 1666, 1667, 1669, 1671, 1689, 1691, 1693, 1694, 1696, 1698, 1709, 1711, 1713, 1715, 1717, 1719, 1720, 1722, 1724, 1746, 1748, 1750, 1756, 1758, 1760, 1761, 1763, 1765, 1766, 1768, 1770, 1776, 1778, 1780, 1796, 1798, 1800, 1801, 1803, 1805, 1829, 1830, 1832, 1855, 1857, 1859, 1860, 1862, 1864, 1865, 1867, 1869, 1871, 1873, 1875, 1886, 1890, 1891, 1893, 1895, 1906, 1908, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1921, 1923, 1925, 1926, 1928, 1930, 1941, 1942, 1944, 1946, 1947, 1949, 1955, 1969, 1970, 1971, 1972, 1981, 1983, 1985, 1986, 1988, 1990, 1991, 1993, 1995, 1996, 1998, 2000, 2002, 2004, 2006, 2018, 2020, 2022, 2034, 2035, 2037, 2039, 2040, 2042, 2044, 2045, 2047, 2055, 2057, 2059, 2071, 2073, 2075, 2076, 2078, 2080, 2089, 2091, 2097, 2099, 2101, 2102, 2104, 2111, 2112, 2114, 2117, 2119, 2121, 2122, 2124, 2126, 2228], "166": [101, 102, 205, 207, 209, 210], "159": [101, 102, 205, 207, 209, 210, 1650, 1694, 1697], "38999999": [101, 102, 213, 215, 217], "371": [101, 102, 218, 220, 222], "rectifi": [101, 102, 117, 205, 213, 216, 223, 225, 226, 227, 228, 230, 231, 232, 805, 808, 1365, 1366, 1368, 1369], "30883577": [101, 102, 205, 223, 225, 226, 227], "28903052": [101, 102, 205, 223, 225, 226, 227], "10714479": [101, 102, 205, 223, 225, 226, 227], "2689414": [101, 102, 233, 235, 237, 238, 240, 242], "7310586": [101, 102, 233, 235, 237, 238, 240, 242], "88079703": [101, 102, 233, 235, 237], "62245935": [101, 102, 233, 235, 237], "4750208": [101, 102, 233, 235, 237], "72844321": [101, 102, 238, 240, 242], "19852395": [101, 102, 238, 240, 242], "07303288": [101, 102, 238, 240, 242], "revert": [101, 102, 205, 243, 245, 246, 247], "948": [101, 102, 243, 245, 247], "static_gelu": [101, 102, 207], "185": [101, 102, 207, 211], "046": [101, 102, 207, 211], "static_leaky_relu": [101, 102, 213], "static_log_softmax": [101, 102, 218], "static_mish": [101, 102, 223], "static_relu": [101, 102, 228], "static_sigmoid": [101, 102, 233], "static_softmax": [101, 102, 238], "static_softplu": [101, 102, 243], "53499615": [101, 102, 243, 247], "42036411": [101, 102, 243, 247], "31326175": [101, 102, 243, 247], "69314718": [101, 102, 243, 247], "__getitem__": [103, 104, 152], "slice": [103, 104, 118, 119, 896, 902, 903, 1200, 1220, 1360, 1364, 1378, 1381, 1382, 1385, 1417, 1476, 1479, 1481, 1484, 1485, 1489, 1955, 1965, 2140], "__setitem__": [103, 104, 150, 152, 172], "cont_all_fals": [103, 104], "assert_is_bool": [103, 104], "cont_all_key_chain": [103, 104], "include_empti": [103, 104], "cont_all_tru": [103, 104, 152, 173], "cont_as_bool": [103, 104], "cont_assert_contains_sub_contain": [103, 104], "sub_cont": [103, 104], "cont_assert_contains_sub_structur": [103, 104], "cont_assert_ident": [103, 104], "check_typ": [103, 104], "same_arrai": [103, 104, 173], "arrays_equ": [103, 104], "cont_assert_identical_structur": [103, 104], "cont_at_key_chain": [103, 104], "ignore_key_error": [103, 104], "ignore_non": [103, 104], "cont_at_kei": [103, 104], "substr": [103, 104], "cont_combin": [103, 104], "duplic": [103, 104, 151, 157, 159, 162, 165, 174, 1955, 1958, 2146], "container_rightmost": [103, 104], "cont_common_key_chain": [103, 104, 152], "cont_config": [103, 104], "cont_contains_sub_contain": [103, 104], "cont_contains_sub_structur": [103, 104], "cont_copi": [103, 104, 173], "cont_create_if_abs": [103, 104], "noth": [103, 104, 168, 2146], "cont_cutoff_at_depth": [103, 104], "depth_cutoff": [103, 104], "cont_cutoff_at_height": [103, 104], "height_cutoff": [103, 104], "cont_deep_copi": [103, 104, 173], "intern": [103, 104, 150, 152, 155, 157, 163, 165, 166, 1955, 1956, 1966, 1967, 2134, 2135, 2152, 2155, 2159, 2160, 2163, 2164, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2191, 2192], "cont_dev": [103, 104], "cont_dev_str": [103, 104], "cont_diff": [103, 104, 152, 173], "diff_kei": [103, 104], "detect_key_diff": [103, 104], "detect_value_diff": [103, 104], "detect_shape_diff": [103, 104], "container0": [103, 104], "cont_duplicate_array_keychain": [103, 104], "cont_find_sub_contain": [103, 104], "sub_cont_to_find": [103, 104], "exsit": [103, 104], "cont_find_sub_structur": [103, 104], "sub_struc_to_find": [103, 104], "cont_flatten_key_chain": [103, 104, 173], "__": [103, 104, 156, 173], "above_height": [103, 104, 173], "below_depth": [103, 104, 173], "cont_format_key_chain": [103, 104], "format_fn": [103, 104], "string": [103, 104, 151, 153, 154, 155, 158, 159, 164, 170, 173, 205, 206, 212, 341, 347, 348, 380, 382, 402, 445, 446, 447, 449, 450, 451, 452, 458, 466, 472, 476, 477, 480, 1200, 1218, 1294, 1297, 1417, 1447, 1650, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1683, 1684, 1687, 1714, 1746, 1749, 2157, 2158, 2205, 2223, 2224, 2226, 2251, 2254], "cont_from_disk_as_hdf5": [103, 104, 173], "h5_obj_or_filepath": [103, 104], "slice_obj": [103, 104], "load": [103, 104, 166, 187, 2139, 2146], "disk": [103, 104, 173, 2139], "h5py": [103, 104], "hdf5": [103, 104, 173, 2181, 2182], "h5": [103, 104], "cont_from_disk_as_json": [103, 104, 173], "json_filepath": [103, 104], "cont_from_disk_as_pickl": [103, 104, 173], "pickle_filepath": [103, 104], "pickl": [103, 104, 152, 173], "cont_from_flat_list": [103, 104], "flat_list": [103, 104], "cont_handle_inplac": [103, 104], "prime": [103, 104], "overwritten": [103, 104, 150, 151], "cont_has_kei": [103, 104], "query_kei": [103, 104], "somewher": [103, 104, 153], "cont_has_key_chain": [103, 104], "cont_ident": [103, 104, 173], "cont_identical_array_shap": [103, 104], "cont_identical_config": [103, 104], "cont_identical_structur": [103, 104], "cont_if_exist": [103, 104], "cont_inplace_upd": [103, 104], "cont_ivi": [103, 104], "cont_key_chains_contain": [103, 104], "sub_str": [103, 104], "cont_list_stack": [103, 104, 173], "cont_map": [103, 104, 152, 173], "cont_map_sub_cont": [103, 104], "include_self": [103, 104], "possibi": [103, 104], "cont_max_depth": [103, 104], "cont_multi_map": [103, 104, 152], "map_nest": [103, 104], "assert_ident": [103, 104], "leftmost": [103, 104, 1955, 1969], "cont_multi_map_in_funct": [103, 104, 152], "cont_num_arrai": [103, 104], "cont_overwrite_at_key_chain": [103, 104], "target_dict": [103, 104], "return_dict": [103, 104], "cont_prune_empti": [103, 104], "keep_non": [103, 104], "cont_prune_key_chain": [103, 104], "key1": [103, 104, 174], "key2": [103, 104], "key3": [103, 104], "cont_prune_key_from_key_chain": [103, 104], "cont_prune_kei": [103, 104], "cont_prune_keys_from_key_chain": [103, 104], "cont_reduc": [103, 104], "cont_remove_key_length_limit": [103, 104], "cont_remove_print_limit": [103, 104], "cont_reshape_lik": [103, 104], "leading_shap": [103, 104], "return_cont": [103, 104], "cont_restructur": [103, 104], "keep_orig": [103, 104], "cont_restructure_key_chain": [103, 104], "keychain_map": [103, 104], "cont_set_at_key_chain": [103, 104], "cont_set_at_kei": [103, 104], "cont_shap": [103, 104, 1650, 1672, 1675], "attribut": [103, 104, 152, 154, 157, 162, 163, 164, 171, 172, 173, 174, 341, 385, 388, 390, 391, 393, 394, 396, 399, 446, 459, 460, 467, 896, 897, 997, 1000, 1417, 1474, 1475, 2228, 2229], "cont_show": [103, 104], "cont_show_sub_contain": [103, 104], "sub_cont_or_keychain": [103, 104], "cont_size_ordered_arrai": [103, 104], "keychain": [103, 104, 117, 824, 826, 828, 829, 831, 833, 834, 836, 838, 1077, 1081, 1360, 1361, 1363], "cont_slice_kei": [103, 104], "key_slic": [103, 104], "all_depth": [103, 104], "cont_slice_via_kei": [103, 104], "slice_kei": [103, 104], "cont_sort_by_kei": [103, 104], "cont_structural_diff": [103, 104], "cont_to_dict": [103, 104], "cont_to_disk_as_hdf5": [103, 104, 173], "starting_index": [103, 104], "max_batch_s": [103, 104], "cont_to_disk_as_json": [103, 104, 173], "cont_to_disk_as_pickl": [103, 104, 173], "cont_to_flat_list": [103, 104], "cont_to_iter": [103, 104, 152], "leaf_keys_onli": [103, 104], "cont_to_iterator_kei": [103, 104], "cont_to_iterator_valu": [103, 104], "cont_to_json": [103, 104], "cont_to_nested_list": [103, 104], "cont_to_raw": [103, 104], "raw": [103, 104, 157, 2141], "cont_trim_kei": [103, 104], "max_length": [103, 104], "trim": [103, 104], "cont_try_kc": [103, 104], "tri": [103, 104, 2228, 2229], "cont_unifi": [103, 104], "concatten": [103, 104, 446, 471], "cont_unstack_cont": [103, 104], "dim_siz": [103, 104], "cont_update_config": [103, 104], "cont_with_default_key_color": [103, 104], "cont_with_entries_as_list": [103, 104], "cont_with_ivy_backend": [103, 104], "ivy_backend": [103, 104], "cont_with_key_length_limit": [103, 104, 173], "cont_with_print_ind": [103, 104, 173], "cont_with_print_limit": [103, 104, 173], "cont_with_print_line_spac": [103, 104], "h5_file_s": [103, 104], "shuffle_h5_fil": [103, 104], "seed_valu": [103, 104, 1980, 2001], "dataset": [103, 104, 173, 185, 2128, 2237, 2248], "split_cont": [103, 104], "constitu": [103, 104, 175], "static_to_ivi": [107, 108], "static_to_n": [107, 108], "2324": [109, 110, 255, 285, 287, 288, 289], "234": [109, 110, 115, 116, 255, 285, 287, 288, 289, 481, 587, 589, 591, 792, 793, 795, 796, 1650, 1694, 1697], "123": [109, 110, 111, 112, 166, 255, 285, 287, 288, 289, 396, 398, 1417, 1466, 1468], "15443469": [109, 110, 295, 297, 299], "64158883": [109, 110, 295, 297, 299], "5443469": [109, 110, 255, 295, 297, 298], "static_arang": [109, 110, 257], "static_asarrai": [109, 110, 260], "static_empty_lik": [109, 110, 271], "static_ey": [109, 110, 276], "n_row": [109, 110, 117, 255, 276, 277, 278, 896, 902, 903, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385], "n_col": [109, 110, 117, 255, 276, 277, 278, 896, 902, 903, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385], "static_from_dlpack": [109, 110, 279], "static_full_lik": [109, 110, 285], "static_linspac": [109, 110, 290], "static_logspac": [109, 110, 295], "static_meshgrid": [109, 110, 300], "static_native_arrai": [109, 110, 305], "static_one_hot": [109, 110, 310], "static_on": [109, 110, 315], "static_ones_lik": [109, 110, 318], "static_tril": [109, 110, 323], "static_triu": [109, 110, 328], "static_zero": [109, 110, 333], "static_zeros_lik": [109, 110, 336], "718": [111, 112, 115, 116, 341, 349, 351, 352, 353, 687, 689], "618": [111, 112, 115, 116, 341, 349, 351, 352, 353, 687, 689], "broadcats": [111, 112, 354, 356], "inquir": [111, 112, 385, 387, 389, 396, 398, 400], "55040e": [111, 112, 341, 385, 387, 388, 389], "7976931348623157e": [111, 112, 341, 385, 387, 388, 389], "308": [111, 112, 166, 341, 385, 387, 388, 389], "1800": [111, 112, 341, 396, 398, 399, 400], "2147483648": [111, 112, 341, 396, 398, 399, 400], "2147483647": [111, 112, 341, 396, 398, 399, 400], "complex64": [111, 112, 341, 371, 372, 408, 409, 410, 411, 434, 440], "static_astyp": [111, 112, 349], "static_broadcast_arrai": [111, 112, 354], "And": [111, 112, 166, 354, 358], "static_broadcast_to": [111, 112, 359], "static_can_cast": [111, 112, 364], "from_": [111, 112, 341, 364, 367, 368], "static_default_complex_dtyp": [111, 112, 371], "complex_dtyp": [111, 112, 341, 342, 371, 372, 373, 434], "static_default_float_dtyp": [111, 112, 375], "float_dtyp": [111, 112, 341, 344, 375, 376, 377, 436], "static_dtyp": [111, 112, 380], "static_finfo": [111, 112, 385], "static_function_supported_dtyp": [111, 112, 390], "static_function_unsupported_dtyp": [111, 112, 393], "static_iinfo": [111, 112, 396], "1084": [111, 112, 396, 400], "40000": [111, 112, 396, 400], "static_is_bool_dtyp": [111, 112, 403], "dtype_in": [111, 112, 341, 347, 348, 384, 402, 403, 406, 407, 408, 410, 411, 412, 415, 416, 417, 420, 421, 422, 425, 426, 445, 905, 906, 1119], "static_is_complex_dtyp": [111, 112, 408], "static_is_float_dtyp": [111, 112, 412], "static_is_int_dtyp": [111, 112, 417], "static_is_uint_dtyp": [111, 112, 422], "static_result_typ": [111, 112, 429], "contaion": [113, 114, 453, 455], "static_dev": [113, 114, 453], "static_to_devic": [113, 114, 472], "524": [115, 116, 481, 502, 504, 505, 506], "644": [115, 116, 174, 481, 502, 504, 505], "305": [115, 116, 117, 124, 125, 481, 502, 504, 505, 869, 870, 871, 872, 1193, 1194, 1694, 1696, 1698], "915": [115, 116, 481, 517, 519, 520, 521], "29": [115, 116, 118, 119, 120, 121, 134, 135, 481, 517, 519, 520, 521, 1417, 1451, 1454, 1456, 1459, 1460, 1612, 1629, 1631, 1632, 1986, 1988, 1991, 1993, 1996, 1998, 2000], "983": [115, 116, 481, 517, 519, 520, 521], "978": [115, 116, 205, 233, 236, 481, 517, 519, 520, 521], "696": [115, 116, 134, 135, 481, 517, 519, 520, 521, 1991, 1993], "993": [115, 116, 481, 517, 519, 520, 521], "203": [115, 116, 132, 133, 522, 524, 526, 1975, 1976, 1978, 1979], "34": [115, 116, 117, 118, 119, 134, 135, 341, 396, 399, 481, 552, 555, 567, 569, 571, 672, 675, 762, 764, 766, 849, 853, 1417, 1435, 1451, 1454, 1456, 1459, 1460, 1714, 1771, 1774, 1980, 1986, 1990, 1991, 1993, 1996, 1999], "351": [115, 116, 481, 572, 574, 575, 732, 734], "00613": [115, 116, 572, 574], "0154": [115, 116, 572, 574], "0262": [115, 116, 481, 572, 574, 575, 576, 732, 735], "873": [115, 116, 481, 572, 574, 575, 576, 732, 735], "thefunct": [115, 116, 587, 589, 597, 601, 602, 606], "27632612": [115, 116, 587, 589, 591], "934008": [115, 116, 587, 589, 591], "99999928": [115, 116, 587, 589, 591], "91903949": [115, 116, 587, 589, 591], "59814835": [115, 116, 592, 594, 596], "148": [115, 116, 592, 594, 596], "4131622": [115, 116, 592, 594, 596], "403": [115, 116, 592, 594], "428772": [115, 116, 592, 594], "649": [115, 116, 597, 599], "220": [115, 116, 597, 599], "959": [115, 116, 481, 597, 599, 757, 759, 760, 761], "865": [115, 116, 597, 599], "metho": [115, 116, 617, 619, 667, 669], "999999999999": [115, 116, 481, 622, 624, 625, 626], "7j": [115, 116, 117, 481, 637, 639, 640, 953, 976, 1321, 1323, 1324], "0j": [115, 116, 117, 481, 637, 639, 640, 641, 953, 976, 1321, 1323, 1324, 1325], "898": [115, 116, 481, 657, 659, 660, 661], "0414": [115, 116, 481, 657, 659, 660, 661], "956": [115, 116, 662, 664], "nuner": [115, 116, 707, 709], "65": [115, 116, 120, 121, 134, 135, 481, 547, 550, 707, 709, 907, 910, 1149, 1154, 1417, 1508, 1511, 1612, 1614, 1616, 1617, 1714, 1786, 1789, 1991, 1993, 1996, 1998, 2070, 2081, 2084], "2860": [115, 116, 732, 734, 736], "413": [115, 116, 158, 732, 734], "recirpoc": [115, 116, 737, 739, 741], "300": [115, 116, 118, 119, 166, 481, 747, 749, 750, 751, 932, 1149, 1156, 1417, 1481, 1483, 1484, 1485, 1552, 1555, 1714, 1756, 1759], "527": [115, 116, 481, 747, 749, 750, 751], "301": [115, 116, 481, 747, 749, 750, 751], "757": [115, 116, 481, 757, 759, 760, 761], "279": [115, 116, 481, 757, 759, 760, 761, 907, 910, 1149, 1154, 1417, 1436, 1439], "835": [115, 116, 762, 764, 766], "347": [115, 116, 158, 762, 764, 766], "721": [115, 116, 762, 764, 766], "93": [115, 116, 118, 119, 134, 135, 446, 458, 767, 769, 771, 1417, 1451, 1454, 1456, 1459, 1460, 1991, 1993, 1996, 1998], "static_ab": [115, 116, 482], "static_aco": [115, 116, 487], "static_acosh": [115, 116, 492], "static_add": [115, 116, 152, 156, 157, 497], "static_asin": [115, 116, 502], "412": [115, 116, 124, 125, 481, 502, 505, 506, 1694, 1698], "201": [115, 116, 117, 481, 502, 505, 506, 907, 909, 911], "static_asinh": [115, 116, 507], "static_atan": [115, 116, 512], "static_atan2": [115, 116, 517], "static_atanh": [115, 116, 522], "static_bitwise_and": [115, 116, 527], "static_bitwise_invert": [115, 116, 532], "static_bitwise_left_shift": [115, 116, 537], "static_bitwise_or": [115, 116, 542], "static_bitwise_right_shift": [115, 116, 547], "static_bitwise_xor": [115, 116, 552], "static_ceil": [115, 116, 557], "static_co": [115, 116, 562], "static_cosh": [115, 116, 567], "static_deg2rad": [115, 116, 572], "static_divid": [115, 116, 577, 797, 798], "static_equ": [115, 116, 582], "static_erf": [115, 116, 587], "static_exp": [115, 116, 592], "static_expm1": [115, 116, 597], "areal": [115, 116, 597, 601], "71828175": [115, 116, 597, 601], "38905621": [115, 116, 597, 601], "59815216": [115, 116, 597, 601], "static_floor": [115, 116, 602], "static_floor_divid": [115, 116, 607], "static_great": [115, 116, 612], "static_greater_equ": [115, 116, 617], "static_isfinit": [115, 116, 622], "static_isinf": [115, 116, 627], "static_isnan": [115, 116, 632], "static_isr": [115, 116, 637], "23j": [115, 116, 117, 637, 641, 1321, 1325], "9j": [115, 116, 117, 637, 641, 1321, 1325], "static_less": [115, 116, 642], "static_less_equ": [115, 116, 647], "static_log": [115, 116, 652], "static_log10": [115, 116, 657], "static_log1p": [115, 116, 662], "static_log2": [115, 116, 667], "static_logaddexp": [115, 116, 672], "static_logical_and": [115, 116, 677], "static_logical_not": [115, 116, 682], "static_logical_or": [115, 116, 687], "static_logical_xor": [115, 116, 692], "static_maximum": [115, 116, 697], "static_minimum": [115, 116, 702], "static_multipli": [115, 116, 707], "static_neg": [115, 116, 712], "static_not_equ": [115, 116, 717], "static_posit": [115, 116, 722], "static_pow": [115, 116, 727], "static_rad2deg": [115, 116, 732], "5160": [115, 116, 732, 736], "10300": [115, 116, 481, 732, 735, 736], "15500": [115, 116, 732, 736], "20600": [115, 116, 732, 736], "static_reciproc": [115, 116, 737], "static_remaind": [115, 116, 742], "static_round": [115, 116, 747], "thevfunct": [115, 116, 747, 751], "static_sign": [115, 116, 752], "static_sin": [115, 116, 757], "static_sinh": [115, 116, 762], "static_sqrt": [115, 116, 767], "static_squar": [115, 116, 772], "static_subtract": [115, 116, 777], "static_tan": [115, 116, 152, 156, 782], "static_tanh": [115, 116, 787], "995": [115, 116, 481, 787, 788, 790, 791], "9999": [115, 116, 787, 788], "static_trapz": [115, 116], "static_trunc": [115, 116, 792], "static_trunc_divid": [115, 116, 797], "contan": [117, 1188, 1190, 1192], "19722462": [117, 1188, 1190, 1192], "84729779": [117, 1188, 1190, 1192], "static_logit": [117, 1188], "static_prelu": [117, 1305], "static_thresholded_relu": [117, 1365], "hamming_window": [117, 896, 1067], "coeffici": [117, 896, 898, 1064, 1065, 1066, 1067, 1714, 1806, 1809], "ham": [117, 896, 898, 1064, 1065, 1066, 1067], "8000": [117, 896, 898, 1064, 1065, 1066, 1067], "2000": [117, 896, 898, 1064, 1065, 1066, 1067], "4180": [117, 1064, 1065, 1067], "8180": [117, 1064, 1065, 1067], "hann_window": [117, 896, 1071], "hann": [117, 896, 899, 1068, 1069, 1070, 1071], "7500": [117, 1068, 1069, 1071], "3455": [117, 1068, 1069, 1071], "9045": [117, 1068, 1069, 1071], "kaiser_bessel_derived_window": [117, 896, 1134], "spectral": [117, 896, 900, 901, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138], "analysi": [117, 896, 900, 901, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 2140, 2141], "kaiser": [117, 896, 900, 901, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138], "70710677": [117, 896, 900, 1131, 1132, 1133, 1134, 1144, 1146, 1148, 1195, 1197], "18493208": [117, 896, 900, 1131, 1132, 1133, 1134], "9827513": [117, 896, 900, 1131, 1132, 1133, 1134], "kaiser_window": [117, 896, 1138], "static_kaiser_window": [117, 1135, 1136], "2049": [117, 1135, 1136, 1138], "8712": [117, 1135, 1136, 1138], "0367": [117, 896, 901, 1135, 1136, 1137, 1138], "7753": [117, 1135, 1136, 1138], "static_eye_lik": [117, 997], "static_hamming_window": [117, 1064], "static_hann_window": [117, 1068], "window_length": [117, 896, 898, 900, 901, 904, 1064, 1066, 1068, 1071, 1131, 1133, 1135, 1137, 1138, 1392, 1395], "static_hann": [117, 1068, 1071], "static_kaiser_bessel_derived_window": [117, 1131], "static_tril_indic": [117, 1378], "static_triu_indic": [117, 1382], "static_vorbis_window": [117, 1392], "vorbis_window": [117, 896, 1393], "vorbi": [117, 896, 904, 1392, 1393, 1394, 1395], "38268343": [117, 1392, 1393, 1394], "92387953": [117, 1392, 1393, 1394], "14943586": [117, 896, 904, 1392, 1393, 1394, 1395], "51644717": [117, 1392, 1393, 1394], "85631905": [117, 1392, 1393, 1394], "98877142": [117, 1392, 1393, 1394], "tril_indic": [117, 896], "triu_indic": [117, 896], "0003": [117, 814, 816, 818, 1714, 1756, 1759, 2237, 2241, 2245, 2246, 2266, 2267, 2269], "0006": [117, 814, 816, 818, 1411, 1412, 1414], "75j": [117, 819, 821, 823, 1102, 1104, 1106], "01317055": [117, 819, 821, 823], "05634501": [117, 819, 821, 823], "115": [117, 481, 572, 575, 732, 735, 819, 821, 823, 907, 910, 1149, 1154], "3461759": [117, 819, 821, 823], "524111": [117, 819, 821, 823], "coord": [117, 1057, 1059], "6055": [117, 1087, 1089, 1091], "1080": [117, 1166, 1168, 1170], "1550": [117, 1166, 1168, 1170], "130": [117, 1166, 1168, 1170], "08746284": [117, 1183, 1185, 1187], "32192809": [117, 1183, 1185, 1187], "000": [117, 1260, 1262], "took": [117, 1321, 1323], "335": [117, 1321, 1323], "345j": [117, 1321, 1323], "0707": [117, 953, 978, 1338, 1340, 1341], "0579": [117, 953, 978, 1338, 1340, 1341], "static_allclos": [117, 814], "static_angl": [117, 819], "static_binar": [117, 864], "static_copysign": [117, 881], "static_count_nonzero": [117, 891], "static_diff": [117, 922], "static_exp2": [117, 987], "static_fix": [117, 1007], "static_float_pow": [117, 1027], "static_fmax": [117, 1032], "static_fmin": [117, 1037], "static_fmod": [117, 1042], "static_gcd": [117, 1050], "static_gradi": [117, 1057], "static_hypot": [117, 1087], "static_imag": [117, 1102], "static_isclos": [117, 1121], "static_lcm": [117, 1166], "static_logaddexp2": [117, 1183], "static_nan_to_num": [117, 1260], "static_nansum": [117, 1275], "static_nextaft": [117, 1285], "static_r": [117, 1321], "static_signbit": [117, 1333], "static_sinc": [117, 1338], "636": [117, 1338, 1342], "090": [117, 1338, 1342], "070": [117, 1338, 1342], "057": [117, 1338, 1342], "static_xlogi": [117, 1406], "static_zeta": [117, 1411], "0244": [117, 1411, 1412, 1414], "static_isin": [117, 1126], "673": [117, 907, 909, 911], "0507": [117, 907, 909, 911], "static_avg_pool1d": [117, 839], "static_avg_pool2d": [117, 844], "static_avg_pool3d": [117, 849], "static_dct": [117, 907], "132": [117, 907, 911], "182": [117, 907, 911], "242": [117, 907, 911], "253": [117, 481, 762, 765, 907, 911], "515": [117, 907, 911, 1980, 1991, 1994], "467": [117, 907, 911], "static_dft": [117, 913], "static_embed": [117, 982], "static_fft": [117, 1002], "static_ifft": [117, 1097], "static_interpol": [117, 1113], "static_max_pool1d": [117, 1229], "static_max_pool2d": [117, 1234], "max_pool2dd": [117, 1234, 1238], "static_max_pool3d": [117, 1239], "eigenvealu": [117, 943, 945, 947], "eigenvector": [117, 943, 945, 946, 947, 1176, 1179, 1714, 1740, 1741, 1744], "xx": [117, 943, 945, 947, 948, 950, 952], "37228107": [117, 943, 945, 947], "3722816": [117, 943, 945, 947], "8245648": [117, 943, 945, 947], "41597357": [117, 943, 945, 947], "56576747": [117, 943, 945, 947], "9093767": [117, 943, 945, 947], "450": [117, 1139, 1141, 1143], "static_adjoint": [117, 809], "static_diagflat": [117, 917], "static_eig": [117, 943], "static_eigv": [117, 948], "static_kron": [117, 1139], "kroneck": [117, 1139, 1142, 1143, 1176, 1181], "static_matrix_exp": [117, 1224], "binary_cross_entropy_with_logit": [117, 153, 872, 1193], "pos_weight": [117, 869, 870, 871, 872, 1193, 1194], "027": [117, 869, 870, 871, 872, 1193, 1194], "263": [117, 869, 870, 871, 872, 1193, 1194, 1417, 1441, 1444], "953": [117, 869, 870, 871, 872, 1193, 1194], "static_binary_cross_entropy_with_logit": [117, 869], "atleast": [117, 824, 826, 827, 828, 829, 831, 832, 833, 834, 836, 838, 1200, 1201, 1202], "1d": [117, 824, 826, 827, 828, 907, 910, 932, 1149, 1154, 1156, 1200, 1201, 1220, 1360, 1364, 2169, 2170, 2171], "ary1": [117, 824, 826, 827, 829, 831, 832, 834, 836, 837, 1200, 1201, 1202, 1203], "ary2": [117, 824, 826, 827, 829, 831, 832, 834, 836, 837, 1200, 1201, 1202, 1203], "2d": [117, 164, 829, 831, 832, 833, 896, 897, 932, 997, 1000, 1149, 1156, 1200, 1202, 2169, 2172, 2173, 2176], "3d": [117, 186, 834, 836, 838, 932, 1149, 1156, 2169, 2174, 2175], "broadcast_shap": [117, 877, 1200, 2237], "30192195": [117, 1092, 1094, 1096], "static_atleast_1d": [117, 824], "static_atleast_2d": [117, 829], "static_atleast_3d": [117, 834], "static_broadcast_shap": [117, 874], "static_dsplit": [117, 933], "static_dstack": [117, 938], "static_expand": [117, 992], "static_flatten": [117, 1012], "static_fliplr": [117, 1017], "static_flipud": [117, 1022], "static_heavisid": [117, 1072], "static_hsplit": [117, 1077], "static_hstack": [117, 1082], "static_i0": [117, 1092], "static_moveaxi": [117, 1244, 1248, 1250, 1265, 1269], "static_pad": [117, 1294], "static_rot90": [117, 1326], "static_take_along_axi": [117, 1360], "static_top_k": [117, 1370], "static_vsplit": [117, 1396], "static_vstack": [117, 1401], "static_instance_norm": [117, 1107, 1109], "68283635": [117, 1107, 1109, 1111], "25858182": [117, 1107, 1109, 1111], "14645457": [117, 1107, 1109, 1111], "20709086": [117, 1107, 1109, 1111], "59998751": [117, 1107, 1109, 1111], "10000312": [117, 1107, 1109, 1111], "20000625": [117, 1107, 1109, 1111], "19997501": [117, 1107, 1109, 1111], "25000787": [117, 1107, 1109, 1111], "49996877": [117, 1107, 1109, 1111], "35001087": [117, 1107, 1109, 1111], "09995651": [117, 1107, 1109, 1111], "30002821": [117, 1107, 1109, 1111], "79988766": [117, 1107, 1109, 1111], "17999999": [117, 1107, 1109, 1111], "46000001": [117, 1107, 1109, 1111], "45999998": [117, 1107, 1109, 1111], "static_l2_norm": [117, 1144, 1146], "16903085": [117, 1144, 1146, 1148, 1195, 1197], "50709254": [117, 1144, 1146, 1148, 1195, 1197], "84515423": [117, 1144, 1146, 1148, 1195, 1197], "44183609": [117, 1144, 1146, 1148, 1195, 1197], "56807494": [117, 1144, 1146, 1148, 1195, 1197], "69431382": [117, 1144, 1146, 1148, 1195, 1197], "89442718": [117, 1144, 1146, 1148, 1195, 1197], "44721359": [117, 1144, 1146, 1148, 1195, 1197], "static_lp_norm": [117, 1195, 1197], "12500000": [117, 1195, 1199], "37500000": [117, 1195, 1199], "62500000": [117, 1195, 1199], "27500000": [117, 1195, 1199], "35000000": [117, 1195, 1199], "42500000": [117, 1195, 1199], "0000000": [117, 1195, 1199], "5000000": [117, 1195, 1199], "2500000": [117, 1195, 1199], "43643127": [117, 927, 929, 931], "32325703": [117, 927, 929, 931], "24031169": [117, 927, 929, 931], "34251311": [117, 927, 929, 931], "31692529": [117, 927, 929, 931], "3405616": [117, 927, 929, 931], "5319725": [117, 927, 929, 931], "22458365": [117, 927, 929, 931], "24344385": [117, 927, 929, 931], "26588406": [117, 927, 929, 931], "61075421": [117, 927, 929, 931], "12336174": [117, 927, 929, 931], "51142915": [117, 927, 929, 931], "25041268": [117, 927, 929, 931], "23815817": [117, 927, 929, 931], "64042903": [117, 927, 929, 931], "25763214": [117, 927, 929, 931], "10193883": [117, 927, 929, 931], "31624692": [117, 927, 929, 931], "46567987": [117, 927, 929, 931], "21807321": [117, 927, 929, 931], "37677699": [117, 927, 929, 931], "39914594": [117, 927, 929, 931], "22407707": [117, 927, 929, 931], "static_bernoulli": [117, 854], "static_beta": [117, 859], "static_dirichlet": [117, 927], "static_poisson": [117, 1300], "static_lexsort": [117, 1171, 1255, 1259], "static_msort": [117, 1255], "static_corrcoef": [117, 886], "static_median": [117, 1244], "static_nanmean": [117, 1265], "static_nanmedian": [117, 1270], "static_quantil": [117, 1310], "static_unravel_index": [117, 1386], "a0": [118, 119, 1425, 1427, 1429], "833": [118, 119, 1441, 1443], "classivi": [118, 119, 130, 131, 1469, 1471, 1473, 1870, 1916, 1919, 1936, 1939, 2033, 2039, 2043], "89858720e": [118, 119, 1469, 1471, 1473], "79717439e": [118, 119, 1469, 1471, 1473], "200": [118, 119, 173, 481, 547, 550, 932, 1149, 1156, 1417, 1481, 1483, 1484, 1485, 1552, 1554, 1555], "400": [118, 119, 153, 932, 1149, 1156, 1417, 1481, 1483, 1484, 1485, 1552, 1555, 1714, 1756, 1759], "500": [118, 119, 932, 1149, 1156, 1417, 1481, 1483, 1484, 1485], "600": [118, 119, 153, 932, 1149, 1156, 1481, 1483], "700": [118, 119, 1481, 1483], "static_all_equ": [118, 119, 1418], "static_array_equ": [118, 119, 1425], "x0": [118, 119, 156, 1417, 1425, 1428, 1429], "static_assert_supports_inplac": [118, 119, 1430], "static_clip_matrix_norm": [118, 119, 1436], "849": [118, 119, 1417, 1436, 1439, 1440, 1441, 1444, 1445], "static_clip_vector_norm": [118, 119, 1441], "static_einops_rearrang": [118, 119, 1451], "static_einops_reduc": [118, 119, 1456], "static_einops_repeat": [118, 119, 1461], "static_fourier_encod": [118, 119, 1469], "static_gath": [118, 119, 1476], "static_gather_nd": [118, 119, 1481], "static_get_num_dim": [118, 119, 1493], "static_has_nan": [118, 119, 1502], "leafwis": [118, 119, 1502, 1506], "static_inplace_decr": [118, 119, 1508], "static_inplace_incr": [118, 119, 1513], "static_inplace_upd": [118, 119, 1518], "static_is_arrai": [118, 119, 1524], "static_is_ivy_arrai": [118, 119, 1529], "static_is_native_arrai": [118, 119, 1537], "static_scatter_flat": [118, 119, 1547], "ref": [118, 119, 126, 127, 157, 481, 642, 645, 707, 710, 717, 720, 742, 745, 777, 781, 1547, 1551, 1552, 1556, 1776, 1780, 1870, 1926, 1929], "static_scatter_nd": [118, 119, 1552], "static_stable_divid": [118, 119, 1568], "22222222": [118, 119, 1568, 1572], "11111111": [118, 119, 1568, 1572], "857": [118, 119, 1417, 1568, 1571, 1572], "444": [118, 119, 1568, 1572], "static_stable_pow": [118, 119, 1573], "static_supports_inplace_upd": [118, 119, 1578], "static_to_list": [118, 119, 1584], "static_to_numpi": [118, 119, 1589], "static_to_scalar": [118, 119, 1594], "static_value_is_nan": [118, 119, 1606], "452": [118, 119, 1606, 1607], "425": [118, 119, 1606, 1609], "87": [120, 121, 481, 547, 550, 662, 665, 1612, 1614, 1616, 1617], "976": [120, 121, 481, 787, 791, 1612, 1614, 1616, 1617], "49e": [120, 121, 1612, 1614, 1616, 1617], "74e": [120, 121, 1612, 1614, 1616, 1617], "95e": [120, 121, 1612, 1614, 1616, 1617], "024": [120, 121, 869, 871, 1193, 1194, 1612, 1614, 1616, 1617], "096": [120, 121, 481, 572, 575, 1612, 1614, 1616, 1617], "216": [120, 121, 126, 127, 1612, 1614, 1616, 1617, 1834, 1835, 1837], "384": [120, 121, 1612, 1614, 1616, 1617], "626": [120, 121, 1612, 1614, 1616, 1617], "en": [120, 121, 153, 1612, 1614, 1617, 1618, 1621, 1714, 1849, 1853], "wikipedia": [120, 121, 1612, 1614, 1617, 1618, 1621, 1714, 1849, 1853], "wiki": [120, 121, 1612, 1614, 1617, 1618, 1621, 1714, 1849, 1853], "stochastic_gradient_desc": [120, 121, 1612, 1614, 1617, 1618, 1621], "01099": [120, 121, 1618, 1620], "01003": [120, 121, 1612, 1618, 1620, 1621], "01015": [120, 121, 1612, 1618, 1620, 1621], "99936122": [120, 121, 1612, 1618, 1620, 1621], "99936116": [120, 121, 1612, 1618, 1620, 1621], "99936128": [120, 121, 1612, 1618, 1620, 1621], "99936104": [120, 121, 1612, 1618, 1620, 1621], "w_new": [120, 121, 1612, 1624, 1626, 1627], "88": [120, 121, 134, 135, 205, 213, 216, 481, 552, 555, 1612, 1624, 1626, 1627, 1714, 1786, 1789, 1816, 1820, 1980, 1996, 1998, 1999, 2070, 2081, 2084], "708": [120, 121, 1612, 1629, 1631, 1632], "445": [120, 121, 1612, 1629, 1631, 1632], "6e": [120, 121, 1612, 1629, 1631, 1632], "00036": [120, 121, 1612, 1629, 1631, 1632], "00016": [120, 121, 1612, 1629, 1631, 1632], "00049": [120, 121, 1612, 1629, 1631, 1632], "layerwis": [120, 121, 1612, 1633, 1635, 1636], "static_stop_gradi": [120, 121, 1642], "fdfh": [124, 125, 1672, 1674, 1676], "inp": [124, 125, 1650, 1684, 1686, 1687, 1688], "278": [124, 125, 1650, 1689, 1692, 1694, 1696, 1697, 1698], "105": [124, 125, 1650, 1689, 1692, 1694, 1696, 1697, 1698, 1714, 1786, 1789, 1854, 1855, 1858], "352": [124, 125, 1650, 1694, 1696, 1697, 1698], "195": [124, 125, 1694, 1696, 1698], "static_conv1d": [124, 125, 1652], "static_conv1d_transpos": [124, 125, 1657], "static_conv2d": [124, 125, 1662], "static_conv2d_transpos": [124, 125, 1667], "static_conv3d": [124, 125, 1672], "static_conv3d_transpos": [124, 125, 1677], "static_depthwise_conv2d": [124, 125, 1684], "static_dropout": [124, 125, 1689], "static_dropout1d": [124, 125], "static_linear": [124, 125, 1694], "static_lstm_upd": [124, 125, 1699], "static_multi_head_attent": [124, 125, 1704], "static_scaled_dot_product_attent": [124, 125, 1709], "577": [126, 127, 1714, 1715, 1717, 1718, 1719], "707": [126, 127, 1714, 1715, 1717, 1718, 1719], "99999988": [126, 127, 1791, 1793], "0986123": [126, 127, 1714, 1801, 1803, 1804, 1805], "static_choleski": [126, 127, 1715], "static_rol": [126, 127, 130, 131, 152, 156, 1715, 1719, 1911], "static_cross": [126, 127, 1720], "static_det": [126, 127, 1725], "static_diag": [126, 127, 1730], "static_diagon": [126, 127, 1735], "static_eigh": [126, 127, 1741], "static_eigvalsh": [126, 127, 1746], "51572949": [126, 127, 1714, 1746, 1749, 1750], "17091519": [126, 127, 1714, 1746, 1749, 1750], "3448143": [126, 127, 1714, 1746, 1749, 1750], "88178420e": [126, 127, 1714, 1746, 1749, 1750], "35898387e": [126, 127, 1714, 1746, 1749, 1750], "46410179e": [126, 127, 1714, 1746, 1749, 1750], "static_inn": [126, 127, 1751], "static_inv": [126, 127, 1714, 1756, 1759], "static_matmul": [126, 127, 1761], "matul": [126, 127, 1761, 1765], "static_matrix_norm": [126, 127, 1766], "deimens": [126, 127, 1766, 1770], "static_matrix_pow": [126, 127, 1771], "static_matrix_rank": [126, 127, 1776], "static_matrix_transpos": [126, 127, 1781], "static_out": [126, 127, 1786], "static_pinv": [126, 127, 1791], "static_qr": [126, 127, 1796], "static_slogdet": [126, 127, 1801], "static_solv": [126, 127, 1806], "static_svd": [126, 127, 1811], "au": [126, 127, 1811, 1812, 1814], "aS": [126, 127, 1811, 1812, 1814], "avh": [126, 127, 1811, 1812, 1814], "bvh": [126, 127, 1811, 1812, 1814], "static_svdv": [126, 127, 1816], "static_tensordot": [126, 127, 1821], "static_trac": [126, 127, 1829], "static_vand": [126, 127, 1834], "343": [126, 127, 481, 747, 750, 1834, 1835, 1837], "512": [126, 127, 1834, 1835, 1837], "729": [126, 127, 174, 1834, 1835, 1837], "static_vecdot": [126, 127, 1839], "static_vector_norm": [126, 127, 1844], "mathemat": [126, 127, 154, 164, 168, 249, 481, 497, 500, 517, 520, 597, 600, 662, 665, 1714, 1766, 1769, 1844, 1845, 1847, 1848, 2140, 2146], "l1": [126, 127, 152, 173, 1714, 1844, 1845, 1847, 1848], "manhattan": [126, 127, 1714, 1844, 1845, 1847, 1848], "euclidean": [126, 127, 1714, 1844, 1845, 1847, 1848], "precis": [126, 127, 153, 154, 164, 168, 341, 385, 388, 481, 767, 770, 953, 962, 1027, 1030, 1714, 1801, 1804, 1844, 1845, 1847, 1848, 2144], "static_vector_to_skew_symmetric_matrix": [126, 127, 1849], "511": [128, 129, 1854, 1855, 1857, 1858, 1859, 1865, 1867, 1869], "5108256": [128, 129, 1860, 1862], "609438": [128, 129, 1714, 1801, 1804, 1860, 1862], "static_binary_cross_entropi": [128, 129, 1855], "static_cross_entropi": [128, 129, 1860], "20397282": [128, 129, 1860, 1864], "83258148": [128, 129, 1860, 1864], "60943794": [128, 129, 1860, 1864], "static_sparse_cross_entropi": [128, 129, 1865], "repreat": [130, 131, 1901, 1903], "static_clip": [130, 131, 1871], "static_concat": [130, 131, 1876], "static_constant_pad": [130, 131, 1881], "static_expand_dim": [130, 131, 1886], "container_axi": [130, 131, 1870, 1886, 1889, 1890], "static_flip": [130, 131, 1891], "static_permute_dim": [130, 131, 1896], "static_repeat": [130, 131, 1901], "static_reshap": [130, 131, 1906], "positivclip": [130, 131, 1911, 1915], "static_split": [130, 131, 1916], "static_squeez": [130, 131, 1921], "static_stack": [130, 131, 1926], "leavv": [130, 131, 1926, 1930], "static_swapax": [130, 131, 1931], "static_til": [130, 131, 1936], "static_unstack": [130, 131, 1941], "static_zero_pad": [130, 131, 1946], "342": [132, 133, 1975, 1976, 1978, 1979], "0427": [132, 133, 1975, 1976, 1978, 1979], "299": [132, 133, 1975, 1976, 1978, 1979], "241": [132, 133, 1976, 1978], "431": [134, 135, 1991, 1993], "83": [134, 135, 481, 767, 770, 907, 910, 1149, 1154, 1650, 1694, 1697, 1991, 1993], "274": [134, 135, 1991, 1993], "91": [134, 135, 481, 552, 555, 1650, 1694, 1697, 1714, 1786, 1789, 1980, 1991, 1993, 1994, 2070, 2081, 2084], "static_multinomi": [134, 135, 1981], "static_randint": [134, 135, 1986], "static_random_norm": [134, 135, 1991], "651": [134, 135, 1991, 1995], "static_random_uniform": [134, 135, 1996], "481": [134, 135, 1996, 2000], "0999": [134, 135, 1996, 2000], "static_shuffl": [134, 135, 2002], "static_argmax": [136, 137, 2008], "static_argmin": [136, 137, 2013], "static_argwher": [136, 137, 2018], "static_nonzero": [136, 137, 2023], "static_wher": [136, 137, 2028], "static_unique_al": [138, 139, 2034, 2037], "static_unique_count": [138, 139, 2039], "static_unique_invers": [138, 139, 2044], "static_unique_valu": [138, 139, 2049], "static_argsort": [140, 141, 2055], "static_searchsort": [140, 141, 2060], "static_sort": [140, 141, 2065], "cotain": [142, 143, 2093, 2095], "11000001": [142, 143, 2097, 2099, 2101], "23100001": [142, 143, 2097, 2099, 2101], "30800003": [142, 143, 2070, 2097, 2099, 2100, 2101], "static_cumprod": [142, 143, 2071], "static_cumsum": [142, 143, 2076], "static_prod": [142, 143, 2097], "static_sum": [142, 143, 2106], "static_var": [142, 143, 2111], "12666667": [142, 143, 2070, 2111, 2112, 2115], "11555555": [142, 143, 2070, 2111, 2112, 2115], "respectv": [142, 143, 2102, 2104], "81649649": [142, 143, 2102, 2104], "94280904": [142, 143, 2102, 2104], "509902": [142, 143, 2070, 2102, 2104, 2105], "2472192": [142, 143, 2102, 2104], "44948983": [142, 143, 2102, 2104], "41421354": [142, 143, 2102, 2104], "contian": [142, 143, 2111, 2114], "6666667": [142, 143, 2111, 2114], "static_al": [144, 145, 2117], "static_ani": [144, 145, 2122], "add_ivy_container_instance_method": 146, "containerexampl": [146, 147], "who": [148, 158, 169, 187, 2140, 2142], "hood": [148, 152, 156, 161, 164, 166, 168, 169, 170, 173, 175, 2147], "weed": [148, 169], "tour": 148, "primari": [148, 151, 154, 163, 164, 166, 168, 187, 896, 902, 903, 1171, 1174, 1343, 1344, 1378, 1381, 1382, 1385, 2127], "superset": [148, 164, 187], "goe": [148, 168], "runtim": [148, 166, 168, 446, 447, 2140], "borrow": 148, "conjunct": 149, "establish": [149, 2142], "2020": [149, 2140], "group": [149, 152, 161, 164, 165, 1650, 1651, 1682, 1683, 1955, 1958, 2136, 2139, 2145], "intend": [149, 160, 2070, 2106, 2110, 2138, 2140, 2144, 2145, 2159, 2167, 2228], "popular": [149, 2140], "sens": [149, 156, 164, 172], "unconnect": 149, "decis": [149, 152, 154, 164, 168, 170, 172, 2140], "initialis": [149, 164, 166, 446, 447], "checkout": [149, 166], "everytim": [149, 154], "init": [149, 175, 2159, 2165, 2168], "thoroughli": 149, "ci": [149, 154, 159, 165, 166, 187], "test_linalg": [149, 165], "test_set_funct": 149, "test_signatur": 149, "excess": [149, 151, 156], "explicitli": [149, 150, 151, 152, 154, 157, 158, 161, 162, 163, 165, 166, 170, 187, 1714, 1741, 1744, 1746, 1749, 2140, 2169, 2178, 2180, 2181, 2182, 2205, 2226], "array_modul": 149, "vv": 149, "test_manipulation_funct": 149, "test_concat": [149, 166], "typic": [149, 161, 814, 817, 953, 954, 970, 1121, 1124, 2054, 2060, 2063, 2139, 2147], "nb": 149, "liber": 149, "bodi": [149, 166], "decor": [149, 150, 152, 154, 155, 161, 162, 163, 164, 165, 1417, 1435, 2237, 2240, 2255, 2258, 2259, 2260, 2282, 2287, 2288], "fortun": 149, "falsifi": [149, 166], "______________________": 149, "test_remaind": 149, "_______________________": 149, "test_operators_and_elementwise_funct": 149, "1264": 149, "st": [149, 165, 166], "1277": 149, "binary_param_assert_against_refimpl": 149, "ctx": 149, "mod": 149, "620": 149, "binary_assert_against_refimpl": 149, "324": 149, "scalar_o": 149, "assertionerror": [149, 158, 165, 166, 2255, 2258], "17304064": 149, "binaryparamcontext": 149, "temporarili": [149, 167, 2181, 2182], "reproduce_failur": [149, 166], "axic42baaowcnp": 149, "rumwmabaear0": 149, "parametr": [149, 166, 805, 807, 1305, 1308, 2140], "make_binary_param": 149, "dh": 149, "numeric_dtyp": 149, "left_strat": 149, "left_sym": 149, "right_strat": 149, "right_sym": 149, "right_is_scalar": 149, "xp": [149, 1112, 1149, 1160], "binary_param_assert_dtyp": 149, "binary_param_assert_shap": 149, "led": [149, 2142], "unexpectedli": 149, "discrep": [149, 165], "varieti": [149, 153, 154, 155, 166, 2136, 2138, 2142, 2143, 2146, 2147], "known": [149, 153, 154, 164, 166, 2159, 2162, 2164], "test_asarray_arrai": 149, "test_floor_divid": 149, "health": 149, "test_iop": 149, "__imod__": 149, "x1_i": [149, 481, 497, 500, 517, 520, 527, 530, 537, 540, 542, 545, 547, 550, 552, 555, 577, 580, 582, 585, 607, 610, 612, 615, 617, 620, 642, 645, 647, 650, 672, 675, 677, 680, 687, 690, 692, 695, 707, 710, 717, 720, 727, 730, 742, 745, 777, 781], "isequ": 149, "test_matrix_norm": 149, "alter": 149, "tweak": 149, "array_api_methods_to_test": 149, "identifi": [149, 153, 166, 168, 205, 206, 212], "202": [149, 481, 567, 570], "test_trac": 149, "latter": [149, 151, 154, 157, 164, 2152, 2155], "scheme": [149, 174, 2140], "test_special_cas": 149, "__ipow__": 149, "is_integ": 149, "revisit": [149, 160], "tf": [150, 154, 155, 160, 163, 164, 166, 167, 168, 170, 175, 187, 2127, 2128, 2140, 2152, 2153, 2154], "wrapper": [150, 152, 154, 158, 162, 163, 164, 172, 2127, 2136, 2140, 2282, 2283, 2284, 2285, 2286], "_data": [150, 164, 172], "meta": [150, 167, 1952, 1953, 1954, 2140], "organiz": [150, 152, 164], "inherit": [150, 152, 158, 172, 187, 2127], "bear": [150, 152, 154, 164], "necessarili": [150, 152, 943, 946, 948, 951, 1176, 1179, 1180], "although": [150, 152, 164, 168, 1714, 1801, 1804, 2138, 2140, 2152, 2155], "underpin": [150, 152, 170], "programmat": [150, 152, 2141], "backup": [150, 152], "accident": [150, 152, 164], "readabl": [150, 152, 158, 160, 166, 167, 172, 173], "absent": [150, 152], "perk": [150, 152], "auto": [150, 152, 173], "__mul__": [150, 152, 156, 160, 168, 172], "throw": [150, 154, 158, 172, 2140], "imposs": 150, "firstli": [150, 154, 156, 157, 158, 161, 162, 163, 168, 173, 2136, 2146], "anywai": [150, 162, 164], "secondli": [150, 154], "permit": [150, 160, 164, 166, 168], "dictat": [150, 156, 160, 163, 2205, 2224, 2225, 2226], "standalon": [150, 166, 2127, 2136, 2141, 2146, 2147], "__array_function__": 150, "inspir": [150, 186], "__torch_function__": 150, "myarrai": 150, "ivybackendexcept": [150, 158], "plai": [150, 164, 166, 175, 2140, 2143], "handled_funct": 150, "notimpl": [150, 159], "four": [150, 154, 156, 160, 161, 166, 168, 173], "overridden": [150, 2152, 2154, 2155, 2185, 2189], "suppli": [150, 953, 977, 1200, 1218, 1294, 1297, 1333, 1336], "enough": [150, 153, 166, 172, 173, 174], "successfulli": [150, 159, 2181, 2182], "ivy_funct": 150, "my_ab": 150, "my_arrai": 150, "ivy_arrai": [150, 164, 1955, 1969], "Of": [150, 164, 173, 2145, 2146], "thrown": [150, 155, 158, 187, 1417, 1518, 1521], "subset": [150, 153, 157, 160, 164, 166, 170, 2140, 2255], "implicit_backend": [151, 170], "__dict__": [151, 170], "ivy_original_dict": [151, 170], "unmodifi": [151, 154, 446, 450], "opt": [151, 154, 163, 166, 167, 168], "fallback": 151, "requires_grad": 151, "memory_format": 151, "preserve_format": 151, "weren": 151, "break": [151, 154, 159, 160, 167, 187, 2128], "Not": [151, 165, 173, 174, 187, 249, 943, 946, 948, 951, 953, 974, 1176, 1179, 1180, 1275, 1278], "vast": [151, 154, 2140], "minor": [151, 168, 187], "fn_name_v_1p12_and_abov": 151, "similarli": [151, 154, 164, 168, 172, 255, 300, 303, 896, 902, 903, 1378, 1381, 1382, 1385, 2146], "fn_name_v_1p01_to_1p1": 151, "fn_name": [151, 165, 166, 2205, 2225, 2228, 2230, 2282, 2287], "five": [152, 173], "recap": [152, 156, 174], "arbitrarili": [152, 162, 173, 2266, 2267, 2268], "multi_map": 152, "__repr__": 152, "control": [152, 154, 163, 164, 165, 168, 172, 173, 186, 896, 902, 903, 932, 1149, 1156, 1378, 1381, 1382, 1385, 1714, 1730, 1733, 2127, 2140, 2146, 2157, 2158], "__getattr__": 152, "__setattr__": 152, "__contains__": 152, "__getstate__": 152, "__setstate__": 152, "unpickl": 152, "num_dim": [152, 175], "__len__": 152, "restrict": [152, 153, 164, 170, 2137], "enforc": [152, 172], "extern": [152, 160, 164, 166, 167], "flexibl": [152, 160, 167, 2140], "c1": 152, "lefthand": 152, "righthand": 152, "addition": [152, 163, 164, 2146], "counterpart": [152, 162], "behavior": [152, 153, 154, 164, 165, 166, 168, 170, 187, 481, 727, 730, 742, 745, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053, 2137], "presenc": [152, 163, 2194, 2197, 2198, 2199], "absenc": [152, 160, 2140], "implicitli": [152, 166, 170], "themselv": [152, 154, 155, 157, 161, 164, 174, 1955, 1956, 2137, 2146], "log_pr": [152, 161, 163], "intuit": [152, 166, 173, 174, 2136], "chronolog": 152, "concurr": [152, 153, 161, 2140], "had": [152, 153, 163, 170, 2140, 2141], "consum": [152, 153, 160, 165, 166, 2205, 2224, 2225, 2226], "sequenti": [152, 174], "But": [152, 153, 157, 162, 163, 175, 2255, 2262], "flow": [152, 186, 2140, 2141], "compil": [152, 164, 167, 168, 169, 171, 187, 248, 2127, 2128, 2136, 2139, 2140, 2141, 2144, 2147, 2181, 2182, 2185, 2186, 2187, 2188, 2189, 2190], "implic": 152, "whatsoev": [152, 161, 2127, 2146], "implicit": [152, 157, 164, 166, 170, 2140], "eager": [152, 187, 2140], "children": 152, "shallowest": 152, "deepest": 152, "regularli": 153, "feedback": 153, "rollback": 153, "incorpor": [153, 173, 2140], "fold": 153, "techniqu": 153, "triplet": 153, "notat": [153, 481, 517, 520, 2070, 2081, 2084], "test_torch": [153, 165], "test_tensor": [153, 165], "test_torch_instance_arctan_": 153, "7284": 153, "daili": 153, "neither": [153, 164, 168, 481, 497, 500, 1612, 1641, 1649], "nor": [153, 164, 481, 497, 500, 1612, 1641, 1649, 2144], "job": 153, "shoot": 153, "654": [153, 481, 562, 565], "impact": [153, 166, 174, 2142], "_reduce_loss": 153, "test_nn": 153, "test_loss": 153, "test_binary_cross_entropy_with_logit": 153, "test_cross_entropi": 153, "test_binary_cross_entropi": 153, "test_sparse_cross_entropi": 153, "test_loss_funct": 153, "test_torch_binary_cross_entropi": 153, "test_torch_cross_entropi": 153, "torch_binary_cross_entropi": 153, "torch_cross_entropi": 153, "underneath": [153, 2138], "achiev": [153, 154, 159, 162, 166, 173, 175, 2127], "magic": 153, "statement": [153, 159, 163, 166, 168, 187], "readthedoc": 153, "prepar": 153, "pedagog": 153, "f1": 153, "fm": 153, "encapsul": [153, 341, 396, 399], "yeah": 153, "procedur": [153, 156], "cyclic": 153, "intellig": [153, 166, 168, 2142], "tests_fil": 153, "file_nam": [153, 166, 167], "del": 153, "intersect": [153, 166, 186, 2251, 2254], "tests_lin": 153, "elif": [153, 158, 163, 164, 165], "correspondingli": 153, "tests_to_run": 153, "determine_tests_lin": 153, "mongodb": 153, "databas": [153, 166], "mechan": [153, 185, 187, 2128], "secret": 153, "db": 153, "ssh": 153, "deploi": [153, 2127, 2138, 2139, 2140, 2142, 2146], "ssh_deploy_kei": 153, "public": [153, 172, 1417, 1446, 2143], "suffic": [153, 162, 166], "massiv": 153, "constraint": [153, 154], "ex": [153, 2237, 2239, 2241, 2245, 2246, 2248, 2251, 2252, 2253, 2254, 2255, 2258, 2259, 2260, 2261, 2263, 2264, 2266, 2267, 2268, 2269, 2282, 2287, 2288], "mb": 153, "yml": 153, "felicit": 153, "clone_map": 153, "home": 153, "deploy_kei": 153, "user_email": 153, "rashul": 153, "chutani": 153, "user_nam": 153, "target_branch": 153, "github_serv": 153, "deploy_key_fil": 153, "chmod": 153, "ssh_known_hosts_fil": 153, "known_host": 153, "keyscan": 153, "export": [153, 2139, 2146], "git_ssh_command": 153, "userknownhostsfil": 153, "methodologi": 153, "master1": 153, "repeatedli": [153, 166, 1955, 1965], "restructur": 153, "index_map": 153, "test_map": 153, "routin": [153, 164, 168, 187, 2140], "aggreg": [153, 2033, 2034, 2038], "incorrect": 153, "snowbal": 153, "irrelev": [153, 154, 156], "recalibr": 153, "workflow_dispatch": 153, "schedul": [153, 187, 2140, 2147], "cron": 153, "saturdai": 153, "night": 153, "pm": 153, "fun": [153, 1417, 1611, 1955, 1967], "gut": 153, "lesser": [153, 158], "lol": 153, "cater": 153, "master2": 153, "master32": 153, "runner2": 153, "corrupt": 153, "forc": 153, "discard": 153, "stai": 153, "decoupl": [153, 174], "150": 153, "cycl": [153, 166], "rashulchutani": 153, "yellow": 153, "queu": 153, "redirect": 153, "book": 153, "ran": 153, "badg": 153, "clickabl": 153, "uint8": [154, 166, 341, 364, 367, 379, 390, 391, 422, 425, 429, 432, 438, 444], "uint16": [154, 164, 166, 170, 341, 370, 379, 393, 394, 396, 399, 422, 425, 2070, 2071, 2074, 2076, 2079, 2097, 2100, 2106, 2110], "uint32": [154, 166, 170, 341, 379, 393, 394, 396, 399, 401, 444, 2070, 2071, 2074, 2076, 2079, 2097, 2100, 2106, 2110], "uint64": [154, 166, 170, 341, 379, 393, 394, 401, 402, 429, 432, 435, 438, 2070, 2071, 2074, 2076, 2079, 2097, 2100, 2106, 2110], "bfloat16": [154, 164, 166, 167, 341, 390, 391], "all_dtyp": 154, "all_numeric_dtyp": 154, "all_int_dtyp": 154, "all_float_dtyp": 154, "replic": [154, 156, 164, 168], "thirdli": 154, "native_float32": 154, "importantli": [154, 172, 175, 186], "conveni": [154, 155, 160, 165, 171, 173, 174, 2127, 2146], "arguabl": [154, 155, 164], "jaxarrai": [154, 155, 160, 163, 167, 170], "jnp": [154, 155, 158, 160, 163, 167, 170, 175, 2128], "_handle_0_dim_output": [154, 163], "experiment": [154, 164, 167, 170, 803, 804, 805, 806, 807, 808, 809, 812, 814, 817, 819, 822, 824, 827, 829, 832, 834, 837, 839, 842, 844, 847, 849, 852, 854, 857, 859, 862, 864, 867, 869, 871, 873, 874, 876, 879, 881, 884, 886, 889, 891, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 910, 913, 915, 917, 920, 922, 925, 927, 930, 932, 933, 936, 938, 941, 943, 946, 948, 951, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 985, 987, 990, 992, 995, 997, 1000, 1002, 1005, 1007, 1010, 1012, 1015, 1017, 1020, 1022, 1025, 1027, 1030, 1032, 1035, 1037, 1040, 1042, 1045, 1047, 1049, 1050, 1053, 1055, 1056, 1057, 1060, 1062, 1063, 1064, 1066, 1068, 1070, 1072, 1075, 1077, 1080, 1082, 1085, 1087, 1090, 1092, 1095, 1097, 1100, 1102, 1105, 1107, 1110, 1112, 1113, 1116, 1118, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1133, 1135, 1137, 1139, 1142, 1144, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1169, 1171, 1174, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1186, 1188, 1191, 1193, 1194, 1195, 1198, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1227, 1229, 1232, 1234, 1237, 1239, 1242, 1244, 1247, 1250, 1253, 1255, 1258, 1260, 1263, 1265, 1268, 1270, 1273, 1275, 1278, 1280, 1281, 1282, 1283, 1285, 1288, 1290, 1291, 1292, 1293, 1294, 1297, 1299, 1300, 1303, 1305, 1308, 1310, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1324, 1326, 1329, 1333, 1336, 1338, 1341, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1365, 1369, 1370, 1374, 1375, 1377, 1378, 1381, 1382, 1385, 1386, 1390, 1392, 1395, 1396, 1400, 1401, 1405, 1406, 1410, 1411, 1415, 2140], "subtli": [154, 163], "promote_types_frontend_nam": 154, "promote_types_of_frontend_name_input": 154, "frontend_nam": 154, "demonstr": [154, 156, 158, 172], "accuraci": 154, "upcast": 154, "instabl": [154, 2255, 2262], "underflow": [154, 1714, 1801, 1804], "nearli": [154, 160, 162, 2140], "downcast": 154, "footprint": 154, "concret": 154, "compound": 154, "settabl": [154, 155], "deleg": [154, 2147], "shape_to_tupl": 154, "with_supported_dtyp": [154, 188], "with_unsupported_dtyp": [154, 188], "unment": 154, "backend_vers": 154, "_cast_for_unary_op": 154, "target_typ": 154, "discov": 154, "unsupported_dtyp": 154, "former": [154, 157, 164, 2152, 2155], "uint": [154, 165, 341, 379, 422, 425, 438, 444], "lack": [154, 158, 163, 2140, 2147], "patch": [154, 2140], "subtl": [154, 167, 2146], "offici": [154, 170], "inconsist": [154, 158], "unexpect": [154, 341, 428], "84530": 154, "unwarr": 154, "risk": [154, 2146], "needlessli": 154, "bloat": 154, "undergo": [154, 187], "supported_dtyp": [154, 164], "unsupported_devic": 154, "supported_devic": 154, "slight": [154, 166, 174], "downsid": 154, "coverag": [154, 166, 2157, 2158], "inflat": 154, "idx": [155, 172, 1417, 1423], "tpu": [155, 446, 447, 450, 469, 478, 2140, 2143], "aliv": [155, 446, 461, 465, 467, 1417, 1486, 1545, 1546], "outsid": [155, 159, 161, 172, 1870, 1871, 1874, 1926, 1929, 2145], "dual": 155, "categor": [155, 161, 164], "far": [155, 156, 171, 1955, 1956, 1967, 2145, 2146], "eight": [156, 169], "func_nam": [156, 157, 161, 164], "static_func_nam": 156, "op_nam": 156, "__r": 156, "combinatori": 156, "variat": [156, 164, 166], "unus": [156, 159, 163], "okai": [156, 168, 170], "showcas": [156, 186], "meant": [156, 2152, 2154], "spec": [156, 157], "my_func": [156, 167], "some_flag": 156, "another_flag": 156, "jointli": 156, "5574077": 156, "1850398": 156, "5463025": 156, "8422884": 156, "91601413": 156, "9647598": 156, "3738229": 156, "1597457": 156, "0963247": 156, "9955841": 156, "3278579": 156, "multi": [156, 169, 187, 1650, 1704, 1707, 1714, 1720, 1723, 2128, 2136, 2138, 2140, 2144, 2169, 2180], "pars": [156, 187], "asid": [156, 186], "increasingli": 156, "14254655": 156, "1578213": 156, "380515": 156, "trivial": 156, "exlud": 156, "failing_fn_nam": 156, "onlin": [156, 157], "minutest": 156, "suffici": [156, 164, 166], "segment": 156, "fault": [156, 2140], "contrast": [157, 160, 164, 2146], "instanti": 157, "templat": [157, 166, 2128], "array_api": 157, "preview": 157, "render": 157, "incorrectli": 157, "domain": [157, 481, 487, 490, 492, 495, 502, 505, 507, 510, 512, 515, 517, 520, 562, 565, 567, 570, 592, 595, 597, 600, 652, 655, 657, 660, 667, 670, 757, 760, 762, 765, 767, 770, 782, 786, 787, 791, 953, 978, 1338, 1341, 2138, 2140], "codomain": [157, 481, 487, 490, 492, 495, 502, 505, 507, 510, 512, 515, 517, 520, 562, 565, 567, 570, 592, 595, 597, 600, 652, 655, 657, 660, 667, 670, 757, 760, 762, 765, 767, 770, 782, 786, 787, 791, 953, 978, 1338, 1341], "needless": [157, 165], "info": [157, 2128], "renam": [157, 164], "judgment": 157, "beyond": [157, 164, 1870, 1911, 1914, 2146], "pure": [157, 160, 164, 168, 172, 175, 187, 2140, 2146, 2147], "operator_nam": 157, "succinct": 157, "contstructor": 157, "_forward": [157, 170, 173, 174, 2128], "trainabl": [157, 171, 173, 174, 2152, 2153, 2156, 2181, 2182, 2191], "docst": 157, "ivyexcept": [158, 164, 1612, 1641, 1649], "super": [158, 170, 173, 174, 175], "_default": 158, "_delimit": 158, "indexerror": [158, 1612, 1647, 1870, 1886, 1889], "ivyerror": 158, "julia": [158, 2143, 2146], "118": [158, 1714, 1771, 1774], "new_fn": [158, 164], "124": [158, 1650, 1694, 1697], "new_arg": 158, "new_kwarg": 158, "186": 158, "lib": 158, "site": [158, 2141], "_src": 158, "219": 158, "_reduce_al": 158, "_ensure_optional_ax": 158, "213": [158, 166], "_reduct": 158, "lax": [158, 164, 165, 168, 175, 187], "preproc": 158, "_cast_to_bool": 158, "pos_dim": 158, "_reduction_dim": 158, "113": 158, "canon_axi": 158, "_canonicalize_axis_allow_nam": 158, "genexpr": 158, "106": 158, "maybe_named_axi": 158, "_canonicalize_axi": 158, "stdin": 158, "295": 158, "262": 158, "ivy_arg": 158, "ivy_kwarg": 158, "354": 158, "truth_value_test": 158, "121": 158, "__name__": [158, 1417, 1599], "bound": [158, 166, 170, 2146], "switch": [158, 2147], "visibl": 158, "unwieldi": 158, "awar": 158, "recov": [158, 164], "squash": 158, "hid": 158, "cleaner": [158, 173], "caught": 158, "functool": [158, 164, 172], "attributeerror": [158, 172], "_print_traceback_histori": 158, "error_stack": 158, "axiserror": 158, "got": [158, 2128], "polici": [158, 166, 186], "moreov": 158, "met": 158, "flake8": 159, "handler": [159, 169, 171, 175, 2127, 2128], "annot": [159, 160], "star": 159, "byte": [159, 2145, 2146], "notimplementederror": 159, "unsuccess": 159, "exceed": 159, "black": 159, "disobei": 159, "inde": [159, 160, 168, 187, 2138], "adress": 160, "dedic": [160, 172, 174, 2152, 2153, 2156], "usabl": [160, 167], "sole": [160, 167, 2139, 2140, 2141], "strictli": [160, 163], "rational": 160, "__div__": [160, 168], "dicat": 160, "pep": 160, "484": 160, "brittl": 160, "freeli": 160, "technic": [160, 163, 187, 2140, 2142], "original_typ": 160, "cumbersom": 160, "omit": [160, 163, 164, 481, 747, 750, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053], "venn": 161, "diagram": [161, 2146], "light": [161, 164, 187, 2127, 2141, 2146], "array_arg": [161, 2205, 2206], "cach": [161, 166, 446, 451, 1417, 1435], "deal": [161, 164, 187], "modif": [161, 2140], "briefli": [161, 166, 173], "get_all_arrays_on_dev": 161, "nested_map": [161, 1955], "index_nest": [161, 1955], "heavili": [162, 164, 187], "facilit": 162, "integer_array_to_float": 162, "handle_cmd_line_arg": 162, "as_vari": [162, 165, 166, 2205, 2225, 2272, 2273, 2274, 2275, 2276, 2278, 2279, 2280, 2281], "with_out": [162, 165, 166, 2205, 2225, 2272, 2273, 2275, 2278, 2280], "instance_method": [162, 166, 2205, 2225, 2272, 2275, 2280], "test_gradi": [162, 2205, 2226, 2272, 2275, 2280, 2282, 2285, 2286], "topic": [162, 172, 2140], "program": [163, 2137, 2138, 2140, 2143, 2144, 2147], "ration": [163, 168], "speak": 163, "x_nativ": 163, "val_n": 163, "_is_vari": 163, "unspecifi": [163, 481, 727, 730, 742, 745, 1714, 1740, 1741, 1744, 1870, 1926, 1929], "predominantli": [163, 167, 186], "support_native_out": [163, 170], "math": [163, 164, 165, 175, 2128, 2138], "_wrap_fn": 163, "dim0": 163, "dim1": 163, "res_floor": 163, "mul": [163, 172], "extent": [163, 164], "maxim": [163, 168, 170, 2137, 2138, 2142, 2143, 2144], "third": [163, 187, 938, 941, 1200, 1206, 1714, 1811, 1815, 2033, 2034, 2038, 2139, 2140, 2146], "leverag": [163, 2138, 2140], "capabl": [163, 166, 168], "input_arrai": 163, "tf_frontend": 164, "fn_tree": [164, 165, 166, 2205, 2223, 2228, 2230, 2282, 2284, 2286], "wrong": [164, 168], "carefulli": [164, 2138, 2143, 2159, 2163], "torch_frontend": [164, 165], "numpy_frontend": 164, "jax_frontend": 164, "to_ivy_arrays_and_back": [164, 165, 188], "fidel": 164, "acceler": [164, 2128, 2138, 2142, 2143, 2144, 2145], "algebra": [164, 2138, 2139, 2140, 2143, 2147], "xla": [164, 187, 2127, 2140], "decompos": 164, "dynamic": 164, "mimic": 164, "arithmetic_oper": 164, "handle_numpy_out": 164, "handle_numpy_dtyp": 164, "handle_numpy_cast": 164, "from_zero_dim_arrays_to_scalar": 164, "_add": 164, "same_kind": 164, "subok": [164, 165, 168], "promote_types_of_numpy_input": 164, "underscor": 164, "obtain": 164, "unhandl": 164, "subclass": [164, 168, 2152, 2154, 2155], "trigonometric_funct": 164, "_tan": 164, "check_tensorflow_cast": 164, "raw_op": [164, 165], "tackl": 164, "map_raw_ops_alia": 164, "unnecessari": [164, 168], "output_typ": 164, "kwargs_to_upd": 164, "implemnt": 164, "pointwise_op": 164, "preferred_element_typ": 164, "finer": 164, "margin": 164, "meet": 164, "criteria": 164, "reduce_logsumexp": 164, "input_tensor": 164, "logsumexp": 164, "trick": 164, "max_input_tensor": 164, "omiss": 164, "sensibl": 164, "deem": 164, "reserv": 164, "resum": 164, "possibli": [164, 166, 187, 1417, 1584, 1587], "straight": [164, 166, 172, 2128], "ahead": [164, 2140], "heavi": [164, 165, 168, 2141, 2255, 2262], "logicaland": 164, "truth": [164, 166, 481, 582, 585, 612, 615, 617, 620, 642, 645, 647, 650, 717, 720, 2194, 2195, 2201, 2205, 2224, 2225, 2226], "np_frontend": 164, "_ivy_arrai": 164, "radd": 164, "_init_data": 164, "isinst": [164, 166, 167, 174, 175], "_process_str_data": 164, "_dtype": [164, 165, 172], "_shape": [164, 172], "govern": 164, "promote_types_of_": 164, "_input": 164, "promote_types_of_torch_input": [164, 165], "saniti": 164, "func_wrapp": [164, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "handle_numpy_casting_speci": 164, "equiv": 164, "unsaf": 164, "array_type_test": 164, "_isfinit": 164, "organis": 164, "watch": 164, "youtub": 164, "seri": [164, 166, 2140, 2142], "jump": 165, "knowledg": 165, "handle_frontend_test": [165, 166, 2282], "handle_frontend_method": [165, 166, 2282], "test_frontend_funct": [165, 2205], "lift": [165, 2141], "get_dtyp": [165, 166, 2237, 2240, 2242, 2245, 2251, 2252], "dtype_and_valu": [165, 166, 2237], "get_shap": [165, 166, 2255], "np_frontend_help": 165, "nn": [165, 168, 175, 255, 300, 303, 2128, 2141, 2152, 2153, 2155], "test_jax": 165, "test_jax_lax_oper": 165, "dtype_and_x": [165, 166], "available_dtyp": [165, 166, 2237, 2242, 2245, 2246, 2251, 2252, 2253], "test_with_out": [165, 2282, 2284, 2286], "test_jax_lax_tan": 165, "on_devic": [165, 2205, 2223, 2225], "test_flag": [165, 166, 2205, 2223, 2225], "input_dtyp": [165, 166, 2194, 2198, 2199, 2205, 2210, 2219, 2223, 2225], "num_positional_arg": [165, 166, 2205, 2221, 2225, 2272, 2273, 2274, 2275, 2276, 2278, 2279, 2280, 2281, 2282], "test_numpi": 165, "test_mathematical_funct": 165, "test_np_trigonometric_funct": 165, "dtypes_values_cast": 165, "dtypes_values_casting_dtyp": 165, "arr_func": 165, "get_dtypes_kind": 165, "number_positional_arg": [165, 2282, 2284, 2286], "get_num_positional_args_ufunc": 165, "test_numpy_tan": 165, "handle_where_and_array_bool": 165, "test_tensorflow": 165, "test_math": 165, "test_tensorflow_tan": 165, "test_pointwise_op": 165, "test_torch_tan": 165, "as_variable_flag": [165, 2205, 2210, 2219, 2225, 2282, 2284, 2286], "native_array_flag": [165, 2205, 2210, 2219, 2225, 2282, 2284, 2286], "_fill_valu": 165, "min_valu": [165, 166, 2237, 2239, 2241, 2245, 2246, 2251, 2252, 2255, 2256, 2266, 2267, 2268, 2269], "max_valu": [165, 166, 2237, 2239, 2241, 2245, 2246, 2251, 2252, 2255, 2256, 2266, 2267, 2268, 2269], "allow_non": [165, 166, 2237, 2242, 2255, 2258, 2261], "min_num_dim": [165, 166, 2237, 2240, 2242, 2245, 2246, 2255, 2261], "max_num_dim": [165, 166, 2237, 2240, 2242, 2245, 2246, 2255, 2261], "min_dim_s": [165, 166, 2237, 2240, 2242, 2245, 2246, 2255, 2261], "max_dim_s": [165, 2237, 2240, 2242, 2245, 2246, 2255, 2261], "test_jax_lax_ful": 165, "test_from_shape_or_valu": 165, "_input_fill_and_dtyp": 165, "dtype_and_input": 165, "dtype_to_cast": 165, "input_fill_dtyp": 165, "test_numpy_ful": 165, "test_tf_funct": 165, "test_tensorflow_fil": 165, "test_creation_op": 165, "test_torch_ful": 165, "test_valu": [165, 166, 2205, 2223, 2224, 2225, 2226], "add_nois": 165, "inter": [165, 2128], "all_clos": 165, "_get_dtype_and_matrix": 165, "test_torch_qr": 165, "frontend_ret": 165, "frontend_q": 165, "frontend_r": 165, "assert_all_clos": [165, 2194], "ret_np": [165, 2194, 2195, 2205, 2223], "ret_from_gt_np": [165, 2194, 2195], "ground_truth_backend": [165, 2194, 2195, 2201, 2205, 2219, 2225, 2226, 2228, 2232, 2282, 2285, 2286], "walkthrough": 165, "comparison_op": 165, "test_comparison_op": 165, "num_arrai": [165, 166, 2237, 2239, 2245, 2246, 2251, 2252], "allow_inf": [165, 166, 2237, 2240, 2241, 2245, 2246, 2266, 2267], "shared_dtyp": [165, 2237, 2245, 2246, 2251, 2252], "test_torch_great": 165, "all_alias": [165, 2205, 2223], "class_tre": [165, 2282, 2283], "init_tre": [165, 2282, 2283], "method_nam": [165, 2205, 2226, 2270, 2271, 2282, 2283], "test_frontend_method": [165, 2205], "test_ndarrai": 165, "test_numpy_instance_add__": 165, "frontend_method_data": [165, 2205, 2224], "init_flag": [165, 166, 2205, 2224, 2226], "method_flag": [165, 166, 2205, 2224, 2226, 2272], "init_input_dtyp": [165, 2205, 2224, 2226], "init_all_as_kwargs_np": [165, 2205, 2224, 2226], "method_input_dtyp": [165, 2205, 2224, 2226], "method_all_as_kwargs_np": [165, 2205, 2224, 2226], "test_tensorflow_instance_add": 165, "method_tre": [165, 166, 2282, 2285], "1e04": 165, "allow_infin": 165, "test_torch_instance_add": 165, "atol_": [165, 2205, 2219, 2224, 2225, 2226], "_arrays_idx_n_dtyp": 165, "test_manipul": [165, 166], "surprisingli": 165, "cat": [165, 168, 170, 175], "closest_relevant_group": 165, "strive": [165, 166, 168, 187, 2142], "exhaust": [166, 2137, 2146], "fixtur": 166, "hit": [166, 170], "eleg": [166, 2140], "unexplor": 166, "upload": 166, "artifact": 166, "impli": [166, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053], "bespok": 166, "_array_or_typ": 166, "test_default_int_dtyp": 166, "clariti": [166, 168, 2140], "print_hypothesis_exampl": 166, "searchstrategi": [166, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2245, 2246, 2248, 2251, 2252, 2253, 2254, 2255, 2257, 2258, 2259, 2260, 2261, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2272, 2278, 2279, 2280, 2281, 2282, 2287, 2288, 2289], "custom_strategi": 166, "sampled_from": 166, "randomis": 166, "simplist": 166, "intricaci": 166, "glanc": 166, "stratigi": 166, "one_of": 166, "datum": 166, "pipe": 166, "overload": 166, "shorthand": 166, "suppos": [166, 255, 276, 277, 1417, 1451, 1454], "scaler": [166, 2237, 2241, 2245, 2246, 2266, 2267, 2268, 2269], "array_or_scal": 166, "len_of_arrai": 166, "test_add": 166, "keywoard": 166, "gradient_test": [166, 2205], "test_gpu_is_avail": 166, "requri": 166, "handle_test": [166, 2282], "summara": 166, "pretest": 166, "slighlti": 166, "handle_method": [166, 2282], "pytet": 166, "snippet": 166, "thankfulli": 166, "captur": [166, 175, 2141], "mostli": 166, "seamlessli": 166, "encount": 166, "criterion": 166, "array_valu": [166, 2237], "valid_ax": 166, "craft": 166, "hoc": 166, "44758124e": 166, "11228": 166, "456": 166, "268": 166, "wherev": 166, "dtype_values_axi": [166, 2237], "9622": 166, "28136": 166, "6375": 166, "12720": 166, "21354": 166, "900e": 166, "955e": 166, "exclude_min": [166, 2237, 2241, 2245, 2246, 2266, 2267], "large_abs_safety_factor": [166, 2237, 2241, 2245, 2246, 2255, 2256, 2266, 2267, 2269], "safety_factor_scal": [166, 2237, 2241, 2245, 2246, 2255, 2256, 2266, 2267, 2268, 2269], "57384": 166, "25687": 166, "248": 166, "array_dtyp": [166, 2237, 2240, 2251], "min_siz": [166, 2237, 2248, 2255, 2258, 2282, 2283, 2284, 2285, 2286], "max_siz": [166, 2237, 2248, 2255, 2258, 2282, 2283, 2284, 2285, 2286], "array_bool": [166, 2237], "na": 166, "test_devic": 166, "array_shap": 166, "common_shap": 166, "test_lay": 166, "size_bound": [166, 2237, 2248], "reshape_shap": [166, 2255], "stand": 166, "fashion": [166, 2255, 2258], "some_sequ": 166, "allow_nan": [166, 2237, 2241, 2245, 2246, 2266, 2267], "allow_subnorm": [166, 2237, 2241, 2266, 2267], "get_bound": [166, 2255], "arrays_valu": 166, "36418": 166, "21716926": 166, "none_or_list_of_float": 166, "get_prob": 166, "get_mean_std": [166, 2255], "103515625e": 166, "099609375": 166, "probabilist": 166, "get_axi": [166, 2255], "number_positional_argu": 166, "unreproduc": 166, "report": 166, "valid_float_dtyp": 166, "test_demo": 166, "failing_test": 166, "traceback": 166, "shrink": 166, "prescrib": 166, "closest": [166, 168, 341, 370, 481, 557, 560, 602, 605, 607, 610, 747, 750, 792, 796], "scratch": 166, "therebi": 166, "test_gelu": 166, "test_fil": 166, "brief": 166, "phase": [166, 187, 2140], "notabl": [166, 2140], "verbos": [166, 170, 2128, 2291], "newer": 166, "max_exampl": 166, "deadlin": 166, "weird": 166, "systemat": 166, "safeguard": 166, "inabl": 166, "test_result_typ": 166, "9090909090909091": 166, "judgement": 167, "some_namespac": 167, "some_backend": 167, "another_backend": 167, "refactor": 167, "ongo": 167, "cooler": 167, "something_cool": 167, "_assert_fill_value_and_dtype_are_compat": 167, "_to_devic": 167, "shouldn": 167, "focus": [167, 186, 2138, 2139, 2140, 2146, 2147], "older": 167, "grow": [167, 2128, 2140], "unbound": 167, "battl": 167, "face": [168, 170, 2140, 2146], "answer": [168, 172, 187], "contradict": 168, "entail": 168, "sacrif": 168, "dimems": 168, "jacfwd": 168, "jacrev": 168, "banner": 168, "ravel": 168, "pointwis": 168, "fuse": 168, "tensorrt": 168, "highli": [168, 2140], "expens": 168, "incredibli": [168, 173, 187, 2143], "six": 168, "price": 168, "pai": 168, "intrus": 168, "x_beta": 168, "equip": 168, "deliber": [168, 481, 747, 750], "priorit": 168, "simplif": 168, "allevi": 168, "ineffici": [168, 187, 2140], "fledg": [170, 171], "syntact": [170, 175], "construct": [170, 174, 175, 1870, 1936, 1940, 2138, 2140, 2147, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2178, 2179, 2180, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192], "power_seq": 170, "backend_stack": 170, "cprint": [170, 2290], "_determine_backend_from_arg": 170, "importlib": 170, "import_modul": 170, "_backend_dict": 170, "illustr": [170, 186], "un": [170, 341, 402], "unrol": [170, 173, 1650, 1699, 1702], "lstm": [170, 1650, 1699, 1702, 2140, 2169], "x_shape": 170, "input_channel": [170, 174, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2178, 2179], "x_flat": 170, "wi": 170, "wi_x": 170, "wii_x": 170, "wif_x": 170, "wig_x": 170, "wio_x": 170, "wh": 170, "ht": 170, "ct": 170, "hts_list": 170, "wii_xt": 170, "wif_xt": 170, "wig_xt": 170, "wio_xt": 170, "zip": 170, "htm1": 170, "ctm1": 170, "wh_htm1": 170, "whi_htm1": 170, "whf_htm1": 170, "whg_htm1": 170, "who_htm1": 170, "ft": 170, "ot": 170, "reliabl": 170, "sacrific": 170, "hear": 170, "virtu": [170, 2137], "pure_ivi": 170, "compile_graph": [170, 175], "pure_torch": 170, "backbon": [170, 173], "_layer": 170, "unclean": 170, "wx": 170, "temp": 170, "ivy_func": 170, "emphas": 170, "torchscript": [170, 2127, 2147], "example_input": 170, "static_argnum": 170, "static_argnam": 170, "jit": [170, 187, 2140], "primit": [171, 187, 2138, 2140], "upcom": 171, "hierarch": [171, 173, 174, 2140], "_init": 172, "_size": 172, "_devic": 172, "_dev_str": 172, "_pre_repr": 172, "_post_repr": 172, "framework_str": 172, "noinspect": 172, "pypep8nam": 172, "typeerror": 172, "immut": 172, "claim": 172, "truli": 172, "_native_wrapp": 172, "genuin": 172, "some_method": 172, "rewritten": 172, "strang": 172, "compartment": 172, "newshap": 172, "new_shap": 172, "tidi": 172, "shorter": 172, "crystal": 172, "ton": 173, "ado": [173, 174], "soup": 173, "walk": [173, 174], "cnt": 173, "combo": 173, "3333335": 173, "delimit": 173, "autocomplet": 173, "midwai": 173, "agent": 173, "total_spe": 173, "total_height": 173, "total_width": 173, "ag": 173, "tot": 173, "total_": 173, "total_h": 173, "cnt0": 173, "cnt1": 173, "diff_0": 173, "diff_1": 173, "config0": 173, "config1": 173, "decod": 173, "l0": 173, "decoder__l0": 173, "decoder__l1": 173, "encoder__l0": 173, "encoder__l1": 173, "l0__b": 173, "l0__w": 173, "l1__b": 173, "l1__w": 173, "printabl": 173, "obviou": [173, 2140], "foresight": 173, "untidili": 173, "update_ag": 173, "normalize_img": 173, "img": 173, "img_max": 173, "reduce_max": [173, 2128], "img_min": 173, "reduce_min": [173, 2128], "img_rang": 173, "agent_posit": 173, "agent_veloc": 173, "agent_cam_front_rgb": 173, "agent_cam_front_depth": 173, "agent_cam_rear_rgb": 173, "agent_cam_rear_depth": 173, "agent_cam_lidar": 173, "camera": 173, "front_rgb": 173, "front_depth": 173, "rear_rgb": 173, "rear_depth": 173, "lidar": 173, "rgb": 173, "rear": 173, "veloc": 173, "cam": 173, "cam_max": 173, "cam_min": 173, "cam_rang": 173, "perman": 173, "thread": [173, 2140], "pretti": [173, 2146], "straightforward": 173, "dataload": [173, 185, 2128], "_cnt": 173, "img_": 173, "_dataset_s": 173, "_batch_siz": 173, "_count": [173, 174], "__next__": 173, "filenam": 173, "img_fnam": 173, "fname": 173, "loaded_img": 173, "cv2": 173, "imread": 173, "from_numpi": 173, "loader": [173, 187], "batch_slic": 173, "model": [173, 174, 2127, 2128, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2146, 2147, 2152, 2154], "mymodel": [173, 2128], "linear0": [173, 174, 2128], "linear1": [173, 174, 2128], "x_in": [173, 174, 175, 2128], "loss_fn": [173, 174, 175, 2128], "reduce_mean": [173, 174, 175, 2128], "0145": 173, "grad_fn": [173, 1612, 1623, 1648], "addbackward0": 173, "_create_vari": 174, "output_channel": [174, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2178, 2179], "with_bia": [174, 2169, 2179], "_input_channel": 174, "_output_channel": 174, "_w_shape": 174, "_b_shape": 174, "_with_bia": 174, "396": 174, "764": 174, "872": 174, "211": 174, "439": 174, "nightmar": 174, "overcom": 174, "fc": 174, "v0": 174, "v1": 174, "key0": 174, "linear3": 174, "v2": 174, "counter": [174, 2205, 2209], "fed": [174, 446, 471], "weight_initi": [174, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2178, 2179], "glorotuniform": [174, 2159, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2178, 2179], "bias_initi": [174, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179], "_w_init": 174, "_b_init": 174, "create_vari": [174, 2159, 2160, 2163, 2164, 2167], "var_shap": [174, 2159, 2160, 2163, 2164, 2167], "fan_out": [174, 2159, 2160, 2162, 2163, 2164, 2167], "fan_in": [174, 2159, 2160, 2161, 2162, 2163, 2164, 2166, 2167], "fan_mod": [174, 2159, 2164, 2167], "fan_sum": [174, 2159, 2164, 2167], "misnom": 174, "saw": 174, "vanilla": [174, 1951, 1953, 2140], "compile_on_next_step": [174, 1417, 1424, 2181, 2182, 2185, 2186, 2187, 2188, 2189, 2190], "_beta1": 174, "_beta2": 174, "_epsilon": 174, "_mw": 174, "_vw": 174, "_first_pass": 174, "_should_compil": 174, "_step": [174, 2185, 2189], "new_v": 174, "_lr": 174, "_inplac": 174, "_stop_gradi": 174, "set_stat": [174, 2185, 2186, 2187, 2188, 2189, 2190], "clip_by_valu": 175, "sparse_funct": 175, "num_class": 175, "new_axi": 175, "_linear": 175, "jax_graph": 175, "to_backend": 175, "to_ivy_modul": [175, 2152], "thinli": 175, "whilst": [175, 824, 827, 829, 832, 834, 837, 1200, 1201, 1202, 1203, 2127, 2140], "to_haiku_modul": [175, 2152, 2153], "hk": [175, 2152, 2153], "loss_fn_t": 175, "without_apply_rng": 175, "rng": 175, "prngkei": 175, "update_rul": 175, "tree_multimap": 175, "robot": [185, 2128], "perfect": 186, "differenti": [186, 2140], "orient": 186, "pose": 186, "euler": [186, 249], "quaternion": 186, "ivy_mech": 186, "target_facing_rotation_matrix": 186, "polar_to_cartesian_coord": 186, "ordin": [186, 1714, 1806, 1809], "warp": 186, "optic": 186, "voxel": 186, "ivy_vis": 186, "coords_to_voxel_grid": 186, "render_pixel_coord": 186, "neural": [186, 1650, 2128, 2136, 2138, 2139, 2140, 2144, 2146, 2147, 2149, 2169], "radianc": 186, "nerf": 186, "trajectori": 186, "motion": 186, "plan": [186, 2128], "mobil": [186, 2140], "sample_spline_path": 186, "rigidmobil": 186, "sample_bodi": 186, "drone": 186, "sample_link": 186, "openai": 186, "swimmer": 186, "reward": 186, "supervis": 186, "reinforc": 186, "door": [186, 187], "cartpol": 186, "mountain_car": 186, "pendulum": 186, "reacher": 186, "learnt": 186, "ture": 186, "ntm": 186, "egospher": 186, "spatial": [186, 1650, 1651, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1683, 1684, 1687], "esm": 186, "ivy_memori": 186, "egocentr": 186, "room": 186, "doubt": 187, "grate": 187, "probe": 187, "remark": 187, "surpris": 187, "lock": 187, "gold": 187, "dex": 187, "ye": 187, "scan": 187, "tricki": [187, 2127], "predictor": 187, "tight": 187, "driver": 187, "dispatch": [187, 2140, 2143], "ast": 187, "cond": [187, 250, 251, 253], "jacobian": [187, 1612, 1628, 2140], "checkpoint": 187, "autodiff": 187, "shine": 187, "merci": 187, "autograd": 187, "cluster": [187, 2140], "compet": [187, 2140], "paradigm": [187, 2140], "parallelis": 187, "spmd": 187, "mixtur": 187, "expert": 187, "sophist": 187, "depart": 187, "hundr": 187, "thousand": 187, "deepli": [187, 1955, 1957, 2140], "broadli": [187, 2146], "supplementari": 187, "reusabl": [187, 2138, 2140], "fanci": [187, 2140], "fusion": [187, 2144], "lose": 187, "pmap": 187, "overhead": [187, 2143], "eventu": 187, "supplement": 187, "backdoor": 187, "callback": 187, "record": [187, 2141], "metric": 187, "somewhat": [187, 2140], "outsourc": 187, "array_funct": [188, 189], "handle_nan": 188, "output_to_native_arrai": 188, "try_array_function_overrid": 188, "overloaded_arg": [188, 203], "with_supported_device_and_dtyp": 188, "version_dict": 188, "with_supported_devic": 188, "with_unsupported_device_and_dtyp": 188, "with_unsupported_devic": 188, "custom_object": [205, 206, 212], "nonetyp": [205, 206, 212], "xxxxxxxxxxxxxx": [205, 206, 212], "custom_fn": [205, 206, 212], "gaussian": [205, 207, 210], "24000001": [205, 213, 216], "703": [205, 218, 221], "683": [205, 218, 221], "408": [205, 218, 221], "313": [205, 218, 221], "437": [205, 218, 221], "40337825": [205, 223, 226], "56114835": [205, 223, 226], "20788449": [205, 223, 226], "214": [205, 233, 236], "891": [205, 233, 236], "0768": [205, 238, 241, 481, 572, 575], "231": [205, 238, 241], "array_method": [207, 208, 213, 214, 218, 219, 223, 224, 228, 229, 233, 234, 238, 239, 243, 244, 260, 261, 267, 268, 271, 272, 279, 280, 285, 286, 290, 291, 295, 296, 300, 301, 305, 306, 310, 311, 318, 319, 323, 325, 328, 330, 336, 338, 349, 350, 354, 355, 359, 360, 364, 365, 385, 386, 396, 397, 403, 404, 412, 413, 417, 418, 422, 423, 429, 430, 453, 454, 472, 474, 482, 483, 487, 488, 492, 493, 497, 498, 502, 503, 507, 508, 512, 513, 517, 518, 522, 523, 527, 528, 532, 533, 537, 538, 542, 543, 547, 548, 552, 553, 557, 558, 562, 563, 567, 568, 572, 573, 577, 578, 582, 583, 587, 588, 592, 593, 597, 598, 602, 603, 607, 608, 612, 613, 617, 618, 622, 623, 627, 628, 632, 633, 637, 638, 642, 643, 647, 648, 652, 653, 657, 658, 662, 663, 667, 668, 672, 673, 677, 678, 682, 683, 687, 688, 692, 693, 697, 698, 702, 703, 707, 708, 712, 713, 717, 718, 722, 723, 727, 728, 732, 733, 737, 738, 742, 743, 747, 748, 752, 753, 757, 758, 762, 763, 767, 768, 772, 773, 777, 779, 782, 784, 787, 789, 792, 794, 797, 799, 809, 810, 814, 815, 819, 820, 824, 825, 829, 830, 834, 835, 839, 840, 844, 845, 849, 850, 854, 855, 859, 860, 864, 865, 881, 882, 886, 887, 891, 892, 907, 908, 917, 918, 922, 923, 927, 928, 933, 934, 938, 939, 943, 944, 948, 949, 982, 983, 987, 988, 992, 993, 997, 998, 1002, 1003, 1007, 1008, 1012, 1013, 1017, 1018, 1022, 1023, 1027, 1028, 1032, 1033, 1037, 1038, 1042, 1043, 1047, 1048, 1050, 1051, 1057, 1058, 1072, 1073, 1077, 1078, 1082, 1083, 1087, 1088, 1092, 1093, 1097, 1098, 1102, 1103, 1107, 1108, 1113, 1114, 1121, 1122, 1126, 1127, 1139, 1140, 1144, 1145, 1166, 1167, 1171, 1172, 1183, 1184, 1188, 1189, 1195, 1196, 1224, 1225, 1229, 1230, 1234, 1235, 1239, 1240, 1244, 1245, 1250, 1251, 1255, 1256, 1260, 1261, 1265, 1266, 1270, 1271, 1275, 1276, 1285, 1286, 1294, 1295, 1300, 1301, 1305, 1306, 1310, 1311, 1321, 1322, 1326, 1327, 1333, 1334, 1338, 1339, 1360, 1362, 1365, 1367, 1370, 1372, 1375, 1376, 1386, 1388, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1418, 1419, 1425, 1426, 1430, 1431, 1436, 1437, 1441, 1442, 1448, 1449, 1451, 1452, 1456, 1457, 1461, 1462, 1466, 1467, 1469, 1470, 1476, 1477, 1481, 1482, 1493, 1494, 1502, 1503, 1508, 1509, 1513, 1514, 1518, 1519, 1524, 1525, 1529, 1530, 1534, 1535, 1537, 1538, 1547, 1548, 1552, 1553, 1568, 1569, 1573, 1574, 1578, 1580, 1584, 1586, 1589, 1591, 1594, 1596, 1606, 1608, 1614, 1615, 1618, 1619, 1624, 1625, 1629, 1630, 1633, 1634, 1637, 1638, 1642, 1644, 1652, 1653, 1657, 1658, 1662, 1663, 1667, 1668, 1672, 1673, 1677, 1678, 1684, 1685, 1689, 1690, 1694, 1695, 1699, 1700, 1704, 1705, 1709, 1710, 1715, 1716, 1720, 1721, 1725, 1726, 1730, 1731, 1735, 1736, 1741, 1742, 1746, 1747, 1751, 1752, 1756, 1757, 1761, 1762, 1766, 1767, 1771, 1772, 1776, 1777, 1781, 1782, 1786, 1787, 1791, 1792, 1796, 1797, 1801, 1802, 1806, 1807, 1811, 1813, 1816, 1818, 1825, 1826, 1829, 1831, 1834, 1836, 1839, 1841, 1844, 1846, 1849, 1851, 1855, 1856, 1860, 1861, 1865, 1866, 1871, 1872, 1876, 1877, 1881, 1882, 1886, 1887, 1891, 1892, 1896, 1897, 1901, 1902, 1906, 1907, 1911, 1912, 1916, 1917, 1921, 1922, 1926, 1927, 1931, 1933, 1936, 1938, 1941, 1943, 1946, 1948, 1976, 1977, 1981, 1982, 1986, 1987, 1991, 1992, 1996, 1997, 2002, 2003, 2008, 2009, 2013, 2014, 2018, 2019, 2023, 2024, 2028, 2030, 2034, 2036, 2039, 2041, 2044, 2046, 2049, 2051, 2055, 2056, 2060, 2061, 2065, 2066, 2071, 2072, 2076, 2077, 2081, 2082, 2085, 2086, 2089, 2090, 2093, 2094, 2097, 2098, 2102, 2103, 2106, 2108, 2111, 2113, 2117, 2118, 2122, 2123], "container_method": [207, 209, 211, 213, 215, 217, 218, 220, 222, 223, 225, 227, 228, 230, 232, 233, 235, 237, 238, 240, 242, 243, 245, 247, 257, 259, 260, 263, 271, 273, 275, 276, 278, 279, 281, 283, 285, 287, 289, 290, 292, 294, 295, 297, 299, 300, 302, 304, 305, 307, 309, 310, 312, 314, 315, 317, 318, 320, 322, 323, 324, 326, 328, 329, 331, 333, 334, 336, 337, 339, 349, 351, 353, 354, 356, 358, 359, 361, 363, 364, 366, 368, 371, 373, 375, 377, 380, 381, 383, 385, 387, 389, 390, 392, 393, 395, 396, 398, 400, 403, 405, 407, 408, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 429, 431, 433, 453, 455, 457, 472, 473, 475, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 607, 609, 611, 612, 614, 616, 617, 619, 621, 622, 624, 626, 627, 629, 631, 632, 634, 636, 637, 639, 641, 642, 644, 646, 647, 649, 651, 652, 654, 656, 657, 659, 661, 662, 664, 666, 667, 669, 671, 672, 674, 676, 677, 679, 681, 682, 684, 686, 687, 689, 691, 692, 694, 696, 697, 699, 701, 702, 704, 706, 707, 709, 711, 712, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 751, 752, 754, 756, 757, 759, 761, 762, 764, 766, 767, 769, 771, 772, 774, 776, 777, 778, 780, 782, 783, 785, 787, 788, 790, 792, 793, 795, 797, 798, 800, 809, 811, 813, 814, 816, 818, 819, 821, 823, 824, 826, 828, 829, 831, 833, 834, 836, 838, 839, 841, 843, 844, 846, 848, 849, 851, 853, 854, 856, 858, 859, 861, 863, 864, 866, 868, 869, 870, 872, 874, 875, 877, 881, 883, 885, 886, 888, 890, 891, 893, 895, 907, 909, 911, 913, 914, 916, 917, 919, 921, 922, 924, 926, 927, 929, 931, 933, 935, 937, 938, 940, 942, 943, 945, 947, 948, 950, 952, 982, 984, 986, 987, 989, 991, 992, 994, 996, 997, 999, 1001, 1002, 1004, 1006, 1007, 1009, 1011, 1012, 1014, 1016, 1017, 1019, 1021, 1022, 1024, 1026, 1027, 1029, 1031, 1032, 1034, 1036, 1037, 1039, 1041, 1042, 1044, 1046, 1050, 1052, 1054, 1057, 1059, 1061, 1064, 1065, 1067, 1068, 1069, 1071, 1072, 1074, 1076, 1077, 1079, 1081, 1082, 1084, 1086, 1087, 1089, 1091, 1092, 1094, 1096, 1097, 1099, 1101, 1102, 1104, 1106, 1107, 1109, 1111, 1113, 1115, 1117, 1121, 1123, 1125, 1126, 1128, 1130, 1131, 1132, 1134, 1135, 1136, 1138, 1139, 1141, 1143, 1144, 1146, 1148, 1166, 1168, 1170, 1171, 1173, 1175, 1183, 1185, 1187, 1188, 1190, 1192, 1195, 1197, 1199, 1224, 1226, 1228, 1229, 1231, 1233, 1234, 1236, 1238, 1239, 1241, 1243, 1244, 1246, 1248, 1250, 1252, 1254, 1255, 1257, 1259, 1260, 1262, 1264, 1265, 1267, 1269, 1270, 1272, 1274, 1275, 1277, 1279, 1285, 1287, 1289, 1294, 1296, 1298, 1300, 1302, 1304, 1305, 1307, 1309, 1310, 1312, 1314, 1321, 1323, 1325, 1326, 1328, 1330, 1333, 1335, 1337, 1338, 1340, 1342, 1360, 1361, 1363, 1365, 1366, 1368, 1370, 1371, 1373, 1378, 1379, 1380, 1382, 1383, 1384, 1386, 1387, 1389, 1392, 1393, 1394, 1396, 1397, 1399, 1401, 1402, 1404, 1406, 1407, 1409, 1411, 1412, 1414, 1418, 1420, 1422, 1425, 1427, 1429, 1430, 1432, 1434, 1436, 1438, 1440, 1441, 1443, 1445, 1451, 1453, 1455, 1456, 1458, 1460, 1461, 1463, 1465, 1469, 1471, 1473, 1476, 1478, 1480, 1481, 1483, 1485, 1493, 1495, 1497, 1502, 1504, 1506, 1508, 1510, 1512, 1513, 1515, 1517, 1518, 1520, 1522, 1524, 1526, 1528, 1529, 1531, 1533, 1537, 1539, 1541, 1547, 1549, 1551, 1552, 1554, 1556, 1568, 1570, 1572, 1573, 1575, 1577, 1578, 1579, 1581, 1584, 1585, 1589, 1590, 1592, 1594, 1595, 1597, 1606, 1607, 1609, 1614, 1616, 1618, 1620, 1624, 1626, 1629, 1631, 1633, 1635, 1637, 1639, 1642, 1643, 1645, 1652, 1654, 1656, 1657, 1659, 1661, 1662, 1664, 1666, 1667, 1669, 1671, 1672, 1674, 1676, 1677, 1679, 1681, 1684, 1686, 1688, 1689, 1691, 1693, 1694, 1696, 1698, 1699, 1701, 1703, 1704, 1706, 1708, 1709, 1711, 1713, 1715, 1717, 1719, 1720, 1722, 1724, 1725, 1727, 1729, 1730, 1732, 1734, 1735, 1737, 1739, 1741, 1743, 1745, 1746, 1748, 1750, 1751, 1753, 1755, 1756, 1758, 1760, 1761, 1763, 1765, 1766, 1768, 1770, 1771, 1773, 1775, 1776, 1778, 1780, 1781, 1783, 1785, 1786, 1788, 1790, 1791, 1793, 1795, 1796, 1798, 1800, 1801, 1803, 1805, 1806, 1808, 1810, 1811, 1812, 1814, 1816, 1817, 1819, 1821, 1822, 1823, 1825, 1827, 1829, 1830, 1832, 1834, 1835, 1837, 1839, 1840, 1842, 1844, 1845, 1847, 1849, 1850, 1852, 1855, 1857, 1859, 1860, 1862, 1864, 1865, 1867, 1869, 1871, 1873, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1888, 1890, 1891, 1893, 1895, 1896, 1898, 1900, 1901, 1903, 1905, 1906, 1908, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1921, 1923, 1925, 1926, 1928, 1930, 1931, 1932, 1934, 1936, 1937, 1939, 1941, 1942, 1944, 1946, 1947, 1949, 1976, 1978, 1981, 1983, 1985, 1986, 1988, 1990, 1991, 1993, 1995, 1996, 1998, 2000, 2002, 2004, 2006, 2008, 2010, 2012, 2013, 2015, 2017, 2018, 2020, 2022, 2023, 2025, 2027, 2028, 2029, 2031, 2034, 2035, 2037, 2039, 2040, 2042, 2044, 2045, 2047, 2049, 2050, 2052, 2055, 2057, 2059, 2060, 2062, 2064, 2065, 2067, 2069, 2071, 2073, 2075, 2076, 2078, 2080, 2081, 2083, 2085, 2087, 2089, 2091, 2093, 2095, 2097, 2099, 2101, 2102, 2104, 2106, 2107, 2109, 2111, 2112, 2114, 2117, 2119, 2121, 2122, 2124, 2126], "718281828459045": 249, "newaxi": 249, "141592653589793": 249, "control_flow_op": [250, 251, 252, 253, 254], "ifels": 250, "body_fn": [250, 251, 252, 253, 254], "orelse_fn": [250, 251, 253], "whileloop": 250, "test_fn": [250, 252, 254, 2228, 2230], "if_els": 250, "while_loop": 250, "nestedsequ": [255, 260, 262], "protocol": [255, 256], "_t_co": [255, 256], "ml_framework": [255, 257, 258], "distanc": [255, 257, 258], "adjac": [255, 257, 258], "obj": [255, 260, 262], "typevar": [255, 260, 262], "supportsbufferprotocol": [255, 260, 262], "intdtyp": [255, 276, 277, 318, 321, 336, 340, 341, 378, 408, 410, 422, 425, 437, 443], "numrow": [255, 276, 277], "numcolumn": [255, 276, 277], "interchang": [255, 279, 282, 1870, 1931, 1935], "33333337": [255, 290, 293], "66666663": [255, 290, 293], "41588834": [255, 295, 298], "7827941": [255, 295, 298], "6227766": [255, 295, 298], "23413252": [255, 295, 298], "conserv": [255, 300, 303], "n1": [255, 300, 303], "n2": [255, 300, 303], "n3": [255, 300, 303], "xv": [255, 300, 303], "yv": [255, 300, 303], "d_type": [255, 315, 316], "__new__": [255, 315, 316], "y1": [255, 318, 321, 336, 340, 896, 897, 997, 1000], "y2": [255, 318, 321, 336, 340], "y3": [255, 318, 321, 336, 340], "defaultcomplexdtyp": 341, "defaultdtyp": 341, "defaultfloatdtyp": 341, "defaultintdtyp": 341, "int_dtyp": [341, 345, 378, 437], "defaultuintdtyp": 341, "uint_dtyp": [341, 346, 379, 438], "incompat": [341, 359, 362], "data_type_funct": [341, 364, 367], "xtype": [341, 370], "ytype": [341, 370], "native_uint16": [341, 370], "complexdtyp": [341, 371, 372, 408, 410, 434], "complex128": [341, 371, 372, 408, 410, 434, 440], "4294": [341, 371, 372, 375, 376], "967346": [341, 371, 372, 375, 376], "floatdtyp": [341, 375, 376, 436], "4294967346": [341, 378, 379], "uintdtyp": [341, 379, 422, 425, 438, 444], "native_bool": [341, 384], "followng": [341, 385, 388], "smallest_norm": [341, 385, 388], "314": [341, 396, 399, 953, 976, 1321, 1324], "9223372036854775808": [341, 396, 399], "9223372036854775807": [341, 396, 399], "65535": [341, 396, 399], "4294967295": [341, 396, 399], "native_uint8": [341, 402], "type1": [341, 427], "type2": [341, 427], "array_api_promot": [341, 427, 428, 2237, 2245, 2251, 2252], "default_dtype_stack": [341, 435, 441], "native_uint64": [341, 435], "ret1": [341, 439], "ret2": [341, 439], "reset": [341, 440, 441, 442, 443, 444, 446, 479, 1417, 1600, 1601, 1602, 1603, 1604, 1605], "default_complex_dtype_stack": [341, 440], "default_float_dtype_stack": [341, 442], "native_float16": [341, 445], "defaultdevic": 446, "__enter__": [446, 447], "_dev": [446, 447], "__exit__": [446, 447], "exc_typ": [446, 447], "exc_val": [446, 447], "exc_tb": [446, 447], "exit": [446, 447], "profil": 446, "save_dir": [446, 448], "139740789224448": [446, 461], "physic": [446, 463], "process_specif": [446, 466, 480], "percentag": [446, 466], "ram": [446, 466, 477, 480], "036902561555": [446, 466], "7024003467681645": [446, 466], "7095597456708771": [446, 466], "attr_onli": [446, 467], "chunk": [446, 469, 470, 471], "max_chunk_s": [446, 471], "chunk_siz": [446, 471], "input_ax": [446, 471], "output_ax": [446, 471], "feed": [446, 471, 2140, 2141], "fist": [446, 471], "66700032": [446, 477], "589934592": [446, 477], "219563008": [446, 480], "902400346": [446, 480], "525205504": [446, 480], "magnitud": [481, 482, 485, 497, 500, 1714, 1811, 1815, 1816, 1820], "princip": [481, 487, 490, 502, 505, 512, 515, 953, 978, 1338, 1341], "2019": [481, 497, 500, 597, 600, 662, 665, 2140, 2143], "commut": [481, 497, 500], "809": [481, 507, 510], "199": [481, 507, 510], "569": [481, 507, 510], "733": [481, 507, 510], "denot": [481, 517, 520, 1612, 1641, 1649, 2181, 2182], "quadrant": [481, 517, 520], "3\u03c0": [481, 517, 520], "bitwis": [481, 527, 530, 542, 545, 552, 555, 692, 695], "170": [481, 547, 550], "243": [481, 547, 550], "225": [481, 547, 550], "xor": [481, 552, 555, 692, 695], "77": [481, 552, 555, 1714, 1786, 1789, 2070, 2081, 2084], "368": [481, 567, 570], "670": [481, 567, 570], "548": [481, 567, 570], "1490": [481, 567, 570], "0192": [481, 572, 575], "0384": [481, 572, 575], "0576": [481, 572, 575], "698": [481, 577, 580], "accur": [481, 597, 600, 662, 665, 1714, 1801, 1804], "fdlibm": [481, 597, 600, 662, 665], "compliant": [481, 597, 600, 662, 665, 682, 685, 687, 690, 2070, 2085, 2088, 2089, 2092, 2093, 2096, 2102, 2105], "632": [481, 597, 600], "20e": [481, 597, 600], "72e": [481, 597, 600], "greatest": [481, 602, 605, 607, 610, 953, 966, 1050, 1053], "742": [481, 662, 665], "versu": [481, 727, 730], "52095687": [481, 727, 730], "92457771": [481, 727, 730], "49372482": [481, 727, 730], "22738838": [481, 727, 730], "156": [481, 727, 730], "5877228": [481, 727, 730], "189": [481, 732, 735], "252": [481, 732, 735], "315": [481, 732, 735], "378": [481, 732, 735], "1150": [481, 732, 735], "2890": [481, 732, 735], "172": [481, 732, 735], "229": [481, 732, 735], "487": [481, 732, 735, 1650, 1694, 1697], "344": [481, 732, 735], "decim": [481, 747, 750], "imprecis": [481, 747, 750], "5654": [481, 747, 750], "034": [481, 747, 750], "433": [481, 747, 750, 1612, 1623, 1628, 1648], "932": [481, 757, 760], "746": [481, 757, 760], "443": [481, 757, 760], "657": [481, 757, 760, 1417, 1441, 1444], "indistinguish": [481, 767, 770], "infinit": [481, 767, 770], "32455532": [481, 767, 770], "89897949": [481, 767, 770], "169": [481, 767, 770], "546": [481, 782, 786, 1650, 1694, 1697], "916": [481, 782, 786, 1854, 1855, 1858], "996": [481, 782, 786], "462": [481, 787, 791], "604": [481, 787, 791], "984": [481, 787, 791], "997": [481, 787, 791], "0375": [481, 792, 796], "032": [481, 792, 796], "coo_indic": [804, 1280, 1346, 1348, 1351], "crow_indic": [804, 1280, 1346, 1348, 1351], "col_indic": [804, 1280, 1346, 1348, 1351], "ccol_indic": [804, 1280, 1346, 1348, 1351], "row_indic": [804, 1280, 1346, 1348, 1351], "dense_shap": [804, 1280, 1346, 1348, 1351], "to_dense_arrai": [804, 1346, 1348], "yj": [819, 822, 953, 955, 969, 1102, 1105], "ary3": [834, 837, 1200, 1203], "avg": [839, 842, 849, 852, 1149, 1150, 1152], "dimensio": [844, 847, 1149, 1151], "distrubut": [854, 857, 1315, 1316], "paramter": [854, 857, 1315, 1316], "463": [869, 871, 1193, 1194], "022": [869, 871, 1193, 1194], "059": [869, 871, 1193, 1194], "601": [869, 871, 1193, 1194], "015": [869, 871, 1193, 1194], "868": [869, 871, 1193, 1194], "908": [869, 871, 1193, 1194], "672": [869, 871, 1193, 1194], "002": [869, 871, 1193, 1194], "029": [869, 871, 1193, 1194], "144": [869, 871, 1193, 1194], "822": [869, 871, 1193, 1194], "custom_grad_func": [873, 1062, 1063], "input_s": [879, 1149, 1153], "output_s": [879, 1149, 1153], "kernel_fn": [879, 1149, 1153], "everywher": [896, 897, 997, 1000], "t1": [896, 897, 997, 1000], "0800": [896, 898, 1064, 1066], "3979": [896, 898, 1064, 1066], "9121": [896, 898, 1064, 1066], "5400": [896, 898, 1064, 1066], "han": [896, 899, 1068, 1070], "taper": [896, 899, 1068, 1070], "00713103": [896, 900, 1131, 1133], "99997455": [896, 900, 1131, 1133], "kaiser_derived_window": [896, 900, 1131, 1133], "00726415": [896, 900, 1131, 1133], "9999736": [896, 900, 1131, 1133], "2773e": [896, 901, 1135, 1137], "0172e": [896, 901, 1135, 1137], "9294e": [896, 901, 1135, 1137], "4149": [896, 901, 1135, 1137], "9138": [896, 901, 1135, 1137], "5529": [896, 901, 1135, 1137], "col": [896, 902, 903, 1378, 1381, 1382, 1385], "retain": [896, 902, 903, 1378, 1381, 1382, 1385, 1612, 1622, 2127], "downward": [896, 902, 903, 1378, 1381, 1382, 1385], "upward": [896, 902, 903, 1378, 1381, 1382, 1385], "2xn": [896, 902, 903, 1378, 1381, 1382, 1385], "subarrai": [896, 902, 903, 1378, 1381, 1382, 1385], "complementari": [896, 904, 1392, 1395, 2138, 2146], "38268346": [896, 904, 1392, 1395], "38268352": [896, 904, 1392, 1395], "8563191": [896, 904, 1392, 1395], "14943568": [896, 904, 1392, 1395], "is_native_dtyp": 905, "tranform": [907, 910, 1149, 1154], "22e": [907, 910, 1149, 1154], "24e": [907, 910, 1149, 1154], "91e": [907, 910, 1149, 1154], "10e": [907, 910, 1149, 1154], "16e": [907, 910, 1149, 1154], "81e": [907, 910, 1149, 1154], "280": [907, 910, 1149, 1154], "container_n": [907, 910, 1149, 1154], "container_norm": [907, 910, 1149, 1154], "superdiagon": [917, 920, 1176, 1178, 1714, 1730, 1733], "subdiagon": [917, 920, 1176, 1178, 1714, 1730, 1733], "multivari": [927, 930, 1315, 1318], "bayesian": [927, 930, 1315, 1318], "randomli": [932, 1149, 1156, 1650, 1689, 1692, 2169, 2177, 2237, 2239, 2240, 2241, 2245, 2246, 2248, 2251, 2252, 2253, 2254, 2255, 2258, 2259, 2260, 2261, 2263, 2264, 2266, 2267, 2268, 2269, 2282, 2287, 2288], "ed": [932, 1149, 1156], "eigenvali": [943, 946, 1176, 1179], "72281323e": [943, 946, 1176, 1179], "37228132e": [943, 946, 1176, 1179], "88578059e": [943, 946, 1176, 1179], "10000000e": [943, 946, 1176, 1179], "76822128": [943, 946, 1176, 1179], "70710678": [943, 946, 1176, 1179], "6401844": [943, 946, 1176, 1179], "position": [953, 962, 1027, 1030], "inexact": [953, 962, 1027, 1030], "triangl": [953, 968, 1087, 1090], "999999e": [953, 970, 1121, 1124], "355j": [953, 976, 1321, 1324], "55j": [953, 976, 1321, 1324], "217234": [953, 978, 1338, 1341], "hurwitz": [953, 981, 1411, 1415], "emb": [982, 985, 1149, 1157], "frac": [1002, 1005, 1097, 1100, 1149, 1158, 1159], "02733949e": [1002, 1005, 1149, 1158], "00j": [1002, 1005, 1149, 1158], "49660576e": [1002, 1005, 1149, 1158], "68178638e": [1002, 1005, 1149, 1158], "01j": [1002, 1005, 1097, 1100, 1149, 1158, 1159], "98912367e": [1002, 1005, 1149, 1158], "21802426e": [1002, 1005, 1097, 1100, 1149, 1158, 1159], "04549134e": [1002, 1005, 1097, 1100, 1149, 1158, 1159], "82842712e": [1002, 1005, 1097, 1100, 1149, 1158, 1159], "86902654e": [1002, 1005, 1097, 1100, 1149, 1158, 1159], "25501143e": [1002, 1005, 1097, 1100, 1149, 1158, 1159], "32978028e": [1002, 1005, 1097, 1100, 1149, 1158, 1159], "52068201e": [1002, 1005, 1097, 1100, 1149, 1158, 1159], "71158374e": [1002, 1005, 1097, 1100, 1149, 1158, 1159], "bind_custom_gradient_funct": 1062, "horizot": [1082, 1085, 1200, 1213], "15318303e": [1097, 1100, 1149, 1159], "15148591e": [1097, 1100, 1149, 1159], "19j": [1097, 1100, 1149, 1159], "25000000e": [1097, 1100, 1149, 1159], "35378602e": [1097, 1100, 1149, 1159], "02j": [1097, 1100, 1149, 1159], "65404249e": [1097, 1100, 1149, 1159], "17611649e": [1097, 1100, 1149, 1159], "24320230e": [1097, 1100, 1149, 1159], "79344813e": [1097, 1100, 1149, 1159], "22374531e": [1097, 1100, 1149, 1159], "45929364e": [1097, 1100, 1149, 1159], "14208718e": [1097, 1100, 1149, 1159], "07177031e": [1097, 1100, 1149, 1159], "fp": [1112, 1149, 1160], "nearest_exact": [1113, 1116, 1149, 1161], "compute_weight_mat": 1149, "interp": 1149, "padding_ceil_mod": 1149, "indirect": [1171, 1174, 1343, 1344], "secondari": [1171, 1174, 1343, 1344], "3333": [1195, 1198, 1290, 1293], "6666": [1195, 1198, 1290, 1293], "ndenumer": 1200, "multidimension": [1200, 1216, 1217, 1282, 1283, 2140], "ndindex": 1200, "linear_ramp": [1200, 1218, 1294, 1297], "ramp": [1200, 1218, 1294, 1297], "padding_func": [1200, 1218, 1294, 1297], "iaxis_pad_width": [1200, 1218, 1294, 1297], "iaxi": [1200, 1218, 1294, 1297], "unalt": [1200, 1218, 1294, 1297], "sparse_arrai": [1346, 1347, 1348, 1349, 1350, 1351, 1352], "nativesparsearrai": 1346, "sparsearrai": 1346, "is_ivy_sparse_arrai": 1346, "is_native_sparse_arrai": 1346, "native_sparse_arrai": 1346, "native_sparse_array_to_indices_values_and_shap": 1346, "inspect": [1417, 1423, 2132, 2133], "recalcul": [1417, 1435], "my_sum": [1417, 1435], "val1": [1417, 1435], "val2": [1417, 1435], "cached_sum": [1417, 1435], "line_eq": [1417, 1435], "slp": [1417, 1435], "itc": [1417, 1435], "cached_line_eq": [1417, 1435], "0353": [1417, 1436, 1439], "424": [1417, 1436, 1439], "58": [1417, 1436, 1439], "176": [1417, 1436, 1439], "339": [1417, 1436, 1439], "271": [1417, 1436, 1439], "168": [1417, 1436, 1439], "391": [1417, 1436, 1439], "417": [1417, 1441, 1444], "583": [1417, 1441, 1444], "0667": [1417, 1441, 1444], "267": [1417, 1441, 1444], "131": [1417, 1441, 1444], "394": [1417, 1441, 1444, 1980, 2002, 2005], "526": [1417, 1441, 1444], "788": [1417, 1441, 1444], "default_str": [1417, 1448, 1450], "46999979": [1417, 1451, 1454], "66000009": [1417, 1451, 1454], "93000001": [1417, 1451, 1454], "29000092": [1417, 1451, 1454], "33999991": [1417, 1451, 1454], "6400001": [1417, 1451, 1454], "96000004": [1417, 1451, 1454], "36000013": [1417, 1451, 1454], "51999998": [1417, 1451, 1454], "67000008": [1417, 1451, 1454], "960": [1417, 1451, 1454], "1280": [1417, 1451, 1454], "3600": [1417, 1451, 1454], "h1": [1417, 1451, 1454], "w1": [1417, 1451, 1454], "405": [1417, 1456, 1459], "array_mod": [1417, 1487], "exception_trace_mod": [1417, 1488], "max_depth": [1417, 1499, 1955, 1968], "seen_set": [1417, 1499], "local_set": [1417, 1499], "allow_dupl": [1417, 1543], "forkserv": [1417, 1544], "spawn": [1417, 1544], "garbag": [1417, 1546], "collector": [1417, 1546], "rtype": [1417, 1557, 1558, 1561, 1563, 1564], "exept": [1417, 1558], "tmp_dr": [1417, 1565], "tmp": [1417, 1565], "my_tmp": [1417, 1565], "49999999999975": [1417, 1568, 1571], "5015015015010504": [1417, 1568, 1571], "000444502911705e": [1417, 1568, 1571], "9999999999995j": [1417, 1568, 1571], "100000023841858": [1417, 1584, 1587], "200000047683716": [1417, 1584, 1587], "299999952316284": [1417, 1584, 1587], "400000095367432": [1417, 1584, 1587], "599999904632568": [1417, 1584, 1587], "dictionai": [1417, 1599], "hemant": [1417, 1599], "451": [1417, 1606, 1610], "in_ax": [1417, 1611], "out_ax": [1417, 1611], "thereof": [1417, 1611], "summaris": [1417, 1611], "gradienttrack": 1612, "0125": [1612, 1614, 1617], "171": [1612, 1614, 1617], "90000075": [1612, 1618, 1621], "90000164": [1612, 1618, 1621], "9000032": [1612, 1618, 1621], "50000012e": [1612, 1618, 1621], "92558754": [1612, 1618, 1621], "92558694": [1612, 1618, 1621], "92558682": [1612, 1618, 1621], "92558861": [1612, 1618, 1621], "60000025e": [1612, 1618, 1621], "01024": [1612, 1618, 1621], "retain_grad": [1612, 1622], "xs_grad_idx": [1612, 1622, 2205, 2219, 2225, 2226], "ret_grad_idx": [1612, 1622, 2205, 2219, 2225, 2226], "func_ret": [1612, 1622], "933": [1612, 1623, 1628, 1648], "jac_fn": [1612, 1628], "639": [1612, 1629, 1632], "361": [1612, 1629, 1632], "with_grads_stack": [1612, 1641, 1647, 1649], "value_grad": [1612, 1648], "423332": [1612, 1648], "channel_last": [1650, 1651, 1682, 1683], "feature_group_count": [1650, 1651, 1682, 1683], "x_dilat": [1650, 1651, 1682], "channel_first": [1650, 1651, 1682, 1683], "258": [1650, 1667, 1670, 1677, 1680], "dhwio": [1650, 1672, 1675], "depthwis": [1650, 1684, 1687, 2169, 2176, 2255, 2265], "hwi": [1650, 1684, 1687], "overfit": [1650, 1689, 1692], "1428566": [1650, 1689, 1692], "19999981": [1650, 1689, 1692], "39999962": [1650, 1689, 1692], "4000001": [1650, 1689, 1692], "5999999": [1650, 1689, 1692], "49000001": [1650, 1689, 1692], "55599999": [1650, 1689, 1692], "21000004": [1650, 1689, 1692], "incom": [1650, 1694, 1697], "666": [1650, 1694, 1697, 1714, 1766, 1769], "4269": [1650, 1694, 1697], "911": [1650, 1694, 1697], "157": [1650, 1694, 1697], "753": [1650, 1694, 1697], "101": [1650, 1694, 1697, 1714, 1756, 1759, 1955, 1962], "545": [1650, 1694, 1697, 1980, 1996, 1999], "547": [1650, 1694, 1697], "852": [1650, 1694, 1697], "963": [1650, 1694, 1697], "108": [1650, 1694, 1697, 2070, 2081, 2084], "196": [1650, 1694, 1697], "306": [1650, 1694, 1697], "query_dim": [1650, 1704, 1707, 2169, 2180], "measur": [1650, 1704, 1707, 2169, 2180], "cont_feat_dim": [1650, 1704, 1707], "numhead": [1650, 1704, 1707], "head_dim": [1650, 1704, 1707, 2169, 2180], "out_feat_dim": [1650, 1704, 1707], "5678761": [1650, 1704, 1707], "65441847": [1650, 1704, 1707], "18969631": [1650, 1704, 1707], "40131447": [1650, 1704, 1707], "19991851": [1650, 1704, 1707], "40000153": [1650, 1704, 1707], "68589532": [1650, 1704, 1707], "40129396": [1650, 1704, 1707], "40000817": [1650, 1704, 1707], "31219625": [1650, 1704, 1707], "25698996": [1650, 1704, 1707], "31022024": [1650, 1704, 1707], "16286421": [1650, 1704, 1707], "30296469": [1650, 1704, 1707], "16460133": [1650, 1704, 1707], "59497029": [1650, 1704, 1707], "40046397": [1650, 1704, 1707], "14009905": [1650, 1704, 1707], "81691194": [1650, 1704, 1707], "10732293": [1650, 1704, 1707], "40012637": [1650, 1704, 1707], "73519301": [1650, 1704, 1707], "40021262": [1650, 1704, 1707], "7615059": [1650, 1704, 1707], "40326414": [1650, 1704, 1707], "30141067": [1650, 1704, 1707], "19610119": [1650, 1704, 1707], "32028484": [1650, 1704, 1707], "1708746": [1650, 1704, 1707], "34100914": [1650, 1704, 1707], "14920235": [1650, 1704, 1707], "40000009": [1650, 1704, 1707], "73333335": [1650, 1704, 1707], "axisa": [1714, 1720, 1723], "axisb": [1714, 1720, 1723], "axisc": [1714, 1720, 1723], "293": [1714, 1725, 1728], "46997": [1714, 1725, 1728], "eigendecomposit": [1714, 1740, 1741, 1744], "qlq\u1d40": [1714, 1740, 1741, 1744], "orthogon": [1714, 1740, 1741, 1744], "45033181e": [1714, 1746, 1749], "02829754e": [1714, 1746, 1749], "54220343e": [1714, 1746, 1749], "12647155e": [1714, 1746, 1749], "38447177e": [1714, 1746, 1749], "56155300e": [1714, 1746, 1749], "26794919": [1714, 1746, 1749], "7320509": [1714, 1746, 1749], "array_lik": [1714, 1751, 1754, 1786, 1789], "0012": [1714, 1756, 1759], "00342": [1714, 1756, 1759], "000565": [1714, 1756, 1759], "0104": [1714, 1756, 1759], "000981": [1714, 1756, 1759], "00282": [1714, 1756, 1759], "000766": [1714, 1756, 1759], "0322": [1714, 1756, 1759], "00237": [1714, 1756, 1759], "000151": [1714, 1756, 1759], "00101": [1714, 1756, 1759], "00019": [1714, 1756, 1759], "0214": [1714, 1756, 1759], "00171": [1714, 1756, 1759], "0107": [1714, 1756, 1759], "0167": [1714, 1756, 1759], "0472": [1714, 1756, 1759], "0536": [1714, 1756, 1759], "0177": [1714, 1756, 1759], "000429": [1714, 1756, 1759], "00762": [1714, 1756, 1759], "frobeniu": [1714, 1766, 1769], "nuclear": [1714, 1766, 1769], "induc": [1714, 1766, 1769], "47722558": [1714, 1766, 1769], "776": [1714, 1766, 1769], "6000004": [1714, 1766, 1769], "112": [1714, 1786, 1789, 2070, 2081, 2084], "moor": [1714, 1791, 1794], "penros": [1714, 1791, 1794], "logsabsdet": [1714, 1801, 1804], "subject": [1714, 1801, 1804], "usvh": [1714, 1811, 1815], "et": [1714, 1811, 1815], "cetera": [1714, 1811, 1815], "ss": [1714, 1816, 1820], "615": [1714, 1816, 1820], "866": [1714, 1816, 1820], "864": [1714, 1816, 1820], "0x": [1714, 1834, 1838], "alexandr": [1714, 1834, 1838], "theophil": [1714, 1834, 1838], "skew": [1714, 1849, 1853], "symmetric_matrix": [1714, 1849, 1853], "cross_product": [1714, 1849, 1853], "35667497": [1854, 1860, 1863], "793291": [1854, 1865, 1868], "512926": [1854, 1865, 1868], "squeezabl": [1870, 1921, 1924], "famili": [1870, 1926, 1929], "intxx": [1870, 1926, 1929], "floatxx": [1870, 1926, 1929], "rep": [1870, 1936, 1940], "manipulation_funct": [1870, 1946, 1950], "fomaml_step": 1951, "inner_cost_fn": [1951, 1952, 1953], "outer_cost_fn": [1951, 1952, 1953], "inner_grad_step": [1951, 1952, 1953, 1954], "inner_learning_r": [1951, 1952, 1953, 1954], "inner_optimization_step": [1951, 1952, 1953, 1954], "inner_batch_fn": [1951, 1952, 1953], "outer_batch_fn": [1951, 1952, 1953], "average_across_step": [1951, 1952, 1953], "inner_v": [1951, 1952, 1953], "keep_inner_v": [1951, 1952, 1953], "outer_v": [1951, 1952, 1953], "keep_outer_v": [1951, 1952, 1953], "return_inner_v": [1951, 1952, 1953, 1954], "num_task": [1951, 1952, 1953, 1954], "maml": [1951, 1952, 1953], "recev": [1951, 1952, 1953], "0x7fe5999308b0": [1951, 1952, 1953, 1954], "maml_step": 1951, "rece": [1951, 1953], "reptile_step": 1951, "cost_fn": [1951, 1954], "reptil": [1951, 1954], "receivng": [1951, 1954], "all_nested_indic": 1955, "include_nest": [1955, 1956], "_index": [1955, 1956, 1967], "_base": [1955, 1956, 1966, 1967], "extra_nest_typ": [1955, 1956, 1957, 1966, 1967, 1968], "copy_nest": 1955, "to_mut": [1955, 1957, 1968], "mutabl": [1955, 1957, 1963, 1964, 1968, 1973, 1974], "copied_nest": [1955, 1957], "1337": [1955, 1957], "duplicate_array_index_chain": 1955, "insert_into_nest_at_index": 1955, "insert_into_nest_at_indic": 1955, "special_squar": [1955, 1962], "6666666666666667": [1955, 1962], "special_pow": [1955, 1962], "linear_model": [1955, 1962], "map_nest_at_index": 1955, "shallow": [1955, 1963, 1964, 1968, 1973, 1974], "_result": [1955, 1963, 1973], "hh": [1955, 1963], "map_nest_at_indic": 1955, "ub": [1955, 1964], "tb": [1955, 1964], "multi_index_nest": 1955, "nested_ani": 1955, "check_nest": [1955, 1966, 1967], "conditon": [1955, 1966, 1967], "nested_argwher": 1955, "stop_after_n_found": [1955, 1967], "nested_indic": [1955, 1967], "_depth": [1955, 1968], "_tuple_check_fn": [1955, 1968], "_list_check_fn": [1955, 1968], "_dict_check_fn": [1955, 1968], "nested_multi_map": 1955, "index_chain": [1955, 1969], "nest0": [1955, 1969], "unappli": [1955, 1969], "prune_empti": 1955, "prune_nest_at_index": 1955, "prune_nest_at_indic": 1955, "set_nest_at_index": 1955, "set_nest_at_indic": 1955, "111": [1955, 1974], "xyz": [1955, 1974], "pqr": [1955, 1974], "mini": [1975, 1976, 1979, 2183, 2184], "217": [1975, 1976, 1979], "uniformli": [1980, 1986, 1989, 1996, 1999], "22346112": [1980, 1991, 1994], "0922": [1980, 1991, 1994], "49671414": [1980, 1991, 1994], "1382643": [1980, 1991, 1994], "64768857": [1980, 1991, 1994], "5230298": [1980, 1991, 1994], "23415337": [1980, 1991, 1994], "23413695": [1980, 1991, 1994], "9213753": [1980, 1991, 1994], "12818667": [1980, 1991, 1994], "799": [1980, 1991, 1994], "469": [1980, 1991, 1994], "287": [1980, 1991, 1994], "0366": [1980, 1991, 1994], "26431865": [1980, 1996, 1999], "475": [1980, 1996, 1999], "878": [1980, 1996, 1999], "861": [1980, 1996, 1999], "929": [1980, 1996, 1999], "789": [1980, 1996, 1999], "519": [1980, 1996, 1999], "0435": [1980, 1996, 1999], "381": [1980, 1996, 1999], "4608004": [1980, 1996, 1999], "8458502": [1980, 1996, 1999], "67270088": [1980, 1996, 1999], "31128597": [1980, 1996, 1999], "x_j": [2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053], "fourth": [2033, 2034, 2038], "1141": [2033, 2034, 2038], "8101": [2033, 2034, 2038], "9298": [2033, 2034, 2038], "8460": [2033, 2034, 2038], "2119": [2033, 2034, 2038], "3519": [2033, 2034, 2038], "6252": [2033, 2034, 2038], "4033": [2033, 2034, 2038], "7443": [2033, 2034, 2038], "2577": [2033, 2034, 2038], "3707": [2033, 2034, 2038], "0545": [2033, 2034, 2038], "3238": [2033, 2034, 2038], "5944": [2033, 2034, 2038], "0775": [2033, 2034, 2038], "4327": [2033, 2034, 2038], "62519997": [2033, 2034, 2038], "40329999": [2033, 2034, 2038], "59439999": [2033, 2034, 2038], "74430001": [2033, 2034, 2038], "81010002": [2033, 2034, 2038], "84600002": [2033, 2034, 2038], "92979997": [2033, 2034, 2038], "39999998": [2033, 2039, 2043], "29999995": [2033, 2039, 2043], "einstein": [2070, 2081, 2084], "summat": [2070, 2081, 2084], "117": [2070, 2081, 2084], "sentinel": [2070, 2085, 2088, 2093, 2096], "90000004": [2070, 2089, 2092], "statistical_funct": [2070, 2102, 2105], "07472222": [2070, 2111, 2115], "00666667": [2070, 2111, 2115], "08966666": [2070, 2111, 2115], "simplicit": [2116, 2117, 2120, 2122, 2125], "nail": 2127, "funtion": 2127, "asset": 2127, "functiona": 2127, "scientist": 2127, "correl": 2127, "analyz": 2127, "ai": [2128, 2138, 2142], "colab": 2128, "interact": [2128, 2139, 2140, 2145], "sharp": 2128, "favorit": 2128, "jax_concat": 2128, "tf_concat": 2128, "np_concat": 2128, "torch_concat": 2128, "get_devic": 2128, "reduce_prod": 2128, "reduce_sum": 2128, "gradient_imag": 2128, "indices_wher": 2128, "bilinear_resampl": 2128, "stack_imag": 2128, "neural_net": 2128, "floormod": 2128, "articl": 2128, "lenton2021ivi": 2128, "lenton": 2128, "daniel": 2128, "pardo": 2128, "fabio": 2128, "falck": 2128, "fabian": 2128, "jame": 2128, "stephen": 2128, "clark": 2128, "ronald": 2128, "journal": 2128, "arxiv": 2128, "preprint": 2128, "2102": 2128, "02886": 2128, "add_array_spec": 2131, "fn_array_spec": 2131, "nested_arrai": [2134, 2135], "nestedarrai": 2134, "classmethod": [2134, 2135], "from_row_length": [2134, 2135], "row_length": [2134, 2135], "from_row_split": [2134, 2135], "row_split": [2134, 2135], "unbind": [2134, 2135], "conceptu": [2136, 2141], "broken": [2136, 2140], "tracer": 2136, "infrastructur": [2136, 2142, 2143], "vendor": [2136, 2142], "complimentari": [2136, 2146], "acycl": [2136, 2141], "insert_numb": 2137, "insert_t": 2137, "scaffold": [2138, 2146], "heart": 2138, "toolchain": [2138, 2143], "intermedi": [2138, 2139, 2140, 2141, 2146], "ir": [2138, 2141, 2146], "assembli": [2138, 2145, 2146], "idl": 2138, "middl": 2138, "emit": 2138, "gnu": [2138, 2143], "gcc": [2138, 2145], "broader": 2138, "heterogen": 2138, "aid": 2138, "coprocessor": 2138, "programm": [2138, 2145], "gate": 2138, "onednn": 2138, "awai": [2138, 2140], "sit": [2138, 2141, 2146], "tandem": 2138, "possess": 2138, "khrono": [2139, 2145], "appl": 2139, "coremltool": 2139, "albeit": 2139, "promin": 2140, "abbrevi": 2140, "laboratori": 2140, "proprietari": [2140, 2144, 2145], "mathwork": 2140, "commerci": 2140, "1984": 2140, "plot": 2140, "toolbox": 2140, "mupad": 2140, "simulink": 2140, "graphic": [2140, 2144, 2145], "simul": 2140, "million": [2140, 2143], "worldwid": 2140, "scienc": [2140, 2142], "econom": 2140, "2001": 2140, "scientif": 2140, "od": 2140, "solver": 2140, "cython": 2140, "friendli": 2140, "2002": 2140, "lua": 2140, "luajit": 2140, "idiap": 2140, "epfl": 2140, "2005": 2140, "numarrai": 2140, "cpython": 2140, "partli": 2140, "2007": 2140, "classif": 2140, "regress": [2140, 2147], "forest": 2140, "boost": 2140, "dbscan": 2140, "inbuilt": 2140, "esqu": 2140, "aesara": 2140, "2008": 2140, "datafram": 2140, "critic": [2140, 2146], "2012": 2140, "Its": 2140, "polymorph": 2140, "parallel": [2140, 2144, 2145], "mpi": 2140, "openmp": 2140, "glue": 2140, "jaot": 2140, "nasa": 2140, "cern": 2140, "climat": 2140, "allianc": 2140, "influenti": 2140, "2014": 2140, "analyt": [2140, 2142, 2146], "scala": 2140, "ship": 2140, "forgiv": 2140, "decemb": 2140, "announc": 2140, "transit": 2140, "mainten": 2140, "v7": 2140, "meaning": 2140, "2016": 2140, "imper": 2140, "amazon": 2140, "traction": 2140, "cognit": [2140, 2147], "toolkit": [2140, 2141, 2147], "grade": 2140, "realiz": 2140, "dnn": 2140, "cnn": 2140, "rnn": 2140, "stochast": [2140, 2185, 2190], "sgd": [2140, 2185], "backpropag": 2140, "succumb": 2140, "came": 2140, "monitor": 2140, "practition": [2140, 2144, 2145, 2146], "hobbyist": 2140, "tremend": 2140, "ecosystem": 2140, "gear": 2140, "batteri": 2140, "zygot": 2140, "jl": 2140, "workload": 2140, "daggerflux": 2140, "frontier": 2140, "hessian": 2140, "2018": 2140, "lightweight": [2140, 2147], "shortcom": 2140, "eas": 2140, "barrier": 2140, "inexperienc": 2140, "underdevelop": 2140, "fanat": 2140, "ounc": 2140, "infanc": 2140, "emerg": 2140, "nich": 2140, "introduct": 2140, "lite": 2140, "enterpris": 2140, "reinvent": [2140, 2142], "inertia": 2140, "haven": 2140, "creator": [2140, 2142], "paszk": 2140, "hi": 2140, "safeti": [2140, 2237, 2241, 2245, 2246, 2255, 2256, 2266, 2267, 2268, 2269], "bulk": 2140, "haskel": 2140, "dataflow": 2141, "distil": 2141, "essenc": [2141, 2146], "enclos": 2141, "scope": [2141, 2145], "trace_modul": 2141, "scriptfunct": 2141, "scriptmodul": [2141, 2152, 2155], "fake": 2141, "proxi": 2141, "graphmodul": 2141, "travi": 2142, "oliph": 2142, "leader": 2142, "cornerston": 2142, "numba": 2142, "numfocu": 2142, "pydata": 2142, "confer": 2142, "consult": 2142, "servic": 2142, "expertis": 2142, "devop": 2142, "mlop": 2142, "dashboard": 2142, "startup": 2142, "mlir": [2142, 2143, 2146], "Their": 2142, "held": 2142, "privileg": 2142, "presum": 2142, "llvm": [2142, 2145], "founder": 2142, "tvm": [2142, 2146], "sustain": 2142, "empow": 2142, "har": 2142, "burden": 2142, "benchmark": 2142, "convention": 2143, "precompil": 2143, "executor": 2143, "exploit": 2143, "fsf": 2143, "gpl": 2143, "biggest": [2143, 2146], "nvidia": [2144, 2145], "conduct": 2144, "throughput": 2144, "autotun": 2144, "consumpt": 2144, "gpgpu": 2144, "talk": 2145, "classic": 2145, "sycl": 2145, "dpc": 2145, "processor": 2145, "x86": 2145, "oneapi": 2145, "ia": 2145, "aka": 2145, "xeon": 2145, "gen9": 2145, "xe": 2145, "card": 2145, "arria": 2145, "gx": 2145, "fpga": 2145, "tune": [2145, 2146], "lofti": 2146, "ambit": 2146, "realm": 2146, "bedrock": 2146, "flux": 2146, "bite": 2146, "chew": 2146, "eagerpi": 2146, "tensorli": 2146, "thinc": 2146, "neuropod": 2146, "exhibit": 2146, "emploi": 2146, "fx": 2146, "retrain": 2146, "wider": 2146, "closer": 2146, "greatli": 2146, "challeng": 2146, "modular": 2146, "anywher": 2146, "theano": 2147, "plaidml": 2147, "partial_svd": 2147, "tucker_mode_dot": 2147, "excel": 2147, "subsystem": 2147, "geglu": 2149, "moduleconvert": [2152, 2181, 2182], "from_haiku_modul": [2152, 2153], "native_modul": [2152, 2153, 2156], "constructor_arg": [2152, 2153], "constructor_kwarg": [2152, 2153], "instance_arg": [2152, 2153], "instance_kwarg": [2152, 2153], "from_keras_modul": [2152, 2153], "from_torch_modul": [2152, 2153], "ivy_modul": [2152, 2153, 2154, 2155], "to_keras_modul": [2152, 2153], "to_torch_modul": [2152, 2153], "mytfmodul": 2152, "reappli": [2152, 2154], "__call__": [2152, 2154, 2169, 2180, 2181, 2182, 2205, 2226], "reli": [2152, 2154], "www": [2152, 2154], "masking_and_pad": [2152, 2154], "mytorchmodul": 2152, "recip": [2152, 2155], "silent": [2152, 2155], "native_module_class": [2152, 2156], "modulehelp": [2157, 2181, 2182], "check_submod_ret": [2157, 2158], "expected_submod_ret": [2157, 2158, 2181, 2182], "get_mod_kei": [2157, 2158], "top_mod": [2157, 2158], "mod_depth": [2157, 2158], "mod_height": [2157, 2158], "mod_with_top_mod_key_chain": [2157, 2158], "flatten_key_chain": [2157, 2158], "iimedi": [2157, 2158], "show_mod_in_top_mod": [2157, 2158], "upper_depth": [2157, 2158], "lower_depth": [2157, 2158], "show_structur": [2157, 2158], "this_repr": [2157, 2158], "show_v_in_top_v": [2157, 2158], "perspect": [2157, 2158], "top_v": [2157, 2158], "sub_mod": [2157, 2158], "show_v": [2157, 2158], "comopos": [2157, 2158], "enumer": [2157, 2158], "track_submod_call_ord": [2157, 2158, 2181, 2182], "track_submod_ret": [2157, 2158, 2181, 2182], "v_with_top_v_key_chain": [2157, 2158], "rectangular": [2159, 2160, 2163, 2164, 2167], "firstlayersiren": 2159, "siren": [2159, 2161], "distribt": [2159, 2161, 2162, 2166], "glorot": [2159, 2162], "xavier": [2159, 2162], "neuron": [2159, 2163, 2164, 2167], "w_1x_1": [2159, 2163], "w_2x_2": [2159, 2163], "w_nx_n": [2159, 2163], "w_i": [2159, 2163], "vanish": [2159, 2163], "pick": [2159, 2163], "kaimingnorm": 2159, "kaim": [2159, 2164], "he": [2159, 2164], "distibut": [2159, 2164], "center": [2159, 2164], "negative_slop": [2159, 2164], "fan": [2159, 2164, 2167], "propog": [2159, 2164, 2167], "proport": [2159, 2164], "Ones": 2159, "w0": [2159, 2166], "wlim": [2159, 2167], "predefin": [2159, 2167], "initialz": [2159, 2167], "fan_avg": [2159, 2167], "filter_s": [2169, 2170, 2171], "conv1dtranspos": 2169, "filter_shap": [2169, 2172, 2173, 2174, 2175, 2176], "conv2dtranspos": 2169, "conv3dtranspos": 2169, "depthwiseconv2d": 2169, "num_channel": [2169, 2176], "bernoul": [2169, 2177], "num_lay": [2169, 2178], "return_sequ": [2169, 2178], "return_st": [2169, 2178], "get_initial_st": [2169, 2178], "dens": [2169, 2179], "multiheadattent": 2169, "dropout_r": [2169, 2180], "context_dim": [2169, 2180], "with_to_q_fn": [2169, 2180], "with_to_kv_fn": [2169, 2180], "with_to_out_fn": [2169, 2180], "build_mod": [2169, 2180, 2181, 2182], "on_init": [2169, 2180, 2181, 2182], "store_var": [2181, 2182], "arg_stateful_idx": [2181, 2182], "kwarg_stateful_idx": [2181, 2182], "fallback_to_non_compil": [2181, 2182, 2185, 2189], "with_partial_v": [2181, 2182], "submod_depth": [2181, 2182], "submods_to_track": [2181, 2182], "varibl": [2181, 2182], "from_cal": [2181, 2182], "built_": [2181, 2182], "save_weight": [2181, 2182], "weights_path": [2181, 2182], "layernorm": 2183, "normalized_shap": [2183, 2184], "elementwise_affin": [2183, 2184], "trail": [2183, 2184], "init_on_first_step": [2185, 2189], "ignore_miss": [2185, 2189], "sub_modul": [2191, 2192], "nativevari": [2191, 2192], "ret_from_np": [2194, 2195], "assert_same_type_and_shap": 2194, "this_key_chain": [2194, 2196], "check_unsupported_devic": 2194, "input_devic": [2194, 2197], "all_as_kwargs_np": [2194, 2197, 2198, 2199, 2205, 2219, 2223, 2225], "check_unsupported_device_and_dtyp": 2194, "check_unsupported_dtyp": 2194, "test_unsupported_funct": 2194, "value_test": 2194, "ret_np_flat": [2194, 2201], "ret_np_from_gt_flat": [2194, 2201], "ret_from_np_flat": [2194, 2201], "available_framework": [2202, 2204], "ground_truth": 2202, "function_test": [2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227], "args_to_contain": 2205, "as_cont": 2205, "as_list": 2205, "convtru": 2205, "nativeclass": [2205, 2209], "create_args_kwarg": 2205, "args_np": [2205, 2210, 2219], "arg_np_val": [2205, 2210], "args_idx": [2205, 2210], "kwargs_np": [2205, 2210, 2219], "kwarg_np_val": [2205, 2210], "kwargs_idx": [2205, 2210], "container_flag": [2205, 2210, 2219, 2225, 2272, 2276, 2280, 2281, 2282, 2286], "empty_func": 2205, "flatten_and_to_np": 2205, "flatten_fw_and_to_np": 2205, "framework_compar": 2205, "get_frontend_ret": 2205, "get_ret_and_flattened_np_arrai": 2205, "gradient_incompatible_funct": 2205, "rtol_": [2205, 2219, 2224, 2225, 2226], "gradient_unsupported_dtyp": 2205, "kwargs_to_args_n_kwarg": 2205, "make_json_pick": 2205, "init_as_variable_flag": [2205, 2224, 2226, 2282, 2283, 2285], "init_num_positional_arg": [2205, 2224, 2226, 2282, 2283, 2285], "init_native_array_flag": [2205, 2224, 2226], "with_v": [2205, 2224, 2226], "ret_gt": [2205, 2224, 2225, 2226], "return_flat_np_arrai": [2205, 2225, 2226], "functiontestflag": [2205, 2225, 2272], "test_method": 2205, "class_nam": [2205, 2226], "init_with_v": [2205, 2226], "method_with_v": [2205, 2226], "device_": [2205, 2226], "method_as_variable_flag": [2205, 2226, 2282, 2283, 2285], "method_num_positional_arg": [2205, 2226, 2282, 2283, 2285], "method_native_array_flag": [2205, 2226], "method_container_flag": [2205, 2226, 2282, 2285], "tthe": [2205, 2226], "var_fn": 2205, "holder": 2228, "interruptedtest": 2228, "test_interrup": [2228, 2229], "baseexcept": [2228, 2229], "testdata": 2228, "supported_device_dtyp": [2228, 2230], "remove_all_current_framework": 2228, "setup_api_test": 2228, "test_data": [2228, 2232, 2233], "setup_frontend_test": 2228, "teardown_api_test": 2228, "teardown_frontend_test": 2228, "hypothesis_help": [2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269], "array_help": [2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250], "array_and_broadcastable_shap": 2237, "array_indices_axi": 2237, "indices_dtyp": [2237, 2240], "disable_random_axi": [2237, 2240], "axis_zero": [2237, 2240], "first_dimension_onli": [2237, 2240], "indices_same_dim": [2237, 2240], "abs_smallest_v": [2237, 2241, 2245, 2246, 2255, 2256, 2266, 2267], "exclude_max": [2237, 2241, 2245, 2246, 2266, 2267], "small_abs_safety_factor": [2237, 2241, 2245, 2246, 2255, 2256, 2266, 2267, 2269], "subnorm": [2237, 2241, 2266, 2267], "0002": [2237, 2241, 2245, 2246, 2266, 2267, 2269], "arrays_and_ax": 2237, "returndtyp": [2237, 2242], "force_int_axi": [2237, 2242, 2246], "arrays_for_pool": 2237, "min_dim": [2237, 2243, 2249], "max_dim": [2237, 2243, 2249], "min_sid": [2237, 2243, 2249], "max_sid": [2237, 2243, 2249], "allow_explicit_pad": [2237, 2243], "return_dil": [2237, 2243], "ret_shap": [2237, 2245, 2246], "array_api_dtyp": [2237, 2245, 2251, 2252], "min_axi": [2237, 2246], "max_axi": [2237, 2246], "valid_axi": [2237, 2246], "allow_neg_ax": [2237, 2246], "min_axes_s": [2237, 2246], "max_axes_s": [2237, 2246], "force_tuple_axi": [2237, 2246], "list_of_length": 2237, "mutually_broadcastable_shap": 2237, "num_shap": [2237, 2249], "base_shap": [2237, 2249], "dtype_help": [2251, 2252, 2253, 2254], "get_castable_dtyp": 2251, "castabl": [2251, 2253], "prune_funct": [2251, 2254], "signed_integ": [2251, 2254], "real_and_complex": [2251, 2254], "float_and_complex": [2251, 2254], "incas": [2251, 2254], "general_help": [2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265], "apply_safety_factor": 2255, "embedding_help": 2255, "allow_neg": [2255, 2258], "force_tupl": [2255, 2258], "force_int": [2255, 2258], "matrix_is_st": 2255, "cond_limit": [2255, 2262], "computation": [2255, 2262], "condition_index": [2255, 2262], "ill": [2255, 2262], "prone": [2255, 2262], "thumb": [2255, 2262], "gradual": [2255, 2262], "decreas": [2255, 2262], "multicollinear": [2255, 2262], "tell": [2255, 2262], "x_and_filt": 2255, "number_help": [2266, 2267, 2268, 2269], "safety_factor": [2266, 2268], "frontendmethoddata": 2270, "ivy_init_modul": [2270, 2271], "framework_init_modul": [2270, 2271], "init_nam": [2270, 2271], "struct": 2271, "test_parameter_flag": [2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281], "frontendfunctiontestflag": 2272, "frontendmethodtestflag": 2272, "methodtestflag": 2272, "build_flag": 2272, "frontend_function_flag": 2272, "frontend_method_flag": 2272, "function_flag": 2272, "testing_help": [2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289], "init_native_arrai": [2282, 2283, 2285], "method_native_arrai": [2282, 2283, 2285], "_given_kwarg": [2282, 2283, 2284, 2285, 2286], "test_inplac": [2282, 2284], "init_container_flag": [2282, 2285], "test_instance_method": [2282, 2286], "num_positional_args_method": 2282}, "objects": {"ivy": [[0, 0, 0, "-", "_version"], [1, 0, 0, "-", "assertions"], [23, 0, 0, "-", "backend_handler"], [188, 0, 0, "-", "func_wrapper"], [2131, 0, 0, "-", "inspection"], [2148, 0, 0, "-", "stateful"], [2290, 0, 0, "-", "verbosity"]], "ivy.array": [[52, 0, 0, "-", "activations"], [54, 0, 0, "-", "array"], [56, 0, 0, "-", "conversions"], [61, 0, 0, "-", "creation"], [63, 0, 0, "-", "data_type"], [65, 0, 0, "-", "device"], [67, 0, 0, "-", "elementwise"], [70, 0, 0, "-", "general"], [72, 0, 0, "-", "gradients"], [74, 0, 0, "-", "image"], [76, 0, 0, "-", "layers"], [78, 0, 0, "-", "linear_algebra"], [80, 0, 0, "-", "losses"], [82, 0, 0, "-", "manipulation"], [84, 0, 0, "-", "norms"], [86, 0, 0, "-", "random"], [88, 0, 0, "-", "searching"], [90, 0, 0, "-", "set"], [92, 0, 0, "-", "sorting"], [94, 0, 0, "-", "statistical"], [96, 0, 0, "-", "utility"], [98, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[53, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[53, 2, 1, "", "gelu"], [53, 2, 1, "", "leaky_relu"], [53, 2, 1, "", "log_softmax"], [53, 2, 1, "", "mish"], [53, 2, 1, "", "relu"], [53, 2, 1, "", "sigmoid"], [53, 2, 1, "", "softmax"], [53, 2, 1, "", "softplus"]], "ivy.array.array": [[55, 1, 1, "", "Array"]], "ivy.array.array.Array": [[55, 3, 1, "", "T"], [55, 2, 1, "", "__abs__"], [55, 2, 1, "", "__add__"], [55, 2, 1, "", "__eq__"], [55, 2, 1, "", "__ge__"], [55, 2, 1, "", "__gt__"], [55, 2, 1, "", "__init__"], [55, 2, 1, "", "__le__"], [55, 2, 1, "", "__lt__"], [55, 2, 1, "", "__ne__"], [55, 2, 1, "", "__pow__"], [55, 2, 1, "", "__radd__"], [55, 2, 1, "", "__rrshift__"], [55, 2, 1, "", "__rshift__"], [55, 2, 1, "", "__rsub__"], [55, 2, 1, "", "__sub__"], [55, 2, 1, "", "__truediv__"], [55, 2, 1, "", "__xor__"], [55, 2, 1, "", "arange"], [55, 2, 1, "", "arg_info"], [55, 2, 1, "", "arg_names"], [55, 2, 1, "", "args_to_ivy"], [55, 2, 1, "", "args_to_native"], [55, 2, 1, "", "array"], [55, 2, 1, "", "as_ivy_dev"], [55, 2, 1, "", "as_ivy_dtype"], [55, 2, 1, "", "as_native_dev"], [55, 2, 1, "", "as_native_dtype"], [55, 2, 1, "", "asarray_handle_nestable"], [55, 2, 1, "", "asarray_infer_device"], [55, 2, 1, "", "asarray_to_native_arrays_and_back"], [55, 2, 1, "", "cache_fn"], [55, 2, 1, "", "check_float"], [55, 2, 1, "", "clear_mem_on_dev"], [55, 2, 1, "", "closest_valid_dtype"], [55, 2, 1, "", "container_types"], [55, 2, 1, "", "conv"], [55, 2, 1, "", "conv_general_dilated"], [55, 2, 1, "", "conv_general_transpose"], [55, 2, 1, "", "current_backend"], [55, 2, 1, "", "current_backend_str"], [55, 3, 1, "", "data"], [55, 2, 1, "", "default_complex_dtype"], [55, 2, 1, "", "default_device"], [55, 2, 1, "", "default_dtype"], [55, 2, 1, "", "default_float_dtype"], [55, 2, 1, "", "default_int_dtype"], [55, 2, 1, "", "default_uint_dtype"], [55, 2, 1, "", "deserialize"], [55, 2, 1, "", "dev_util"], [55, 3, 1, "", "device"], [55, 3, 1, "", "dtype"], [55, 2, 1, "", "dtype_bits"], [55, 3, 1, "", "dynamic_backend"], [55, 2, 1, "", "empty"], [55, 2, 1, "", "execute_with_gradients"], [55, 2, 1, "", "eye"], [55, 2, 1, "", "full"], [55, 2, 1, "", "function_supported_devices"], [55, 2, 1, "", "function_supported_devices_and_dtypes"], [55, 2, 1, "", "function_supported_dtypes"], [55, 2, 1, "", "function_unsupported_devices"], [55, 2, 1, "", "function_unsupported_devices_and_dtypes"], [55, 2, 1, "", "function_unsupported_dtypes"], [55, 2, 1, "", "get"], [55, 2, 1, "", "get_all_arrays_in_memory"], [55, 2, 1, "", "get_all_ivy_arrays_on_dev"], [55, 2, 1, "", "get_array_mode"], [55, 2, 1, "", "get_exception_trace_mode"], [55, 2, 1, "", "get_item"], [55, 2, 1, "", "get_min_base"], [55, 2, 1, "", "get_min_denominator"], [55, 2, 1, "", "get_nestable_mode"], [55, 2, 1, "", "get_queue_timeout"], [55, 2, 1, "", "get_referrers_recursive"], [55, 2, 1, "", "get_show_func_wrapper_trace_mode"], [55, 2, 1, "", "get_tmp_dir"], [55, 2, 1, "", "gpu_is_available"], [55, 2, 1, "", "grad"], [55, 2, 1, "", "handle_array_function"], [55, 2, 1, "", "handle_array_like_without_promotion"], [55, 2, 1, "", "handle_exceptions"], [55, 2, 1, "", "handle_nestable"], [55, 2, 1, "", "handle_out_argument"], [55, 2, 1, "", "infer_default_dtype"], [55, 2, 1, "", "infer_device"], [55, 2, 1, "", "infer_dtype"], [55, 2, 1, "", "inplace_arrays_supported"], [55, 2, 1, "", "inplace_variables_supported"], [55, 2, 1, "", "inputs_to_ivy_arrays"], [55, 2, 1, "", "inputs_to_native_arrays"], [55, 2, 1, "", "integer_arrays_to_float"], [55, 2, 1, "", "invalid_dtype"], [55, 2, 1, "", "is_complex_dtype"], [55, 2, 1, "", "isscalar"], [55, 2, 1, "", "jac"], [55, 3, 1, "", "mT"], [55, 2, 1, "", "match_kwargs"], [55, 2, 1, "", "multiprocessing"], [55, 3, 1, "", "ndim"], [55, 2, 1, "", "normalize_axis_tuple"], [55, 2, 1, "", "num_arrays_in_memory"], [55, 2, 1, "", "num_cpu_cores"], [55, 2, 1, "", "num_gpus"], [55, 2, 1, "", "num_ivy_arrays_on_dev"], [55, 2, 1, "", "ones"], [55, 2, 1, "", "outputs_to_ivy_arrays"], [55, 2, 1, "", "percent_used_mem_on_dev"], [55, 2, 1, "", "print_all_arrays_in_memory"], [55, 2, 1, "", "print_all_ivy_arrays_on_dev"], [55, 2, 1, "", "promote_types"], [55, 2, 1, "", "promote_types_of_inputs"], [55, 2, 1, "", "seed"], [55, 2, 1, "", "set_array_mode"], [55, 2, 1, "", "set_default_complex_dtype"], [55, 2, 1, "", "set_default_device"], [55, 2, 1, "", "set_default_dtype"], [55, 2, 1, "", "set_default_float_dtype"], [55, 2, 1, "", "set_default_int_dtype"], [55, 2, 1, "", "set_default_uint_dtype"], [55, 2, 1, "", "set_exception_trace_mode"], [55, 2, 1, "", "set_min_base"], [55, 2, 1, "", "set_min_denominator"], [55, 2, 1, "", "set_nestable_mode"], [55, 2, 1, "", "set_queue_timeout"], [55, 2, 1, "", "set_shape_array_mode"], [55, 2, 1, "", "set_show_func_wrapper_trace_mode"], [55, 2, 1, "", "set_split_factor"], [55, 2, 1, "", "set_tmp_dir"], [55, 2, 1, "", "set_with_grads"], [55, 3, 1, "", "shape"], [55, 2, 1, "", "shape_array_mode"], [55, 3, 1, "", "size"], [55, 2, 1, "", "split_factor"], [55, 2, 1, "", "split_func_call"], [55, 2, 1, "", "to_ivy"], [55, 2, 1, "", "to_ivy_shape"], [55, 2, 1, "", "to_native"], [55, 2, 1, "", "to_native_arrays_and_back"], [55, 2, 1, "", "to_native_shape"], [55, 2, 1, "", "total_mem_on_dev"], [55, 2, 1, "", "tpu_is_available"], [55, 2, 1, "", "try_else_none"], [55, 2, 1, "", "type_promote_arrays"], [55, 2, 1, "", "unset_array_mode"], [55, 2, 1, "", "unset_default_complex_dtype"], [55, 2, 1, "", "unset_default_device"], [55, 2, 1, "", "unset_default_dtype"], [55, 2, 1, "", "unset_default_float_dtype"], [55, 2, 1, "", "unset_default_int_dtype"], [55, 2, 1, "", "unset_default_uint_dtype"], [55, 2, 1, "", "unset_exception_trace_mode"], [55, 2, 1, "", "unset_nestable_mode"], [55, 2, 1, "", "unset_queue_timeout"], [55, 2, 1, "", "unset_shape_array_mode"], [55, 2, 1, "", "unset_show_func_wrapper_trace_mode"], [55, 2, 1, "", "unset_with_grads"], [55, 2, 1, "", "used_mem_on_dev"], [55, 2, 1, "", "valid_dtype"], [55, 2, 1, "", "value_and_grad"], [55, 2, 1, "", "vmap"], [55, 2, 1, "", "with_grads"], [55, 2, 1, "", "wraps"], [55, 2, 1, "", "zeros"]], "ivy.array.array_methods": [[483, 4, 1, "", "abs"], [488, 4, 1, "", "acos"], [493, 4, 1, "", "acosh"], [1615, 4, 1, "", "adam_step"], [1619, 4, 1, "", "adam_update"], [498, 4, 1, "", "add"], [810, 4, 1, "", "adjoint"], [2118, 4, 1, "", "all"], [1419, 4, 1, "", "all_equal"], [815, 4, 1, "", "allclose"], [820, 4, 1, "", "angle"], [2123, 4, 1, "", "any"], [2009, 4, 1, "", "argmax"], [2014, 4, 1, "", "argmin"], [2056, 4, 1, "", "argsort"], [2019, 4, 1, "", "argwhere"], [1426, 4, 1, "", "array_equal"], [261, 4, 1, "", "asarray"], [503, 4, 1, "", "asin"], [508, 4, 1, "", "asinh"], [1431, 4, 1, "", "assert_supports_inplace"], [350, 4, 1, "", "astype"], [513, 4, 1, "", "atan"], [518, 4, 1, "", "atan2"], [523, 4, 1, "", "atanh"], [825, 4, 1, "", "atleast_1d"], [830, 4, 1, "", "atleast_2d"], [835, 4, 1, "", "atleast_3d"], [840, 4, 1, "", "avg_pool1d"], [845, 4, 1, "", "avg_pool2d"], [850, 4, 1, "", "avg_pool3d"], [855, 4, 1, "", "bernoulli"], [860, 4, 1, "", "beta"], [865, 4, 1, "", "binarizer"], [1856, 4, 1, "", "binary_cross_entropy"], [528, 4, 1, "", "bitwise_and"], [533, 4, 1, "", "bitwise_invert"], [538, 4, 1, "", "bitwise_left_shift"], [543, 4, 1, "", "bitwise_or"], [548, 4, 1, "", "bitwise_right_shift"], [553, 4, 1, "", "bitwise_xor"], [355, 4, 1, "", "broadcast_arrays"], [360, 4, 1, "", "broadcast_to"], [365, 4, 1, "", "can_cast"], [558, 4, 1, "", "ceil"], [1716, 4, 1, "", "cholesky"], [1872, 4, 1, "", "clip"], [1437, 4, 1, "", "clip_matrix_norm"], [1442, 4, 1, "", "clip_vector_norm"], [1877, 4, 1, "", "concat"], [1882, 4, 1, "", "constant_pad"], [1653, 4, 1, "", "conv1d"], [1658, 4, 1, "", "conv1d_transpose"], [1663, 4, 1, "", "conv2d"], [1668, 4, 1, "", "conv2d_transpose"], [1673, 4, 1, "", "conv3d"], [1678, 4, 1, "", "conv3d_transpose"], [268, 4, 1, "", "copy_array"], [882, 4, 1, "", "copysign"], [887, 4, 1, "", "corrcoef"], [563, 4, 1, "", "cos"], [568, 4, 1, "", "cosh"], [892, 4, 1, "", "count_nonzero"], [1721, 4, 1, "", "cross"], [1861, 4, 1, "", "cross_entropy"], [2072, 4, 1, "", "cumprod"], [2077, 4, 1, "", "cumsum"], [908, 4, 1, "", "dct"], [1449, 4, 1, "", "default"], [573, 4, 1, "", "deg2rad"], [1685, 4, 1, "", "depthwise_conv2d"], [1726, 4, 1, "", "det"], [454, 4, 1, "", "dev"], [1731, 4, 1, "", "diag"], [918, 4, 1, "", "diagflat"], [1736, 4, 1, "", "diagonal"], [923, 4, 1, "", "diff"], [928, 4, 1, "", "dirichlet"], [578, 4, 1, "", "divide"], [1690, 4, 1, "", "dropout"], [934, 4, 1, "", "dsplit"], [939, 4, 1, "", "dstack"], [944, 4, 1, "", "eig"], [1742, 4, 1, "", "eigh"], [949, 4, 1, "", "eigvals"], [1747, 4, 1, "", "eigvalsh"], [1452, 4, 1, "", "einops_rearrange"], [1457, 4, 1, "", "einops_reduce"], [1462, 4, 1, "", "einops_repeat"], [2082, 4, 1, "", "einsum"], [983, 4, 1, "", "embedding"], [272, 4, 1, "", "empty_like"], [583, 4, 1, "", "equal"], [588, 4, 1, "", "erf"], [1467, 4, 1, "", "exists"], [593, 4, 1, "", "exp"], [988, 4, 1, "", "exp2"], [993, 4, 1, "", "expand"], [1887, 4, 1, "", "expand_dims"], [598, 4, 1, "", "expm1"], [998, 4, 1, "", "eye_like"], [1003, 4, 1, "", "fft"], [386, 4, 1, "", "finfo"], [1008, 4, 1, "", "fix"], [1013, 4, 1, "", "flatten"], [1892, 4, 1, "", "flip"], [1018, 4, 1, "", "fliplr"], [1023, 4, 1, "", "flipud"], [1028, 4, 1, "", "float_power"], [603, 4, 1, "", "floor"], [608, 4, 1, "", "floor_divide"], [1033, 4, 1, "", "fmax"], [1038, 4, 1, "", "fmin"], [1043, 4, 1, "", "fmod"], [1470, 4, 1, "", "fourier_encode"], [280, 4, 1, "", "from_dlpack"], [286, 4, 1, "", "full_like"], [1048, 4, 1, "", "gamma"], [1477, 4, 1, "", "gather"], [1482, 4, 1, "", "gather_nd"], [1051, 4, 1, "", "gcd"], [208, 4, 1, "", "gelu"], [1494, 4, 1, "", "get_num_dims"], [1058, 4, 1, "", "gradient"], [1625, 4, 1, "", "gradient_descent_update"], [613, 4, 1, "", "greater"], [618, 4, 1, "", "greater_equal"], [1503, 4, 1, "", "has_nans"], [1073, 4, 1, "", "heaviside"], [1078, 4, 1, "", "hsplit"], [1083, 4, 1, "", "hstack"], [1088, 4, 1, "", "hypot"], [1093, 4, 1, "", "i0"], [1098, 4, 1, "", "ifft"], [397, 4, 1, "", "iinfo"], [1103, 4, 1, "", "imag"], [1752, 4, 1, "", "inner"], [1509, 4, 1, "", "inplace_decrement"], [1514, 4, 1, "", "inplace_increment"], [1519, 4, 1, "", "inplace_update"], [1108, 4, 1, "", "instance_norm"], [1114, 4, 1, "", "interpolate"], [1757, 4, 1, "", "inv"], [1525, 4, 1, "", "is_array"], [404, 4, 1, "", "is_bool_dtype"], [413, 4, 1, "", "is_float_dtype"], [418, 4, 1, "", "is_int_dtype"], [1530, 4, 1, "", "is_ivy_array"], [1535, 4, 1, "", "is_ivy_container"], [1538, 4, 1, "", "is_native_array"], [423, 4, 1, "", "is_uint_dtype"], [1122, 4, 1, "", "isclose"], [623, 4, 1, "", "isfinite"], [1127, 4, 1, "", "isin"], [628, 4, 1, "", "isinf"], [633, 4, 1, "", "isnan"], [638, 4, 1, "", "isreal"], [1140, 4, 1, "", "kron"], [1145, 4, 1, "", "l2_normalize"], [1630, 4, 1, "", "lamb_update"], [1634, 4, 1, "", "lars_update"], [1977, 4, 1, "", "layer_norm"], [1167, 4, 1, "", "lcm"], [214, 4, 1, "", "leaky_relu"], [643, 4, 1, "", "less"], [648, 4, 1, "", "less_equal"], [1172, 4, 1, "", "lexsort"], [1695, 4, 1, "", "linear"], [291, 4, 1, "", "linspace"], [653, 4, 1, "", "log"], [658, 4, 1, "", "log10"], [663, 4, 1, "", "log1p"], [668, 4, 1, "", "log2"], [219, 4, 1, "", "log_softmax"], [673, 4, 1, "", "logaddexp"], [1184, 4, 1, "", "logaddexp2"], [678, 4, 1, "", "logical_and"], [683, 4, 1, "", "logical_not"], [688, 4, 1, "", "logical_or"], [693, 4, 1, "", "logical_xor"], [1189, 4, 1, "", "logit"], [296, 4, 1, "", "logspace"], [1196, 4, 1, "", "lp_normalize"], [1700, 4, 1, "", "lstm_update"], [1762, 4, 1, "", "matmul"], [1225, 4, 1, "", "matrix_exp"], [1767, 4, 1, "", "matrix_norm"], [1772, 4, 1, "", "matrix_power"], [1777, 4, 1, "", "matrix_rank"], [1782, 4, 1, "", "matrix_transpose"], [2086, 4, 1, "", "max"], [1230, 4, 1, "", "max_pool1d"], [1235, 4, 1, "", "max_pool2d"], [1240, 4, 1, "", "max_pool3d"], [698, 4, 1, "", "maximum"], [2090, 4, 1, "", "mean"], [1245, 4, 1, "", "median"], [301, 4, 1, "", "meshgrid"], [2094, 4, 1, "", "min"], [703, 4, 1, "", "minimum"], [224, 4, 1, "", "mish"], [1251, 4, 1, "", "moveaxis"], [1256, 4, 1, "", "msort"], [1705, 4, 1, "", "multi_head_attention"], [1982, 4, 1, "", "multinomial"], [708, 4, 1, "", "multiply"], [1261, 4, 1, "", "nan_to_num"], [1266, 4, 1, "", "nanmean"], [1271, 4, 1, "", "nanmedian"], [1276, 4, 1, "", "nansum"], [306, 4, 1, "", "native_array"], [713, 4, 1, "", "negative"], [1286, 4, 1, "", "nextafter"], [2024, 4, 1, "", "nonzero"], [718, 4, 1, "", "not_equal"], [311, 4, 1, "", "one_hot"], [319, 4, 1, "", "ones_like"], [1638, 4, 1, "", "optimizer_update"], [1787, 4, 1, "", "outer"], [1295, 4, 1, "", "pad"], [1897, 4, 1, "", "permute_dims"], [1792, 4, 1, "", "pinv"], [1301, 4, 1, "", "poisson"], [723, 4, 1, "", "positive"], [728, 4, 1, "", "pow"], [1306, 4, 1, "", "prelu"], [2098, 4, 1, "", "prod"], [1797, 4, 1, "", "qr"], [1311, 4, 1, "", "quantile"], [733, 4, 1, "", "rad2deg"], [1987, 4, 1, "", "randint"], [1992, 4, 1, "", "random_normal"], [1997, 4, 1, "", "random_uniform"], [1322, 4, 1, "", "real"], [738, 4, 1, "", "reciprocal"], [229, 4, 1, "", "relu"], [743, 4, 1, "", "remainder"], [1902, 4, 1, "", "repeat"], [1907, 4, 1, "", "reshape"], [430, 4, 1, "", "result_type"], [1912, 4, 1, "", "roll"], [1327, 4, 1, "", "rot90"], [748, 4, 1, "", "round"], [1710, 4, 1, "", "scaled_dot_product_attention"], [1548, 4, 1, "", "scatter_flat"], [1553, 4, 1, "", "scatter_nd"], [2061, 4, 1, "", "searchsorted"], [2003, 4, 1, "", "shuffle"], [234, 4, 1, "", "sigmoid"], [753, 4, 1, "", "sign"], [1334, 4, 1, "", "signbit"], [758, 4, 1, "", "sin"], [1339, 4, 1, "", "sinc"], [763, 4, 1, "", "sinh"], [1802, 4, 1, "", "slogdet"], [239, 4, 1, "", "softmax"], [244, 4, 1, "", "softplus"], [1807, 4, 1, "", "solve"], [2066, 4, 1, "", "sort"], [1866, 4, 1, "", "sparse_cross_entropy"], [1917, 4, 1, "", "split"], [768, 4, 1, "", "sqrt"], [773, 4, 1, "", "square"], [1922, 4, 1, "", "squeeze"], [1569, 4, 1, "", "stable_divide"], [1574, 4, 1, "", "stable_pow"], [1927, 4, 1, "", "stack"], [2103, 4, 1, "", "std"], [1644, 4, 1, "", "stop_gradient"], [779, 4, 1, "", "subtract"], [2108, 4, 1, "", "sum"], [1580, 4, 1, "", "supports_inplace_updates"], [1813, 4, 1, "", "svd"], [1818, 4, 1, "", "svdvals"], [1933, 4, 1, "", "swapaxes"], [1362, 4, 1, "", "take_along_axis"], [784, 4, 1, "", "tan"], [789, 4, 1, "", "tanh"], [1826, 4, 1, "", "tensorsolve"], [1367, 4, 1, "", "thresholded_relu"], [1938, 4, 1, "", "tile"], [474, 4, 1, "", "to_device"], [1586, 4, 1, "", "to_list"], [1591, 4, 1, "", "to_numpy"], [1596, 4, 1, "", "to_scalar"], [1372, 4, 1, "", "top_k"], [1831, 4, 1, "", "trace"], [1376, 4, 1, "", "trapz"], [325, 4, 1, "", "tril"], [330, 4, 1, "", "triu"], [794, 4, 1, "", "trunc"], [799, 4, 1, "", "trunc_divide"], [2036, 4, 1, "", "unique_all"], [2041, 4, 1, "", "unique_counts"], [2046, 4, 1, "", "unique_inverse"], [2051, 4, 1, "", "unique_values"], [1388, 4, 1, "", "unravel_index"], [1943, 4, 1, "", "unstack"], [1608, 4, 1, "", "value_is_nan"], [1836, 4, 1, "", "vander"], [2113, 4, 1, "", "var"], [1841, 4, 1, "", "vecdot"], [1846, 4, 1, "", "vector_norm"], [1851, 4, 1, "", "vector_to_skew_symmetric_matrix"], [1398, 4, 1, "", "vsplit"], [1403, 4, 1, "", "vstack"], [2030, 4, 1, "", "where"], [1408, 4, 1, "", "xlogy"], [1948, 4, 1, "", "zero_pad"], [338, 4, 1, "", "zeros_like"], [1413, 4, 1, "", "zeta"]], "ivy.array.conversions": [[57, 4, 1, "", "args_to_ivy"], [58, 4, 1, "", "args_to_native"], [59, 4, 1, "", "to_ivy"], [60, 4, 1, "", "to_native"]], "ivy.array.creation": [[62, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[62, 2, 1, "", "asarray"], [62, 2, 1, "", "copy_array"], [62, 2, 1, "", "empty_like"], [62, 2, 1, "", "from_dlpack"], [62, 2, 1, "", "full_like"], [62, 2, 1, "", "linspace"], [62, 2, 1, "", "logspace"], [62, 2, 1, "", "meshgrid"], [62, 2, 1, "", "native_array"], [62, 2, 1, "", "one_hot"], [62, 2, 1, "", "ones_like"], [62, 2, 1, "", "tril"], [62, 2, 1, "", "triu"], [62, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[64, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[64, 2, 1, "", "astype"], [64, 2, 1, "", "broadcast_arrays"], [64, 2, 1, "", "broadcast_to"], [64, 2, 1, "", "can_cast"], [64, 2, 1, "", "dtype"], [64, 2, 1, "", "finfo"], [64, 2, 1, "", "iinfo"], [64, 2, 1, "", "is_bool_dtype"], [64, 2, 1, "", "is_float_dtype"], [64, 2, 1, "", "is_int_dtype"], [64, 2, 1, "", "is_uint_dtype"], [64, 2, 1, "", "result_type"]], "ivy.array.device": [[66, 1, 1, "", "ArrayWithDevice"]], "ivy.array.device.ArrayWithDevice": [[66, 2, 1, "", "dev"], [66, 2, 1, "", "to_device"]], "ivy.array.elementwise": [[68, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[68, 2, 1, "", "abs"], [68, 2, 1, "", "acos"], [68, 2, 1, "", "acosh"], [68, 2, 1, "", "add"], [68, 2, 1, "", "asin"], [68, 2, 1, "", "asinh"], [68, 2, 1, "", "atan"], [68, 2, 1, "", "atan2"], [68, 2, 1, "", "atanh"], [68, 2, 1, "", "bitwise_and"], [68, 2, 1, "", "bitwise_invert"], [68, 2, 1, "", "bitwise_left_shift"], [68, 2, 1, "", "bitwise_or"], [68, 2, 1, "", "bitwise_right_shift"], [68, 2, 1, "", "bitwise_xor"], [68, 2, 1, "", "ceil"], [68, 2, 1, "", "cos"], [68, 2, 1, "", "cosh"], [68, 2, 1, "", "deg2rad"], [68, 2, 1, "", "divide"], [68, 2, 1, "", "equal"], [68, 2, 1, "", "erf"], [68, 2, 1, "", "exp"], [68, 2, 1, "", "expm1"], [68, 2, 1, "", "floor"], [68, 2, 1, "", "floor_divide"], [68, 2, 1, "", "greater"], [68, 2, 1, "", "greater_equal"], [68, 2, 1, "", "isfinite"], [68, 2, 1, "", "isinf"], [68, 2, 1, "", "isnan"], [68, 2, 1, "", "isreal"], [68, 2, 1, "", "less"], [68, 2, 1, "", "less_equal"], [68, 2, 1, "", "log"], [68, 2, 1, "", "log10"], [68, 2, 1, "", "log1p"], [68, 2, 1, "", "log2"], [68, 2, 1, "", "logaddexp"], [68, 2, 1, "", "logical_and"], [68, 2, 1, "", "logical_not"], [68, 2, 1, "", "logical_or"], [68, 2, 1, "", "logical_xor"], [68, 2, 1, "", "maximum"], [68, 2, 1, "", "minimum"], [68, 2, 1, "", "multiply"], [68, 2, 1, "", "negative"], [68, 2, 1, "", "not_equal"], [68, 2, 1, "", "positive"], [68, 2, 1, "", "pow"], [68, 2, 1, "", "rad2deg"], [68, 2, 1, "", "reciprocal"], [68, 2, 1, "", "remainder"], [68, 2, 1, "", "round"], [68, 2, 1, "", "sign"], [68, 2, 1, "", "sin"], [68, 2, 1, "", "sinh"], [68, 2, 1, "", "sqrt"], [68, 2, 1, "", "square"], [68, 2, 1, "", "subtract"], [68, 2, 1, "", "tan"], [68, 2, 1, "", "tanh"], [68, 2, 1, "", "trunc"], [68, 2, 1, "", "trunc_divide"]], "ivy.array.experimental": [[69, 1, 1, "", "ArrayWithActivationsExperimental"], [69, 1, 1, "", "ArrayWithConversionsExperimental"], [69, 1, 1, "", "ArrayWithCreationExperimental"], [69, 1, 1, "", "ArrayWithData_typeExperimental"], [69, 1, 1, "", "ArrayWithDeviceExperimental"], [69, 1, 1, "", "ArrayWithElementWiseExperimental"], [69, 1, 1, "", "ArrayWithGeneralExperimental"], [69, 1, 1, "", "ArrayWithGradientsExperimental"], [69, 1, 1, "", "ArrayWithImageExperimental"], [69, 1, 1, "", "ArrayWithLayersExperimental"], [69, 1, 1, "", "ArrayWithLinearAlgebraExperimental"], [69, 1, 1, "", "ArrayWithLossesExperimental"], [69, 1, 1, "", "ArrayWithManipulationExperimental"], [69, 1, 1, "", "ArrayWithNormsExperimental"], [69, 1, 1, "", "ArrayWithRandomExperimental"], [69, 1, 1, "", "ArrayWithSearchingExperimental"], [69, 1, 1, "", "ArrayWithSetExperimental"], [69, 1, 1, "", "ArrayWithSortingExperimental"], [69, 1, 1, "", "ArrayWithStatisticalExperimental"], [69, 1, 1, "", "ArrayWithUtilityExperimental"]], "ivy.array.experimental.ArrayWithActivationsExperimental": [[69, 2, 1, "", "logit"], [69, 2, 1, "", "prelu"], [69, 2, 1, "", "thresholded_relu"]], "ivy.array.experimental.ArrayWithCreationExperimental": [[69, 2, 1, "", "eye_like"]], "ivy.array.experimental.ArrayWithElementWiseExperimental": [[69, 2, 1, "", "allclose"], [69, 2, 1, "", "angle"], [69, 2, 1, "", "binarizer"], [69, 2, 1, "", "copysign"], [69, 2, 1, "", "count_nonzero"], [69, 2, 1, "", "diff"], [69, 2, 1, "", "exp2"], [69, 2, 1, "", "fix"], [69, 2, 1, "", "float_power"], [69, 2, 1, "", "fmax"], [69, 2, 1, "", "fmin"], [69, 2, 1, "", "fmod"], [69, 2, 1, "", "gcd"], [69, 2, 1, "", "gradient"], [69, 2, 1, "", "hypot"], [69, 2, 1, "", "imag"], [69, 2, 1, "", "isclose"], [69, 2, 1, "", "lcm"], [69, 2, 1, "", "logaddexp2"], [69, 2, 1, "", "nan_to_num"], [69, 2, 1, "", "nansum"], [69, 2, 1, "", "nextafter"], [69, 2, 1, "", "real"], [69, 2, 1, "", "signbit"], [69, 2, 1, "", "sinc"], [69, 2, 1, "", "trapz"], [69, 2, 1, "", "xlogy"], [69, 2, 1, "", "zeta"]], "ivy.array.experimental.ArrayWithGeneralExperimental": [[69, 2, 1, "", "isin"]], "ivy.array.experimental.ArrayWithLayersExperimental": [[69, 2, 1, "", "avg_pool1d"], [69, 2, 1, "", "avg_pool2d"], [69, 2, 1, "", "avg_pool3d"], [69, 2, 1, "", "dct"], [69, 2, 1, "", "dft"], [69, 2, 1, "", "embedding"], [69, 2, 1, "", "fft"], [69, 2, 1, "", "ifft"], [69, 2, 1, "", "interpolate"], [69, 2, 1, "", "max_pool1d"], [69, 2, 1, "", "max_pool2d"], [69, 2, 1, "", "max_pool3d"]], "ivy.array.experimental.ArrayWithLinearAlgebraExperimental": [[69, 2, 1, "", "adjoint"], [69, 2, 1, "", "diagflat"], [69, 2, 1, "", "eig"], [69, 2, 1, "", "eigvals"], [69, 2, 1, "", "kron"], [69, 2, 1, "", "matrix_exp"]], "ivy.array.experimental.ArrayWithManipulationExperimental": [[69, 2, 1, "", "atleast_1d"], [69, 2, 1, "", "atleast_2d"], [69, 2, 1, "", "atleast_3d"], [69, 2, 1, "", "dsplit"], [69, 2, 1, "", "dstack"], [69, 2, 1, "", "expand"], [69, 2, 1, "", "flatten"], [69, 2, 1, "", "fliplr"], [69, 2, 1, "", "flipud"], [69, 2, 1, "", "heaviside"], [69, 2, 1, "", "hsplit"], [69, 2, 1, "", "hstack"], [69, 2, 1, "", "i0"], [69, 2, 1, "", "moveaxis"], [69, 2, 1, "", "pad"], [69, 2, 1, "", "rot90"], [69, 2, 1, "", "take_along_axis"], [69, 2, 1, "", "top_k"], [69, 2, 1, "", "vsplit"], [69, 2, 1, "", "vstack"]], "ivy.array.experimental.ArrayWithNormsExperimental": [[69, 2, 1, "", "instance_norm"], [69, 2, 1, "", "l2_normalize"], [69, 2, 1, "", "lp_normalize"]], "ivy.array.experimental.ArrayWithRandomExperimental": [[69, 2, 1, "", "bernoulli"], [69, 2, 1, "", "beta"], [69, 2, 1, "", "dirichlet"], [69, 2, 1, "", "gamma"], [69, 2, 1, "", "poisson"]], "ivy.array.experimental.ArrayWithSortingExperimental": [[69, 2, 1, "", "lexsort"], [69, 2, 1, "", "msort"]], "ivy.array.experimental.ArrayWithStatisticalExperimental": [[69, 2, 1, "", "corrcoef"], [69, 2, 1, "", "median"], [69, 2, 1, "", "nanmean"], [69, 2, 1, "", "nanmedian"], [69, 2, 1, "", "quantile"], [69, 2, 1, "", "unravel_index"]], "ivy.array.general": [[71, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[71, 2, 1, "", "all_equal"], [71, 2, 1, "", "array_equal"], [71, 2, 1, "", "assert_supports_inplace"], [71, 2, 1, "", "clip_matrix_norm"], [71, 2, 1, "", "clip_vector_norm"], [71, 2, 1, "", "default"], [71, 2, 1, "", "einops_rearrange"], [71, 2, 1, "", "einops_reduce"], [71, 2, 1, "", "einops_repeat"], [71, 2, 1, "", "exists"], [71, 2, 1, "", "fourier_encode"], [71, 2, 1, "", "gather"], [71, 2, 1, "", "gather_nd"], [71, 2, 1, "", "get_num_dims"], [71, 2, 1, "", "has_nans"], [71, 2, 1, "", "inplace_decrement"], [71, 2, 1, "", "inplace_increment"], [71, 2, 1, "", "inplace_update"], [71, 2, 1, "", "is_array"], [71, 2, 1, "", "is_ivy_array"], [71, 2, 1, "", "is_ivy_container"], [71, 2, 1, "", "is_native_array"], [71, 2, 1, "", "scatter_flat"], [71, 2, 1, "", "scatter_nd"], [71, 2, 1, "", "stable_divide"], [71, 2, 1, "", "stable_pow"], [71, 2, 1, "", "supports_inplace_updates"], [71, 2, 1, "", "to_list"], [71, 2, 1, "", "to_numpy"], [71, 2, 1, "", "to_scalar"], [71, 2, 1, "", "value_is_nan"]], "ivy.array.gradients": [[73, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[73, 2, 1, "", "adam_step"], [73, 2, 1, "", "adam_update"], [73, 2, 1, "", "gradient_descent_update"], [73, 2, 1, "", "lamb_update"], [73, 2, 1, "", "lars_update"], [73, 2, 1, "", "optimizer_update"], [73, 2, 1, "", "stop_gradient"]], "ivy.array.image": [[75, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[77, 1, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[77, 2, 1, "", "conv1d"], [77, 2, 1, "", "conv1d_transpose"], [77, 2, 1, "", "conv2d"], [77, 2, 1, "", "conv2d_transpose"], [77, 2, 1, "", "conv3d"], [77, 2, 1, "", "conv3d_transpose"], [77, 2, 1, "", "depthwise_conv2d"], [77, 2, 1, "", "dropout"], [77, 2, 1, "", "dropout1d"], [77, 2, 1, "", "linear"], [77, 2, 1, "", "lstm_update"], [77, 2, 1, "", "multi_head_attention"], [77, 2, 1, "", "scaled_dot_product_attention"]], "ivy.array.linear_algebra": [[79, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[79, 2, 1, "", "cholesky"], [79, 2, 1, "", "cross"], [79, 2, 1, "", "det"], [79, 2, 1, "", "diag"], [79, 2, 1, "", "diagonal"], [79, 2, 1, "", "eig"], [79, 2, 1, "", "eigh"], [79, 2, 1, "", "eigvalsh"], [79, 2, 1, "", "inner"], [79, 2, 1, "", "inv"], [79, 2, 1, "", "matmul"], [79, 2, 1, "", "matrix_norm"], [79, 2, 1, "", "matrix_power"], [79, 2, 1, "", "matrix_rank"], [79, 2, 1, "", "matrix_transpose"], [79, 2, 1, "", "outer"], [79, 2, 1, "", "pinv"], [79, 2, 1, "", "qr"], [79, 2, 1, "", "slogdet"], [79, 2, 1, "", "solve"], [79, 2, 1, "", "svd"], [79, 2, 1, "", "svdvals"], [79, 2, 1, "", "tensordot"], [79, 2, 1, "", "tensorsolve"], [79, 2, 1, "", "trace"], [79, 2, 1, "", "vander"], [79, 2, 1, "", "vecdot"], [79, 2, 1, "", "vector_norm"], [79, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[81, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[81, 2, 1, "", "binary_cross_entropy"], [81, 2, 1, "", "cross_entropy"], [81, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[83, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[83, 2, 1, "", "clip"], [83, 2, 1, "", "concat"], [83, 2, 1, "", "constant_pad"], [83, 2, 1, "", "expand_dims"], [83, 2, 1, "", "flip"], [83, 2, 1, "", "permute_dims"], [83, 2, 1, "", "repeat"], [83, 2, 1, "", "reshape"], [83, 2, 1, "", "roll"], [83, 2, 1, "", "split"], [83, 2, 1, "", "squeeze"], [83, 2, 1, "", "stack"], [83, 2, 1, "", "swapaxes"], [83, 2, 1, "", "tile"], [83, 2, 1, "", "unstack"], [83, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[85, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[85, 2, 1, "", "layer_norm"]], "ivy.array.random": [[87, 1, 1, "", "ArrayWithRandom"]], "ivy.array.random.ArrayWithRandom": [[87, 2, 1, "", "multinomial"], [87, 2, 1, "", "randint"], [87, 2, 1, "", "random_normal"], [87, 2, 1, "", "random_uniform"], [87, 2, 1, "", "shuffle"]], "ivy.array.searching": [[89, 1, 1, "", "ArrayWithSearching"]], "ivy.array.searching.ArrayWithSearching": [[89, 2, 1, "", "argmax"], [89, 2, 1, "", "argmin"], [89, 2, 1, "", "argwhere"], [89, 2, 1, "", "nonzero"], [89, 2, 1, "", "where"]], "ivy.array.set": [[91, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[91, 2, 1, "", "unique_all"], [91, 2, 1, "", "unique_counts"], [91, 2, 1, "", "unique_inverse"], [91, 2, 1, "", "unique_values"]], "ivy.array.sorting": [[93, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[93, 2, 1, "", "argsort"], [93, 2, 1, "", "searchsorted"], [93, 2, 1, "", "sort"]], "ivy.array.statistical": [[95, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[95, 2, 1, "", "cumprod"], [95, 2, 1, "", "cumsum"], [95, 2, 1, "", "einsum"], [95, 2, 1, "", "max"], [95, 2, 1, "", "mean"], [95, 2, 1, "", "min"], [95, 2, 1, "", "prod"], [95, 2, 1, "", "std"], [95, 2, 1, "", "sum"], [95, 2, 1, "", "var"]], "ivy.array.utility": [[97, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[97, 2, 1, "", "all"], [97, 2, 1, "", "any"]], "ivy.array.wrapping": [[99, 4, 1, "", "add_ivy_array_instance_methods"]], "ivy.assertions": [[2, 4, 1, "", "check_all"], [3, 4, 1, "", "check_all_or_any_fn"], [4, 4, 1, "", "check_any"], [5, 4, 1, "", "check_dimensions"], [6, 4, 1, "", "check_elem_in_list"], [7, 4, 1, "", "check_equal"], [8, 4, 1, "", "check_exists"], [9, 4, 1, "", "check_false"], [10, 4, 1, "", "check_fill_value_and_dtype_are_compatible"], [11, 4, 1, "", "check_gather_input_valid"], [12, 4, 1, "", "check_gather_nd_input_valid"], [13, 4, 1, "", "check_greater"], [14, 4, 1, "", "check_inplace_sizes_valid"], [15, 4, 1, "", "check_isinstance"], [16, 4, 1, "", "check_kernel_padding_size"], [17, 4, 1, "", "check_less"], [18, 4, 1, "", "check_one_way_broadcastable"], [19, 4, 1, "", "check_same_dtype"], [20, 4, 1, "", "check_shape"], [21, 4, 1, "", "check_shapes_broadcastable"], [22, 4, 1, "", "check_true"]], "ivy.backend_handler": [[24, 1, 1, "", "ContextManager"], [25, 4, 1, "", "choose_random_backend"], [26, 4, 1, "", "clear_backend_stack"], [27, 4, 1, "", "convert_from_numpy_to_target_backend"], [28, 4, 1, "", "convert_from_source_backend_to_numpy"], [29, 4, 1, "", "current_backend"], [30, 4, 1, "", "fn_name_from_version_specific_fn_name"], [31, 4, 1, "", "get_backend"], [32, 4, 1, "", "set_backend"], [33, 4, 1, "", "set_backend_to_specific_version"], [34, 4, 1, "", "set_jax_backend"], [35, 4, 1, "", "set_numpy_backend"], [36, 4, 1, "", "set_tensorflow_backend"], [37, 4, 1, "", "set_torch_backend"], [38, 4, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[24, 2, 1, "", "__init__"]], "ivy.container": [[101, 0, 0, "-", "activations"], [103, 0, 0, "-", "base"], [105, 0, 0, "-", "container"], [107, 0, 0, "-", "conversions"], [109, 0, 0, "-", "creation"], [111, 0, 0, "-", "data_type"], [113, 0, 0, "-", "device"], [115, 0, 0, "-", "elementwise"], [118, 0, 0, "-", "general"], [120, 0, 0, "-", "gradients"], [122, 0, 0, "-", "image"], [124, 0, 0, "-", "layers"], [126, 0, 0, "-", "linear_algebra"], [128, 0, 0, "-", "losses"], [130, 0, 0, "-", "manipulation"], [132, 0, 0, "-", "norms"], [134, 0, 0, "-", "random"], [136, 0, 0, "-", "searching"], [138, 0, 0, "-", "set"], [140, 0, 0, "-", "sorting"], [142, 0, 0, "-", "statistical"], [144, 0, 0, "-", "utility"], [146, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[102, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[102, 2, 1, "", "gelu"], [102, 2, 1, "", "leaky_relu"], [102, 2, 1, "", "log_softmax"], [102, 2, 1, "", "mish"], [102, 2, 1, "", "relu"], [102, 2, 1, "", "sigmoid"], [102, 2, 1, "", "softmax"], [102, 2, 1, "", "softplus"], [102, 2, 1, "", "static_gelu"], [102, 2, 1, "", "static_leaky_relu"], [102, 2, 1, "", "static_log_softmax"], [102, 2, 1, "", "static_mish"], [102, 2, 1, "", "static_relu"], [102, 2, 1, "", "static_sigmoid"], [102, 2, 1, "", "static_softmax"], [102, 2, 1, "", "static_softplus"]], "ivy.container.base": [[104, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[104, 2, 1, "", "__getitem__"], [104, 2, 1, "", "__init__"], [104, 2, 1, "", "__setitem__"], [104, 2, 1, "", "cont_all_false"], [104, 2, 1, "", "cont_all_key_chains"], [104, 2, 1, "", "cont_all_true"], [104, 2, 1, "", "cont_as_bools"], [104, 2, 1, "", "cont_assert_contains_sub_container"], [104, 2, 1, "", "cont_assert_contains_sub_structure"], [104, 2, 1, "", "cont_assert_identical"], [104, 2, 1, "", "cont_assert_identical_structure"], [104, 2, 1, "", "cont_at_key_chain"], [104, 2, 1, "", "cont_at_key_chains"], [104, 2, 1, "", "cont_at_keys"], [104, 2, 1, "", "cont_combine"], [104, 2, 1, "", "cont_common_key_chains"], [104, 3, 1, "", "cont_config"], [104, 2, 1, "", "cont_contains_sub_container"], [104, 2, 1, "", "cont_contains_sub_structure"], [104, 2, 1, "", "cont_copy"], [104, 2, 1, "", "cont_create_if_absent"], [104, 2, 1, "", "cont_cutoff_at_depth"], [104, 2, 1, "", "cont_cutoff_at_height"], [104, 2, 1, "", "cont_deep_copy"], [104, 3, 1, "", "cont_dev"], [104, 3, 1, "", "cont_dev_str"], [104, 2, 1, "", "cont_diff"], [104, 2, 1, "", "cont_duplicate_array_keychains"], [104, 2, 1, "", "cont_find_sub_container"], [104, 2, 1, "", "cont_find_sub_structure"], [104, 2, 1, "", "cont_flatten_key_chain"], [104, 2, 1, "", "cont_flatten_key_chains"], [104, 2, 1, "", "cont_format_key_chains"], [104, 2, 1, "", "cont_from_disk_as_hdf5"], [104, 2, 1, "", "cont_from_disk_as_json"], [104, 2, 1, "", "cont_from_disk_as_pickled"], [104, 2, 1, "", "cont_from_flat_list"], [104, 2, 1, "", "cont_handle_inplace"], [104, 2, 1, "", "cont_has_key"], [104, 2, 1, "", "cont_has_key_chain"], [104, 2, 1, "", "cont_identical"], [104, 2, 1, "", "cont_identical_array_shapes"], [104, 2, 1, "", "cont_identical_configs"], [104, 2, 1, "", "cont_identical_structure"], [104, 2, 1, "", "cont_if_exists"], [104, 2, 1, "", "cont_inplace_update"], [104, 3, 1, "", "cont_ivy"], [104, 2, 1, "", "cont_key_chains_containing"], [104, 2, 1, "", "cont_list_join"], [104, 2, 1, "", "cont_list_stack"], [104, 2, 1, "", "cont_map"], [104, 2, 1, "", "cont_map_sub_conts"], [104, 3, 1, "", "cont_max_depth"], [104, 2, 1, "", "cont_multi_map"], [104, 2, 1, "", "cont_multi_map_in_function"], [104, 2, 1, "", "cont_num_arrays"], [104, 2, 1, "", "cont_overwrite_at_key_chain"], [104, 2, 1, "", "cont_overwrite_at_key_chains"], [104, 2, 1, "", "cont_prune_empty"], [104, 2, 1, "", "cont_prune_key_chain"], [104, 2, 1, "", "cont_prune_key_chains"], [104, 2, 1, "", "cont_prune_key_from_key_chains"], [104, 2, 1, "", "cont_prune_keys"], [104, 2, 1, "", "cont_prune_keys_from_key_chains"], [104, 2, 1, "", "cont_reduce"], [104, 2, 1, "", "cont_remove_key_length_limit"], [104, 2, 1, "", "cont_remove_print_limit"], [104, 2, 1, "", "cont_reshape_like"], [104, 2, 1, "", "cont_restructure"], [104, 2, 1, "", "cont_restructure_key_chains"], [104, 2, 1, "", "cont_set_at_key_chain"], [104, 2, 1, "", "cont_set_at_key_chains"], [104, 2, 1, "", "cont_set_at_keys"], [104, 3, 1, "", "cont_shape"], [104, 3, 1, "", "cont_shapes"], [104, 2, 1, "", "cont_show"], [104, 2, 1, "", "cont_show_sub_container"], [104, 2, 1, "", "cont_size_ordered_arrays"], [104, 2, 1, "", "cont_slice_keys"], [104, 2, 1, "", "cont_slice_via_key"], [104, 2, 1, "", "cont_sort_by_key"], [104, 2, 1, "", "cont_structural_diff"], [104, 2, 1, "", "cont_to_dict"], [104, 2, 1, "", "cont_to_disk_as_hdf5"], [104, 2, 1, "", "cont_to_disk_as_json"], [104, 2, 1, "", "cont_to_disk_as_pickled"], [104, 2, 1, "", "cont_to_flat_list"], [104, 2, 1, "", "cont_to_iterator"], [104, 2, 1, "", "cont_to_iterator_keys"], [104, 2, 1, "", "cont_to_iterator_values"], [104, 2, 1, "", "cont_to_jsonable"], [104, 2, 1, "", "cont_to_nested_list"], [104, 2, 1, "", "cont_to_raw"], [104, 2, 1, "", "cont_trim_key"], [104, 2, 1, "", "cont_try_kc"], [104, 2, 1, "", "cont_unify"], [104, 2, 1, "", "cont_unstack_conts"], [104, 2, 1, "", "cont_update_config"], [104, 2, 1, "", "cont_with_default_key_color"], [104, 2, 1, "", "cont_with_entries_as_lists"], [104, 2, 1, "", "cont_with_ivy_backend"], [104, 2, 1, "", "cont_with_key_length_limit"], [104, 2, 1, "", "cont_with_print_indent"], [104, 2, 1, "", "cont_with_print_limit"], [104, 2, 1, "", "cont_with_print_line_spacing"], [104, 3, 1, "", "dynamic_backend"], [104, 2, 1, "", "h5_file_size"], [104, 2, 1, "", "shuffle_h5_file"], [104, 2, 1, "", "split_conts"]], "ivy.container.container": [[106, 1, 1, "", "Container"]], "ivy.container.container.Container": [[106, 2, 1, "", "__abs__"], [106, 2, 1, "", "__add__"], [106, 2, 1, "", "__eq__"], [106, 2, 1, "", "__ge__"], [106, 2, 1, "", "__gt__"], [106, 2, 1, "", "__init__"], [106, 2, 1, "", "__le__"], [106, 2, 1, "", "__lt__"], [106, 2, 1, "", "__ne__"], [106, 2, 1, "", "__pow__"], [106, 2, 1, "", "__radd__"], [106, 2, 1, "", "__rrshift__"], [106, 2, 1, "", "__rshift__"], [106, 2, 1, "", "__rsub__"], [106, 2, 1, "", "__sub__"], [106, 2, 1, "", "__truediv__"], [106, 2, 1, "", "__xor__"], [106, 2, 1, "", "arange"], [106, 2, 1, "", "arg_info"], [106, 2, 1, "", "arg_names"], [106, 2, 1, "", "array"], [106, 2, 1, "", "as_ivy_dev"], [106, 2, 1, "", "as_ivy_dtype"], [106, 2, 1, "", "as_native_dev"], [106, 2, 1, "", "as_native_dtype"], [106, 2, 1, "", "asarray"], [106, 2, 1, "", "asarray_handle_nestable"], [106, 2, 1, "", "asarray_infer_device"], [106, 2, 1, "", "asarray_to_native_arrays_and_back"], [106, 2, 1, "", "cache_fn"], [106, 2, 1, "", "check_float"], [106, 2, 1, "", "clear_mem_on_dev"], [106, 2, 1, "", "closest_valid_dtype"], [106, 2, 1, "", "container_types"], [106, 2, 1, "", "conv"], [106, 2, 1, "", "conv_general_dilated"], [106, 2, 1, "", "conv_general_transpose"], [106, 2, 1, "", "copy_array"], [106, 2, 1, "", "current_backend"], [106, 2, 1, "", "current_backend_str"], [106, 2, 1, "", "default"], [106, 2, 1, "", "default_complex_dtype"], [106, 2, 1, "", "default_device"], [106, 2, 1, "", "default_dtype"], [106, 2, 1, "", "default_float_dtype"], [106, 2, 1, "", "default_int_dtype"], [106, 2, 1, "", "default_uint_dtype"], [106, 2, 1, "", "deserialize"], [106, 2, 1, "", "dev_util"], [106, 2, 1, "", "dtype_bits"], [106, 2, 1, "", "empty"], [106, 2, 1, "", "execute_with_gradients"], [106, 2, 1, "", "exists"], [106, 2, 1, "", "eye"], [106, 2, 1, "", "full"], [106, 2, 1, "", "function_supported_devices"], [106, 2, 1, "", "function_supported_devices_and_dtypes"], [106, 2, 1, "", "function_supported_dtypes"], [106, 2, 1, "", "function_unsupported_devices"], [106, 2, 1, "", "function_unsupported_devices_and_dtypes"], [106, 2, 1, "", "function_unsupported_dtypes"], [106, 2, 1, "", "get_all_arrays_in_memory"], [106, 2, 1, "", "get_all_ivy_arrays_on_dev"], [106, 2, 1, "", "get_array_mode"], [106, 2, 1, "", "get_exception_trace_mode"], [106, 2, 1, "", "get_item"], [106, 2, 1, "", "get_min_base"], [106, 2, 1, "", "get_min_denominator"], [106, 2, 1, "", "get_nestable_mode"], [106, 2, 1, "", "get_queue_timeout"], [106, 2, 1, "", "get_referrers_recursive"], [106, 2, 1, "", "get_show_func_wrapper_trace_mode"], [106, 2, 1, "", "get_tmp_dir"], [106, 2, 1, "", "gpu_is_available"], [106, 2, 1, "", "grad"], [106, 2, 1, "", "handle_array_function"], [106, 2, 1, "", "handle_array_like_without_promotion"], [106, 2, 1, "", "handle_exceptions"], [106, 2, 1, "", "handle_nestable"], [106, 2, 1, "", "handle_out_argument"], [106, 2, 1, "", "infer_default_dtype"], [106, 2, 1, "", "infer_device"], [106, 2, 1, "", "infer_dtype"], [106, 2, 1, "", "inplace_arrays_supported"], [106, 2, 1, "", "inplace_variables_supported"], [106, 2, 1, "", "inputs_to_ivy_arrays"], [106, 2, 1, "", "inputs_to_native_arrays"], [106, 2, 1, "", "integer_arrays_to_float"], [106, 2, 1, "", "invalid_dtype"], [106, 2, 1, "", "is_ivy_container"], [106, 2, 1, "", "isscalar"], [106, 2, 1, "", "jac"], [106, 2, 1, "", "match_kwargs"], [106, 2, 1, "", "multiprocessing"], [106, 2, 1, "", "normalize_axis_tuple"], [106, 2, 1, "", "num_arrays_in_memory"], [106, 2, 1, "", "num_cpu_cores"], [106, 2, 1, "", "num_gpus"], [106, 2, 1, "", "num_ivy_arrays_on_dev"], [106, 2, 1, "", "ones"], [106, 2, 1, "", "outputs_to_ivy_arrays"], [106, 2, 1, "", "percent_used_mem_on_dev"], [106, 2, 1, "", "print_all_arrays_in_memory"], [106, 2, 1, "", "print_all_ivy_arrays_on_dev"], [106, 2, 1, "", "promote_types"], [106, 2, 1, "", "promote_types_of_inputs"], [106, 2, 1, "", "seed"], [106, 2, 1, "", "set_array_mode"], [106, 2, 1, "", "set_default_complex_dtype"], [106, 2, 1, "", "set_default_device"], [106, 2, 1, "", "set_default_dtype"], [106, 2, 1, "", "set_default_float_dtype"], [106, 2, 1, "", "set_default_int_dtype"], [106, 2, 1, "", "set_default_uint_dtype"], [106, 2, 1, "", "set_exception_trace_mode"], [106, 2, 1, "", "set_min_base"], [106, 2, 1, "", "set_min_denominator"], [106, 2, 1, "", "set_nestable_mode"], [106, 2, 1, "", "set_queue_timeout"], [106, 2, 1, "", "set_shape_array_mode"], [106, 2, 1, "", "set_show_func_wrapper_trace_mode"], [106, 2, 1, "", "set_split_factor"], [106, 2, 1, "", "set_tmp_dir"], [106, 2, 1, "", "set_with_grads"], [106, 2, 1, "", "shape_array_mode"], [106, 2, 1, "", "split_factor"], [106, 2, 1, "", "split_func_call"], [106, 2, 1, "", "static_adam_step"], [106, 2, 1, "", "static_adam_update"], [106, 2, 1, "", "static_arg_info"], [106, 2, 1, "", "static_arg_names"], [106, 2, 1, "", "static_array"], [106, 2, 1, "", "static_as_ivy_dev"], [106, 2, 1, "", "static_as_ivy_dtype"], [106, 2, 1, "", "static_as_native_dev"], [106, 2, 1, "", "static_as_native_dtype"], [106, 2, 1, "", "static_asarray_handle_nestable"], [106, 2, 1, "", "static_asarray_infer_device"], [106, 2, 1, "", "static_asarray_to_native_arrays_and_back"], [106, 2, 1, "", "static_cache_fn"], [106, 2, 1, "", "static_check_float"], [106, 2, 1, "", "static_clear_mem_on_dev"], [106, 2, 1, "", "static_closest_valid_dtype"], [106, 2, 1, "", "static_container_types"], [106, 2, 1, "", "static_conv"], [106, 2, 1, "", "static_conv_general_dilated"], [106, 2, 1, "", "static_conv_general_transpose"], [106, 2, 1, "", "static_copy_array"], [106, 2, 1, "", "static_current_backend"], [106, 2, 1, "", "static_current_backend_str"], [106, 2, 1, "", "static_default"], [106, 2, 1, "", "static_default_device"], [106, 2, 1, "", "static_default_dtype"], [106, 2, 1, "", "static_default_int_dtype"], [106, 2, 1, "", "static_default_uint_dtype"], [106, 2, 1, "", "static_deserialize"], [106, 2, 1, "", "static_dev_util"], [106, 2, 1, "", "static_dtype_bits"], [106, 2, 1, "", "static_einsum"], [106, 2, 1, "", "static_empty"], [106, 2, 1, "", "static_execute_with_gradients"], [106, 2, 1, "", "static_exists"], [106, 2, 1, "", "static_full"], [106, 2, 1, "", "static_function_supported_devices"], [106, 2, 1, "", "static_function_supported_devices_and_dtypes"], [106, 2, 1, "", "static_function_unsupported_devices"], [106, 2, 1, "", "static_function_unsupported_devices_and_dtypes"], [106, 2, 1, "", "static_get"], [106, 2, 1, "", "static_get_all_arrays_in_memory"], [106, 2, 1, "", "static_get_all_ivy_arrays_on_dev"], [106, 2, 1, "", "static_get_array_mode"], [106, 2, 1, "", "static_get_exception_trace_mode"], [106, 2, 1, "", "static_get_item"], [106, 2, 1, "", "static_get_min_base"], [106, 2, 1, "", "static_get_min_denominator"], [106, 2, 1, "", "static_get_nestable_mode"], [106, 2, 1, "", "static_get_queue_timeout"], [106, 2, 1, "", "static_get_referrers_recursive"], [106, 2, 1, "", "static_get_show_func_wrapper_trace_mode"], [106, 2, 1, "", "static_get_tmp_dir"], [106, 2, 1, "", "static_gpu_is_available"], [106, 2, 1, "", "static_grad"], [106, 2, 1, "", "static_gradient_descent_update"], [106, 2, 1, "", "static_handle_array_function"], [106, 2, 1, "", "static_handle_array_like_without_promotion"], [106, 2, 1, "", "static_handle_exceptions"], [106, 2, 1, "", "static_handle_nestable"], [106, 2, 1, "", "static_handle_out_argument"], [106, 2, 1, "", "static_infer_default_dtype"], [106, 2, 1, "", "static_infer_device"], [106, 2, 1, "", "static_infer_dtype"], [106, 2, 1, "", "static_inplace_arrays_supported"], [106, 2, 1, "", "static_inplace_variables_supported"], [106, 2, 1, "", "static_inputs_to_ivy_arrays"], [106, 2, 1, "", "static_inputs_to_native_arrays"], [106, 2, 1, "", "static_integer_arrays_to_float"], [106, 2, 1, "", "static_invalid_dtype"], [106, 2, 1, "", "static_is_ivy_container"], [106, 2, 1, "", "static_isscalar"], [106, 2, 1, "", "static_jac"], [106, 2, 1, "", "static_lamb_update"], [106, 2, 1, "", "static_lars_update"], [106, 2, 1, "", "static_layer_norm"], [106, 2, 1, "", "static_match_kwargs"], [106, 2, 1, "", "static_max"], [106, 2, 1, "", "static_mean"], [106, 2, 1, "", "static_min"], [106, 2, 1, "", "static_multiprocessing"], [106, 2, 1, "", "static_normalize_axis_tuple"], [106, 2, 1, "", "static_num_arrays_in_memory"], [106, 2, 1, "", "static_num_cpu_cores"], [106, 2, 1, "", "static_num_gpus"], [106, 2, 1, "", "static_num_ivy_arrays_on_dev"], [106, 2, 1, "", "static_optimizer_update"], [106, 2, 1, "", "static_outputs_to_ivy_arrays"], [106, 2, 1, "", "static_percent_used_mem_on_dev"], [106, 2, 1, "", "static_print_all_arrays_in_memory"], [106, 2, 1, "", "static_print_all_ivy_arrays_on_dev"], [106, 2, 1, "", "static_promote_types"], [106, 2, 1, "", "static_promote_types_of_inputs"], [106, 2, 1, "", "static_seed"], [106, 2, 1, "", "static_set_array_mode"], [106, 2, 1, "", "static_set_default_complex_dtype"], [106, 2, 1, "", "static_set_default_device"], [106, 2, 1, "", "static_set_default_dtype"], [106, 2, 1, "", "static_set_default_float_dtype"], [106, 2, 1, "", "static_set_default_int_dtype"], [106, 2, 1, "", "static_set_default_uint_dtype"], [106, 2, 1, "", "static_set_exception_trace_mode"], [106, 2, 1, "", "static_set_min_base"], [106, 2, 1, "", "static_set_min_denominator"], [106, 2, 1, "", "static_set_nestable_mode"], [106, 2, 1, "", "static_set_queue_timeout"], [106, 2, 1, "", "static_set_shape_array_mode"], [106, 2, 1, "", "static_set_show_func_wrapper_trace_mode"], [106, 2, 1, "", "static_set_split_factor"], [106, 2, 1, "", "static_set_tmp_dir"], [106, 2, 1, "", "static_set_with_grads"], [106, 2, 1, "", "static_shape"], [106, 2, 1, "", "static_shape_array_mode"], [106, 2, 1, "", "static_split_factor"], [106, 2, 1, "", "static_split_func_call"], [106, 2, 1, "", "static_std"], [106, 2, 1, "", "static_tensorsolve"], [106, 2, 1, "", "static_to_ivy_shape"], [106, 2, 1, "", "static_to_native_arrays_and_back"], [106, 2, 1, "", "static_to_native_shape"], [106, 2, 1, "", "static_total_mem_on_dev"], [106, 2, 1, "", "static_tpu_is_available"], [106, 2, 1, "", "static_try_else_none"], [106, 2, 1, "", "static_type_promote_arrays"], [106, 2, 1, "", "static_unset_array_mode"], [106, 2, 1, "", "static_unset_default_complex_dtype"], [106, 2, 1, "", "static_unset_default_device"], [106, 2, 1, "", "static_unset_default_dtype"], [106, 2, 1, "", "static_unset_default_float_dtype"], [106, 2, 1, "", "static_unset_default_int_dtype"], [106, 2, 1, "", "static_unset_default_uint_dtype"], [106, 2, 1, "", "static_unset_exception_trace_mode"], [106, 2, 1, "", "static_unset_nestable_mode"], [106, 2, 1, "", "static_unset_queue_timeout"], [106, 2, 1, "", "static_unset_shape_array_mode"], [106, 2, 1, "", "static_unset_show_func_wrapper_trace_mode"], [106, 2, 1, "", "static_unset_with_grads"], [106, 2, 1, "", "static_used_mem_on_dev"], [106, 2, 1, "", "static_valid_dtype"], [106, 2, 1, "", "static_value_and_grad"], [106, 2, 1, "", "static_vmap"], [106, 2, 1, "", "static_with_grads"], [106, 2, 1, "", "static_wraps"], [106, 2, 1, "", "to_ivy_shape"], [106, 2, 1, "", "to_native_arrays_and_back"], [106, 2, 1, "", "to_native_shape"], [106, 2, 1, "", "total_mem_on_dev"], [106, 2, 1, "", "tpu_is_available"], [106, 2, 1, "", "try_else_none"], [106, 2, 1, "", "type_promote_arrays"], [106, 2, 1, "", "unset_array_mode"], [106, 2, 1, "", "unset_default_complex_dtype"], [106, 2, 1, "", "unset_default_device"], [106, 2, 1, "", "unset_default_dtype"], [106, 2, 1, "", "unset_default_float_dtype"], [106, 2, 1, "", "unset_default_int_dtype"], [106, 2, 1, "", "unset_default_uint_dtype"], [106, 2, 1, "", "unset_exception_trace_mode"], [106, 2, 1, "", "unset_nestable_mode"], [106, 2, 1, "", "unset_queue_timeout"], [106, 2, 1, "", "unset_shape_array_mode"], [106, 2, 1, "", "unset_show_func_wrapper_trace_mode"], [106, 2, 1, "", "unset_with_grads"], [106, 2, 1, "", "used_mem_on_dev"], [106, 2, 1, "", "valid_dtype"], [106, 2, 1, "", "value_and_grad"], [106, 2, 1, "", "vmap"], [106, 2, 1, "", "with_grads"], [106, 2, 1, "", "wraps"], [106, 2, 1, "", "zeros"]], "ivy.container.container_methods": [[484, 4, 1, "", "abs"], [489, 4, 1, "", "acos"], [494, 4, 1, "", "acosh"], [1616, 4, 1, "", "adam_step"], [1620, 4, 1, "", "adam_update"], [499, 4, 1, "", "add"], [811, 4, 1, "", "adjoint"], [2119, 4, 1, "", "all"], [1420, 4, 1, "", "all_equal"], [816, 4, 1, "", "allclose"], [821, 4, 1, "", "angle"], [2124, 4, 1, "", "any"], [2010, 4, 1, "", "argmax"], [2015, 4, 1, "", "argmin"], [2057, 4, 1, "", "argsort"], [2020, 4, 1, "", "argwhere"], [1427, 4, 1, "", "array_equal"], [504, 4, 1, "", "asin"], [509, 4, 1, "", "asinh"], [1432, 4, 1, "", "assert_supports_inplace"], [351, 4, 1, "", "astype"], [514, 4, 1, "", "atan"], [519, 4, 1, "", "atan2"], [524, 4, 1, "", "atanh"], [826, 4, 1, "", "atleast_1d"], [831, 4, 1, "", "atleast_2d"], [836, 4, 1, "", "atleast_3d"], [841, 4, 1, "", "avg_pool1d"], [846, 4, 1, "", "avg_pool2d"], [851, 4, 1, "", "avg_pool3d"], [856, 4, 1, "", "bernoulli"], [861, 4, 1, "", "beta"], [866, 4, 1, "", "binarizer"], [1857, 4, 1, "", "binary_cross_entropy"], [870, 4, 1, "", "binary_cross_entropy_with_logits"], [529, 4, 1, "", "bitwise_and"], [534, 4, 1, "", "bitwise_invert"], [539, 4, 1, "", "bitwise_left_shift"], [544, 4, 1, "", "bitwise_or"], [549, 4, 1, "", "bitwise_right_shift"], [554, 4, 1, "", "bitwise_xor"], [356, 4, 1, "", "broadcast_arrays"], [875, 4, 1, "", "broadcast_shapes"], [361, 4, 1, "", "broadcast_to"], [366, 4, 1, "", "can_cast"], [559, 4, 1, "", "ceil"], [1717, 4, 1, "", "cholesky"], [1873, 4, 1, "", "clip"], [1438, 4, 1, "", "clip_matrix_norm"], [1443, 4, 1, "", "clip_vector_norm"], [1878, 4, 1, "", "concat"], [1883, 4, 1, "", "constant_pad"], [1654, 4, 1, "", "conv1d"], [1659, 4, 1, "", "conv1d_transpose"], [1664, 4, 1, "", "conv2d"], [1669, 4, 1, "", "conv2d_transpose"], [1674, 4, 1, "", "conv3d"], [1679, 4, 1, "", "conv3d_transpose"], [883, 4, 1, "", "copysign"], [888, 4, 1, "", "corrcoef"], [564, 4, 1, "", "cos"], [569, 4, 1, "", "cosh"], [893, 4, 1, "", "count_nonzero"], [1722, 4, 1, "", "cross"], [1862, 4, 1, "", "cross_entropy"], [2073, 4, 1, "", "cumprod"], [2078, 4, 1, "", "cumsum"], [909, 4, 1, "", "dct"], [574, 4, 1, "", "deg2rad"], [1686, 4, 1, "", "depthwise_conv2d"], [1727, 4, 1, "", "det"], [455, 4, 1, "", "dev"], [914, 4, 1, "", "dft"], [1732, 4, 1, "", "diag"], [919, 4, 1, "", "diagflat"], [1737, 4, 1, "", "diagonal"], [924, 4, 1, "", "diff"], [929, 4, 1, "", "dirichlet"], [579, 4, 1, "", "divide"], [1691, 4, 1, "", "dropout"], [935, 4, 1, "", "dsplit"], [940, 4, 1, "", "dstack"], [381, 4, 1, "", "dtype"], [945, 4, 1, "", "eig"], [1743, 4, 1, "", "eigh"], [950, 4, 1, "", "eigvals"], [1748, 4, 1, "", "eigvalsh"], [1453, 4, 1, "", "einops_rearrange"], [1458, 4, 1, "", "einops_reduce"], [1463, 4, 1, "", "einops_repeat"], [2083, 4, 1, "", "einsum"], [984, 4, 1, "", "embedding"], [273, 4, 1, "", "empty_like"], [584, 4, 1, "", "equal"], [589, 4, 1, "", "erf"], [594, 4, 1, "", "exp"], [989, 4, 1, "", "exp2"], [994, 4, 1, "", "expand"], [1888, 4, 1, "", "expand_dims"], [599, 4, 1, "", "expm1"], [999, 4, 1, "", "eye_like"], [1004, 4, 1, "", "fft"], [387, 4, 1, "", "finfo"], [1009, 4, 1, "", "fix"], [1014, 4, 1, "", "flatten"], [1893, 4, 1, "", "flip"], [1019, 4, 1, "", "fliplr"], [1024, 4, 1, "", "flipud"], [1029, 4, 1, "", "float_power"], [604, 4, 1, "", "floor"], [609, 4, 1, "", "floor_divide"], [1034, 4, 1, "", "fmax"], [1039, 4, 1, "", "fmin"], [1044, 4, 1, "", "fmod"], [1471, 4, 1, "", "fourier_encode"], [281, 4, 1, "", "from_dlpack"], [287, 4, 1, "", "full_like"], [1478, 4, 1, "", "gather"], [1483, 4, 1, "", "gather_nd"], [1052, 4, 1, "", "gcd"], [209, 4, 1, "", "gelu"], [1495, 4, 1, "", "get_num_dims"], [1059, 4, 1, "", "gradient"], [1626, 4, 1, "", "gradient_descent_update"], [614, 4, 1, "", "greater"], [619, 4, 1, "", "greater_equal"], [1065, 4, 1, "", "hamming_window"], [1069, 4, 1, "", "hann_window"], [1504, 4, 1, "", "has_nans"], [1074, 4, 1, "", "heaviside"], [1079, 4, 1, "", "hsplit"], [1084, 4, 1, "", "hstack"], [1089, 4, 1, "", "hypot"], [1094, 4, 1, "", "i0"], [1099, 4, 1, "", "ifft"], [398, 4, 1, "", "iinfo"], [1104, 4, 1, "", "imag"], [1753, 4, 1, "", "inner"], [1510, 4, 1, "", "inplace_decrement"], [1515, 4, 1, "", "inplace_increment"], [1520, 4, 1, "", "inplace_update"], [1109, 4, 1, "", "instance_norm"], [1115, 4, 1, "", "interpolate"], [1758, 4, 1, "", "inv"], [1526, 4, 1, "", "is_array"], [405, 4, 1, "", "is_bool_dtype"], [409, 4, 1, "", "is_complex_dtype"], [414, 4, 1, "", "is_float_dtype"], [419, 4, 1, "", "is_int_dtype"], [1531, 4, 1, "", "is_ivy_array"], [1539, 4, 1, "", "is_native_array"], [424, 4, 1, "", "is_uint_dtype"], [1123, 4, 1, "", "isclose"], [624, 4, 1, "", "isfinite"], [1128, 4, 1, "", "isin"], [629, 4, 1, "", "isinf"], [634, 4, 1, "", "isnan"], [639, 4, 1, "", "isreal"], [1132, 4, 1, "", "kaiser_bessel_derived_window"], [1136, 4, 1, "", "kaiser_window"], [1141, 4, 1, "", "kron"], [1146, 4, 1, "", "l2_normalize"], [1631, 4, 1, "", "lamb_update"], [1635, 4, 1, "", "lars_update"], [1978, 4, 1, "", "layer_norm"], [1168, 4, 1, "", "lcm"], [215, 4, 1, "", "leaky_relu"], [644, 4, 1, "", "less"], [649, 4, 1, "", "less_equal"], [1173, 4, 1, "", "lexsort"], [1696, 4, 1, "", "linear"], [292, 4, 1, "", "linspace"], [654, 4, 1, "", "log"], [659, 4, 1, "", "log10"], [664, 4, 1, "", "log1p"], [669, 4, 1, "", "log2"], [220, 4, 1, "", "log_softmax"], [674, 4, 1, "", "logaddexp"], [1185, 4, 1, "", "logaddexp2"], [679, 4, 1, "", "logical_and"], [684, 4, 1, "", "logical_not"], [689, 4, 1, "", "logical_or"], [694, 4, 1, "", "logical_xor"], [1190, 4, 1, "", "logit"], [297, 4, 1, "", "logspace"], [1197, 4, 1, "", "lp_normalize"], [1701, 4, 1, "", "lstm_update"], [1763, 4, 1, "", "matmul"], [1226, 4, 1, "", "matrix_exp"], [1768, 4, 1, "", "matrix_norm"], [1773, 4, 1, "", "matrix_power"], [1778, 4, 1, "", "matrix_rank"], [1783, 4, 1, "", "matrix_transpose"], [2087, 4, 1, "", "max"], [1231, 4, 1, "", "max_pool1d"], [1236, 4, 1, "", "max_pool2d"], [1241, 4, 1, "", "max_pool3d"], [699, 4, 1, "", "maximum"], [2091, 4, 1, "", "mean"], [1246, 4, 1, "", "median"], [302, 4, 1, "", "meshgrid"], [2095, 4, 1, "", "min"], [704, 4, 1, "", "minimum"], [225, 4, 1, "", "mish"], [1252, 4, 1, "", "moveaxis"], [1257, 4, 1, "", "msort"], [1706, 4, 1, "", "multi_head_attention"], [1983, 4, 1, "", "multinomial"], [709, 4, 1, "", "multiply"], [1262, 4, 1, "", "nan_to_num"], [1267, 4, 1, "", "nanmean"], [1272, 4, 1, "", "nanmedian"], [1277, 4, 1, "", "nansum"], [307, 4, 1, "", "native_array"], [714, 4, 1, "", "negative"], [1287, 4, 1, "", "nextafter"], [2025, 4, 1, "", "nonzero"], [719, 4, 1, "", "not_equal"], [312, 4, 1, "", "one_hot"], [320, 4, 1, "", "ones_like"], [1639, 4, 1, "", "optimizer_update"], [1788, 4, 1, "", "outer"], [1296, 4, 1, "", "pad"], [1898, 4, 1, "", "permute_dims"], [1793, 4, 1, "", "pinv"], [1302, 4, 1, "", "poisson"], [724, 4, 1, "", "positive"], [729, 4, 1, "", "pow"], [1307, 4, 1, "", "prelu"], [2099, 4, 1, "", "prod"], [1798, 4, 1, "", "qr"], [1312, 4, 1, "", "quantile"], [734, 4, 1, "", "rad2deg"], [1988, 4, 1, "", "randint"], [1993, 4, 1, "", "random_normal"], [1998, 4, 1, "", "random_uniform"], [1323, 4, 1, "", "real"], [739, 4, 1, "", "reciprocal"], [230, 4, 1, "", "relu"], [744, 4, 1, "", "remainder"], [1903, 4, 1, "", "repeat"], [1908, 4, 1, "", "reshape"], [431, 4, 1, "", "result_type"], [1913, 4, 1, "", "roll"], [1328, 4, 1, "", "rot90"], [749, 4, 1, "", "round"], [1711, 4, 1, "", "scaled_dot_product_attention"], [1549, 4, 1, "", "scatter_flat"], [1554, 4, 1, "", "scatter_nd"], [2062, 4, 1, "", "searchsorted"], [2004, 4, 1, "", "shuffle"], [235, 4, 1, "", "sigmoid"], [754, 4, 1, "", "sign"], [1335, 4, 1, "", "signbit"], [759, 4, 1, "", "sin"], [1340, 4, 1, "", "sinc"], [764, 4, 1, "", "sinh"], [1803, 4, 1, "", "slogdet"], [240, 4, 1, "", "softmax"], [245, 4, 1, "", "softplus"], [1808, 4, 1, "", "solve"], [2067, 4, 1, "", "sort"], [1867, 4, 1, "", "sparse_cross_entropy"], [1918, 4, 1, "", "split"], [769, 4, 1, "", "sqrt"], [774, 4, 1, "", "square"], [1923, 4, 1, "", "squeeze"], [1570, 4, 1, "", "stable_divide"], [1575, 4, 1, "", "stable_pow"], [1928, 4, 1, "", "stack"], [486, 4, 1, "", "static_abs"], [491, 4, 1, "", "static_acos"], [496, 4, 1, "", "static_acosh"], [501, 4, 1, "", "static_add"], [813, 4, 1, "", "static_adjoint"], [2121, 4, 1, "", "static_all"], [1422, 4, 1, "", "static_all_equal"], [818, 4, 1, "", "static_allclose"], [823, 4, 1, "", "static_angle"], [2126, 4, 1, "", "static_any"], [259, 4, 1, "", "static_arange"], [2012, 4, 1, "", "static_argmax"], [2017, 4, 1, "", "static_argmin"], [2059, 4, 1, "", "static_argsort"], [2022, 4, 1, "", "static_argwhere"], [1429, 4, 1, "", "static_array_equal"], [263, 4, 1, "", "static_asarray"], [506, 4, 1, "", "static_asin"], [511, 4, 1, "", "static_asinh"], [1434, 4, 1, "", "static_assert_supports_inplace"], [353, 4, 1, "", "static_astype"], [516, 4, 1, "", "static_atan"], [521, 4, 1, "", "static_atan2"], [526, 4, 1, "", "static_atanh"], [828, 4, 1, "", "static_atleast_1d"], [833, 4, 1, "", "static_atleast_2d"], [838, 4, 1, "", "static_atleast_3d"], [843, 4, 1, "", "static_avg_pool1d"], [848, 4, 1, "", "static_avg_pool2d"], [853, 4, 1, "", "static_avg_pool3d"], [858, 4, 1, "", "static_bernoulli"], [863, 4, 1, "", "static_beta"], [868, 4, 1, "", "static_binarizer"], [1859, 4, 1, "", "static_binary_cross_entropy"], [872, 4, 1, "", "static_binary_cross_entropy_with_logits"], [531, 4, 1, "", "static_bitwise_and"], [536, 4, 1, "", "static_bitwise_invert"], [541, 4, 1, "", "static_bitwise_left_shift"], [546, 4, 1, "", "static_bitwise_or"], [551, 4, 1, "", "static_bitwise_right_shift"], [556, 4, 1, "", "static_bitwise_xor"], [358, 4, 1, "", "static_broadcast_arrays"], [877, 4, 1, "", "static_broadcast_shapes"], [363, 4, 1, "", "static_broadcast_to"], [368, 4, 1, "", "static_can_cast"], [561, 4, 1, "", "static_ceil"], [1719, 4, 1, "", "static_cholesky"], [1875, 4, 1, "", "static_clip"], [1440, 4, 1, "", "static_clip_matrix_norm"], [1445, 4, 1, "", "static_clip_vector_norm"], [1880, 4, 1, "", "static_concat"], [1885, 4, 1, "", "static_constant_pad"], [1656, 4, 1, "", "static_conv1d"], [1661, 4, 1, "", "static_conv1d_transpose"], [1666, 4, 1, "", "static_conv2d"], [1671, 4, 1, "", "static_conv2d_transpose"], [1676, 4, 1, "", "static_conv3d"], [1681, 4, 1, "", "static_conv3d_transpose"], [885, 4, 1, "", "static_copysign"], [890, 4, 1, "", "static_corrcoef"], [566, 4, 1, "", "static_cos"], [571, 4, 1, "", "static_cosh"], [895, 4, 1, "", "static_count_nonzero"], [1724, 4, 1, "", "static_cross"], [1864, 4, 1, "", "static_cross_entropy"], [2075, 4, 1, "", "static_cumprod"], [2080, 4, 1, "", "static_cumsum"], [911, 4, 1, "", "static_dct"], [373, 4, 1, "", "static_default_complex_dtype"], [377, 4, 1, "", "static_default_float_dtype"], [576, 4, 1, "", "static_deg2rad"], [1688, 4, 1, "", "static_depthwise_conv2d"], [1729, 4, 1, "", "static_det"], [457, 4, 1, "", "static_dev"], [916, 4, 1, "", "static_dft"], [1734, 4, 1, "", "static_diag"], [921, 4, 1, "", "static_diagflat"], [1739, 4, 1, "", "static_diagonal"], [926, 4, 1, "", "static_diff"], [931, 4, 1, "", "static_dirichlet"], [581, 4, 1, "", "static_divide"], [1693, 4, 1, "", "static_dropout"], [937, 4, 1, "", "static_dsplit"], [942, 4, 1, "", "static_dstack"], [383, 4, 1, "", "static_dtype"], [947, 4, 1, "", "static_eig"], [1745, 4, 1, "", "static_eigh"], [952, 4, 1, "", "static_eigvals"], [1750, 4, 1, "", "static_eigvalsh"], [1455, 4, 1, "", "static_einops_rearrange"], [1460, 4, 1, "", "static_einops_reduce"], [1465, 4, 1, "", "static_einops_repeat"], [986, 4, 1, "", "static_embedding"], [275, 4, 1, "", "static_empty_like"], [586, 4, 1, "", "static_equal"], [591, 4, 1, "", "static_erf"], [596, 4, 1, "", "static_exp"], [991, 4, 1, "", "static_exp2"], [996, 4, 1, "", "static_expand"], [1890, 4, 1, "", "static_expand_dims"], [601, 4, 1, "", "static_expm1"], [278, 4, 1, "", "static_eye"], [1001, 4, 1, "", "static_eye_like"], [1006, 4, 1, "", "static_fft"], [389, 4, 1, "", "static_finfo"], [1011, 4, 1, "", "static_fix"], [1016, 4, 1, "", "static_flatten"], [1895, 4, 1, "", "static_flip"], [1021, 4, 1, "", "static_fliplr"], [1026, 4, 1, "", "static_flipud"], [1031, 4, 1, "", "static_float_power"], [606, 4, 1, "", "static_floor"], [611, 4, 1, "", "static_floor_divide"], [1036, 4, 1, "", "static_fmax"], [1041, 4, 1, "", "static_fmin"], [1046, 4, 1, "", "static_fmod"], [1473, 4, 1, "", "static_fourier_encode"], [283, 4, 1, "", "static_from_dlpack"], [289, 4, 1, "", "static_full_like"], [392, 4, 1, "", "static_function_supported_dtypes"], [395, 4, 1, "", "static_function_unsupported_dtypes"], [1480, 4, 1, "", "static_gather"], [1485, 4, 1, "", "static_gather_nd"], [1054, 4, 1, "", "static_gcd"], [211, 4, 1, "", "static_gelu"], [1497, 4, 1, "", "static_get_num_dims"], [1061, 4, 1, "", "static_gradient"], [616, 4, 1, "", "static_greater"], [621, 4, 1, "", "static_greater_equal"], [1067, 4, 1, "", "static_hamming_window"], [1071, 4, 1, "", "static_hann_window"], [1506, 4, 1, "", "static_has_nans"], [1076, 4, 1, "", "static_heaviside"], [1081, 4, 1, "", "static_hsplit"], [1086, 4, 1, "", "static_hstack"], [1091, 4, 1, "", "static_hypot"], [1096, 4, 1, "", "static_i0"], [1101, 4, 1, "", "static_ifft"], [400, 4, 1, "", "static_iinfo"], [1106, 4, 1, "", "static_imag"], [1755, 4, 1, "", "static_inner"], [1512, 4, 1, "", "static_inplace_decrement"], [1517, 4, 1, "", "static_inplace_increment"], [1522, 4, 1, "", "static_inplace_update"], [1111, 4, 1, "", "static_instance_norm"], [1117, 4, 1, "", "static_interpolate"], [1760, 4, 1, "", "static_inv"], [1528, 4, 1, "", "static_is_array"], [407, 4, 1, "", "static_is_bool_dtype"], [411, 4, 1, "", "static_is_complex_dtype"], [416, 4, 1, "", "static_is_float_dtype"], [421, 4, 1, "", "static_is_int_dtype"], [1533, 4, 1, "", "static_is_ivy_array"], [1541, 4, 1, "", "static_is_native_array"], [426, 4, 1, "", "static_is_uint_dtype"], [1125, 4, 1, "", "static_isclose"], [626, 4, 1, "", "static_isfinite"], [1130, 4, 1, "", "static_isin"], [631, 4, 1, "", "static_isinf"], [636, 4, 1, "", "static_isnan"], [641, 4, 1, "", "static_isreal"], [1134, 4, 1, "", "static_kaiser_bessel_derived_window"], [1138, 4, 1, "", "static_kaiser_window"], [1143, 4, 1, "", "static_kron"], [1148, 4, 1, "", "static_l2_normalize"], [1170, 4, 1, "", "static_lcm"], [217, 4, 1, "", "static_leaky_relu"], [646, 4, 1, "", "static_less"], [651, 4, 1, "", "static_less_equal"], [1175, 4, 1, "", "static_lexsort"], [1698, 4, 1, "", "static_linear"], [294, 4, 1, "", "static_linspace"], [656, 4, 1, "", "static_log"], [661, 4, 1, "", "static_log10"], [666, 4, 1, "", "static_log1p"], [671, 4, 1, "", "static_log2"], [222, 4, 1, "", "static_log_softmax"], [676, 4, 1, "", "static_logaddexp"], [1187, 4, 1, "", "static_logaddexp2"], [681, 4, 1, "", "static_logical_and"], [686, 4, 1, "", "static_logical_not"], [691, 4, 1, "", "static_logical_or"], [696, 4, 1, "", "static_logical_xor"], [1192, 4, 1, "", "static_logit"], [299, 4, 1, "", "static_logspace"], [1199, 4, 1, "", "static_lp_normalize"], [1703, 4, 1, "", "static_lstm_update"], [1765, 4, 1, "", "static_matmul"], [1228, 4, 1, "", "static_matrix_exp"], [1770, 4, 1, "", "static_matrix_norm"], [1775, 4, 1, "", "static_matrix_power"], [1780, 4, 1, "", "static_matrix_rank"], [1785, 4, 1, "", "static_matrix_transpose"], [1233, 4, 1, "", "static_max_pool1d"], [1238, 4, 1, "", "static_max_pool2d"], [1243, 4, 1, "", "static_max_pool3d"], [701, 4, 1, "", "static_maximum"], [1248, 4, 1, "", "static_median"], [304, 4, 1, "", "static_meshgrid"], [706, 4, 1, "", "static_minimum"], [227, 4, 1, "", "static_mish"], [1254, 4, 1, "", "static_moveaxis"], [1259, 4, 1, "", "static_msort"], [1708, 4, 1, "", "static_multi_head_attention"], [1985, 4, 1, "", "static_multinomial"], [711, 4, 1, "", "static_multiply"], [1264, 4, 1, "", "static_nan_to_num"], [1269, 4, 1, "", "static_nanmean"], [1274, 4, 1, "", "static_nanmedian"], [1279, 4, 1, "", "static_nansum"], [309, 4, 1, "", "static_native_array"], [716, 4, 1, "", "static_negative"], [1289, 4, 1, "", "static_nextafter"], [2027, 4, 1, "", "static_nonzero"], [721, 4, 1, "", "static_not_equal"], [314, 4, 1, "", "static_one_hot"], [317, 4, 1, "", "static_ones"], [322, 4, 1, "", "static_ones_like"], [1790, 4, 1, "", "static_outer"], [1298, 4, 1, "", "static_pad"], [1900, 4, 1, "", "static_permute_dims"], [1795, 4, 1, "", "static_pinv"], [1304, 4, 1, "", "static_poisson"], [726, 4, 1, "", "static_positive"], [731, 4, 1, "", "static_pow"], [1309, 4, 1, "", "static_prelu"], [2101, 4, 1, "", "static_prod"], [1800, 4, 1, "", "static_qr"], [1314, 4, 1, "", "static_quantile"], [736, 4, 1, "", "static_rad2deg"], [1990, 4, 1, "", "static_randint"], [1995, 4, 1, "", "static_random_normal"], [2000, 4, 1, "", "static_random_uniform"], [1325, 4, 1, "", "static_real"], [741, 4, 1, "", "static_reciprocal"], [232, 4, 1, "", "static_relu"], [746, 4, 1, "", "static_remainder"], [1905, 4, 1, "", "static_repeat"], [1910, 4, 1, "", "static_reshape"], [433, 4, 1, "", "static_result_type"], [1915, 4, 1, "", "static_roll"], [1330, 4, 1, "", "static_rot90"], [751, 4, 1, "", "static_round"], [1713, 4, 1, "", "static_scaled_dot_product_attention"], [1551, 4, 1, "", "static_scatter_flat"], [1556, 4, 1, "", "static_scatter_nd"], [2064, 4, 1, "", "static_searchsorted"], [2006, 4, 1, "", "static_shuffle"], [237, 4, 1, "", "static_sigmoid"], [756, 4, 1, "", "static_sign"], [1337, 4, 1, "", "static_signbit"], [761, 4, 1, "", "static_sin"], [1342, 4, 1, "", "static_sinc"], [766, 4, 1, "", "static_sinh"], [1805, 4, 1, "", "static_slogdet"], [242, 4, 1, "", "static_softmax"], [247, 4, 1, "", "static_softplus"], [1810, 4, 1, "", "static_solve"], [2069, 4, 1, "", "static_sort"], [1869, 4, 1, "", "static_sparse_cross_entropy"], [1920, 4, 1, "", "static_split"], [771, 4, 1, "", "static_sqrt"], [776, 4, 1, "", "static_square"], [1925, 4, 1, "", "static_squeeze"], [1572, 4, 1, "", "static_stable_divide"], [1577, 4, 1, "", "static_stable_pow"], [1930, 4, 1, "", "static_stack"], [1643, 4, 1, "", "static_stop_gradient"], [778, 4, 1, "", "static_subtract"], [2107, 4, 1, "", "static_sum"], [1579, 4, 1, "", "static_supports_inplace_updates"], [1812, 4, 1, "", "static_svd"], [1817, 4, 1, "", "static_svdvals"], [1932, 4, 1, "", "static_swapaxes"], [1361, 4, 1, "", "static_take_along_axis"], [783, 4, 1, "", "static_tan"], [788, 4, 1, "", "static_tanh"], [1822, 4, 1, "", "static_tensordot"], [1366, 4, 1, "", "static_thresholded_relu"], [1937, 4, 1, "", "static_tile"], [473, 4, 1, "", "static_to_device"], [1585, 4, 1, "", "static_to_list"], [1590, 4, 1, "", "static_to_numpy"], [1595, 4, 1, "", "static_to_scalar"], [1371, 4, 1, "", "static_top_k"], [1830, 4, 1, "", "static_trace"], [324, 4, 1, "", "static_tril"], [1379, 4, 1, "", "static_tril_indices"], [329, 4, 1, "", "static_triu"], [1383, 4, 1, "", "static_triu_indices"], [793, 4, 1, "", "static_trunc"], [798, 4, 1, "", "static_trunc_divide"], [2035, 4, 1, "", "static_unique_all"], [2040, 4, 1, "", "static_unique_counts"], [2045, 4, 1, "", "static_unique_inverse"], [2050, 4, 1, "", "static_unique_values"], [1387, 4, 1, "", "static_unravel_index"], [1942, 4, 1, "", "static_unstack"], [1607, 4, 1, "", "static_value_is_nan"], [1835, 4, 1, "", "static_vander"], [2112, 4, 1, "", "static_var"], [1840, 4, 1, "", "static_vecdot"], [1845, 4, 1, "", "static_vector_norm"], [1850, 4, 1, "", "static_vector_to_skew_symmetric_matrix"], [1393, 4, 1, "", "static_vorbis_window"], [1397, 4, 1, "", "static_vsplit"], [1402, 4, 1, "", "static_vstack"], [2029, 4, 1, "", "static_where"], [1407, 4, 1, "", "static_xlogy"], [1947, 4, 1, "", "static_zero_pad"], [334, 4, 1, "", "static_zeros"], [337, 4, 1, "", "static_zeros_like"], [1412, 4, 1, "", "static_zeta"], [2104, 4, 1, "", "std"], [1645, 4, 1, "", "stop_gradient"], [780, 4, 1, "", "subtract"], [2109, 4, 1, "", "sum"], [1581, 4, 1, "", "supports_inplace_updates"], [1814, 4, 1, "", "svd"], [1819, 4, 1, "", "svdvals"], [1934, 4, 1, "", "swapaxes"], [1363, 4, 1, "", "take_along_axis"], [785, 4, 1, "", "tan"], [790, 4, 1, "", "tanh"], [1823, 4, 1, "", "tensordot"], [1827, 4, 1, "", "tensorsolve"], [1368, 4, 1, "", "thresholded_relu"], [1939, 4, 1, "", "tile"], [475, 4, 1, "", "to_device"], [1592, 4, 1, "", "to_numpy"], [1597, 4, 1, "", "to_scalar"], [1373, 4, 1, "", "top_k"], [1832, 4, 1, "", "trace"], [326, 4, 1, "", "tril"], [1380, 4, 1, "", "tril_indices"], [331, 4, 1, "", "triu"], [1384, 4, 1, "", "triu_indices"], [795, 4, 1, "", "trunc"], [800, 4, 1, "", "trunc_divide"], [2037, 4, 1, "", "unique_all"], [2042, 4, 1, "", "unique_counts"], [2047, 4, 1, "", "unique_inverse"], [2052, 4, 1, "", "unique_values"], [1389, 4, 1, "", "unravel_index"], [1944, 4, 1, "", "unstack"], [1609, 4, 1, "", "value_is_nan"], [1837, 4, 1, "", "vander"], [2114, 4, 1, "", "var"], [1842, 4, 1, "", "vecdot"], [1847, 4, 1, "", "vector_norm"], [1852, 4, 1, "", "vector_to_skew_symmetric_matrix"], [1394, 4, 1, "", "vorbis_window"], [1399, 4, 1, "", "vsplit"], [1404, 4, 1, "", "vstack"], [2031, 4, 1, "", "where"], [1409, 4, 1, "", "xlogy"], [1949, 4, 1, "", "zero_pad"], [339, 4, 1, "", "zeros_like"], [1414, 4, 1, "", "zeta"]], "ivy.container.conversions": [[108, 1, 1, "", "ContainerWithConversions"]], "ivy.container.conversions.ContainerWithConversions": [[108, 2, 1, "", "static_to_ivy"], [108, 2, 1, "", "static_to_native"], [108, 2, 1, "", "to_ivy"], [108, 2, 1, "", "to_native"]], "ivy.container.creation": [[110, 1, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[110, 2, 1, "", "empty_like"], [110, 2, 1, "", "from_dlpack"], [110, 2, 1, "", "full_like"], [110, 2, 1, "", "linspace"], [110, 2, 1, "", "logspace"], [110, 2, 1, "", "meshgrid"], [110, 2, 1, "", "native_array"], [110, 2, 1, "", "one_hot"], [110, 2, 1, "", "ones_like"], [110, 2, 1, "", "static_arange"], [110, 2, 1, "", "static_asarray"], [110, 2, 1, "", "static_empty_like"], [110, 2, 1, "", "static_eye"], [110, 2, 1, "", "static_from_dlpack"], [110, 2, 1, "", "static_full_like"], [110, 2, 1, "", "static_linspace"], [110, 2, 1, "", "static_logspace"], [110, 2, 1, "", "static_meshgrid"], [110, 2, 1, "", "static_native_array"], [110, 2, 1, "", "static_one_hot"], [110, 2, 1, "", "static_ones"], [110, 2, 1, "", "static_ones_like"], [110, 2, 1, "", "static_tril"], [110, 2, 1, "", "static_triu"], [110, 2, 1, "", "static_zeros"], [110, 2, 1, "", "static_zeros_like"], [110, 2, 1, "", "tril"], [110, 2, 1, "", "triu"], [110, 2, 1, "", "zeros_like"]], "ivy.container.data_type": [[112, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[112, 2, 1, "", "astype"], [112, 2, 1, "", "broadcast_arrays"], [112, 2, 1, "", "broadcast_to"], [112, 2, 1, "", "can_cast"], [112, 2, 1, "", "dtype"], [112, 2, 1, "", "finfo"], [112, 2, 1, "", "iinfo"], [112, 2, 1, "", "is_bool_dtype"], [112, 2, 1, "", "is_complex_dtype"], [112, 2, 1, "", "is_float_dtype"], [112, 2, 1, "", "is_int_dtype"], [112, 2, 1, "", "is_uint_dtype"], [112, 2, 1, "", "result_type"], [112, 2, 1, "", "static_astype"], [112, 2, 1, "", "static_broadcast_arrays"], [112, 2, 1, "", "static_broadcast_to"], [112, 2, 1, "", "static_can_cast"], [112, 2, 1, "", "static_default_complex_dtype"], [112, 2, 1, "", "static_default_float_dtype"], [112, 2, 1, "", "static_dtype"], [112, 2, 1, "", "static_finfo"], [112, 2, 1, "", "static_function_supported_dtypes"], [112, 2, 1, "", "static_function_unsupported_dtypes"], [112, 2, 1, "", "static_iinfo"], [112, 2, 1, "", "static_is_bool_dtype"], [112, 2, 1, "", "static_is_complex_dtype"], [112, 2, 1, "", "static_is_float_dtype"], [112, 2, 1, "", "static_is_int_dtype"], [112, 2, 1, "", "static_is_uint_dtype"], [112, 2, 1, "", "static_result_type"]], "ivy.container.device": [[114, 1, 1, "", "ContainerWithDevice"]], "ivy.container.device.ContainerWithDevice": [[114, 2, 1, "", "dev"], [114, 2, 1, "", "static_dev"], [114, 2, 1, "", "static_to_device"], [114, 2, 1, "", "to_device"]], "ivy.container.elementwise": [[116, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[116, 2, 1, "", "abs"], [116, 2, 1, "", "acos"], [116, 2, 1, "", "acosh"], [116, 2, 1, "", "add"], [116, 2, 1, "", "asin"], [116, 2, 1, "", "asinh"], [116, 2, 1, "", "atan"], [116, 2, 1, "", "atan2"], [116, 2, 1, "", "atanh"], [116, 2, 1, "", "bitwise_and"], [116, 2, 1, "", "bitwise_invert"], [116, 2, 1, "", "bitwise_left_shift"], [116, 2, 1, "", "bitwise_or"], [116, 2, 1, "", "bitwise_right_shift"], [116, 2, 1, "", "bitwise_xor"], [116, 2, 1, "", "ceil"], [116, 2, 1, "", "cos"], [116, 2, 1, "", "cosh"], [116, 2, 1, "", "deg2rad"], [116, 2, 1, "", "divide"], [116, 2, 1, "", "equal"], [116, 2, 1, "", "erf"], [116, 2, 1, "", "exp"], [116, 2, 1, "", "expm1"], [116, 2, 1, "", "floor"], [116, 2, 1, "", "floor_divide"], [116, 2, 1, "", "greater"], [116, 2, 1, "", "greater_equal"], [116, 2, 1, "", "isfinite"], [116, 2, 1, "", "isinf"], [116, 2, 1, "", "isnan"], [116, 2, 1, "", "isreal"], [116, 2, 1, "", "less"], [116, 2, 1, "", "less_equal"], [116, 2, 1, "", "log"], [116, 2, 1, "", "log10"], [116, 2, 1, "", "log1p"], [116, 2, 1, "", "log2"], [116, 2, 1, "", "logaddexp"], [116, 2, 1, "", "logical_and"], [116, 2, 1, "", "logical_not"], [116, 2, 1, "", "logical_or"], [116, 2, 1, "", "logical_xor"], [116, 2, 1, "", "maximum"], [116, 2, 1, "", "minimum"], [116, 2, 1, "", "multiply"], [116, 2, 1, "", "negative"], [116, 2, 1, "", "not_equal"], [116, 2, 1, "", "positive"], [116, 2, 1, "", "pow"], [116, 2, 1, "", "rad2deg"], [116, 2, 1, "", "reciprocal"], [116, 2, 1, "", "remainder"], [116, 2, 1, "", "round"], [116, 2, 1, "", "sign"], [116, 2, 1, "", "sin"], [116, 2, 1, "", "sinh"], [116, 2, 1, "", "sqrt"], [116, 2, 1, "", "square"], [116, 2, 1, "", "static_abs"], [116, 2, 1, "", "static_acos"], [116, 2, 1, "", "static_acosh"], [116, 2, 1, "", "static_add"], [116, 2, 1, "", "static_asin"], [116, 2, 1, "", "static_asinh"], [116, 2, 1, "", "static_atan"], [116, 2, 1, "", "static_atan2"], [116, 2, 1, "", "static_atanh"], [116, 2, 1, "", "static_bitwise_and"], [116, 2, 1, "", "static_bitwise_invert"], [116, 2, 1, "", "static_bitwise_left_shift"], [116, 2, 1, "", "static_bitwise_or"], [116, 2, 1, "", "static_bitwise_right_shift"], [116, 2, 1, "", "static_bitwise_xor"], [116, 2, 1, "", "static_ceil"], [116, 2, 1, "", "static_cos"], [116, 2, 1, "", "static_cosh"], [116, 2, 1, "", "static_deg2rad"], [116, 2, 1, "", "static_divide"], [116, 2, 1, "", "static_equal"], [116, 2, 1, "", "static_erf"], [116, 2, 1, "", "static_exp"], [116, 2, 1, "", "static_expm1"], [116, 2, 1, "", "static_floor"], [116, 2, 1, "", "static_floor_divide"], [116, 2, 1, "", "static_greater"], [116, 2, 1, "", "static_greater_equal"], [116, 2, 1, "", "static_isfinite"], [116, 2, 1, "", "static_isinf"], [116, 2, 1, "", "static_isnan"], [116, 2, 1, "", "static_isreal"], [116, 2, 1, "", "static_less"], [116, 2, 1, "", "static_less_equal"], [116, 2, 1, "", "static_log"], [116, 2, 1, "", "static_log10"], [116, 2, 1, "", "static_log1p"], [116, 2, 1, "", "static_log2"], [116, 2, 1, "", "static_logaddexp"], [116, 2, 1, "", "static_logical_and"], [116, 2, 1, "", "static_logical_not"], [116, 2, 1, "", "static_logical_or"], [116, 2, 1, "", "static_logical_xor"], [116, 2, 1, "", "static_maximum"], [116, 2, 1, "", "static_minimum"], [116, 2, 1, "", "static_multiply"], [116, 2, 1, "", "static_negative"], [116, 2, 1, "", "static_not_equal"], [116, 2, 1, "", "static_positive"], [116, 2, 1, "", "static_pow"], [116, 2, 1, "", "static_rad2deg"], [116, 2, 1, "", "static_reciprocal"], [116, 2, 1, "", "static_remainder"], [116, 2, 1, "", "static_round"], [116, 2, 1, "", "static_sign"], [116, 2, 1, "", "static_sin"], [116, 2, 1, "", "static_sinh"], [116, 2, 1, "", "static_sqrt"], [116, 2, 1, "", "static_square"], [116, 2, 1, "", "static_subtract"], [116, 2, 1, "", "static_tan"], [116, 2, 1, "", "static_tanh"], [116, 2, 1, "", "static_trapz"], [116, 2, 1, "", "static_trunc"], [116, 2, 1, "", "static_trunc_divide"], [116, 2, 1, "", "subtract"], [116, 2, 1, "", "tan"], [116, 2, 1, "", "tanh"], [116, 2, 1, "", "trapz"], [116, 2, 1, "", "trunc"], [116, 2, 1, "", "trunc_divide"]], "ivy.container.experimental": [[117, 1, 1, "", "ContainerWithActivationExperimental"], [117, 1, 1, "", "ContainerWithConversionExperimental"], [117, 1, 1, "", "ContainerWithCreationExperimental"], [117, 1, 1, "", "ContainerWithData_typeExperimental"], [117, 1, 1, "", "ContainerWithDeviceExperimental"], [117, 1, 1, "", "ContainerWithElementWiseExperimental"], [117, 1, 1, "", "ContainerWithGeneralExperimental"], [117, 1, 1, "", "ContainerWithGradientsExperimental"], [117, 1, 1, "", "ContainerWithImageExperimental"], [117, 1, 1, "", "ContainerWithLayersExperimental"], [117, 1, 1, "", "ContainerWithLinearAlgebraExperimental"], [117, 1, 1, "", "ContainerWithLossesExperimental"], [117, 1, 1, "", "ContainerWithManipulationExperimental"], [117, 1, 1, "", "ContainerWithNormsExperimental"], [117, 1, 1, "", "ContainerWithRandomExperimental"], [117, 1, 1, "", "ContainerWithSearchingExperimental"], [117, 1, 1, "", "ContainerWithSetExperimental"], [117, 1, 1, "", "ContainerWithSortingExperimental"], [117, 1, 1, "", "ContainerWithStatisticalExperimental"], [117, 1, 1, "", "ContainerWithUtilityExperimental"]], "ivy.container.experimental.ContainerWithActivationExperimental": [[117, 2, 1, "", "logit"], [117, 2, 1, "", "prelu"], [117, 2, 1, "", "static_logit"], [117, 2, 1, "", "static_prelu"], [117, 2, 1, "", "static_thresholded_relu"], [117, 2, 1, "", "thresholded_relu"]], "ivy.container.experimental.ContainerWithCreationExperimental": [[117, 2, 1, "", "eye_like"], [117, 2, 1, "", "hamming_window"], [117, 2, 1, "", "hann_window"], [117, 2, 1, "", "kaiser_bessel_derived_window"], [117, 2, 1, "", "kaiser_window"], [117, 2, 1, "", "static_eye_like"], [117, 2, 1, "", "static_hamming_window"], [117, 2, 1, "", "static_hann_window"], [117, 2, 1, "", "static_kaiser_bessel_derived_window"], [117, 2, 1, "", "static_kaiser_window"], [117, 2, 1, "", "static_tril_indices"], [117, 2, 1, "", "static_triu_indices"], [117, 2, 1, "", "static_vorbis_window"], [117, 2, 1, "", "tril_indices"], [117, 2, 1, "", "triu_indices"], [117, 2, 1, "", "vorbis_window"]], "ivy.container.experimental.ContainerWithElementWiseExperimental": [[117, 2, 1, "", "allclose"], [117, 2, 1, "", "angle"], [117, 2, 1, "", "binarizer"], [117, 2, 1, "", "copysign"], [117, 2, 1, "", "count_nonzero"], [117, 2, 1, "", "diff"], [117, 2, 1, "", "exp2"], [117, 2, 1, "", "fix"], [117, 2, 1, "", "float_power"], [117, 2, 1, "", "fmax"], [117, 2, 1, "", "fmin"], [117, 2, 1, "", "fmod"], [117, 2, 1, "", "gcd"], [117, 2, 1, "", "gradient"], [117, 2, 1, "", "hypot"], [117, 2, 1, "", "imag"], [117, 2, 1, "", "isclose"], [117, 2, 1, "", "lcm"], [117, 2, 1, "", "logaddexp2"], [117, 2, 1, "", "nan_to_num"], [117, 2, 1, "", "nansum"], [117, 2, 1, "", "nextafter"], [117, 2, 1, "", "real"], [117, 2, 1, "", "signbit"], [117, 2, 1, "", "sinc"], [117, 2, 1, "", "static_allclose"], [117, 2, 1, "", "static_angle"], [117, 2, 1, "", "static_binarizer"], [117, 2, 1, "", "static_copysign"], [117, 2, 1, "", "static_count_nonzero"], [117, 2, 1, "", "static_diff"], [117, 2, 1, "", "static_exp2"], [117, 2, 1, "", "static_fix"], [117, 2, 1, "", "static_float_power"], [117, 2, 1, "", "static_fmax"], [117, 2, 1, "", "static_fmin"], [117, 2, 1, "", "static_fmod"], [117, 2, 1, "", "static_gcd"], [117, 2, 1, "", "static_gradient"], [117, 2, 1, "", "static_hypot"], [117, 2, 1, "", "static_imag"], [117, 2, 1, "", "static_isclose"], [117, 2, 1, "", "static_lcm"], [117, 2, 1, "", "static_logaddexp2"], [117, 2, 1, "", "static_nan_to_num"], [117, 2, 1, "", "static_nansum"], [117, 2, 1, "", "static_nextafter"], [117, 2, 1, "", "static_real"], [117, 2, 1, "", "static_signbit"], [117, 2, 1, "", "static_sinc"], [117, 2, 1, "", "static_xlogy"], [117, 2, 1, "", "static_zeta"], [117, 2, 1, "", "xlogy"], [117, 2, 1, "", "zeta"]], "ivy.container.experimental.ContainerWithGeneralExperimental": [[117, 2, 1, "", "isin"], [117, 2, 1, "", "static_isin"]], "ivy.container.experimental.ContainerWithLayersExperimental": [[117, 2, 1, "", "avg_pool1d"], [117, 2, 1, "", "avg_pool2d"], [117, 2, 1, "", "avg_pool3d"], [117, 2, 1, "", "dct"], [117, 2, 1, "", "dft"], [117, 2, 1, "", "embedding"], [117, 2, 1, "", "fft"], [117, 2, 1, "", "ifft"], [117, 2, 1, "", "interpolate"], [117, 2, 1, "", "max_pool1d"], [117, 2, 1, "", "max_pool2d"], [117, 2, 1, "", "max_pool3d"], [117, 2, 1, "", "static_avg_pool1d"], [117, 2, 1, "", "static_avg_pool2d"], [117, 2, 1, "", "static_avg_pool3d"], [117, 2, 1, "", "static_dct"], [117, 2, 1, "", "static_dft"], [117, 2, 1, "", "static_embedding"], [117, 2, 1, "", "static_fft"], [117, 2, 1, "", "static_ifft"], [117, 2, 1, "", "static_interpolate"], [117, 2, 1, "", "static_max_pool1d"], [117, 2, 1, "", "static_max_pool2d"], [117, 2, 1, "", "static_max_pool3d"]], "ivy.container.experimental.ContainerWithLinearAlgebraExperimental": [[117, 2, 1, "", "adjoint"], [117, 2, 1, "", "diagflat"], [117, 2, 1, "", "eig"], [117, 2, 1, "", "eigvals"], [117, 2, 1, "", "kron"], [117, 2, 1, "", "matrix_exp"], [117, 2, 1, "", "static_adjoint"], [117, 2, 1, "", "static_diagflat"], [117, 2, 1, "", "static_eig"], [117, 2, 1, "", "static_eigvals"], [117, 2, 1, "", "static_kron"], [117, 2, 1, "", "static_matrix_exp"]], "ivy.container.experimental.ContainerWithLossesExperimental": [[117, 2, 1, "", "binary_cross_entropy_with_logits"], [117, 2, 1, "", "static_binary_cross_entropy_with_logits"]], "ivy.container.experimental.ContainerWithManipulationExperimental": [[117, 2, 1, "", "atleast_1d"], [117, 2, 1, "", "atleast_2d"], [117, 2, 1, "", "atleast_3d"], [117, 2, 1, "", "broadcast_shapes"], [117, 2, 1, "", "dsplit"], [117, 2, 1, "", "dstack"], [117, 2, 1, "", "expand"], [117, 2, 1, "", "flatten"], [117, 2, 1, "", "fliplr"], [117, 2, 1, "", "flipud"], [117, 2, 1, "", "heaviside"], [117, 2, 1, "", "hsplit"], [117, 2, 1, "", "hstack"], [117, 2, 1, "", "i0"], [117, 2, 1, "", "moveaxis"], [117, 2, 1, "", "pad"], [117, 2, 1, "", "rot90"], [117, 2, 1, "", "static_atleast_1d"], [117, 2, 1, "", "static_atleast_2d"], [117, 2, 1, "", "static_atleast_3d"], [117, 2, 1, "", "static_broadcast_shapes"], [117, 2, 1, "", "static_dsplit"], [117, 2, 1, "", "static_dstack"], [117, 2, 1, "", "static_expand"], [117, 2, 1, "", "static_flatten"], [117, 2, 1, "", "static_fliplr"], [117, 2, 1, "", "static_flipud"], [117, 2, 1, "", "static_heaviside"], [117, 2, 1, "", "static_hsplit"], [117, 2, 1, "", "static_hstack"], [117, 2, 1, "", "static_i0"], [117, 2, 1, "", "static_moveaxis"], [117, 2, 1, "", "static_pad"], [117, 2, 1, "", "static_rot90"], [117, 2, 1, "", "static_take_along_axis"], [117, 2, 1, "", "static_top_k"], [117, 2, 1, "", "static_vsplit"], [117, 2, 1, "", "static_vstack"], [117, 2, 1, "", "take_along_axis"], [117, 2, 1, "", "top_k"], [117, 2, 1, "", "vsplit"], [117, 2, 1, "", "vstack"]], "ivy.container.experimental.ContainerWithNormsExperimental": [[117, 2, 1, "", "instance_norm"], [117, 2, 1, "", "l2_normalize"], [117, 2, 1, "", "lp_normalize"], [117, 2, 1, "", "static_instance_norm"], [117, 2, 1, "", "static_l2_normalize"], [117, 2, 1, "", "static_lp_normalize"]], "ivy.container.experimental.ContainerWithRandomExperimental": [[117, 2, 1, "", "bernoulli"], [117, 2, 1, "", "beta"], [117, 2, 1, "", "dirichlet"], [117, 2, 1, "", "poisson"], [117, 2, 1, "", "static_bernoulli"], [117, 2, 1, "", "static_beta"], [117, 2, 1, "", "static_dirichlet"], [117, 2, 1, "", "static_poisson"]], "ivy.container.experimental.ContainerWithSortingExperimental": [[117, 2, 1, "", "lexsort"], [117, 2, 1, "", "msort"], [117, 2, 1, "", "static_lexsort"], [117, 2, 1, "", "static_msort"]], "ivy.container.experimental.ContainerWithStatisticalExperimental": [[117, 2, 1, "", "corrcoef"], [117, 2, 1, "", "median"], [117, 2, 1, "", "nanmean"], [117, 2, 1, "", "nanmedian"], [117, 2, 1, "", "quantile"], [117, 2, 1, "", "static_corrcoef"], [117, 2, 1, "", "static_median"], [117, 2, 1, "", "static_nanmean"], [117, 2, 1, "", "static_nanmedian"], [117, 2, 1, "", "static_quantile"], [117, 2, 1, "", "static_unravel_index"], [117, 2, 1, "", "unravel_index"]], "ivy.container.general": [[119, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[119, 2, 1, "", "all_equal"], [119, 2, 1, "", "array_equal"], [119, 2, 1, "", "assert_supports_inplace"], [119, 2, 1, "", "clip_matrix_norm"], [119, 2, 1, "", "clip_vector_norm"], [119, 2, 1, "", "einops_rearrange"], [119, 2, 1, "", "einops_reduce"], [119, 2, 1, "", "einops_repeat"], [119, 2, 1, "", "fourier_encode"], [119, 2, 1, "", "gather"], [119, 2, 1, "", "gather_nd"], [119, 2, 1, "", "get_num_dims"], [119, 2, 1, "", "has_nans"], [119, 2, 1, "", "inplace_decrement"], [119, 2, 1, "", "inplace_increment"], [119, 2, 1, "", "inplace_update"], [119, 2, 1, "", "is_array"], [119, 2, 1, "", "is_ivy_array"], [119, 2, 1, "", "is_native_array"], [119, 2, 1, "", "scatter_flat"], [119, 2, 1, "", "scatter_nd"], [119, 2, 1, "", "stable_divide"], [119, 2, 1, "", "stable_pow"], [119, 2, 1, "", "static_all_equal"], [119, 2, 1, "", "static_array_equal"], [119, 2, 1, "", "static_assert_supports_inplace"], [119, 2, 1, "", "static_clip_matrix_norm"], [119, 2, 1, "", "static_clip_vector_norm"], [119, 2, 1, "", "static_einops_rearrange"], [119, 2, 1, "", "static_einops_reduce"], [119, 2, 1, "", "static_einops_repeat"], [119, 2, 1, "", "static_fourier_encode"], [119, 2, 1, "", "static_gather"], [119, 2, 1, "", "static_gather_nd"], [119, 2, 1, "", "static_get_num_dims"], [119, 2, 1, "", "static_has_nans"], [119, 2, 1, "", "static_inplace_decrement"], [119, 2, 1, "", "static_inplace_increment"], [119, 2, 1, "", "static_inplace_update"], [119, 2, 1, "", "static_is_array"], [119, 2, 1, "", "static_is_ivy_array"], [119, 2, 1, "", "static_is_native_array"], [119, 2, 1, "", "static_scatter_flat"], [119, 2, 1, "", "static_scatter_nd"], [119, 2, 1, "", "static_stable_divide"], [119, 2, 1, "", "static_stable_pow"], [119, 2, 1, "", "static_supports_inplace_updates"], [119, 2, 1, "", "static_to_list"], [119, 2, 1, "", "static_to_numpy"], [119, 2, 1, "", "static_to_scalar"], [119, 2, 1, "", "static_value_is_nan"], [119, 2, 1, "", "supports_inplace_updates"], [119, 2, 1, "", "to_list"], [119, 2, 1, "", "to_numpy"], [119, 2, 1, "", "to_scalar"], [119, 2, 1, "", "value_is_nan"]], "ivy.container.gradients": [[121, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[121, 2, 1, "", "adam_step"], [121, 2, 1, "", "adam_update"], [121, 2, 1, "", "gradient_descent_update"], [121, 2, 1, "", "lamb_update"], [121, 2, 1, "", "lars_update"], [121, 2, 1, "", "optimizer_update"], [121, 2, 1, "", "static_stop_gradient"], [121, 2, 1, "", "stop_gradient"]], "ivy.container.image": [[123, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[125, 1, 1, "", "ContainerWithLayers"]], "ivy.container.layers.ContainerWithLayers": [[125, 2, 1, "", "conv1d"], [125, 2, 1, "", "conv1d_transpose"], [125, 2, 1, "", "conv2d"], [125, 2, 1, "", "conv2d_transpose"], [125, 2, 1, "", "conv3d"], [125, 2, 1, "", "conv3d_transpose"], [125, 2, 1, "", "depthwise_conv2d"], [125, 2, 1, "", "dropout"], [125, 2, 1, "", "dropout1d"], [125, 2, 1, "", "linear"], [125, 2, 1, "", "lstm_update"], [125, 2, 1, "", "multi_head_attention"], [125, 2, 1, "", "scaled_dot_product_attention"], [125, 2, 1, "", "static_conv1d"], [125, 2, 1, "", "static_conv1d_transpose"], [125, 2, 1, "", "static_conv2d"], [125, 2, 1, "", "static_conv2d_transpose"], [125, 2, 1, "", "static_conv3d"], [125, 2, 1, "", "static_conv3d_transpose"], [125, 2, 1, "", "static_depthwise_conv2d"], [125, 2, 1, "", "static_dropout"], [125, 2, 1, "", "static_dropout1d"], [125, 2, 1, "", "static_linear"], [125, 2, 1, "", "static_lstm_update"], [125, 2, 1, "", "static_multi_head_attention"], [125, 2, 1, "", "static_scaled_dot_product_attention"]], "ivy.container.linear_algebra": [[127, 1, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[127, 2, 1, "", "cholesky"], [127, 2, 1, "", "cross"], [127, 2, 1, "", "det"], [127, 2, 1, "", "diag"], [127, 2, 1, "", "diagonal"], [127, 2, 1, "", "eigh"], [127, 2, 1, "", "eigvalsh"], [127, 2, 1, "", "inner"], [127, 2, 1, "", "inv"], [127, 2, 1, "", "matmul"], [127, 2, 1, "", "matrix_norm"], [127, 2, 1, "", "matrix_power"], [127, 2, 1, "", "matrix_rank"], [127, 2, 1, "", "matrix_transpose"], [127, 2, 1, "", "outer"], [127, 2, 1, "", "pinv"], [127, 2, 1, "", "qr"], [127, 2, 1, "", "slogdet"], [127, 2, 1, "", "solve"], [127, 2, 1, "", "static_cholesky"], [127, 2, 1, "", "static_cross"], [127, 2, 1, "", "static_det"], [127, 2, 1, "", "static_diag"], [127, 2, 1, "", "static_diagonal"], [127, 2, 1, "", "static_eigh"], [127, 2, 1, "", "static_eigvalsh"], [127, 2, 1, "", "static_inner"], [127, 2, 1, "", "static_inv"], [127, 2, 1, "", "static_matmul"], [127, 2, 1, "", "static_matrix_norm"], [127, 2, 1, "", "static_matrix_power"], [127, 2, 1, "", "static_matrix_rank"], [127, 2, 1, "", "static_matrix_transpose"], [127, 2, 1, "", "static_outer"], [127, 2, 1, "", "static_pinv"], [127, 2, 1, "", "static_qr"], [127, 2, 1, "", "static_slogdet"], [127, 2, 1, "", "static_solve"], [127, 2, 1, "", "static_svd"], [127, 2, 1, "", "static_svdvals"], [127, 2, 1, "", "static_tensordot"], [127, 2, 1, "", "static_trace"], [127, 2, 1, "", "static_vander"], [127, 2, 1, "", "static_vecdot"], [127, 2, 1, "", "static_vector_norm"], [127, 2, 1, "", "static_vector_to_skew_symmetric_matrix"], [127, 2, 1, "", "svd"], [127, 2, 1, "", "svdvals"], [127, 2, 1, "", "tensordot"], [127, 2, 1, "", "tensorsolve"], [127, 2, 1, "", "trace"], [127, 2, 1, "", "vander"], [127, 2, 1, "", "vecdot"], [127, 2, 1, "", "vector_norm"], [127, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.container.losses": [[129, 1, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[129, 2, 1, "", "binary_cross_entropy"], [129, 2, 1, "", "cross_entropy"], [129, 2, 1, "", "sparse_cross_entropy"], [129, 2, 1, "", "static_binary_cross_entropy"], [129, 2, 1, "", "static_cross_entropy"], [129, 2, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[131, 1, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[131, 2, 1, "", "clip"], [131, 2, 1, "", "concat"], [131, 2, 1, "", "constant_pad"], [131, 2, 1, "", "expand_dims"], [131, 2, 1, "", "flip"], [131, 2, 1, "", "permute_dims"], [131, 2, 1, "", "repeat"], [131, 2, 1, "", "reshape"], [131, 2, 1, "", "roll"], [131, 2, 1, "", "split"], [131, 2, 1, "", "squeeze"], [131, 2, 1, "", "stack"], [131, 2, 1, "", "static_clip"], [131, 2, 1, "", "static_concat"], [131, 2, 1, "", "static_constant_pad"], [131, 2, 1, "", "static_expand_dims"], [131, 2, 1, "", "static_flip"], [131, 2, 1, "", "static_permute_dims"], [131, 2, 1, "", "static_repeat"], [131, 2, 1, "", "static_reshape"], [131, 2, 1, "", "static_roll"], [131, 2, 1, "", "static_split"], [131, 2, 1, "", "static_squeeze"], [131, 2, 1, "", "static_stack"], [131, 2, 1, "", "static_swapaxes"], [131, 2, 1, "", "static_tile"], [131, 2, 1, "", "static_unstack"], [131, 2, 1, "", "static_zero_pad"], [131, 2, 1, "", "swapaxes"], [131, 2, 1, "", "tile"], [131, 2, 1, "", "unstack"], [131, 2, 1, "", "zero_pad"]], "ivy.container.norms": [[133, 1, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[133, 2, 1, "", "layer_norm"]], "ivy.container.random": [[135, 1, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[135, 2, 1, "", "multinomial"], [135, 2, 1, "", "randint"], [135, 2, 1, "", "random_normal"], [135, 2, 1, "", "random_uniform"], [135, 2, 1, "", "shuffle"], [135, 2, 1, "", "static_multinomial"], [135, 2, 1, "", "static_randint"], [135, 2, 1, "", "static_random_normal"], [135, 2, 1, "", "static_random_uniform"], [135, 2, 1, "", "static_shuffle"]], "ivy.container.searching": [[137, 1, 1, "", "ContainerWithSearching"]], "ivy.container.searching.ContainerWithSearching": [[137, 2, 1, "", "argmax"], [137, 2, 1, "", "argmin"], [137, 2, 1, "", "argwhere"], [137, 2, 1, "", "nonzero"], [137, 2, 1, "", "static_argmax"], [137, 2, 1, "", "static_argmin"], [137, 2, 1, "", "static_argwhere"], [137, 2, 1, "", "static_nonzero"], [137, 2, 1, "", "static_where"], [137, 2, 1, "", "where"]], "ivy.container.set": [[139, 1, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[139, 2, 1, "", "static_unique_all"], [139, 2, 1, "", "static_unique_counts"], [139, 2, 1, "", "static_unique_inverse"], [139, 2, 1, "", "static_unique_values"], [139, 2, 1, "", "unique_all"], [139, 2, 1, "", "unique_counts"], [139, 2, 1, "", "unique_inverse"], [139, 2, 1, "", "unique_values"]], "ivy.container.sorting": [[141, 1, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[141, 2, 1, "", "argsort"], [141, 2, 1, "", "searchsorted"], [141, 2, 1, "", "sort"], [141, 2, 1, "", "static_argsort"], [141, 2, 1, "", "static_searchsorted"], [141, 2, 1, "", "static_sort"]], "ivy.container.statistical": [[143, 1, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[143, 2, 1, "", "cumprod"], [143, 2, 1, "", "cumsum"], [143, 2, 1, "", "einsum"], [143, 2, 1, "", "max"], [143, 2, 1, "", "mean"], [143, 2, 1, "", "min"], [143, 2, 1, "", "prod"], [143, 2, 1, "", "static_cumprod"], [143, 2, 1, "", "static_cumsum"], [143, 2, 1, "", "static_prod"], [143, 2, 1, "", "static_sum"], [143, 2, 1, "", "static_var"], [143, 2, 1, "", "std"], [143, 2, 1, "", "sum"], [143, 2, 1, "", "var"]], "ivy.container.utility": [[145, 1, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[145, 2, 1, "", "all"], [145, 2, 1, "", "any"], [145, 2, 1, "", "static_all"], [145, 2, 1, "", "static_any"]], "ivy.container.wrapping": [[147, 4, 1, "", "add_ivy_container_instance_methods"]], "ivy.func_wrapper": [[189, 4, 1, "", "handle_array_function"], [190, 4, 1, "", "handle_array_like_without_promotion"], [191, 4, 1, "", "handle_nans"], [192, 4, 1, "", "handle_nestable"], [193, 4, 1, "", "handle_out_argument"], [194, 4, 1, "", "infer_device"], [195, 4, 1, "", "infer_dtype"], [196, 4, 1, "", "inputs_to_ivy_arrays"], [197, 4, 1, "", "inputs_to_native_arrays"], [198, 4, 1, "", "integer_arrays_to_float"], [199, 4, 1, "", "output_to_native_arrays"], [200, 4, 1, "", "outputs_to_ivy_arrays"], [201, 4, 1, "", "to_ivy_arrays_and_back"], [202, 4, 1, "", "to_native_arrays_and_back"], [203, 4, 1, "", "try_array_function_override"], [188, 4, 1, "", "with_supported_device_and_dtypes"], [188, 4, 1, "", "with_supported_devices"], [188, 4, 1, "", "with_supported_dtypes"], [188, 4, 1, "", "with_unsupported_device_and_dtypes"], [188, 4, 1, "", "with_unsupported_devices"], [188, 4, 1, "", "with_unsupported_dtypes"]], "ivy.functional.ivy": [[205, 0, 0, "-", "activations"], [249, 0, 0, "-", "constants"], [250, 0, 0, "-", "control_flow_ops"], [255, 0, 0, "-", "creation"], [341, 0, 0, "-", "data_type"], [446, 0, 0, "-", "device"], [481, 0, 0, "-", "elementwise"], [802, 0, 0, "-", "experimental"], [1417, 0, 0, "-", "general"], [1612, 0, 0, "-", "gradients"], [1650, 0, 0, "-", "layers"], [1714, 0, 0, "-", "linear_algebra"], [1854, 0, 0, "-", "losses"], [1870, 0, 0, "-", "manipulation"], [1951, 0, 0, "-", "meta"], [1955, 0, 0, "-", "nest"], [1975, 0, 0, "-", "norms"], [1980, 0, 0, "-", "random"], [2007, 0, 0, "-", "searching"], [2033, 0, 0, "-", "set"], [2054, 0, 0, "-", "sorting"], [2070, 0, 0, "-", "statistical"], [2116, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[206, 4, 1, "", "deserialize"], [210, 4, 1, "", "gelu"], [212, 4, 1, "", "get"], [216, 4, 1, "", "leaky_relu"], [221, 4, 1, "", "log_softmax"], [226, 4, 1, "", "mish"], [231, 4, 1, "", "relu"], [236, 4, 1, "", "sigmoid"], [241, 4, 1, "", "softmax"], [246, 4, 1, "", "softplus"]], "ivy.functional.ivy.constants": [[249, 5, 1, "", "e"], [249, 5, 1, "", "inf"], [249, 5, 1, "", "nan"], [249, 5, 1, "", "newaxis"], [249, 5, 1, "", "pi"]], "ivy.functional.ivy.control_flow_ops": [[251, 4, 1, "", "IfElse"], [252, 4, 1, "", "WhileLoop"], [253, 4, 1, "", "if_else"], [254, 4, 1, "", "while_loop"]], "ivy.functional.ivy.creation": [[256, 1, 1, "", "NestedSequence"], [258, 4, 1, "", "arange"], [255, 4, 1, "", "array"], [262, 4, 1, "", "asarray"], [264, 4, 1, "", "asarray_handle_nestable"], [265, 4, 1, "", "asarray_infer_device"], [266, 4, 1, "", "asarray_to_native_arrays_and_back"], [269, 4, 1, "", "copy_array"], [270, 4, 1, "", "empty"], [274, 4, 1, "", "empty_like"], [277, 4, 1, "", "eye"], [282, 4, 1, "", "from_dlpack"], [284, 4, 1, "", "full"], [288, 4, 1, "", "full_like"], [293, 4, 1, "", "linspace"], [298, 4, 1, "", "logspace"], [303, 4, 1, "", "meshgrid"], [308, 4, 1, "", "native_array"], [313, 4, 1, "", "one_hot"], [316, 4, 1, "", "ones"], [321, 4, 1, "", "ones_like"], [327, 4, 1, "", "tril"], [332, 4, 1, "", "triu"], [335, 4, 1, "", "zeros"], [340, 4, 1, "", "zeros_like"]], "ivy.functional.ivy.creation.NestedSequence": [[256, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type": [[342, 1, 1, "", "DefaultComplexDtype"], [343, 1, 1, "", "DefaultDtype"], [344, 1, 1, "", "DefaultFloatDtype"], [345, 1, 1, "", "DefaultIntDtype"], [346, 1, 1, "", "DefaultUintDtype"], [347, 4, 1, "", "as_ivy_dtype"], [348, 4, 1, "", "as_native_dtype"], [352, 4, 1, "", "astype"], [357, 4, 1, "", "broadcast_arrays"], [362, 4, 1, "", "broadcast_to"], [367, 4, 1, "", "can_cast"], [369, 4, 1, "", "check_float"], [370, 4, 1, "", "closest_valid_dtype"], [372, 4, 1, "", "default_complex_dtype"], [374, 4, 1, "", "default_dtype"], [376, 4, 1, "", "default_float_dtype"], [378, 4, 1, "", "default_int_dtype"], [379, 4, 1, "", "default_uint_dtype"], [382, 4, 1, "", "dtype"], [384, 4, 1, "", "dtype_bits"], [388, 4, 1, "", "finfo"], [391, 4, 1, "", "function_supported_dtypes"], [394, 4, 1, "", "function_unsupported_dtypes"], [399, 4, 1, "", "iinfo"], [401, 4, 1, "", "infer_default_dtype"], [402, 4, 1, "", "invalid_dtype"], [406, 4, 1, "", "is_bool_dtype"], [410, 4, 1, "", "is_complex_dtype"], [415, 4, 1, "", "is_float_dtype"], [420, 4, 1, "", "is_int_dtype"], [425, 4, 1, "", "is_uint_dtype"], [427, 4, 1, "", "promote_types"], [428, 4, 1, "", "promote_types_of_inputs"], [432, 4, 1, "", "result_type"], [434, 4, 1, "", "set_default_complex_dtype"], [435, 4, 1, "", "set_default_dtype"], [436, 4, 1, "", "set_default_float_dtype"], [437, 4, 1, "", "set_default_int_dtype"], [438, 4, 1, "", "set_default_uint_dtype"], [439, 4, 1, "", "type_promote_arrays"], [440, 4, 1, "", "unset_default_complex_dtype"], [441, 4, 1, "", "unset_default_dtype"], [442, 4, 1, "", "unset_default_float_dtype"], [443, 4, 1, "", "unset_default_int_dtype"], [444, 4, 1, "", "unset_default_uint_dtype"], [445, 4, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultComplexDtype": [[342, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultDtype": [[343, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[344, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[345, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultUintDtype": [[346, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[447, 1, 1, "", "DefaultDevice"], [448, 1, 1, "", "Profiler"], [449, 4, 1, "", "as_ivy_dev"], [450, 4, 1, "", "as_native_dev"], [451, 4, 1, "", "clear_mem_on_dev"], [452, 4, 1, "", "default_device"], [456, 4, 1, "", "dev"], [458, 4, 1, "", "dev_util"], [459, 4, 1, "", "function_supported_devices"], [460, 4, 1, "", "function_unsupported_devices"], [461, 4, 1, "", "get_all_ivy_arrays_on_dev"], [462, 4, 1, "", "gpu_is_available"], [463, 4, 1, "", "num_cpu_cores"], [464, 4, 1, "", "num_gpus"], [465, 4, 1, "", "num_ivy_arrays_on_dev"], [466, 4, 1, "", "percent_used_mem_on_dev"], [467, 4, 1, "", "print_all_ivy_arrays_on_dev"], [468, 4, 1, "", "set_default_device"], [469, 4, 1, "", "set_split_factor"], [470, 4, 1, "", "split_factor"], [471, 4, 1, "", "split_func_call"], [476, 4, 1, "", "to_device"], [477, 4, 1, "", "total_mem_on_dev"], [478, 4, 1, "", "tpu_is_available"], [479, 4, 1, "", "unset_default_device"], [480, 4, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[447, 2, 1, "", "__enter__"], [447, 2, 1, "", "__exit__"], [447, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.Profiler": [[448, 2, 1, "", "__init__"], [448, 2, 1, "", "start"], [448, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[485, 4, 1, "", "abs"], [490, 4, 1, "", "acos"], [495, 4, 1, "", "acosh"], [500, 4, 1, "", "add"], [505, 4, 1, "", "asin"], [510, 4, 1, "", "asinh"], [515, 4, 1, "", "atan"], [520, 4, 1, "", "atan2"], [525, 4, 1, "", "atanh"], [530, 4, 1, "", "bitwise_and"], [535, 4, 1, "", "bitwise_invert"], [540, 4, 1, "", "bitwise_left_shift"], [545, 4, 1, "", "bitwise_or"], [550, 4, 1, "", "bitwise_right_shift"], [555, 4, 1, "", "bitwise_xor"], [560, 4, 1, "", "ceil"], [565, 4, 1, "", "cos"], [570, 4, 1, "", "cosh"], [575, 4, 1, "", "deg2rad"], [580, 4, 1, "", "divide"], [585, 4, 1, "", "equal"], [590, 4, 1, "", "erf"], [595, 4, 1, "", "exp"], [600, 4, 1, "", "expm1"], [605, 4, 1, "", "floor"], [610, 4, 1, "", "floor_divide"], [615, 4, 1, "", "greater"], [620, 4, 1, "", "greater_equal"], [625, 4, 1, "", "isfinite"], [630, 4, 1, "", "isinf"], [635, 4, 1, "", "isnan"], [640, 4, 1, "", "isreal"], [645, 4, 1, "", "less"], [650, 4, 1, "", "less_equal"], [655, 4, 1, "", "log"], [660, 4, 1, "", "log10"], [665, 4, 1, "", "log1p"], [670, 4, 1, "", "log2"], [675, 4, 1, "", "logaddexp"], [680, 4, 1, "", "logical_and"], [685, 4, 1, "", "logical_not"], [690, 4, 1, "", "logical_or"], [695, 4, 1, "", "logical_xor"], [700, 4, 1, "", "maximum"], [705, 4, 1, "", "minimum"], [710, 4, 1, "", "multiply"], [715, 4, 1, "", "negative"], [720, 4, 1, "", "not_equal"], [725, 4, 1, "", "positive"], [730, 4, 1, "", "pow"], [735, 4, 1, "", "rad2deg"], [740, 4, 1, "", "reciprocal"], [745, 4, 1, "", "remainder"], [750, 4, 1, "", "round"], [755, 4, 1, "", "sign"], [760, 4, 1, "", "sin"], [765, 4, 1, "", "sinh"], [770, 4, 1, "", "sqrt"], [775, 4, 1, "", "square"], [781, 4, 1, "", "subtract"], [786, 4, 1, "", "tan"], [791, 4, 1, "", "tanh"], [796, 4, 1, "", "trunc"], [801, 4, 1, "", "trunc_divide"]], "ivy.functional.ivy.experimental": [[803, 1, 1, "", "NativeSparseArray"], [804, 1, 1, "", "SparseArray"], [805, 0, 0, "-", "activations"], [812, 4, 1, "", "adjoint"], [817, 4, 1, "", "allclose"], [822, 4, 1, "", "angle"], [827, 4, 1, "", "atleast_1d"], [832, 4, 1, "", "atleast_2d"], [837, 4, 1, "", "atleast_3d"], [842, 4, 1, "", "avg_pool1d"], [847, 4, 1, "", "avg_pool2d"], [852, 4, 1, "", "avg_pool3d"], [857, 4, 1, "", "bernoulli"], [862, 4, 1, "", "beta"], [867, 4, 1, "", "binarizer"], [871, 4, 1, "", "binary_cross_entropy_with_logits"], [873, 4, 1, "", "bind_custom_gradient_function"], [876, 4, 1, "", "broadcast_shapes"], [878, 0, 0, "-", "compilation"], [879, 4, 1, "", "compute_weight_mat"], [880, 0, 0, "-", "constants"], [884, 4, 1, "", "copysign"], [889, 4, 1, "", "corrcoef"], [894, 4, 1, "", "count_nonzero"], [896, 0, 0, "-", "creation"], [905, 0, 0, "-", "data_type"], [910, 4, 1, "", "dct"], [912, 0, 0, "-", "device"], [915, 4, 1, "", "dft"], [920, 4, 1, "", "diagflat"], [925, 4, 1, "", "diff"], [930, 4, 1, "", "dirichlet"], [932, 4, 1, "", "dropout1d"], [936, 4, 1, "", "dsplit"], [941, 4, 1, "", "dstack"], [946, 4, 1, "", "eig"], [951, 4, 1, "", "eigvals"], [953, 0, 0, "-", "elementwise"], [985, 4, 1, "", "embedding"], [990, 4, 1, "", "exp2"], [995, 4, 1, "", "expand"], [1000, 4, 1, "", "eye_like"], [1005, 4, 1, "", "fft"], [1010, 4, 1, "", "fix"], [1015, 4, 1, "", "flatten"], [1020, 4, 1, "", "fliplr"], [1025, 4, 1, "", "flipud"], [1030, 4, 1, "", "float_power"], [1035, 4, 1, "", "fmax"], [1040, 4, 1, "", "fmin"], [1045, 4, 1, "", "fmod"], [1049, 4, 1, "", "gamma"], [1053, 4, 1, "", "gcd"], [1055, 0, 0, "-", "general"], [1060, 4, 1, "", "gradient"], [1062, 0, 0, "-", "gradients"], [1066, 4, 1, "", "hamming_window"], [1070, 4, 1, "", "hann_window"], [1075, 4, 1, "", "heaviside"], [1080, 4, 1, "", "hsplit"], [1085, 4, 1, "", "hstack"], [1090, 4, 1, "", "hypot"], [1095, 4, 1, "", "i0"], [1100, 4, 1, "", "ifft"], [1105, 4, 1, "", "imag"], [1110, 4, 1, "", "instance_norm"], [1112, 4, 1, "", "interp"], [1116, 4, 1, "", "interpolate"], [1118, 4, 1, "", "is_ivy_sparse_array"], [1119, 4, 1, "", "is_native_dtype"], [1120, 4, 1, "", "is_native_sparse_array"], [1124, 4, 1, "", "isclose"], [1129, 4, 1, "", "isin"], [1133, 4, 1, "", "kaiser_bessel_derived_window"], [1137, 4, 1, "", "kaiser_window"], [1142, 4, 1, "", "kron"], [1147, 4, 1, "", "l2_normalize"], [1149, 0, 0, "-", "layers"], [1169, 4, 1, "", "lcm"], [1174, 4, 1, "", "lexsort"], [1176, 0, 0, "-", "linear_algebra"], [1186, 4, 1, "", "logaddexp2"], [1191, 4, 1, "", "logit"], [1193, 0, 0, "-", "losses"], [1198, 4, 1, "", "lp_normalize"], [1200, 0, 0, "-", "manipulation"], [1227, 4, 1, "", "matrix_exp"], [1232, 4, 1, "", "max_pool1d"], [1237, 4, 1, "", "max_pool2d"], [1242, 4, 1, "", "max_pool3d"], [1247, 4, 1, "", "median"], [1249, 0, 0, "-", "meta"], [1253, 4, 1, "", "moveaxis"], [1258, 4, 1, "", "msort"], [1263, 4, 1, "", "nan_to_num"], [1268, 4, 1, "", "nanmean"], [1273, 4, 1, "", "nanmedian"], [1278, 4, 1, "", "nansum"], [1280, 4, 1, "", "native_sparse_array"], [1281, 4, 1, "", "native_sparse_array_to_indices_values_and_shape"], [1282, 4, 1, "", "ndenumerate"], [1283, 4, 1, "", "ndindex"], [1284, 0, 0, "-", "nest"], [1288, 4, 1, "", "nextafter"], [1290, 0, 0, "-", "norms"], [1297, 4, 1, "", "pad"], [1299, 4, 1, "", "padding_ceil_mode"], [1303, 4, 1, "", "poisson"], [1308, 4, 1, "", "prelu"], [1313, 4, 1, "", "quantile"], [1315, 0, 0, "-", "random"], [1324, 4, 1, "", "real"], [1329, 4, 1, "", "rot90"], [1331, 0, 0, "-", "searching"], [1332, 0, 0, "-", "set"], [1336, 4, 1, "", "signbit"], [1341, 4, 1, "", "sinc"], [1343, 0, 0, "-", "sorting"], [1346, 0, 0, "-", "sparse_array"], [1353, 0, 0, "-", "statistical"], [1364, 4, 1, "", "take_along_axis"], [1369, 4, 1, "", "thresholded_relu"], [1374, 4, 1, "", "top_k"], [1377, 4, 1, "", "trapz"], [1381, 4, 1, "", "tril_indices"], [1385, 4, 1, "", "triu_indices"], [1390, 4, 1, "", "unravel_index"], [1391, 0, 0, "-", "utility"], [1395, 4, 1, "", "vorbis_window"], [1400, 4, 1, "", "vsplit"], [1405, 4, 1, "", "vstack"], [1410, 4, 1, "", "xlogy"], [1415, 4, 1, "", "zeta"]], "ivy.functional.ivy.experimental.SparseArray": [[804, 2, 1, "", "__init__"], [804, 3, 1, "", "ccol_indices"], [804, 3, 1, "", "col_indices"], [804, 3, 1, "", "coo_indices"], [804, 3, 1, "", "crow_indices"], [804, 3, 1, "", "data"], [804, 3, 1, "", "dense_shape"], [804, 3, 1, "", "row_indices"], [804, 2, 1, "", "to_dense_array"], [804, 3, 1, "", "values"]], "ivy.functional.ivy.experimental.activations": [[806, 4, 1, "", "logit"], [807, 4, 1, "", "prelu"], [808, 4, 1, "", "thresholded_relu"]], "ivy.functional.ivy.experimental.creation": [[897, 4, 1, "", "eye_like"], [898, 4, 1, "", "hamming_window"], [899, 4, 1, "", "hann_window"], [900, 4, 1, "", "kaiser_bessel_derived_window"], [901, 4, 1, "", "kaiser_window"], [902, 4, 1, "", "tril_indices"], [903, 4, 1, "", "triu_indices"], [904, 4, 1, "", "vorbis_window"]], "ivy.functional.ivy.experimental.data_type": [[906, 4, 1, "", "is_native_dtype"]], "ivy.functional.ivy.experimental.elementwise": [[954, 4, 1, "", "allclose"], [955, 4, 1, "", "angle"], [956, 4, 1, "", "binarizer"], [957, 4, 1, "", "copysign"], [958, 4, 1, "", "count_nonzero"], [959, 4, 1, "", "diff"], [960, 4, 1, "", "exp2"], [961, 4, 1, "", "fix"], [962, 4, 1, "", "float_power"], [963, 4, 1, "", "fmax"], [964, 4, 1, "", "fmin"], [965, 4, 1, "", "fmod"], [966, 4, 1, "", "gcd"], [967, 4, 1, "", "gradient"], [968, 4, 1, "", "hypot"], [969, 4, 1, "", "imag"], [970, 4, 1, "", "isclose"], [971, 4, 1, "", "lcm"], [972, 4, 1, "", "logaddexp2"], [973, 4, 1, "", "nan_to_num"], [974, 4, 1, "", "nansum"], [975, 4, 1, "", "nextafter"], [976, 4, 1, "", "real"], [977, 4, 1, "", "signbit"], [978, 4, 1, "", "sinc"], [979, 4, 1, "", "trapz"], [980, 4, 1, "", "xlogy"], [981, 4, 1, "", "zeta"]], "ivy.functional.ivy.experimental.general": [[1056, 4, 1, "", "isin"]], "ivy.functional.ivy.experimental.gradients": [[1063, 4, 1, "", "bind_custom_gradient_function"]], "ivy.functional.ivy.experimental.layers": [[1150, 4, 1, "", "avg_pool1d"], [1151, 4, 1, "", "avg_pool2d"], [1152, 4, 1, "", "avg_pool3d"], [1153, 4, 1, "", "compute_weight_mat"], [1154, 4, 1, "", "dct"], [1155, 4, 1, "", "dft"], [1156, 4, 1, "", "dropout1d"], [1157, 4, 1, "", "embedding"], [1158, 4, 1, "", "fft"], [1159, 4, 1, "", "ifft"], [1160, 4, 1, "", "interp"], [1161, 4, 1, "", "interpolate"], [1162, 4, 1, "", "max_pool1d"], [1163, 4, 1, "", "max_pool2d"], [1164, 4, 1, "", "max_pool3d"], [1165, 4, 1, "", "padding_ceil_mode"]], "ivy.functional.ivy.experimental.linear_algebra": [[1177, 4, 1, "", "adjoint"], [1178, 4, 1, "", "diagflat"], [1179, 4, 1, "", "eig"], [1180, 4, 1, "", "eigvals"], [1181, 4, 1, "", "kron"], [1182, 4, 1, "", "matrix_exp"]], "ivy.functional.ivy.experimental.losses": [[1194, 4, 1, "", "binary_cross_entropy_with_logits"]], "ivy.functional.ivy.experimental.manipulation": [[1201, 4, 1, "", "atleast_1d"], [1202, 4, 1, "", "atleast_2d"], [1203, 4, 1, "", "atleast_3d"], [1204, 4, 1, "", "broadcast_shapes"], [1205, 4, 1, "", "dsplit"], [1206, 4, 1, "", "dstack"], [1207, 4, 1, "", "expand"], [1208, 4, 1, "", "flatten"], [1209, 4, 1, "", "fliplr"], [1210, 4, 1, "", "flipud"], [1211, 4, 1, "", "heaviside"], [1212, 4, 1, "", "hsplit"], [1213, 4, 1, "", "hstack"], [1214, 4, 1, "", "i0"], [1215, 4, 1, "", "moveaxis"], [1216, 4, 1, "", "ndenumerate"], [1217, 4, 1, "", "ndindex"], [1218, 4, 1, "", "pad"], [1219, 4, 1, "", "rot90"], [1220, 4, 1, "", "take_along_axis"], [1221, 4, 1, "", "top_k"], [1222, 4, 1, "", "vsplit"], [1223, 4, 1, "", "vstack"]], "ivy.functional.ivy.experimental.norms": [[1291, 4, 1, "", "instance_norm"], [1292, 4, 1, "", "l2_normalize"], [1293, 4, 1, "", "lp_normalize"]], "ivy.functional.ivy.experimental.random": [[1316, 4, 1, "", "bernoulli"], [1317, 4, 1, "", "beta"], [1318, 4, 1, "", "dirichlet"], [1319, 4, 1, "", "gamma"], [1320, 4, 1, "", "poisson"]], "ivy.functional.ivy.experimental.sorting": [[1344, 4, 1, "", "lexsort"], [1345, 4, 1, "", "msort"]], "ivy.functional.ivy.experimental.sparse_array": [[1347, 1, 1, "", "NativeSparseArray"], [1348, 1, 1, "", "SparseArray"], [1349, 4, 1, "", "is_ivy_sparse_array"], [1350, 4, 1, "", "is_native_sparse_array"], [1351, 4, 1, "", "native_sparse_array"], [1352, 4, 1, "", "native_sparse_array_to_indices_values_and_shape"]], "ivy.functional.ivy.experimental.sparse_array.SparseArray": [[1348, 2, 1, "", "__init__"], [1348, 3, 1, "", "ccol_indices"], [1348, 3, 1, "", "col_indices"], [1348, 3, 1, "", "coo_indices"], [1348, 3, 1, "", "crow_indices"], [1348, 3, 1, "", "data"], [1348, 3, 1, "", "dense_shape"], [1348, 3, 1, "", "row_indices"], [1348, 2, 1, "", "to_dense_array"], [1348, 3, 1, "", "values"]], "ivy.functional.ivy.experimental.statistical": [[1354, 4, 1, "", "corrcoef"], [1355, 4, 1, "", "median"], [1356, 4, 1, "", "nanmean"], [1357, 4, 1, "", "nanmedian"], [1358, 4, 1, "", "quantile"], [1359, 4, 1, "", "unravel_index"]], "ivy.functional.ivy.general": [[1421, 4, 1, "", "all_equal"], [1423, 4, 1, "", "arg_info"], [1424, 4, 1, "", "arg_names"], [1428, 4, 1, "", "array_equal"], [1433, 4, 1, "", "assert_supports_inplace"], [1435, 4, 1, "", "cache_fn"], [1439, 4, 1, "", "clip_matrix_norm"], [1444, 4, 1, "", "clip_vector_norm"], [1446, 4, 1, "", "container_types"], [1447, 4, 1, "", "current_backend_str"], [1450, 4, 1, "", "default"], [1454, 4, 1, "", "einops_rearrange"], [1459, 4, 1, "", "einops_reduce"], [1464, 4, 1, "", "einops_repeat"], [1468, 4, 1, "", "exists"], [1472, 4, 1, "", "fourier_encode"], [1474, 4, 1, "", "function_supported_devices_and_dtypes"], [1475, 4, 1, "", "function_unsupported_devices_and_dtypes"], [1479, 4, 1, "", "gather"], [1484, 4, 1, "", "gather_nd"], [1486, 4, 1, "", "get_all_arrays_in_memory"], [1487, 4, 1, "", "get_array_mode"], [1488, 4, 1, "", "get_exception_trace_mode"], [1489, 4, 1, "", "get_item"], [1490, 4, 1, "", "get_min_base"], [1491, 4, 1, "", "get_min_denominator"], [1492, 4, 1, "", "get_nestable_mode"], [1496, 4, 1, "", "get_num_dims"], [1498, 4, 1, "", "get_queue_timeout"], [1499, 4, 1, "", "get_referrers_recursive"], [1500, 4, 1, "", "get_show_func_wrapper_trace_mode"], [1501, 4, 1, "", "get_tmp_dir"], [1505, 4, 1, "", "has_nans"], [1507, 4, 1, "", "inplace_arrays_supported"], [1511, 4, 1, "", "inplace_decrement"], [1516, 4, 1, "", "inplace_increment"], [1521, 4, 1, "", "inplace_update"], [1523, 4, 1, "", "inplace_variables_supported"], [1527, 4, 1, "", "is_array"], [1532, 4, 1, "", "is_ivy_array"], [1536, 4, 1, "", "is_ivy_container"], [1540, 4, 1, "", "is_native_array"], [1542, 4, 1, "", "isscalar"], [1543, 4, 1, "", "match_kwargs"], [1544, 4, 1, "", "multiprocessing"], [1545, 4, 1, "", "num_arrays_in_memory"], [1546, 4, 1, "", "print_all_arrays_in_memory"], [1550, 4, 1, "", "scatter_flat"], [1555, 4, 1, "", "scatter_nd"], [1557, 4, 1, "", "set_array_mode"], [1558, 4, 1, "", "set_exception_trace_mode"], [1559, 4, 1, "", "set_min_base"], [1560, 4, 1, "", "set_min_denominator"], [1561, 4, 1, "", "set_nestable_mode"], [1562, 4, 1, "", "set_queue_timeout"], [1563, 4, 1, "", "set_shape_array_mode"], [1564, 4, 1, "", "set_show_func_wrapper_trace_mode"], [1565, 4, 1, "", "set_tmp_dir"], [1566, 4, 1, "", "shape"], [1567, 4, 1, "", "shape_array_mode"], [1571, 4, 1, "", "stable_divide"], [1576, 4, 1, "", "stable_pow"], [1582, 4, 1, "", "supports_inplace_updates"], [1583, 4, 1, "", "to_ivy_shape"], [1587, 4, 1, "", "to_list"], [1588, 4, 1, "", "to_native_shape"], [1593, 4, 1, "", "to_numpy"], [1598, 4, 1, "", "to_scalar"], [1599, 4, 1, "", "try_else_none"], [1600, 4, 1, "", "unset_array_mode"], [1601, 4, 1, "", "unset_exception_trace_mode"], [1602, 4, 1, "", "unset_nestable_mode"], [1603, 4, 1, "", "unset_queue_timeout"], [1604, 4, 1, "", "unset_shape_array_mode"], [1605, 4, 1, "", "unset_show_func_wrapper_trace_mode"], [1610, 4, 1, "", "value_is_nan"], [1611, 4, 1, "", "vmap"]], "ivy.functional.ivy.gradients": [[1613, 1, 1, "", "GradientTracking"], [1617, 4, 1, "", "adam_step"], [1621, 4, 1, "", "adam_update"], [1622, 4, 1, "", "execute_with_gradients"], [1623, 4, 1, "", "grad"], [1627, 4, 1, "", "gradient_descent_update"], [1628, 4, 1, "", "jac"], [1632, 4, 1, "", "lamb_update"], [1636, 4, 1, "", "lars_update"], [1640, 4, 1, "", "optimizer_update"], [1641, 4, 1, "", "set_with_grads"], [1646, 4, 1, "", "stop_gradient"], [1647, 4, 1, "", "unset_with_grads"], [1648, 4, 1, "", "value_and_grad"], [1649, 4, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[1613, 2, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[1651, 4, 1, "", "conv"], [1655, 4, 1, "", "conv1d"], [1660, 4, 1, "", "conv1d_transpose"], [1665, 4, 1, "", "conv2d"], [1670, 4, 1, "", "conv2d_transpose"], [1675, 4, 1, "", "conv3d"], [1680, 4, 1, "", "conv3d_transpose"], [1682, 4, 1, "", "conv_general_dilated"], [1683, 4, 1, "", "conv_general_transpose"], [1687, 4, 1, "", "depthwise_conv2d"], [1692, 4, 1, "", "dropout"], [1697, 4, 1, "", "linear"], [1702, 4, 1, "", "lstm_update"], [1707, 4, 1, "", "multi_head_attention"], [1712, 4, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[1718, 4, 1, "", "cholesky"], [1723, 4, 1, "", "cross"], [1728, 4, 1, "", "det"], [1733, 4, 1, "", "diag"], [1738, 4, 1, "", "diagonal"], [1740, 4, 1, "", "eig"], [1744, 4, 1, "", "eigh"], [1749, 4, 1, "", "eigvalsh"], [1754, 4, 1, "", "inner"], [1759, 4, 1, "", "inv"], [1764, 4, 1, "", "matmul"], [1769, 4, 1, "", "matrix_norm"], [1774, 4, 1, "", "matrix_power"], [1779, 4, 1, "", "matrix_rank"], [1784, 4, 1, "", "matrix_transpose"], [1789, 4, 1, "", "outer"], [1794, 4, 1, "", "pinv"], [1799, 4, 1, "", "qr"], [1804, 4, 1, "", "slogdet"], [1809, 4, 1, "", "solve"], [1815, 4, 1, "", "svd"], [1820, 4, 1, "", "svdvals"], [1824, 4, 1, "", "tensordot"], [1828, 4, 1, "", "tensorsolve"], [1833, 4, 1, "", "trace"], [1838, 4, 1, "", "vander"], [1843, 4, 1, "", "vecdot"], [1848, 4, 1, "", "vector_norm"], [1853, 4, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[1858, 4, 1, "", "binary_cross_entropy"], [1863, 4, 1, "", "cross_entropy"], [1868, 4, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[1874, 4, 1, "", "clip"], [1879, 4, 1, "", "concat"], [1884, 4, 1, "", "constant_pad"], [1889, 4, 1, "", "expand_dims"], [1894, 4, 1, "", "flip"], [1899, 4, 1, "", "permute_dims"], [1904, 4, 1, "", "repeat"], [1909, 4, 1, "", "reshape"], [1914, 4, 1, "", "roll"], [1919, 4, 1, "", "split"], [1924, 4, 1, "", "squeeze"], [1929, 4, 1, "", "stack"], [1935, 4, 1, "", "swapaxes"], [1940, 4, 1, "", "tile"], [1945, 4, 1, "", "unstack"], [1950, 4, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[1952, 4, 1, "", "fomaml_step"], [1953, 4, 1, "", "maml_step"], [1954, 4, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[1956, 4, 1, "", "all_nested_indices"], [1957, 4, 1, "", "copy_nest"], [1958, 4, 1, "", "duplicate_array_index_chains"], [1959, 4, 1, "", "index_nest"], [1960, 4, 1, "", "insert_into_nest_at_index"], [1961, 4, 1, "", "insert_into_nest_at_indices"], [1962, 4, 1, "", "map"], [1963, 4, 1, "", "map_nest_at_index"], [1964, 4, 1, "", "map_nest_at_indices"], [1965, 4, 1, "", "multi_index_nest"], [1966, 4, 1, "", "nested_any"], [1967, 4, 1, "", "nested_argwhere"], [1968, 4, 1, "", "nested_map"], [1969, 4, 1, "", "nested_multi_map"], [1970, 4, 1, "", "prune_empty"], [1971, 4, 1, "", "prune_nest_at_index"], [1972, 4, 1, "", "prune_nest_at_indices"], [1973, 4, 1, "", "set_nest_at_index"], [1974, 4, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[1979, 4, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[1984, 4, 1, "", "multinomial"], [1989, 4, 1, "", "randint"], [1994, 4, 1, "", "random_normal"], [1999, 4, 1, "", "random_uniform"], [2001, 4, 1, "", "seed"], [2005, 4, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[2011, 4, 1, "", "argmax"], [2016, 4, 1, "", "argmin"], [2021, 4, 1, "", "argwhere"], [2026, 4, 1, "", "nonzero"], [2032, 4, 1, "", "where"]], "ivy.functional.ivy.set": [[2038, 4, 1, "", "unique_all"], [2043, 4, 1, "", "unique_counts"], [2048, 4, 1, "", "unique_inverse"], [2053, 4, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[2058, 4, 1, "", "argsort"], [2063, 4, 1, "", "searchsorted"], [2068, 4, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[2074, 4, 1, "", "cumprod"], [2079, 4, 1, "", "cumsum"], [2084, 4, 1, "", "einsum"], [2088, 4, 1, "", "max"], [2092, 4, 1, "", "mean"], [2096, 4, 1, "", "min"], [2100, 4, 1, "", "prod"], [2105, 4, 1, "", "std"], [2110, 4, 1, "", "sum"], [2115, 4, 1, "", "var"]], "ivy.functional.ivy.utility": [[2120, 4, 1, "", "all"], [2125, 4, 1, "", "any"]], "ivy.inspection": [[2132, 4, 1, "", "add_array_specs"], [2133, 4, 1, "", "fn_array_spec"]], "ivy.nested_array": [[2134, 0, 0, "-", "nested_array"]], "ivy.nested_array.nested_array": [[2135, 1, 1, "", "NestedArray"]], "ivy.nested_array.nested_array.NestedArray": [[2135, 2, 1, "", "__init__"], [2135, 3, 1, "", "data"], [2135, 3, 1, "", "device"], [2135, 3, 1, "", "dtype"], [2135, 2, 1, "", "from_row_lengths"], [2135, 2, 1, "", "from_row_split"], [2135, 3, 1, "", "ndim"], [2135, 2, 1, "", "nested_array"], [2135, 2, 1, "", "reshape"], [2135, 3, 1, "", "shape"], [2135, 2, 1, "", "unbind"]], "ivy.stateful": [[2149, 0, 0, "-", "activations"], [2152, 0, 0, "-", "converters"], [2157, 0, 0, "-", "helpers"], [2159, 0, 0, "-", "initializers"], [2169, 0, 0, "-", "layers"], [2181, 0, 0, "-", "module"], [2183, 0, 0, "-", "norms"], [2185, 0, 0, "-", "optimizers"], [2191, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[2150, 1, 1, "", "GEGLU"], [2151, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[2150, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[2151, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[2153, 1, 1, "", "ModuleConverters"], [2154, 1, 1, "", "MyTFModule"], [2155, 1, 1, "", "MyTorchModule"], [2156, 4, 1, "", "to_ivy_module"]], "ivy.stateful.converters.ModuleConverters": [[2153, 2, 1, "", "from_haiku_module"], [2153, 2, 1, "", "from_keras_module"], [2153, 2, 1, "", "from_torch_module"], [2153, 2, 1, "", "to_haiku_module"], [2153, 2, 1, "", "to_keras_module"], [2153, 2, 1, "", "to_torch_module"]], "ivy.stateful.converters.MyTFModule": [[2154, 2, 1, "", "__init__"], [2154, 2, 1, "", "call"]], "ivy.stateful.converters.MyTorchModule": [[2155, 2, 1, "", "__init__"], [2155, 2, 1, "", "forward"], [2155, 6, 1, "", "training"]], "ivy.stateful.helpers": [[2158, 1, 1, "", "ModuleHelpers"]], "ivy.stateful.helpers.ModuleHelpers": [[2158, 2, 1, "", "check_submod_rets"], [2158, 2, 1, "", "get_mod_key"], [2158, 2, 1, "", "mod_depth"], [2158, 2, 1, "", "mod_height"], [2158, 2, 1, "", "mod_with_top_mod_key_chain"], [2158, 2, 1, "", "show_mod_in_top_mod"], [2158, 2, 1, "", "show_structure"], [2158, 2, 1, "", "show_v_in_top_v"], [2158, 2, 1, "", "sub_mods"], [2158, 2, 1, "", "track_submod_call_order"], [2158, 2, 1, "", "track_submod_rets"], [2158, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.initializers": [[2160, 1, 1, "", "Constant"], [2161, 1, 1, "", "FirstLayerSiren"], [2162, 1, 1, "", "GlorotUniform"], [2163, 1, 1, "", "Initializer"], [2164, 1, 1, "", "KaimingNormal"], [2165, 1, 1, "", "Ones"], [2166, 1, 1, "", "Siren"], [2167, 1, 1, "", "Uniform"], [2168, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[2160, 2, 1, "", "__init__"], [2160, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[2161, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[2162, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Initializer": [[2163, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.KaimingNormal": [[2164, 2, 1, "", "__init__"], [2164, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[2165, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[2166, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[2167, 2, 1, "", "__init__"], [2167, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[2168, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[2170, 1, 1, "", "Conv1D"], [2171, 1, 1, "", "Conv1DTranspose"], [2172, 1, 1, "", "Conv2D"], [2173, 1, 1, "", "Conv2DTranspose"], [2174, 1, 1, "", "Conv3D"], [2175, 1, 1, "", "Conv3DTranspose"], [2176, 1, 1, "", "DepthwiseConv2D"], [2177, 1, 1, "", "Dropout"], [2178, 1, 1, "", "LSTM"], [2179, 1, 1, "", "Linear"], [2180, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[2170, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[2171, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[2172, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[2173, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[2174, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[2175, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[2176, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[2177, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[2178, 2, 1, "", "__init__"], [2178, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[2179, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[2180, 2, 1, "", "__init__"]], "ivy.stateful.module": [[2182, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[2182, 2, 1, "", "__call__"], [2182, 2, 1, "", "__init__"], [2182, 2, 1, "", "build"], [2182, 3, 1, "", "build_mode"], [2182, 3, 1, "", "built_"], [2182, 2, 1, "", "save_weights"]], "ivy.stateful.norms": [[2184, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[2184, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[2186, 1, 1, "", "Adam"], [2187, 1, 1, "", "LAMB"], [2188, 1, 1, "", "LARS"], [2189, 1, 1, "", "Optimizer"], [2190, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[2186, 2, 1, "", "__init__"], [2186, 2, 1, "", "set_state"], [2186, 3, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[2187, 2, 1, "", "__init__"], [2187, 2, 1, "", "set_state"], [2187, 3, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[2188, 2, 1, "", "__init__"], [2188, 2, 1, "", "set_state"], [2188, 3, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[2189, 2, 1, "", "__init__"], [2189, 2, 1, "", "set_state"], [2189, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[2190, 2, 1, "", "__init__"], [2190, 2, 1, "", "set_state"], [2190, 3, 1, "", "state"]], "ivy.stateful.sequential": [[2192, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[2192, 2, 1, "", "__init__"]], "ivy.verbosity": [[2291, 4, 1, "", "cprint"]], "ivy_tests.test_ivy.helpers": [[2194, 0, 0, "-", "assertions"], [2202, 0, 0, "-", "available_frameworks"], [2205, 0, 0, "-", "function_testing"], [2228, 0, 0, "-", "globals"], [2236, 0, 0, "-", "hypothesis_helpers"], [2270, 0, 0, "-", "structs"], [2272, 0, 0, "-", "test_parameter_flags"], [2282, 0, 0, "-", "testing_helpers"]], "ivy_tests.test_ivy.helpers.assertions": [[2195, 4, 1, "", "assert_all_close"], [2196, 4, 1, "", "assert_same_type_and_shape"], [2197, 4, 1, "", "check_unsupported_device"], [2198, 4, 1, "", "check_unsupported_device_and_dtype"], [2199, 4, 1, "", "check_unsupported_dtype"], [2200, 4, 1, "", "test_unsupported_function"], [2201, 4, 1, "", "value_test"]], "ivy_tests.test_ivy.helpers.available_frameworks": [[2203, 4, 1, "", "available_frameworks"], [2204, 4, 1, "", "ground_truth"]], "ivy_tests.test_ivy.helpers.function_testing": [[2206, 4, 1, "", "args_to_container"], [2207, 4, 1, "", "as_cont"], [2208, 4, 1, "", "as_lists"], [2209, 4, 1, "", "convtrue"], [2210, 4, 1, "", "create_args_kwargs"], [2211, 4, 1, "", "empty_func"], [2212, 4, 1, "", "flatten"], [2213, 4, 1, "", "flatten_and_to_np"], [2214, 4, 1, "", "flatten_fw_and_to_np"], [2215, 4, 1, "", "framework_comparator"], [2216, 4, 1, "", "get_frontend_ret"], [2217, 4, 1, "", "get_ret_and_flattened_np_array"], [2218, 4, 1, "", "gradient_incompatible_function"], [2219, 4, 1, "", "gradient_test"], [2220, 4, 1, "", "gradient_unsupported_dtypes"], [2221, 4, 1, "", "kwargs_to_args_n_kwargs"], [2222, 4, 1, "", "make_json_pickable"], [2223, 4, 1, "", "test_frontend_function"], [2224, 4, 1, "", "test_frontend_method"], [2225, 4, 1, "", "test_function"], [2226, 4, 1, "", "test_method"], [2227, 4, 1, "", "var_fn"]], "ivy_tests.test_ivy.helpers.globals": [[2229, 1, 1, "", "InterruptedTest"], [2230, 1, 1, "", "TestData"], [2231, 4, 1, "", "remove_all_current_framework"], [2232, 4, 1, "", "setup_api_test"], [2233, 4, 1, "", "setup_frontend_test"], [2234, 4, 1, "", "teardown_api_test"], [2235, 4, 1, "", "teardown_frontend_test"]], "ivy_tests.test_ivy.helpers.globals.InterruptedTest": [[2229, 2, 1, "", "__init__"]], "ivy_tests.test_ivy.helpers.globals.TestData": [[2230, 2, 1, "", "__init__"], [2230, 6, 1, "", "fn_name"], [2230, 6, 1, "", "fn_tree"], [2230, 6, 1, "", "supported_device_dtypes"], [2230, 6, 1, "", "test_fn"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers": [[2237, 0, 0, "-", "array_helpers"], [2251, 0, 0, "-", "dtype_helpers"], [2255, 0, 0, "-", "general_helpers"], [2266, 0, 0, "-", "number_helpers"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers": [[2238, 4, 1, "", "array_and_broadcastable_shape"], [2239, 4, 1, "", "array_bools"], [2240, 4, 1, "", "array_indices_axis"], [2241, 4, 1, "", "array_values"], [2242, 4, 1, "", "arrays_and_axes"], [2243, 4, 1, "", "arrays_for_pooling"], [2244, 4, 1, "", "broadcast_shapes"], [2245, 4, 1, "", "dtype_and_values"], [2246, 4, 1, "", "dtype_values_axis"], [2247, 4, 1, "", "list_of_length"], [2248, 4, 1, "", "lists"], [2249, 4, 1, "", "mutually_broadcastable_shapes"], [2250, 4, 1, "", "prod"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers": [[2252, 4, 1, "", "array_dtypes"], [2253, 4, 1, "", "get_castable_dtype"], [2254, 4, 1, "", "get_dtypes"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers": [[2256, 4, 1, "", "apply_safety_factor"], [2257, 4, 1, "", "embedding_helper"], [2258, 4, 1, "", "get_axis"], [2259, 4, 1, "", "get_bounds"], [2260, 4, 1, "", "get_mean_std"], [2261, 4, 1, "", "get_shape"], [2262, 4, 1, "", "matrix_is_stable"], [2263, 4, 1, "", "reshape_shapes"], [2264, 4, 1, "", "subsets"], [2265, 4, 1, "", "x_and_filters"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers": [[2267, 4, 1, "", "floats"], [2268, 4, 1, "", "ints"], [2269, 4, 1, "", "number"]], "ivy_tests.test_ivy.helpers.structs": [[2271, 1, 1, "", "FrontendMethodData"]], "ivy_tests.test_ivy.helpers.structs.FrontendMethodData": [[2271, 2, 1, "", "__init__"], [2271, 6, 1, "", "framework_init_module"], [2271, 6, 1, "", "init_name"], [2271, 6, 1, "", "ivy_init_module"], [2271, 6, 1, "", "method_name"]], "ivy_tests.test_ivy.helpers.test_parameter_flags": [[2273, 1, 1, "", "FrontendFunctionTestFlags"], [2274, 1, 1, "", "FrontendMethodTestFlags"], [2275, 1, 1, "", "FunctionTestFlags"], [2276, 1, 1, "", "MethodTestFlags"], [2277, 4, 1, "", "build_flag"], [2278, 4, 1, "", "frontend_function_flags"], [2279, 4, 1, "", "frontend_method_flags"], [2280, 4, 1, "", "function_flags"], [2281, 4, 1, "", "method_flags"]], "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendFunctionTestFlags": [[2273, 2, 1, "", "__init__"]], "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendMethodTestFlags": [[2274, 2, 1, "", "__init__"]], "ivy_tests.test_ivy.helpers.test_parameter_flags.FunctionTestFlags": [[2275, 2, 1, "", "__init__"]], "ivy_tests.test_ivy.helpers.test_parameter_flags.MethodTestFlags": [[2276, 2, 1, "", "__init__"]], "ivy_tests.test_ivy.helpers.testing_helpers": [[2283, 4, 1, "", "handle_frontend_method"], [2284, 4, 1, "", "handle_frontend_test"], [2285, 4, 1, "", "handle_method"], [2286, 4, 1, "", "handle_test"], [2287, 4, 1, "", "num_positional_args"], [2288, 4, 1, "", "num_positional_args_method"], [2289, 4, 1, "", "seed"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:data", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"assert": [1, 158, 2194], "check_al": 2, "check_all_or_any_fn": 3, "check_ani": 4, "check_dimens": 5, "check_elem_in_list": 6, "check_equ": 7, "check_exist": 8, "check_fals": 9, "check_fill_value_and_dtype_are_compat": 10, "check_gather_input_valid": 11, "check_gather_nd_input_valid": 12, "check_great": 13, "check_inplace_sizes_valid": 14, "check_isinst": 15, "check_kernel_padding_s": 16, "check_less": 17, "check_one_way_broadcast": 18, "check_same_dtyp": 19, "check_shap": 20, "check_shapes_broadcast": 21, "check_tru": 22, "backend": [23, 151, 154, 167, 170, 187], "handler": [23, 170], "contextmanag": 24, "choose_random_backend": 25, "clear_backend_stack": 26, "convert_from_numpy_to_target_backend": 27, "convert_from_source_backend_to_numpi": 28, "current_backend": 29, "fn_name_from_version_specific_fn_nam": 30, "get_backend": 31, "set_backend": 32, "set_backend_to_specific_vers": 33, "set_jax_backend": 34, "set_numpy_backend": 35, "set_tensorflow_backend": 36, "set_torch_backend": 37, "unset_backend": 38, "background": [39, 2128], "ml": [40, 2142, 2146], "explos": 40, "standard": [41, 168, 2137, 2146], "skeptic": 41, "complimentari": 41, "v": [41, 187], "competit": 41, "do": [41, 166], "work": [41, 45, 2136], "The": [41, 49, 164, 172, 187], "arrai": [41, 51, 54, 149, 150, 153, 160, 172, 208, 214, 219, 224, 229, 234, 239, 244, 261, 268, 272, 280, 286, 291, 296, 301, 306, 311, 319, 325, 330, 338, 350, 355, 360, 365, 386, 397, 404, 413, 418, 423, 430, 454, 474, 483, 488, 493, 498, 503, 508, 513, 518, 523, 528, 533, 538, 543, 548, 553, 558, 563, 568, 573, 578, 583, 588, 593, 598, 603, 608, 613, 618, 623, 628, 633, 638, 643, 648, 653, 658, 663, 668, 673, 678, 683, 688, 693, 698, 703, 708, 713, 718, 723, 728, 733, 738, 743, 748, 753, 758, 763, 768, 773, 779, 784, 789, 794, 799, 810, 815, 820, 825, 830, 835, 840, 845, 850, 855, 860, 865, 882, 887, 892, 908, 918, 923, 928, 934, 939, 944, 949, 983, 988, 993, 998, 1003, 1008, 1013, 1018, 1023, 1028, 1033, 1038, 1043, 1048, 1051, 1058, 1073, 1078, 1083, 1088, 1093, 1098, 1103, 1108, 1114, 1122, 1127, 1140, 1145, 1167, 1172, 1184, 1189, 1196, 1225, 1230, 1235, 1240, 1245, 1251, 1256, 1261, 1266, 1271, 1276, 1286, 1295, 1301, 1306, 1311, 1322, 1327, 1334, 1339, 1346, 1362, 1367, 1372, 1376, 1388, 1398, 1403, 1408, 1413, 1419, 1426, 1431, 1437, 1442, 1449, 1452, 1457, 1462, 1467, 1470, 1477, 1482, 1494, 1503, 1509, 1514, 1519, 1525, 1530, 1535, 1538, 1548, 1553, 1569, 1574, 1580, 1586, 1591, 1596, 1608, 1615, 1619, 1625, 1630, 1634, 1638, 1644, 1653, 1658, 1663, 1668, 1673, 1678, 1685, 1690, 1695, 1700, 1705, 1710, 1716, 1721, 1726, 1731, 1736, 1742, 1747, 1752, 1757, 1762, 1767, 1772, 1777, 1782, 1787, 1792, 1797, 1802, 1807, 1813, 1818, 1826, 1831, 1836, 1841, 1846, 1851, 1856, 1861, 1866, 1872, 1877, 1882, 1887, 1892, 1897, 1902, 1907, 1912, 1917, 1922, 1927, 1933, 1938, 1943, 1948, 1977, 1982, 1987, 1992, 1997, 2003, 2009, 2014, 2019, 2024, 2030, 2036, 2041, 2046, 2051, 2056, 2061, 2066, 2072, 2077, 2082, 2086, 2090, 2094, 2098, 2103, 2108, 2113, 2118, 2123, 2134, 2137, 2237], "api": [41, 47, 49, 149, 152, 153, 167, 170, 172, 174, 175, 2137, 2144, 2146], "why": [42, 166], "unifi": [42, 172, 2142, 2146], "No": [42, 48], "more": [42, 48, 168], "re": [42, 166], "implement": [42, 153], "infinit": 42, "shelf": 42, "life": 42, "contribut": [43, 2128], "appli": [44, 186], "librari": [44, 186], "introduct": [44, 164, 165], "exampl": [44, 156, 160, 165, 168], "ivi": [44, 47, 49, 150, 153, 156, 158, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 208, 209, 210, 211, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 244, 245, 246, 247, 258, 259, 261, 262, 263, 268, 269, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 286, 287, 288, 289, 291, 292, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 316, 317, 319, 320, 321, 322, 324, 325, 326, 327, 329, 330, 331, 332, 334, 335, 337, 338, 339, 340, 350, 351, 352, 353, 355, 356, 357, 358, 360, 361, 362, 363, 365, 366, 367, 368, 372, 373, 376, 377, 381, 382, 383, 386, 387, 388, 389, 391, 392, 394, 395, 397, 398, 399, 400, 404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 416, 418, 419, 420, 421, 423, 424, 425, 426, 430, 431, 432, 433, 454, 455, 456, 457, 473, 474, 475, 476, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 594, 595, 596, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 673, 674, 675, 676, 678, 679, 680, 681, 683, 684, 685, 686, 688, 689, 690, 691, 693, 694, 695, 696, 698, 699, 700, 701, 703, 704, 705, 706, 708, 709, 710, 711, 713, 714, 715, 716, 718, 719, 720, 721, 723, 724, 725, 726, 728, 729, 730, 731, 733, 734, 735, 736, 738, 739, 740, 741, 743, 744, 745, 746, 748, 749, 750, 751, 753, 754, 755, 756, 758, 759, 760, 761, 763, 764, 765, 766, 768, 769, 770, 771, 773, 774, 775, 776, 778, 779, 780, 781, 783, 784, 785, 786, 788, 789, 790, 791, 793, 794, 795, 796, 798, 799, 800, 801, 810, 811, 812, 813, 815, 816, 817, 818, 820, 821, 822, 823, 825, 826, 827, 828, 830, 831, 832, 833, 835, 836, 837, 838, 840, 841, 842, 843, 845, 846, 847, 848, 850, 851, 852, 853, 855, 856, 857, 858, 860, 861, 862, 863, 865, 866, 867, 868, 870, 871, 872, 875, 876, 877, 882, 883, 884, 885, 887, 888, 889, 890, 892, 893, 894, 895, 908, 909, 910, 911, 914, 915, 916, 918, 919, 920, 921, 923, 924, 925, 926, 928, 929, 930, 931, 934, 935, 936, 937, 939, 940, 941, 942, 944, 945, 946, 947, 949, 950, 951, 952, 983, 984, 985, 986, 988, 989, 990, 991, 993, 994, 995, 996, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1048, 1049, 1051, 1052, 1053, 1054, 1058, 1059, 1060, 1061, 1065, 1066, 1067, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1114, 1115, 1116, 1117, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1132, 1133, 1134, 1136, 1137, 1138, 1140, 1141, 1142, 1143, 1145, 1146, 1147, 1148, 1167, 1168, 1169, 1170, 1172, 1173, 1174, 1175, 1184, 1185, 1186, 1187, 1189, 1190, 1191, 1192, 1196, 1197, 1198, 1199, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1271, 1272, 1273, 1274, 1276, 1277, 1278, 1279, 1286, 1287, 1288, 1289, 1295, 1296, 1297, 1298, 1301, 1302, 1303, 1304, 1306, 1307, 1308, 1309, 1311, 1312, 1313, 1314, 1322, 1323, 1324, 1325, 1327, 1328, 1329, 1330, 1334, 1335, 1336, 1337, 1339, 1340, 1341, 1342, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1374, 1376, 1377, 1379, 1380, 1381, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1402, 1403, 1404, 1405, 1407, 1408, 1409, 1410, 1412, 1413, 1414, 1415, 1419, 1420, 1421, 1422, 1426, 1427, 1428, 1429, 1431, 1432, 1433, 1434, 1437, 1438, 1439, 1440, 1442, 1443, 1444, 1445, 1449, 1450, 1452, 1453, 1454, 1455, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1467, 1468, 1470, 1471, 1472, 1473, 1477, 1478, 1479, 1480, 1482, 1483, 1484, 1485, 1494, 1495, 1496, 1497, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1512, 1514, 1515, 1516, 1517, 1519, 1520, 1521, 1522, 1525, 1526, 1527, 1528, 1530, 1531, 1532, 1533, 1535, 1536, 1538, 1539, 1540, 1541, 1548, 1549, 1550, 1551, 1553, 1554, 1555, 1556, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1577, 1579, 1580, 1581, 1582, 1585, 1586, 1587, 1590, 1591, 1592, 1593, 1595, 1596, 1597, 1598, 1607, 1608, 1609, 1610, 1615, 1616, 1617, 1619, 1620, 1621, 1625, 1626, 1627, 1630, 1631, 1632, 1634, 1635, 1636, 1638, 1639, 1640, 1643, 1644, 1645, 1646, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1663, 1664, 1665, 1666, 1668, 1669, 1670, 1671, 1673, 1674, 1675, 1676, 1678, 1679, 1680, 1681, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1698, 1700, 1701, 1702, 1703, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1716, 1717, 1718, 1719, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1736, 1737, 1738, 1739, 1742, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1752, 1753, 1754, 1755, 1757, 1758, 1759, 1760, 1762, 1763, 1764, 1765, 1767, 1768, 1769, 1770, 1772, 1773, 1774, 1775, 1777, 1778, 1779, 1780, 1782, 1783, 1784, 1785, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1797, 1798, 1799, 1800, 1802, 1803, 1804, 1805, 1807, 1808, 1809, 1810, 1812, 1813, 1814, 1815, 1817, 1818, 1819, 1820, 1822, 1823, 1824, 1826, 1827, 1828, 1830, 1831, 1832, 1833, 1835, 1836, 1837, 1838, 1840, 1841, 1842, 1843, 1845, 1846, 1847, 1848, 1850, 1851, 1852, 1853, 1856, 1857, 1858, 1859, 1861, 1862, 1863, 1864, 1866, 1867, 1868, 1869, 1872, 1873, 1874, 1875, 1877, 1878, 1879, 1880, 1882, 1883, 1884, 1885, 1887, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1920, 1922, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1937, 1938, 1939, 1940, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1977, 1978, 1979, 1982, 1983, 1984, 1985, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1997, 1998, 1999, 2000, 2003, 2004, 2005, 2006, 2009, 2010, 2011, 2012, 2014, 2015, 2016, 2017, 2019, 2020, 2021, 2022, 2024, 2025, 2026, 2027, 2029, 2030, 2031, 2032, 2035, 2036, 2037, 2038, 2040, 2041, 2042, 2043, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2056, 2057, 2058, 2059, 2061, 2062, 2063, 2064, 2066, 2067, 2068, 2069, 2072, 2073, 2074, 2075, 2077, 2078, 2079, 2080, 2082, 2083, 2084, 2086, 2087, 2088, 2090, 2091, 2092, 2094, 2095, 2096, 2098, 2099, 2100, 2101, 2103, 2104, 2105, 2107, 2108, 2109, 2110, 2112, 2113, 2114, 2115, 2118, 2119, 2120, 2121, 2123, 2124, 2125, 2126, 2146], "robot": [44, 183, 186], "build": [45, 170], "doc": 45, "docker": [45, 48, 49], "dockerless": 45, "us": [45, 48, 149, 165, 173], "miniconda": [45, 48], "venv": [45, 48], "document": 45, "pipelin": [45, 153, 166, 187], "make_doc": 45, "sh": 45, "entrypoint": 45, "_make_doc": 45, "generate_src_rst_fil": 45, "py": 45, "sphinx": 45, "correct_built_html_fil": 45, "remove_fil": 45, "help": [46, 49], "resourc": 46, "open": 47, "task": 47, "function": [47, 152, 154, 155, 158, 160, 161, 162, 164, 165, 166, 167, 170, 175, 187, 2205], "format": [47, 159, 2139, 2146], "checklist": 47, "frontend": [47, 151, 164, 165, 175], "where": [47, 2028, 2030, 2031, 2032], "place": 47, "experiment": [47, 49, 69, 117, 802], "set": [48, 90, 138, 151, 1332, 2033], "up": 48, "fork": [48, 49], "clone": [48, 153], "repo": 48, "pycharm": [48, 49], "virtual": 48, "environ": 48, "interpret": 48, "window": 48, "maco": 48, "ubuntu": 48, "test": [48, 49, 149, 153, 165, 166, 2205, 2272, 2282], "detail": 48, "hypothesi": [48, 165, 166, 2236], "log": [48, 652, 653, 654, 655], "free": 48, "github": 48, "codespac": 48, "pre": [48, 159], "commit": [48, 49, 153, 159], "basic": [49, 164], "get": [49, 212], "todo": 49, "list": [49, 2248], "issu": 49, "manag": 49, "your": [49, 166], "who": 49, "To": 49, "ask": 49, "With": 49, "command": 49, "line": 49, "browser": 49, "pull": [49, 153], "request": [49, 153], "small": 49, "often": 49, "interact": 49, "contain": [49, 100, 105, 152, 173, 209, 211, 215, 217, 220, 222, 225, 227, 230, 232, 235, 237, 240, 242, 245, 247, 259, 263, 273, 275, 278, 281, 283, 287, 289, 292, 294, 297, 299, 302, 304, 307, 309, 312, 314, 317, 320, 322, 324, 326, 329, 331, 334, 337, 339, 351, 353, 356, 358, 361, 363, 366, 368, 373, 377, 381, 383, 387, 389, 392, 395, 398, 400, 405, 407, 409, 411, 414, 416, 419, 421, 424, 426, 431, 433, 455, 457, 473, 475, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 749, 751, 754, 756, 759, 761, 764, 766, 769, 771, 774, 776, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 863, 866, 868, 870, 872, 875, 877, 883, 885, 888, 890, 893, 895, 909, 911, 914, 916, 919, 921, 924, 926, 929, 931, 935, 937, 940, 942, 945, 947, 950, 952, 984, 986, 989, 991, 994, 996, 999, 1001, 1004, 1006, 1009, 1011, 1014, 1016, 1019, 1021, 1024, 1026, 1029, 1031, 1034, 1036, 1039, 1041, 1044, 1046, 1052, 1054, 1059, 1061, 1065, 1067, 1069, 1071, 1074, 1076, 1079, 1081, 1084, 1086, 1089, 1091, 1094, 1096, 1099, 1101, 1104, 1106, 1109, 1111, 1115, 1117, 1123, 1125, 1128, 1130, 1132, 1134, 1136, 1138, 1141, 1143, 1146, 1148, 1168, 1170, 1173, 1175, 1185, 1187, 1190, 1192, 1197, 1199, 1226, 1228, 1231, 1233, 1236, 1238, 1241, 1243, 1246, 1248, 1252, 1254, 1257, 1259, 1262, 1264, 1267, 1269, 1272, 1274, 1277, 1279, 1287, 1289, 1296, 1298, 1302, 1304, 1307, 1309, 1312, 1314, 1323, 1325, 1328, 1330, 1335, 1337, 1340, 1342, 1361, 1363, 1366, 1368, 1371, 1373, 1379, 1380, 1383, 1384, 1387, 1389, 1393, 1394, 1397, 1399, 1402, 1404, 1407, 1409, 1412, 1414, 1420, 1422, 1427, 1429, 1432, 1434, 1438, 1440, 1443, 1445, 1453, 1455, 1458, 1460, 1463, 1465, 1471, 1473, 1478, 1480, 1483, 1485, 1495, 1497, 1504, 1506, 1510, 1512, 1515, 1517, 1520, 1522, 1526, 1528, 1531, 1533, 1539, 1541, 1549, 1551, 1554, 1556, 1570, 1572, 1575, 1577, 1579, 1581, 1585, 1590, 1592, 1595, 1597, 1607, 1609, 1616, 1620, 1626, 1631, 1635, 1639, 1643, 1645, 1654, 1656, 1659, 1661, 1664, 1666, 1669, 1671, 1674, 1676, 1679, 1681, 1686, 1688, 1691, 1693, 1696, 1698, 1701, 1703, 1706, 1708, 1711, 1713, 1717, 1719, 1722, 1724, 1727, 1729, 1732, 1734, 1737, 1739, 1743, 1745, 1748, 1750, 1753, 1755, 1758, 1760, 1763, 1765, 1768, 1770, 1773, 1775, 1778, 1780, 1783, 1785, 1788, 1790, 1793, 1795, 1798, 1800, 1803, 1805, 1808, 1810, 1812, 1814, 1817, 1819, 1822, 1823, 1827, 1830, 1832, 1835, 1837, 1840, 1842, 1845, 1847, 1850, 1852, 1857, 1859, 1862, 1864, 1867, 1869, 1873, 1875, 1878, 1880, 1883, 1885, 1888, 1890, 1893, 1895, 1898, 1900, 1903, 1905, 1908, 1910, 1913, 1915, 1918, 1920, 1923, 1925, 1928, 1930, 1932, 1934, 1937, 1939, 1942, 1944, 1947, 1949, 1978, 1983, 1985, 1988, 1990, 1993, 1995, 1998, 2000, 2004, 2006, 2010, 2012, 2015, 2017, 2020, 2022, 2025, 2027, 2029, 2031, 2035, 2037, 2040, 2042, 2045, 2047, 2050, 2052, 2057, 2059, 2062, 2064, 2067, 2069, 2073, 2075, 2078, 2080, 2083, 2087, 2091, 2095, 2099, 2101, 2104, 2107, 2109, 2112, 2114, 2119, 2121, 2124, 2126], "run": [49, 149, 166], "local": 49, "most": 49, "out": [49, 160, 163], "id": [49, 149], "data": [50, 63, 111, 154, 164, 166, 173, 187, 341, 905, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053], "class": [50, 150, 158, 164, 172, 2148], "activ": [52, 101, 205, 805, 2149], "arraywithactiv": 53, "convers": [56, 107], "args_to_ivi": 57, "args_to_n": 58, "to_ivi": 59, "to_n": 60, "creation": [61, 109, 255, 896], "arraywithcr": 62, "type": [63, 111, 154, 161, 164, 187, 341, 905], "arraywithdatatyp": 64, "devic": [65, 113, 155, 160, 164, 446, 912], "arraywithdevic": 66, "elementwis": [67, 115, 481, 953], "arraywithelementwis": 68, "gener": [70, 118, 166, 168, 1055, 1417, 2255], "arraywithgener": 71, "gradient": [72, 120, 967, 1057, 1058, 1059, 1060, 1062, 1612], "arraywithgradi": 73, "imag": [74, 122, 969, 1102, 1103, 1104, 1105], "arraywithimag": 75, "layer": [76, 124, 1149, 1650, 2169], "arraywithlay": 77, "linear": [78, 126, 1176, 1694, 1695, 1696, 1697, 1714, 2179], "algebra": [78, 126, 1176, 1714], "arraywithlinearalgebra": 79, "loss": [80, 128, 1193, 1854], "arraywithloss": 81, "manipul": [82, 130, 1200, 1870], "arraywithmanipul": 83, "norm": [84, 132, 1290, 1975, 2183], "arraywithnorm": 85, "random": [86, 134, 1315, 1980], "arraywithrandom": 87, "search": [88, 136, 1331, 2007], "arraywithsearch": 89, "arraywithset": 91, "sort": [92, 140, 1343, 2054, 2065, 2066, 2067, 2068], "arraywithsort": 93, "statist": [94, 142, 1353, 2070], "arraywithstatist": 95, "util": [96, 144, 1391, 2116], "arraywithutil": 97, "wrap": [98, 146, 162], "add_ivy_array_instance_method": 99, "containerwithactiv": 102, "base": 103, "containerbas": 104, "containerwithconvers": 108, "containerwithcr": 110, "containerwithdatatyp": 112, "containerwithdevic": 114, "containerwithelementwis": 116, "containerwithgener": 119, "containerwithgradi": 121, "containerwithimag": 123, "containerwithlay": 125, "containerwithlinearalgebra": 127, "containerwithloss": 129, "containerwithmanipul": 131, "containerwithnorm": 133, "containerwithrandom": 135, "containerwithsearch": 137, "containerwithset": 139, "containerwithsort": 141, "containerwithstatist": 143, "containerwithutil": 145, "add_ivy_container_instance_method": 147, "deep": 148, "dive": 148, "termin": 149, "regener": 149, "failur": 149, "skip": 149, "nativ": 150, "handl": [150, 158, 187], "integr": [150, 153, 166], "custom": [150, 173, 187], "version": [151, 167, 187], "support": [151, 154, 164, 187], "instanc": [152, 164, 165, 172], "method": [152, 164, 165, 172, 173], "static": 152, "special": [152, 164], "nestabl": [152, 160, 161], "continu": 153, "push": 153, "pr": 153, "trigger": 153, "A": [153, 168], "top": 153, "down": 153, "view": 153, "store": 153, "retriev": 153, "map": [153, 1962], "repositori": 153, "nitti": 153, "gritti": 153, "storag": 153, "space": 153, "unifyai": 153, "determin": 153, "coverag": 153, "workflow": 153, "multipl": 153, "runner": 153, "race": 153, "condit": 153, "period": 153, "manual": 153, "dispatch": 153, "ci": 153, "dashboard": 153, "modul": [154, 155, 174, 2181, 2182], "promot": [154, 164], "argument": [154, 155, 160, 163, 164], "other": [154, 155], "unsupport": 154, "bug": 154, "superset": [154, 168], "docstr": [156, 157], "tan": [156, 165, 782, 784, 785, 786], "roll": [156, 1911, 1912, 1913, 1914], "add": [156, 165, 497, 498, 499, 500, 2146], "except": 158, "configur": [158, 173], "mode": 158, "stack": [158, 1926, 1927, 1928, 1929], "trace": [158, 1829, 1831, 1832, 1833], "func_wrapp": 158, "prune": 158, "handle_except": 158, "decor": [158, 166], "lint": 159, "check": [159, 187], "hook": 159, "posit": [160, 722, 723, 724, 725], "keyword": 160, "input": 160, "dtype": [160, 380, 381, 382, 2251], "number": [160, 2266, 2269], "oper": [160, 172, 187], "integ": 160, "sequenc": 160, "primari": 161, "composit": [161, 164], "mix": 161, "standalon": 161, "conveni": 161, "inplac": 163, "updat": 163, "copi": 163, "unus": 164, "miss": 164, "temporari": 164, "rule": 164, "numpi": [164, 2140], "cast": 164, "duplic": [164, 168], "polici": 164, "full": [165, 284], "without": 165, "valu": 165, "alia": 165, "helper": [165, 166, 167, 2157, 2236, 2237, 2251, 2255, 2266, 2282], "write": 166, "own": 166, "strategi": 166, "we": 166, "need": 166, "how": 166, "effect": 166, "bonu": 166, "extend": [166, 168], "featur": 166, "self": 166, "consist": 166, "explicit": 166, "test_array_funct": 166, "fail": 166, "navig": 167, "code": 167, "categor": 167, "submodul": 167, "design": [167, 169, 2128], "pin": 167, "behaviour": 168, "what": [168, 2146], "i": 168, "non": 168, "when": 168, "too": 168, "much": 168, "balanc": 168, "effici": 168, "block": 170, "graph": [170, 175, 2141, 2146], "compil": [170, 175, 878, 2138, 2143, 2145, 2146], "framework": [171, 2140, 2143, 2146, 2147, 2148, 2202], "monkei": 172, "patch": 172, "construct": 173, "represent": 173, "recurs": 173, "built": 173, "ins": 173, "access": 173, "save": 173, "load": 173, "comparison": 173, "case": 173, "compartment": 173, "network": [173, 175], "weight": 173, "state": [174, 187], "initi": [174, 2159, 2163], "optim": [174, 2185, 2189], "transpil": 175, "role": 175, "convert": [175, 2152], "model": [175, 182, 187], "builder": 177, "ecosystem": 178, "gym": [179, 186], "mech": 180, "memori": [181, 186], "vision": [184, 186], "extens": [185, 2128], "mechan": 186, "faq": 187, "maintain": 187, "dynam": 187, "size": 187, "shape": [187, 1566, 2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053], "gpu": 187, "deploy": 187, "control": [187, 250], "flow": [187, 250], "auto": 187, "differenti": 187, "replica": 187, "parallel": 187, "altern": 187, "structur": 187, "func": 188, "wrapper": [188, 2146, 2147], "handle_array_funct": 189, "handle_array_like_without_promot": 190, "handle_nan": 191, "handle_nest": 192, "handle_out_argu": 193, "infer_devic": 194, "infer_dtyp": 195, "inputs_to_ivy_arrai": 196, "inputs_to_native_arrai": 197, "integer_arrays_to_float": 198, "output_to_native_arrai": 199, "outputs_to_ivy_arrai": 200, "to_ivy_arrays_and_back": 201, "to_native_arrays_and_back": 202, "try_array_function_overrid": 203, "deseri": 206, "gelu": [207, 208, 209, 210, 2151], "static_gelu": 211, "leaky_relu": [213, 214, 215, 216], "static_leaky_relu": 217, "log_softmax": [218, 219, 220, 221], "static_log_softmax": 222, "mish": [223, 224, 225, 226], "static_mish": 227, "relu": [228, 229, 230, 231], "static_relu": 232, "sigmoid": [233, 234, 235, 236], "static_sigmoid": 237, "softmax": [238, 239, 240, 241], "static_softmax": 242, "softplu": [243, 244, 245, 246], "static_softplu": 247, "constant": [249, 880, 2160], "op": 250, "ifels": 251, "whileloop": 252, "if_els": 253, "while_loop": 254, "note": [255, 279, 282], "nestedsequ": 256, "arang": [257, 258], "static_arang": 259, "asarrai": [260, 261, 262], "static_asarrai": 263, "asarray_handle_nest": 264, "asarray_infer_devic": 265, "asarray_to_native_arrays_and_back": 266, "copy_arrai": [267, 268, 269], "empti": 270, "empty_lik": [271, 272, 273, 274], "static_empty_lik": 275, "ey": [276, 277], "static_ey": 278, "from_dlpack": [279, 280, 281, 282], "static_from_dlpack": 283, "full_lik": [285, 286, 287, 288], "static_full_lik": 289, "linspac": [290, 291, 292, 293], "static_linspac": 294, "logspac": [295, 296, 297, 298], "static_logspac": 299, "meshgrid": [300, 301, 302, 303], "static_meshgrid": 304, "native_arrai": [305, 306, 307, 308], "static_native_arrai": 309, "one_hot": [310, 311, 312, 313], "static_one_hot": 314, "ones": [315, 316], "static_on": 317, "ones_lik": [318, 319, 320, 321], "static_ones_lik": 322, "tril": [323, 325, 326, 327], "static_tril": 324, "triu": [328, 330, 331, 332], "static_triu": 329, "zero": [333, 335, 2168], "static_zero": 334, "zeros_lik": [336, 338, 339, 340], "static_zeros_lik": 337, "defaultcomplexdtyp": 342, "defaultdtyp": 343, "defaultfloatdtyp": 344, "defaultintdtyp": 345, "defaultuintdtyp": 346, "as_ivy_dtyp": 347, "as_native_dtyp": 348, "astyp": [349, 350, 351, 352], "static_astyp": 353, "broadcast_arrai": [354, 355, 356, 357], "static_broadcast_arrai": 358, "broadcast_to": [359, 360, 361, 362], "static_broadcast_to": 363, "can_cast": [364, 365, 366, 367], "static_can_cast": 368, "check_float": 369, "closest_valid_dtyp": 370, "default_complex_dtyp": [371, 372], "static_default_complex_dtyp": 373, "default_dtyp": 374, "default_float_dtyp": [375, 376], "static_default_float_dtyp": 377, "default_int_dtyp": 378, "default_uint_dtyp": 379, "static_dtyp": 383, "dtype_bit": 384, "finfo": [385, 386, 387, 388], "static_finfo": 389, "function_supported_dtyp": [390, 391], "static_function_supported_dtyp": 392, "function_unsupported_dtyp": [393, 394], "static_function_unsupported_dtyp": 395, "iinfo": [396, 397, 398, 399], "static_iinfo": 400, "infer_default_dtyp": 401, "invalid_dtyp": 402, "is_bool_dtyp": [403, 404, 405, 406], "static_is_bool_dtyp": 407, "is_complex_dtyp": [408, 409, 410], "static_is_complex_dtyp": 411, "is_float_dtyp": [412, 413, 414, 415], "static_is_float_dtyp": 416, "is_int_dtyp": [417, 418, 419, 420], "static_is_int_dtyp": 421, "is_uint_dtyp": [422, 423, 424, 425], "static_is_uint_dtyp": 426, "promote_typ": 427, "promote_types_of_input": 428, "result_typ": [429, 430, 431, 432], "static_result_typ": 433, "set_default_complex_dtyp": 434, "set_default_dtyp": 435, "set_default_float_dtyp": 436, "set_default_int_dtyp": 437, "set_default_uint_dtyp": 438, "type_promote_arrai": 439, "unset_default_complex_dtyp": 440, "unset_default_dtyp": 441, "unset_default_float_dtyp": 442, "unset_default_int_dtyp": 443, "unset_default_uint_dtyp": 444, "valid_dtyp": 445, "defaultdevic": 447, "profil": 448, "as_ivy_dev": 449, "as_native_dev": 450, "clear_mem_on_dev": 451, "default_devic": 452, "dev": [453, 454, 455, 456], "static_dev": 457, "dev_util": 458, "function_supported_devic": 459, "function_unsupported_devic": 460, "get_all_ivy_arrays_on_dev": 461, "gpu_is_avail": 462, "num_cpu_cor": 463, "num_gpu": 464, "num_ivy_arrays_on_dev": 465, "percent_used_mem_on_dev": 466, "print_all_ivy_arrays_on_dev": 467, "set_default_devic": 468, "set_split_factor": 469, "split_factor": 470, "split_func_cal": 471, "to_devic": [472, 474, 475, 476], "static_to_devic": 473, "total_mem_on_dev": 477, "tpu_is_avail": 478, "unset_default_devic": 479, "used_mem_on_dev": 480, "ab": [482, 483, 484, 485], "static_ab": 486, "aco": [487, 488, 489, 490], "static_aco": 491, "acosh": [492, 493, 494, 495], "static_acosh": 496, "static_add": 501, "asin": [502, 503, 504, 505], "static_asin": 506, "asinh": [507, 508, 509, 510], "static_asinh": 511, "atan": [512, 513, 514, 515], "static_atan": 516, "atan2": [517, 518, 519, 520], "static_atan2": 521, "atanh": [522, 523, 524, 525], "static_atanh": 526, "bitwise_and": [527, 528, 529, 530], "static_bitwise_and": 531, "bitwise_invert": [532, 533, 534, 535], "static_bitwise_invert": 536, "bitwise_left_shift": [537, 538, 539, 540], "static_bitwise_left_shift": 541, "bitwise_or": [542, 543, 544, 545], "static_bitwise_or": 546, "bitwise_right_shift": [547, 548, 549, 550], "static_bitwise_right_shift": 551, "bitwise_xor": [552, 553, 554, 555], "static_bitwise_xor": 556, "ceil": [557, 558, 559, 560], "static_ceil": 561, "co": [562, 563, 564, 565], "static_co": 566, "cosh": [567, 568, 569, 570], "static_cosh": 571, "deg2rad": [572, 573, 574, 575], "static_deg2rad": 576, "divid": [577, 578, 579, 580], "static_divid": 581, "equal": [582, 583, 584, 585], "static_equ": 586, "erf": [587, 588, 589, 590], "static_erf": 591, "exp": [592, 593, 594, 595], "static_exp": 596, "expm1": [597, 598, 599, 600], "static_expm1": 601, "floor": [602, 603, 604, 605], "static_floor": 606, "floor_divid": [607, 608, 609, 610], "static_floor_divid": 611, "greater": [612, 613, 614, 615], "static_great": 616, "greater_equ": [617, 618, 619, 620], "static_greater_equ": 621, "isfinit": [622, 623, 624, 625], "static_isfinit": 626, "isinf": [627, 628, 629, 630], "static_isinf": 631, "isnan": [632, 633, 634, 635], "static_isnan": 636, "isreal": [637, 638, 639, 640], "static_isr": 641, "less": [642, 643, 644, 645], "static_less": 646, "less_equ": [647, 648, 649, 650], "static_less_equ": 651, "static_log": 656, "log10": [657, 658, 659, 660], "static_log10": 661, "log1p": [662, 663, 664, 665], "static_log1p": 666, "log2": [667, 668, 669, 670], "static_log2": 671, "logaddexp": [672, 673, 674, 675], "static_logaddexp": 676, "logical_and": [677, 678, 679, 680], "static_logical_and": 681, "logical_not": [682, 683, 684, 685], "static_logical_not": 686, "logical_or": [687, 688, 689, 690], "static_logical_or": 691, "logical_xor": [692, 693, 694, 695], "static_logical_xor": 696, "maximum": [697, 698, 699, 700], "static_maximum": 701, "minimum": [702, 703, 704, 705], "static_minimum": 706, "multipli": [707, 708, 709, 710], "static_multipli": 711, "neg": [712, 713, 714, 715], "static_neg": 716, "not_equ": [717, 718, 719, 720], "static_not_equ": 721, "static_posit": 726, "pow": [727, 728, 729, 730], "static_pow": 731, "rad2deg": [732, 733, 734, 735], "static_rad2deg": 736, "reciproc": [737, 738, 739, 740], "static_reciproc": 741, "remaind": [742, 743, 744, 745], "static_remaind": 746, "round": [747, 748, 749, 750], "static_round": 751, "sign": [752, 753, 754, 755], "static_sign": 756, "sin": [757, 758, 759, 760], "static_sin": 761, "sinh": [762, 763, 764, 765], "static_sinh": 766, "sqrt": [767, 768, 769, 770], "static_sqrt": 771, "squar": [772, 773, 774, 775], "static_squar": 776, "subtract": [777, 779, 780, 781], "static_subtract": 778, "static_tan": 783, "tanh": [787, 789, 790, 791], "static_tanh": 788, "trunc": [792, 794, 795, 796], "static_trunc": 793, "trunc_divid": [797, 799, 800, 801], "static_trunc_divid": 798, "nativesparsearrai": [803, 1347], "sparsearrai": [804, 1348], "logit": [806, 1188, 1189, 1190, 1191], "prelu": [807, 1305, 1306, 1307, 1308], "thresholded_relu": [808, 1365, 1367, 1368, 1369], "adjoint": [809, 810, 811, 812, 1177], "static_adjoint": 813, "allclos": [814, 815, 816, 817, 954], "static_allclos": 818, "angl": [819, 820, 821, 822, 955], "static_angl": 823, "atleast_1d": [824, 825, 826, 827, 1201], "static_atleast_1d": 828, "atleast_2d": [829, 830, 831, 832, 1202], "static_atleast_2d": 833, "atleast_3d": [834, 835, 836, 837, 1203], "static_atleast_3d": 838, "avg_pool1d": [839, 840, 841, 842, 1150], "static_avg_pool1d": 843, "avg_pool2d": [844, 845, 846, 847, 1151], "static_avg_pool2d": 848, "avg_pool3d": [849, 850, 851, 852, 1152], "static_avg_pool3d": 853, "bernoulli": [854, 855, 856, 857, 1316], "static_bernoulli": 858, "beta": [859, 860, 861, 862, 1317], "static_beta": 863, "binar": [864, 865, 866, 867, 956], "static_binar": 868, "binary_cross_entropy_with_logit": [869, 870, 871, 1194], "static_binary_cross_entropy_with_logit": 872, "bind_custom_gradient_funct": [873, 1063], "broadcast_shap": [874, 875, 876, 1204, 2244], "static_broadcast_shap": 877, "compute_weight_mat": [879, 1153], "copysign": [881, 882, 883, 884, 957], "static_copysign": 885, "corrcoef": [886, 887, 888, 889, 1354], "static_corrcoef": 890, "count_nonzero": [891, 892, 893, 894, 958], "static_count_nonzero": 895, "eye_lik": [897, 997, 998, 999, 1000], "hamming_window": [898, 1064, 1065, 1066], "hann_window": [899, 1068, 1069, 1070], "kaiser_bessel_derived_window": [900, 1131, 1132, 1133], "kaiser_window": [901, 1135, 1136, 1137], "tril_indic": [902, 1378, 1380, 1381], "triu_indic": [903, 1382, 1384, 1385], "vorbis_window": [904, 1392, 1394, 1395], "is_native_dtyp": [906, 1119], "dct": [907, 908, 909, 910, 1154], "static_dct": 911, "dft": [913, 914, 915, 1155], "static_dft": 916, "diagflat": [917, 918, 919, 920, 1178], "static_diagflat": 921, "diff": [922, 923, 924, 925, 959], "static_diff": 926, "dirichlet": [927, 928, 929, 930, 1318], "static_dirichlet": 931, "dropout1d": [932, 1156], "dsplit": [933, 934, 935, 936, 1205], "static_dsplit": 937, "dstack": [938, 939, 940, 941, 1206], "static_dstack": 942, "eig": [943, 944, 945, 946, 1179, 1740], "static_eig": 947, "eigval": [948, 949, 950, 951, 1180], "static_eigv": 952, "exp2": [960, 987, 988, 989, 990], "fix": [961, 1007, 1008, 1009, 1010], "float_pow": [962, 1027, 1028, 1029, 1030], "fmax": [963, 1032, 1033, 1034, 1035], "fmin": [964, 1037, 1038, 1039, 1040], "fmod": [965, 1042, 1043, 1044, 1045], "gcd": [966, 1050, 1051, 1052, 1053], "hypot": [968, 1087, 1088, 1089, 1090], "isclos": [970, 1121, 1122, 1123, 1124], "lcm": [971, 1166, 1167, 1168, 1169], "logaddexp2": [972, 1183, 1184, 1185, 1186], "nan_to_num": [973, 1260, 1261, 1262, 1263], "nansum": [974, 1275, 1276, 1277, 1278], "nextaft": [975, 1285, 1286, 1287, 1288], "real": [976, 1321, 1322, 1323, 1324], "signbit": [977, 1333, 1334, 1335, 1336], "sinc": [978, 1338, 1339, 1340, 1341], "trapz": [979, 1375, 1376, 1377], "xlogi": [980, 1406, 1408, 1409, 1410], "zeta": [981, 1411, 1413, 1414, 1415], "embed": [982, 983, 984, 985, 1157], "static_embed": 986, "static_exp2": 991, "expand": [992, 993, 994, 995, 1207], "static_expand": 996, "static_eye_lik": 1001, "fft": [1002, 1003, 1004, 1005, 1158], "static_fft": 1006, "static_fix": 1011, "flatten": [1012, 1013, 1014, 1015, 1208, 2212], "static_flatten": 1016, "fliplr": [1017, 1018, 1019, 1020, 1209], "static_fliplr": 1021, "flipud": [1022, 1023, 1024, 1025, 1210], "static_flipud": 1026, "static_float_pow": 1031, "static_fmax": 1036, "static_fmin": 1041, "static_fmod": 1046, "gamma": [1047, 1048, 1049, 1319], "static_gcd": 1054, "isin": [1056, 1126, 1127, 1128, 1129], "static_gradi": 1061, "static_hamming_window": 1067, "static_hann_window": 1071, "heavisid": [1072, 1073, 1074, 1075, 1211], "static_heavisid": 1076, "hsplit": [1077, 1078, 1079, 1080, 1212], "static_hsplit": 1081, "hstack": [1082, 1083, 1084, 1085, 1213], "static_hstack": 1086, "static_hypot": 1091, "i0": [1092, 1093, 1094, 1095, 1214], "static_i0": 1096, "ifft": [1097, 1098, 1099, 1100, 1159], "static_ifft": 1101, "static_imag": 1106, "instance_norm": [1107, 1108, 1109, 1110, 1291], "static_instance_norm": 1111, "interp": [1112, 1160], "interpol": [1113, 1114, 1115, 1116, 1161], "static_interpol": 1117, "is_ivy_sparse_arrai": [1118, 1349], "is_native_sparse_arrai": [1120, 1350], "static_isclos": 1125, "static_isin": 1130, "static_kaiser_bessel_derived_window": 1134, "static_kaiser_window": 1138, "kron": [1139, 1140, 1141, 1142, 1181], "static_kron": 1143, "l2_normal": [1144, 1145, 1146, 1147, 1292], "static_l2_norm": 1148, "max_pool1d": [1162, 1229, 1230, 1231, 1232], "max_pool2d": [1163, 1234, 1235, 1236, 1237], "max_pool3d": [1164, 1239, 1240, 1241, 1242], "padding_ceil_mod": [1165, 1299], "static_lcm": 1170, "lexsort": [1171, 1172, 1173, 1174, 1344], "static_lexsort": 1175, "matrix_exp": [1182, 1224, 1225, 1226, 1227], "static_logaddexp2": 1187, "static_logit": 1192, "lp_normal": [1195, 1196, 1197, 1198, 1293], "static_lp_norm": 1199, "moveaxi": [1215, 1250, 1251, 1252, 1253], "ndenumer": [1216, 1282], "ndindex": [1217, 1283], "pad": [1218, 1294, 1295, 1296, 1297], "rot90": [1219, 1326, 1327, 1328, 1329], "take_along_axi": [1220, 1360, 1362, 1363, 1364], "top_k": [1221, 1370, 1372, 1373, 1374], "vsplit": [1222, 1396, 1398, 1399, 1400], "vstack": [1223, 1401, 1403, 1404, 1405], "static_matrix_exp": 1228, "static_max_pool1d": 1233, "static_max_pool2d": 1238, "static_max_pool3d": 1243, "median": [1244, 1245, 1246, 1247, 1355], "static_median": 1248, "meta": [1249, 1951], "static_moveaxi": 1254, "msort": [1255, 1256, 1257, 1258, 1345], "static_msort": 1259, "static_nan_to_num": 1264, "nanmean": [1265, 1266, 1267, 1268, 1356], "static_nanmean": 1269, "nanmedian": [1270, 1271, 1272, 1273, 1357], "static_nanmedian": 1274, "static_nansum": 1279, "native_sparse_arrai": [1280, 1351], "native_sparse_array_to_indices_values_and_shap": [1281, 1352], "nest": [1284, 1955, 2134], "static_nextaft": 1289, "static_pad": 1298, "poisson": [1300, 1301, 1302, 1303, 1320], "static_poisson": 1304, "static_prelu": 1309, "quantil": [1310, 1311, 1312, 1313, 1358], "static_quantil": 1314, "static_r": 1325, "static_rot90": 1330, "static_signbit": 1337, "static_sinc": 1342, "spars": 1346, "unravel_index": [1359, 1386, 1388, 1389, 1390], "static_take_along_axi": 1361, "static_thresholded_relu": 1366, "static_top_k": 1371, "static_tril_indic": 1379, "static_triu_indic": 1383, "static_unravel_index": 1387, "static_vorbis_window": 1393, "static_vsplit": 1397, "static_vstack": 1402, "static_xlogi": 1407, "static_zeta": 1412, "paramet": [1417, 1557, 1558, 1561, 1563, 1564, 2272], "all_equ": [1418, 1419, 1420, 1421], "static_all_equ": 1422, "arg_info": 1423, "arg_nam": 1424, "array_equ": [1425, 1426, 1427, 1428], "static_array_equ": 1429, "assert_supports_inplac": [1430, 1431, 1432, 1433], "static_assert_supports_inplac": 1434, "cache_fn": 1435, "clip_matrix_norm": [1436, 1437, 1438, 1439], "static_clip_matrix_norm": 1440, "clip_vector_norm": [1441, 1442, 1443, 1444], "static_clip_vector_norm": 1445, "container_typ": 1446, "current_backend_str": 1447, "default": [1448, 1449, 1450], "einops_rearrang": [1451, 1452, 1453, 1454], "static_einops_rearrang": 1455, "einops_reduc": [1456, 1457, 1458, 1459], "static_einops_reduc": 1460, "einops_repeat": [1461, 1462, 1463, 1464], "static_einops_repeat": 1465, "exist": [1466, 1467, 1468], "fourier_encod": [1469, 1470, 1471, 1472], "static_fourier_encod": 1473, "function_supported_devices_and_dtyp": 1474, "function_unsupported_devices_and_dtyp": 1475, "gather": [1476, 1477, 1478, 1479], "static_gath": 1480, "gather_nd": [1481, 1482, 1483, 1484], "static_gather_nd": 1485, "get_all_arrays_in_memori": 1486, "get_array_mod": 1487, "get_exception_trace_mod": 1488, "get_item": 1489, "get_min_bas": 1490, "get_min_denomin": 1491, "get_nestable_mod": 1492, "get_num_dim": [1493, 1494, 1495, 1496], "static_get_num_dim": 1497, "get_queue_timeout": 1498, "get_referrers_recurs": 1499, "get_show_func_wrapper_trace_mod": 1500, "get_tmp_dir": 1501, "has_nan": [1502, 1503, 1504, 1505], "static_has_nan": 1506, "inplace_arrays_support": 1507, "inplace_decr": [1508, 1509, 1510, 1511], "static_inplace_decr": 1512, "inplace_incr": [1513, 1514, 1515, 1516], "static_inplace_incr": 1517, "inplace_upd": [1518, 1519, 1520, 1521], "static_inplace_upd": 1522, "inplace_variables_support": 1523, "is_arrai": [1524, 1525, 1526, 1527], "static_is_arrai": 1528, "is_ivy_arrai": [1529, 1530, 1531, 1532], "static_is_ivy_arrai": 1533, "is_ivy_contain": [1534, 1535, 1536], "is_native_arrai": [1537, 1538, 1539, 1540], "static_is_native_arrai": 1541, "isscalar": 1542, "match_kwarg": 1543, "multiprocess": 1544, "num_arrays_in_memori": 1545, "print_all_arrays_in_memori": 1546, "scatter_flat": [1547, 1548, 1549, 1550], "static_scatter_flat": 1551, "scatter_nd": [1552, 1553, 1554, 1555], "static_scatter_nd": 1556, "set_array_mod": 1557, "set_exception_trace_mod": 1558, "set_min_bas": 1559, "set_min_denomin": 1560, "set_nestable_mod": 1561, "set_queue_timeout": 1562, "set_shape_array_mod": 1563, "set_show_func_wrapper_trace_mod": 1564, "set_tmp_dir": 1565, "shape_array_mod": 1567, "stable_divid": [1568, 1569, 1570, 1571], "static_stable_divid": 1572, "stable_pow": [1573, 1574, 1575, 1576], "static_stable_pow": 1577, "supports_inplace_upd": [1578, 1580, 1581, 1582], "static_supports_inplace_upd": 1579, "to_ivy_shap": 1583, "to_list": [1584, 1586, 1587], "static_to_list": 1585, "to_native_shap": 1588, "to_numpi": [1589, 1591, 1592, 1593], "static_to_numpi": 1590, "to_scalar": [1594, 1596, 1597, 1598], "static_to_scalar": 1595, "try_else_non": 1599, "unset_array_mod": 1600, "unset_exception_trace_mod": 1601, "unset_nestable_mod": 1602, "unset_queue_timeout": 1603, "unset_shape_array_mod": 1604, "unset_show_func_wrapper_trace_mod": 1605, "value_is_nan": [1606, 1608, 1609, 1610], "static_value_is_nan": 1607, "vmap": 1611, "gradienttrack": 1613, "adam_step": [1614, 1615, 1616, 1617], "adam_upd": [1618, 1619, 1620, 1621], "execute_with_gradi": 1622, "grad": 1623, "gradient_descent_upd": [1624, 1625, 1626, 1627], "jac": 1628, "lamb_upd": [1629, 1630, 1631, 1632], "lars_upd": [1633, 1634, 1635, 1636], "optimizer_upd": [1637, 1638, 1639, 1640], "set_with_grad": 1641, "stop_gradi": [1642, 1644, 1645, 1646], "static_stop_gradi": 1643, "unset_with_grad": 1647, "value_and_grad": 1648, "with_grad": 1649, "conv": 1651, "conv1d": [1652, 1653, 1654, 1655, 2170], "static_conv1d": 1656, "conv1d_transpos": [1657, 1658, 1659, 1660], "static_conv1d_transpos": 1661, "conv2d": [1662, 1663, 1664, 1665, 2172], "static_conv2d": 1666, "conv2d_transpos": [1667, 1668, 1669, 1670], "static_conv2d_transpos": 1671, "conv3d": [1672, 1673, 1674, 1675, 2174], "static_conv3d": 1676, "conv3d_transpos": [1677, 1678, 1679, 1680], "static_conv3d_transpos": 1681, "conv_general_dil": 1682, "conv_general_transpos": 1683, "depthwise_conv2d": [1684, 1685, 1686, 1687], "static_depthwise_conv2d": 1688, "dropout": [1689, 1690, 1691, 1692, 2177], "static_dropout": 1693, "static_linear": 1698, "lstm_updat": [1699, 1700, 1701, 1702], "static_lstm_upd": 1703, "multi_head_attent": [1704, 1705, 1706, 1707], "static_multi_head_attent": 1708, "scaled_dot_product_attent": [1709, 1710, 1711, 1712], "static_scaled_dot_product_attent": 1713, "choleski": [1715, 1716, 1717, 1718], "static_choleski": 1719, "cross": [1720, 1721, 1722, 1723], "static_cross": 1724, "det": [1725, 1726, 1727, 1728], "static_det": 1729, "diag": [1730, 1731, 1732, 1733], "static_diag": 1734, "diagon": [1735, 1736, 1737, 1738], "static_diagon": 1739, "eigh": [1741, 1742, 1743, 1744], "static_eigh": 1745, "eigvalsh": [1746, 1747, 1748, 1749], "static_eigvalsh": 1750, "inner": [1751, 1752, 1753, 1754], "static_inn": 1755, "inv": [1756, 1757, 1758, 1759], "static_inv": 1760, "matmul": [1761, 1762, 1763, 1764], "static_matmul": 1765, "matrix_norm": [1766, 1767, 1768, 1769], "static_matrix_norm": 1770, "matrix_pow": [1771, 1772, 1773, 1774], "static_matrix_pow": 1775, "matrix_rank": [1776, 1777, 1778, 1779], "static_matrix_rank": 1780, "matrix_transpos": [1781, 1782, 1783, 1784], "static_matrix_transpos": 1785, "outer": [1786, 1787, 1788, 1789], "static_out": 1790, "pinv": [1791, 1792, 1793, 1794], "static_pinv": 1795, "qr": [1796, 1797, 1798, 1799], "static_qr": 1800, "slogdet": [1801, 1802, 1803, 1804], "static_slogdet": 1805, "solv": [1806, 1807, 1808, 1809], "static_solv": 1810, "svd": [1811, 1813, 1814, 1815], "static_svd": 1812, "svdval": [1816, 1818, 1819, 1820], "static_svdv": 1817, "tensordot": [1821, 1823, 1824], "static_tensordot": 1822, "tensorsolv": [1825, 1826, 1827, 1828], "static_trac": 1830, "vander": [1834, 1836, 1837, 1838], "static_vand": 1835, "vecdot": [1839, 1841, 1842, 1843], "static_vecdot": 1840, "vector_norm": [1844, 1846, 1847, 1848], "static_vector_norm": 1845, "vector_to_skew_symmetric_matrix": [1849, 1851, 1852, 1853], "static_vector_to_skew_symmetric_matrix": 1850, "binary_cross_entropi": [1855, 1856, 1857, 1858], "static_binary_cross_entropi": 1859, "cross_entropi": [1860, 1861, 1862, 1863], "static_cross_entropi": 1864, "sparse_cross_entropi": [1865, 1866, 1867, 1868], "static_sparse_cross_entropi": 1869, "clip": [1871, 1872, 1873, 1874], "static_clip": 1875, "concat": [1876, 1877, 1878, 1879], "static_concat": 1880, "constant_pad": [1881, 1882, 1883, 1884], "static_constant_pad": 1885, "expand_dim": [1886, 1887, 1888, 1889], "static_expand_dim": 1890, "flip": [1891, 1892, 1893, 1894], "static_flip": 1895, "permute_dim": [1896, 1897, 1898, 1899], "static_permute_dim": 1900, "repeat": [1901, 1902, 1903, 1904], "static_repeat": 1905, "reshap": [1906, 1907, 1908, 1909], "static_reshap": 1910, "static_rol": 1915, "split": [1916, 1917, 1918, 1919], "static_split": 1920, "squeez": [1921, 1922, 1923, 1924], "static_squeez": 1925, "static_stack": 1930, "swapax": [1931, 1933, 1934, 1935], "static_swapax": 1932, "tile": [1936, 1938, 1939, 1940], "static_til": 1937, "unstack": [1941, 1943, 1944, 1945], "static_unstack": 1942, "zero_pad": [1946, 1948, 1949, 1950], "static_zero_pad": 1947, "fomaml_step": 1952, "maml_step": 1953, "reptile_step": 1954, "all_nested_indic": 1956, "copy_nest": 1957, "duplicate_array_index_chain": 1958, "index_nest": 1959, "insert_into_nest_at_index": 1960, "insert_into_nest_at_indic": 1961, "map_nest_at_index": 1963, "map_nest_at_indic": 1964, "multi_index_nest": 1965, "nested_ani": 1966, "nested_argwher": 1967, "nested_map": 1968, "nested_multi_map": 1969, "prune_empti": 1970, "prune_nest_at_index": 1971, "prune_nest_at_indic": 1972, "set_nest_at_index": 1973, "set_nest_at_indic": 1974, "layer_norm": [1976, 1977, 1978, 1979], "multinomi": [1981, 1982, 1983, 1984], "static_multinomi": 1985, "randint": [1986, 1987, 1988, 1989], "static_randint": 1990, "random_norm": [1991, 1992, 1993, 1994], "static_random_norm": 1995, "random_uniform": [1996, 1997, 1998, 1999], "static_random_uniform": 2000, "seed": [2001, 2289], "shuffl": [2002, 2003, 2004, 2005], "static_shuffl": 2006, "argmax": [2008, 2009, 2010, 2011], "static_argmax": 2012, "argmin": [2013, 2014, 2015, 2016], "static_argmin": 2017, "argwher": [2018, 2019, 2020, 2021], "static_argwher": 2022, "nonzero": [2023, 2024, 2025, 2026], "static_nonzero": 2027, "static_wher": 2029, "depend": [2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053], "output": [2033, 2034, 2038, 2039, 2043, 2044, 2048, 2049, 2053], "unique_al": [2034, 2036, 2037, 2038], "static_unique_al": 2035, "unique_count": [2039, 2041, 2042, 2043], "static_unique_count": 2040, "unique_invers": [2044, 2046, 2047, 2048], "static_unique_invers": 2045, "unique_valu": [2049, 2051, 2052, 2053], "static_unique_valu": 2050, "argsort": [2055, 2056, 2057, 2058], "static_argsort": 2059, "searchsort": [2060, 2061, 2062, 2063], "static_searchsort": 2064, "static_sort": 2069, "cumprod": [2071, 2072, 2073, 2074], "static_cumprod": 2075, "cumsum": [2076, 2077, 2078, 2079], "static_cumsum": 2080, "einsum": [2081, 2082, 2083, 2084], "max": [2085, 2086, 2087, 2088], "mean": [2089, 2090, 2091, 2092], "min": [2093, 2094, 2095, 2096], "prod": [2097, 2098, 2099, 2100, 2250], "static_prod": 2101, "std": [2102, 2103, 2104, 2105], "sum": [2106, 2108, 2109, 2110], "static_sum": 2107, "var": [2111, 2113, 2114, 2115], "static_var": 2112, "all": [2117, 2118, 2119, 2120], "static_al": 2121, "ani": [2122, 2123, 2124, 2125], "static_ani": 2126, "glossari": 2127, "content": 2128, "overview": 2128, "quick": 2128, "start": 2128, "citat": 2128, "inspect": 2131, "add_array_spec": 2132, "fn_array_spec": 2133, "nestedarrai": 2135, "relat": 2136, "infrastructur": [2138, 2146], "llvm": 2138, "mlir": 2138, "oneapi": 2138, "exchang": [2139, 2146], "onnx": 2139, "nnef": 2139, "coreml": 2139, "matlab": 2140, "scipi": 2140, "torch": [2140, 2141], "scikit": 2140, "learn": 2140, "theano": 2140, "panda": 2140, "julia": 2140, "apach": [2140, 2143], "spark": 2140, "mllib": 2140, "caff": 2140, "chainer": 2140, "tensorflow": 2140, "1": 2140, "mxnet": 2140, "cntk": 2140, "pytorch": 2140, "flux": 2140, "jax": 2140, "2": 2140, "dex": 2140, "languag": 2140, "tracer": [2141, 2146], "tf": 2141, "jaxpr": 2141, "jit": 2141, "fx": 2141, "compani": [2142, 2146], "quansight": 2142, "modular": 2142, "octoml": 2142, "multi": [2143, 2146], "vendor": [2143, 2144, 2145, 2146], "tvm": 2143, "xla": 2143, "gcc": 2143, "specif": [2144, 2145, 2146], "tensorrt": 2144, "cuda": 2144, "icc": 2145, "icx": 2145, "nvcc": 2145, "doe": 2146, "eagerpi": 2147, "kera": 2147, "thinc": 2147, "tensorli": 2147, "neuropod": 2147, "geglu": 2150, "moduleconvert": 2153, "mytfmodul": 2154, "mytorchmodul": 2155, "to_ivy_modul": 2156, "modulehelp": 2158, "firstlayersiren": 2161, "glorotuniform": 2162, "kaimingnorm": 2164, "Ones": 2165, "siren": 2166, "uniform": 2167, "conv1dtranspos": 2171, "conv2dtranspos": 2173, "conv3dtranspos": 2175, "depthwiseconv2d": 2176, "lstm": 2178, "multiheadattent": 2180, "layernorm": 2184, "adam": 2186, "lamb": 2187, "lar": 2188, "sgd": 2190, "sequenti": [2191, 2192], "assert_all_clos": 2195, "assert_same_type_and_shap": 2196, "check_unsupported_devic": 2197, "check_unsupported_device_and_dtyp": 2198, "check_unsupported_dtyp": 2199, "test_unsupported_funct": 2200, "value_test": 2201, "avail": 2202, "available_framework": 2203, "ground_truth": 2204, "args_to_contain": 2206, "as_cont": 2207, "as_list": 2208, "convtru": 2209, "create_args_kwarg": 2210, "empty_func": 2211, "flatten_and_to_np": 2213, "flatten_fw_and_to_np": 2214, "framework_compar": 2215, "get_frontend_ret": 2216, "get_ret_and_flattened_np_arrai": 2217, "gradient_incompatible_funct": 2218, "gradient_test": 2219, "gradient_unsupported_dtyp": 2220, "kwargs_to_args_n_kwarg": 2221, "make_json_pick": 2222, "test_frontend_funct": 2223, "test_frontend_method": 2224, "test_funct": 2225, "test_method": 2226, "var_fn": 2227, "global": 2228, "interruptedtest": 2229, "testdata": 2230, "remove_all_current_framework": 2231, "setup_api_test": 2232, "setup_frontend_test": 2233, "teardown_api_test": 2234, "teardown_frontend_test": 2235, "array_and_broadcastable_shap": 2238, "array_bool": 2239, "array_indices_axi": 2240, "array_valu": 2241, "arrays_and_ax": 2242, "arrays_for_pool": 2243, "dtype_and_valu": 2245, "dtype_values_axi": 2246, "list_of_length": 2247, "mutually_broadcastable_shap": 2249, "array_dtyp": 2252, "get_castable_dtyp": 2253, "get_dtyp": 2254, "apply_safety_factor": 2256, "embedding_help": 2257, "get_axi": 2258, "get_bound": 2259, "get_mean_std": 2260, "get_shap": 2261, "matrix_is_st": 2262, "reshape_shap": 2263, "subset": 2264, "x_and_filt": 2265, "float": 2267, "int": 2268, "struct": 2270, "frontendmethoddata": 2271, "flag": 2272, "frontendfunctiontestflag": 2273, "frontendmethodtestflag": 2274, "functiontestflag": 2275, "methodtestflag": 2276, "build_flag": 2277, "frontend_function_flag": 2278, "frontend_method_flag": 2279, "function_flag": 2280, "method_flag": 2281, "handle_frontend_method": 2283, "handle_frontend_test": 2284, "handle_method": 2285, "handle_test": 2286, "num_positional_arg": 2287, "num_positional_args_method": 2288, "verbos": 2290, "cprint": 2291}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Assertions": [[1, "module-ivy.assertions"], [2194, "module-ivy_tests.test_ivy.helpers.assertions"]], "check_all": [[2, "check-all"]], "check_all_or_any_fn": [[3, "check-all-or-any-fn"]], "check_any": [[4, "check-any"]], "check_dimensions": [[5, "check-dimensions"]], "check_elem_in_list": [[6, "check-elem-in-list"]], "check_equal": [[7, "check-equal"]], "check_exists": [[8, "check-exists"]], "check_false": [[9, "check-false"]], "check_fill_value_and_dtype_are_compatible": [[10, "check-fill-value-and-dtype-are-compatible"]], "check_gather_input_valid": [[11, "check-gather-input-valid"]], "check_gather_nd_input_valid": [[12, "check-gather-nd-input-valid"]], "check_greater": [[13, "check-greater"]], "check_inplace_sizes_valid": [[14, "check-inplace-sizes-valid"]], "check_isinstance": [[15, "check-isinstance"]], "check_kernel_padding_size": [[16, "check-kernel-padding-size"]], "check_less": [[17, "check-less"]], "check_one_way_broadcastable": [[18, "check-one-way-broadcastable"]], "check_same_dtype": [[19, "check-same-dtype"]], "check_shape": [[20, "check-shape"]], "check_shapes_broadcastable": [[21, "check-shapes-broadcastable"]], "check_true": [[22, "check-true"]], "Backend handler": [[23, "module-ivy.backend_handler"]], "ContextManager": [[24, "contextmanager"]], "choose_random_backend": [[25, "choose-random-backend"]], "clear_backend_stack": [[26, "clear-backend-stack"]], "convert_from_numpy_to_target_backend": [[27, "convert-from-numpy-to-target-backend"]], "convert_from_source_backend_to_numpy": [[28, "convert-from-source-backend-to-numpy"]], "current_backend": [[29, "current-backend"]], "fn_name_from_version_specific_fn_name": [[30, "fn-name-from-version-specific-fn-name"]], "get_backend": [[31, "get-backend"]], "set_backend": [[32, "set-backend"]], "set_backend_to_specific_version": [[33, "set-backend-to-specific-version"]], "set_jax_backend": [[34, "set-jax-backend"]], "set_numpy_backend": [[35, "set-numpy-backend"]], "set_tensorflow_backend": [[36, "set-tensorflow-backend"]], "set_torch_backend": [[37, "set-torch-backend"]], "unset_backend": [[38, "unset-backend"]], "Background": [[39, "background"], [2128, "background"]], "ML Explosion": [[40, "ml-explosion"]], "Standardization": [[41, "standardization"]], "Skepticism": [[41, "skepticism"]], "Complimentary vs Competitive": [[41, "complimentary-vs-competitive"]], "Do Standards Work?": [[41, "do-standards-work"]], "The Array API Standard": [[41, "the-array-api-standard"]], "Why Unify?": [[42, "why-unify"]], "No More Re-implementations \ud83d\udea7": [[42, "no-more-re-implementations"]], "\u201cInfinite\u201d Shelf-Life \u2705": [[42, "infinite-shelf-life"]], "Contributing": [[43, "contributing"], [2128, "contributing"]], "Applied Libraries": [[44, "applied-libraries"], [186, "applied-libraries"]], "Introduction": [[44, "introduction"], [164, "introduction"], [165, "introduction"]], "Example - Ivy Robot": [[44, "example-ivy-robot"]], "Building the Docs": [[45, "building-the-docs"]], "Building the Docs with Docker": [[45, "building-the-docs-with-docker"]], "Dockerless Doc-building": [[45, "dockerless-doc-building"]], "Using miniconda": [[45, "using-miniconda"], [48, "using-miniconda"]], "Using venv": [[45, "using-venv"], [48, "using-venv"]], "Building the docs": [[45, "id1"]], "Working of the Documentation Building Pipeline": [[45, "working-of-the-documentation-building-pipeline"]], "make_docs.sh:": [[45, "make-docs-sh"]], "entrypoint.sh:": [[45, "entrypoint-sh"]], "_make_docs.sh:": [[45, "id2"]], "generate_src_rst_files.py:": [[45, "generate-src-rst-files-py"]], "sphinx-build.py": [[45, "sphinx-build-py"]], "correct_built_html_files.py": [[45, "correct-built-html-files-py"]], "remove_files.sh": [[45, "remove-files-sh"]], "Helpful Resources": [[46, "helpful-resources"]], "Open Tasks": [[47, "open-tasks"]], "Function Formatting": [[47, "function-formatting"]], "Formatting checklist": [[47, "formatting-checklist"]], "Frontend APIs": [[47, "frontend-apis"]], "Where to place a frontend function": [[47, "where-to-place-a-frontend-function"]], "Ivy Experimental API": [[47, "ivy-experimental-api"], [49, "ivy-experimental-api"]], "Setting Up": [[48, "setting-up"]], "Forking and cloning the repo": [[48, "forking-and-cloning-the-repo"]], "PyCharm": [[48, "pycharm"]], "Virtual environments - No Docker": [[48, "virtual-environments-no-docker"]], "Docker Interpreter with PyCharm": [[48, "docker-interpreter-with-pycharm"]], "Windows": [[48, "windows"], [48, "id6"]], "MacOS": [[48, "macos"]], "Ubuntu": [[48, "ubuntu"], [48, "id8"]], "Setting Up Testing": [[48, "setting-up-testing"]], "More Detailed Hypothesis Logs": [[48, "more-detailed-hypothesis-logs"]], "Setting up for Free": [[48, "setting-up-for-free"]], "GitHub Codespaces": [[48, "github-codespaces"]], "Pre-Commit": [[48, "pre-commit"]], "The Basics": [[49, "the-basics"]], "Getting Help": [[49, "getting-help"]], "ToDo List Issues": [[49, "todo-list-issues"]], "Managing Your Fork": [[49, "managing-your-fork"]], "Who To Ask": [[49, "who-to-ask"]], "With Command Line:": [[49, "with-command-line"]], "With Browser:": [[49, "with-browser"]], "Pull Requests": [[49, "pull-requests"]], "Small Commits Often": [[49, "small-commits-often"]], "Interactive Ivy Docker Container": [[49, "interactive-ivy-docker-container"]], "Running Tests Locally": [[49, "running-tests-locally"]], "With Docker": [[49, "with-docker"]], "Getting the most out of IDE": [[49, "getting-the-most-out-of-ide"]], "with PyCharm": [[49, "with-pycharm"]], "Data classes": [[50, "data-classes"]], "Array": [[51, "module-ivy.array.array"], [54, "module-ivy.array.array"]], "Activations": [[52, "module-ivy.array.activations"], [101, "module-ivy.container.activations"], [205, "module-ivy.functional.ivy.activations"], [805, "module-ivy.functional.ivy.experimental.activations"], [2149, "module-ivy.stateful.activations"]], "ArrayWithActivations": [[53, "arraywithactivations"]], "Conversions": [[56, "module-ivy.array.conversions"], [107, "module-ivy.container.conversions"]], "args_to_ivy": [[57, "args-to-ivy"]], "args_to_native": [[58, "args-to-native"]], "to_ivy": [[59, "to-ivy"]], "to_native": [[60, "to-native"]], "Creation": [[61, "module-ivy.array.creation"], [109, "module-ivy.container.creation"], [255, "module-ivy.functional.ivy.creation"], [896, "module-ivy.functional.ivy.experimental.creation"]], "ArrayWithCreation": [[62, "arraywithcreation"]], "Data type": [[63, "module-ivy.array.data_type"], [111, "module-ivy.container.data_type"], [341, "module-ivy.functional.ivy.data_type"], [905, "module-ivy.functional.ivy.experimental.data_type"]], "ArrayWithDataTypes": [[64, "arraywithdatatypes"]], "Device": [[65, "module-ivy.array.device"], [113, "module-ivy.container.device"], [446, "module-ivy.functional.ivy.device"], [912, "module-ivy.functional.ivy.experimental.device"]], "ArrayWithDevice": [[66, "arraywithdevice"]], "Elementwise": [[67, "module-ivy.array.elementwise"], [115, "module-ivy.container.elementwise"], [481, "module-ivy.functional.ivy.elementwise"], [953, "module-ivy.functional.ivy.experimental.elementwise"]], "ArrayWithElementwise": [[68, "arraywithelementwise"]], "Experimental": [[69, "experimental"], [117, "experimental"], [802, "module-ivy.functional.ivy.experimental"]], "General": [[70, "module-ivy.array.general"], [118, "module-ivy.container.general"], [1055, "module-ivy.functional.ivy.experimental.general"], [1417, "module-ivy.functional.ivy.general"]], "ArrayWithGeneral": [[71, "arraywithgeneral"]], "Gradients": [[72, "module-ivy.array.gradients"], [120, "module-ivy.container.gradients"], [1062, "module-ivy.functional.ivy.experimental.gradients"], [1612, "module-ivy.functional.ivy.gradients"]], "ArrayWithGradients": [[73, "arraywithgradients"]], "Image": [[74, "module-ivy.array.image"], [122, "module-ivy.container.image"]], "ArrayWithImage": [[75, "arraywithimage"]], "Layers": [[76, "module-ivy.array.layers"], [124, "module-ivy.container.layers"], [1149, "module-ivy.functional.ivy.experimental.layers"], [1650, "module-ivy.functional.ivy.layers"], [2169, "module-ivy.stateful.layers"]], "ArrayWithLayers": [[77, "arraywithlayers"]], "Linear algebra": [[78, "module-ivy.array.linear_algebra"], [126, "module-ivy.container.linear_algebra"], [1176, "module-ivy.functional.ivy.experimental.linear_algebra"], [1714, "module-ivy.functional.ivy.linear_algebra"]], "ArrayWithLinearAlgebra": [[79, "arraywithlinearalgebra"]], "Losses": [[80, "module-ivy.array.losses"], [128, "module-ivy.container.losses"], [1193, "module-ivy.functional.ivy.experimental.losses"], [1854, "module-ivy.functional.ivy.losses"]], "ArrayWithLosses": [[81, "arraywithlosses"]], "Manipulation": [[82, "module-ivy.array.manipulation"], [130, "module-ivy.container.manipulation"], [1200, "module-ivy.functional.ivy.experimental.manipulation"], [1870, "module-ivy.functional.ivy.manipulation"]], "ArrayWithManipulation": [[83, "arraywithmanipulation"]], "Norms": [[84, "module-ivy.array.norms"], [132, "module-ivy.container.norms"], [1290, "module-ivy.functional.ivy.experimental.norms"], [1975, "module-ivy.functional.ivy.norms"], [2183, "module-ivy.stateful.norms"]], "ArrayWithNorms": [[85, "arraywithnorms"]], "Random": [[86, "module-ivy.array.random"], [134, "module-ivy.container.random"], [1315, "module-ivy.functional.ivy.experimental.random"], [1980, "module-ivy.functional.ivy.random"]], "ArrayWithRandom": [[87, "arraywithrandom"]], "Searching": [[88, "module-ivy.array.searching"], [136, "module-ivy.container.searching"], [1331, "module-ivy.functional.ivy.experimental.searching"], [2007, "module-ivy.functional.ivy.searching"]], "ArrayWithSearching": [[89, "arraywithsearching"]], "Set": [[90, "module-ivy.array.set"], [138, "module-ivy.container.set"], [1332, "module-ivy.functional.ivy.experimental.set"], [2033, "module-ivy.functional.ivy.set"]], "ArrayWithSet": [[91, "arraywithset"]], "Sorting": [[92, "module-ivy.array.sorting"], [140, "module-ivy.container.sorting"], [1343, "module-ivy.functional.ivy.experimental.sorting"], [2054, "module-ivy.functional.ivy.sorting"]], "ArrayWithSorting": [[93, "arraywithsorting"]], "Statistical": [[94, "module-ivy.array.statistical"], [142, "module-ivy.container.statistical"], [1353, "module-ivy.functional.ivy.experimental.statistical"], [2070, "module-ivy.functional.ivy.statistical"]], "ArrayWithStatistical": [[95, "arraywithstatistical"]], "Utility": [[96, "module-ivy.array.utility"], [144, "module-ivy.container.utility"], [1391, "module-ivy.functional.ivy.experimental.utility"], [2116, "module-ivy.functional.ivy.utility"]], "ArrayWithUtility": [[97, "arraywithutility"]], "Wrapping": [[98, "module-ivy.array.wrapping"], [146, "module-ivy.container.wrapping"]], "add_ivy_array_instance_methods": [[99, "add-ivy-array-instance-methods"]], "Container": [[100, "module-ivy.container.container"], [105, "module-ivy.container.container"]], "ContainerWithActivations": [[102, "containerwithactivations"]], "Base": [[103, "module-ivy.container.base"]], "ContainerBase": [[104, "containerbase"]], "ContainerWithConversions": [[108, "containerwithconversions"]], "ContainerWithCreation": [[110, "containerwithcreation"]], "ContainerWithDataTypes": [[112, "containerwithdatatypes"]], "ContainerWithDevice": [[114, "containerwithdevice"]], "ContainerWithElementwise": [[116, "containerwithelementwise"]], "ContainerWithGeneral": [[119, "containerwithgeneral"]], "ContainerWithGradients": [[121, "containerwithgradients"]], "ContainerWithImage": [[123, "containerwithimage"]], "ContainerWithLayers": [[125, "containerwithlayers"]], "ContainerWithLinearAlgebra": [[127, "containerwithlinearalgebra"]], "ContainerWithLosses": [[129, "containerwithlosses"]], "ContainerWithManipulation": [[131, "containerwithmanipulation"]], "ContainerWithNorms": [[133, "containerwithnorms"]], "ContainerWithRandom": [[135, "containerwithrandom"]], "ContainerWithSearching": [[137, "containerwithsearching"]], "ContainerWithSet": [[139, "containerwithset"]], "ContainerWithSorting": [[141, "containerwithsorting"]], "ContainerWithStatistical": [[143, "containerwithstatistical"]], "ContainerWithUtility": [[145, "containerwithutility"]], "add_ivy_container_instance_methods": [[147, "add-ivy-container-instance-methods"]], "Deep Dive": [[148, "deep-dive"]], "Array API Tests": [[149, "array-api-tests"], [153, "array-api-tests"]], "Running the Tests": [[149, "running-the-tests"]], "Using Terminal": [[149, "using-terminal"]], "Using the IDE": [[149, "using-the-ide"]], "Regenerating Test Failures": [[149, "regenerating-test-failures"]], "Test Skipping": [[149, "test-skipping"]], "Arrays": [[150, "arrays"]], "Native Array": [[150, "native-array"]], "Ivy Array": [[150, "ivy-array"], [172, "ivy-array"]], "Array Handling": [[150, "array-handling"]], "Integrating custom classes with Ivy": [[150, "integrating-custom-classes-with-ivy"]], "Backend Setting": [[151, "backend-setting"]], "Backend and Frontend Version Support": [[151, "backend-and-frontend-version-support"]], "Containers": [[152, "containers"]], "Container Instance Methods": [[152, "container-instance-methods"]], "Container Static Methods": [[152, "container-static-methods"]], "API Static Methods": [[152, "api-static-methods"]], "API Instance Methods": [[152, "api-instance-methods"]], "API Special Methods": [[152, "api-special-methods"]], "Nestable Functions": [[152, "nestable-functions"], [160, "nestable-functions"], [161, "nestable-functions"]], "Continuous Integration": [[153, "continuous-integration"]], "Commit (Push/PR) Triggered Testing": [[153, "commit-push-pr-triggered-testing"]], "Ivy Tests": [[153, "ivy-tests"], [166, "ivy-tests"]], "Implementation": [[153, "implementation"]], "A Top-Down View": [[153, "a-top-down-view"]], "Storing (and retrieving) the Mapping": [[153, "storing-and-retrieving-the-mapping"]], "Cloning and Pushing to the Repository": [[153, "cloning-and-pushing-to-the-repository"]], "Implementational Nitty Gritties": [[153, "implementational-nitty-gritties"]], "Storage Space (unifyai/Mapping)": [[153, "storage-space-unifyai-mapping"]], "Determine Test Coverage Workflow": [[153, "determine-test-coverage-workflow"]], "Multiple Runners": [[153, "multiple-runners"]], "Race Condition": [[153, "race-condition"]], "Periodic Testing": [[153, "periodic-testing"]], "Manually Dispatched Workflows": [[153, "manually-dispatched-workflows"]], "CI Pipeline \u27a1\ufe0f": [[153, "ci-pipeline"]], "Push": [[153, "push"]], "Pull Request": [[153, "pull-request"]], "Dashboard": [[153, "dashboard"]], "Data Types": [[154, "data-types"]], "Data Type Module": [[154, "data-type-module"]], "Data Type Promotion": [[154, "data-type-promotion"]], "Arguments in other Functions": [[154, "arguments-in-other-functions"], [155, "arguments-in-other-functions"]], "Supported and Unsupported Data Types": [[154, "supported-and-unsupported-data-types"]], "Backend Data Type Bugs": [[154, "backend-data-type-bugs"]], "Superset Data Type Support": [[154, "superset-data-type-support"]], "Devices": [[155, "devices"]], "Device Module": [[155, "device-module"]], "Docstring Examples": [[156, "docstring-examples"]], "ivy.tan": [[156, "ivy-tan"], [786, "ivy-tan"]], "ivy.roll": [[156, "ivy-roll"], [1914, "ivy-roll"]], "ivy.add": [[156, "ivy-add"], [500, "ivy-add"]], "Docstrings": [[157, "docstrings"]], "Exception Handling": [[158, "exception-handling"]], "Ivy Exception Class": [[158, "ivy-exception-class"]], "Configurable Mode for Stack Trace": [[158, "configurable-mode-for-stack-trace"]], "Ivy func_wrapper Pruning": [[158, "ivy-func-wrapper-pruning"]], "@handle_exceptions Decorator": [[158, "handle-exceptions-decorator"]], "Assertion Function": [[158, "assertion-function"]], "Formatting": [[159, "formatting"]], "Lint Checks": [[159, "lint-checks"]], "Pre-Commit Hook": [[159, "pre-commit-hook"]], "Function Arguments": [[160, "function-arguments"]], "Examples": [[160, "examples"]], "Positional and Keyword Arguments": [[160, "positional-and-keyword-arguments"]], "Input Arrays": [[160, "input-arrays"]], "out Argument": [[160, "out-argument"]], "dtype and device arguments": [[160, "dtype-and-device-arguments"]], "Numbers in Operator Functions": [[160, "numbers-in-operator-functions"]], "Integer Sequences": [[160, "integer-sequences"]], "Function Types": [[161, "function-types"]], "Primary Functions": [[161, "primary-functions"]], "Compositional Functions": [[161, "compositional-functions"]], "Mixed Functions": [[161, "mixed-functions"]], "Standalone Functions": [[161, "standalone-functions"]], "Convenience Functions": [[161, "convenience-functions"]], "Function Wrapping": [[162, "function-wrapping"]], "Inplace Updates": [[163, "inplace-updates"]], "out argument": [[163, "out-argument"]], "copy argument": [[163, "copy-argument"]], "Ivy Frontends": [[164, "ivy-frontends"]], "The Frontend Basics": [[164, "the-frontend-basics"]], "Unused Arguments": [[164, "unused-arguments"]], "Compositions": [[164, "compositions"]], "Missing Ivy Functions": [[164, "missing-ivy-functions"]], "Temporary Compositions": [[164, "temporary-compositions"]], "Supported Data Types and Devices": [[164, "supported-data-types-and-devices"]], "Classes and Instance Methods": [[164, "id6"]], "Frontend Data Type Promotion Rules": [[164, "frontend-data-type-promotion-rules"]], "NumPy Special Argument - Casting": [[164, "numpy-special-argument-casting"]], "Frontends Duplicate Policy": [[164, "frontends-duplicate-policy"]], "Ivy Frontend Tests": [[165, "ivy-frontend-tests"]], "Frontend Test Examples": [[165, "frontend-test-examples"]], "ivy.tan()": [[165, "ivy-tan"]], "ivy.full()": [[165, "ivy-full"]], "Testing Without Using Tests Values": [[165, "testing-without-using-tests-values"]], "Alias functions": [[165, "alias-functions"]], "Frontend Instance Method Tests": [[165, "frontend-instance-method-tests"]], "Frontend Instance Method Test Examples": [[165, "frontend-instance-method-test-examples"]], "ivy.add()": [[165, "ivy-add"]], "Hypothesis Helpers": [[165, "hypothesis-helpers"]], "Testing Pipeline": [[166, "testing-pipeline"]], "Hypothesis": [[166, "id2"]], "Data Generation": [[166, "id3"]], "Writing your own strategy": [[166, "writing-your-own-strategy"]], "Writing Hypothesis Test": [[166, "writing-hypothesis-test"]], "Ivy Test Decorators": [[166, "ivy-test-decorators"]], "Writing Ivy Tests": [[166, "writing-ivy-tests"]], "Integration of Strategies into Ivy Tests": [[166, "integration-of-strategies-into-ivy-tests"]], "Why do we need helper functions": [[166, "why-do-we-need-helper-functions"]], "How to write Hypothesis Tests effectively": [[166, "how-to-write-hypothesis-tests-effectively"]], "Bonus: Hypothesis\u2019 Extended Features": [[166, "bonus-hypothesis-extended-features"]], "Self-Consistent and Explicit Testing": [[166, "self-consistent-and-explicit-testing"]], "test_array_function": [[166, "id6"]], "Running Ivy Tests": [[166, "running-ivy-tests"]], "Re-Running Failed Ivy Tests": [[166, "re-running-failed-ivy-tests"]], "Navigating the Code": [[167, "navigating-the-code"]], "Categorization": [[167, "categorization"]], "Submodule Design": [[167, "submodule-design"]], "Ivy API": [[167, "ivy-api"]], "Backend API": [[167, "backend-api"]], "Submodule Helper Functions": [[167, "submodule-helper-functions"]], "Version Pinning": [[167, "version-pinning"]], "Superset Behaviour": [[168, "superset-behaviour"]], "Extending the Standard": [[168, "extending-the-standard"]], "What is the Superset?": [[168, "what-is-the-superset"]], "A Non-Duplicate Superset": [[168, "a-non-duplicate-superset"]], "What is not the Superset?": [[168, "what-is-not-the-superset"]], "When the Superset is Too Much": [[168, "when-the-superset-is-too-much"]], "Balancing Generalization with Efficiency": [[168, "balancing-generalization-with-efficiency"]], "More Examples": [[168, "more-examples"]], "Design": [[169, "design"], [2128, "design"]], "Building Blocks": [[170, "building-blocks"]], "Backend Functional APIs \u2705": [[170, "backend-functional-apis"]], "Ivy Functional API \u2705": [[170, "ivy-functional-api"]], "Backend Handler \u2705": [[170, "backend-handler"]], "Graph Compiler \ud83d\udea7": [[170, "graph-compiler"]], "Ivy as a Framework": [[171, "ivy-as-a-framework"]], "The Array Class": [[172, "the-array-class"]], "Unifying Operators": [[172, "unifying-operators"]], "API Monkey Patching": [[172, "api-monkey-patching"]], "Instance Methods": [[172, "instance-methods"]], "Ivy Container": [[173, "ivy-container"]], "Construction": [[173, "construction"]], "Representation": [[173, "representation"]], "Recursive Methods": [[173, "recursive-methods"]], "Built-ins": [[173, "built-ins"]], "Access": [[173, "access"]], "Saving and Loading": [[173, "saving-and-loading"]], "Comparisons": [[173, "comparisons"]], "Customized Representations": [[173, "customized-representations"]], "Use Cases": [[173, "use-cases"]], "Compartmentalization": [[173, "compartmentalization"]], "Configuration": [[173, "configuration"]], "Data loading": [[173, "data-loading"]], "Network weights": [[173, "network-weights"]], "Ivy Stateful API": [[174, "ivy-stateful-api"]], "Modules": [[174, "modules"]], "Initializers": [[174, "initializers"], [2159, "module-ivy.stateful.initializers"]], "Optimizers": [[174, "optimizers"], [2185, "module-ivy.stateful.optimizers"]], "Ivy as a Transpiler": [[175, "ivy-as-a-transpiler"]], "Frontend Functional APIs \ud83d\udea7": [[175, "frontend-functional-apis"]], "Role of the Graph Compiler \ud83d\udea7": [[175, "role-of-the-graph-compiler"]], "Converting Network Models \ud83d\udea7": [[175, "converting-network-models"]], "Ivy": [[176, "ivy"]], "Ivy builder": [[177, "ivy-builder"]], "Ivy ecosystem": [[178, "ivy-ecosystem"]], "Ivy gym": [[179, "ivy-gym"]], "Ivy mech": [[180, "ivy-mech"]], "Ivy memory": [[181, "ivy-memory"]], "Ivy models": [[182, "ivy-models"]], "Ivy robot": [[183, "ivy-robot"]], "Ivy vision": [[184, "ivy-vision"]], "Extensions": [[185, "extensions"], [2128, "extensions"]], "Ivy Mechanics": [[186, "ivy-mechanics"]], "Ivy Vision": [[186, "ivy-vision"]], "Ivy Robot": [[186, "ivy-robot"]], "Ivy Gym": [[186, "ivy-gym"]], "Ivy Memory": [[186, "ivy-memory"]], "FAQ": [[187, "faq"]], "Maintaining Backend Versions": [[187, "maintaining-backend-versions"]], "Dynamic Sizes": [[187, "dynamic-sizes"]], "Type and Shape Checking": [[187, "type-and-shape-checking"]], "GPU handling": [[187, "gpu-handling"]], "Model Deployment": [[187, "model-deployment"]], "Dynamic Control Flow": [[187, "dynamic-control-flow"]], "Auto-Differentiation": [[187, "auto-differentiation"]], "Replicas, and Data vs Model Parallelism": [[187, "replicas-and-data-vs-model-parallelism"]], "Support for Functions": [[187, "support-for-functions"]], "Alternative Data Structures": [[187, "alternative-data-structures"]], "Custom Operations": [[187, "custom-operations"]], "The Pipeline": [[187, "the-pipeline"]], "State": [[187, "state"]], "Func wrapper": [[188, "module-ivy.func_wrapper"]], "handle_array_function": [[189, "handle-array-function"]], "handle_array_like_without_promotion": [[190, "handle-array-like-without-promotion"]], "handle_nans": [[191, "handle-nans"]], "handle_nestable": [[192, "handle-nestable"]], "handle_out_argument": [[193, "handle-out-argument"]], "infer_device": [[194, "infer-device"]], "infer_dtype": [[195, "infer-dtype"]], "inputs_to_ivy_arrays": [[196, "inputs-to-ivy-arrays"]], "inputs_to_native_arrays": [[197, "inputs-to-native-arrays"]], "integer_arrays_to_float": [[198, "integer-arrays-to-float"]], "output_to_native_arrays": [[199, "output-to-native-arrays"]], "outputs_to_ivy_arrays": [[200, "outputs-to-ivy-arrays"]], "to_ivy_arrays_and_back": [[201, "to-ivy-arrays-and-back"]], "to_native_arrays_and_back": [[202, "to-native-arrays-and-back"]], "try_array_function_override": [[203, "try-array-function-override"]], "deserialize": [[206, "deserialize"]], "gelu": [[207, "gelu"]], "ivy.Array.gelu": [[208, "ivy-array-gelu"]], "ivy.Container.gelu": [[209, "ivy-container-gelu"]], "ivy.gelu": [[210, "ivy-gelu"]], "ivy.Container.static_gelu": [[211, "ivy-container-static-gelu"]], "get": [[212, "get"]], "leaky_relu": [[213, "leaky-relu"]], "ivy.Array.leaky_relu": [[214, "ivy-array-leaky-relu"]], "ivy.Container.leaky_relu": [[215, "ivy-container-leaky-relu"]], "ivy.leaky_relu": [[216, "ivy-leaky-relu"]], "ivy.Container.static_leaky_relu": [[217, "ivy-container-static-leaky-relu"]], "log_softmax": [[218, "log-softmax"]], "ivy.Array.log_softmax": [[219, "ivy-array-log-softmax"]], "ivy.Container.log_softmax": [[220, "ivy-container-log-softmax"]], "ivy.log_softmax": [[221, "ivy-log-softmax"]], "ivy.Container.static_log_softmax": [[222, "ivy-container-static-log-softmax"]], "mish": [[223, "mish"]], "ivy.Array.mish": [[224, "ivy-array-mish"]], "ivy.Container.mish": [[225, "ivy-container-mish"]], "ivy.mish": [[226, "ivy-mish"]], "ivy.Container.static_mish": [[227, "ivy-container-static-mish"]], "relu": [[228, "relu"]], "ivy.Array.relu": [[229, "ivy-array-relu"]], "ivy.Container.relu": [[230, "ivy-container-relu"]], "ivy.relu": [[231, "ivy-relu"]], "ivy.Container.static_relu": [[232, "ivy-container-static-relu"]], "sigmoid": [[233, "sigmoid"]], "ivy.Array.sigmoid": [[234, "ivy-array-sigmoid"]], "ivy.Container.sigmoid": [[235, "ivy-container-sigmoid"]], "ivy.sigmoid": [[236, "ivy-sigmoid"]], "ivy.Container.static_sigmoid": [[237, "ivy-container-static-sigmoid"]], "softmax": [[238, "softmax"]], "ivy.Array.softmax": [[239, "ivy-array-softmax"]], "ivy.Container.softmax": [[240, "ivy-container-softmax"]], "ivy.softmax": [[241, "ivy-softmax"]], "ivy.Container.static_softmax": [[242, "ivy-container-static-softmax"]], "softplus": [[243, "softplus"]], "ivy.Array.softplus": [[244, "ivy-array-softplus"]], "ivy.Container.softplus": [[245, "ivy-container-softplus"]], "ivy.softplus": [[246, "ivy-softplus"]], "ivy.Container.static_softplus": [[247, "ivy-container-static-softplus"]], "Constants": [[249, "module-ivy.functional.ivy.constants"], [880, "module-ivy.functional.ivy.experimental.constants"]], "Control flow ops": [[250, "module-ivy.functional.ivy.control_flow_ops"]], "IfElse": [[251, "ifelse"]], "WhileLoop": [[252, "whileloop"]], "if_else": [[253, "if-else"]], "while_loop": [[254, "while-loop"]], "Note": [[255, null], [279, null], [282, null]], "NestedSequence": [[256, "nestedsequence"]], "arange": [[257, "arange"]], "ivy.arange": [[258, "ivy-arange"]], "ivy.Container.static_arange": [[259, "ivy-container-static-arange"]], "asarray": [[260, "asarray"]], "ivy.Array.asarray": [[261, "ivy-array-asarray"]], "ivy.asarray": [[262, "ivy-asarray"]], "ivy.Container.static_asarray": [[263, "ivy-container-static-asarray"]], "asarray_handle_nestable": [[264, "asarray-handle-nestable"]], "asarray_infer_device": [[265, "asarray-infer-device"]], "asarray_to_native_arrays_and_back": [[266, "asarray-to-native-arrays-and-back"]], "copy_array": [[267, "copy-array"]], "ivy.Array.copy_array": [[268, "ivy-array-copy-array"]], "ivy.copy_array": [[269, "ivy-copy-array"]], "empty": [[270, "empty"]], "empty_like": [[271, "empty-like"]], "ivy.Array.empty_like": [[272, "ivy-array-empty-like"]], "ivy.Container.empty_like": [[273, "ivy-container-empty-like"]], "ivy.empty_like": [[274, "ivy-empty-like"]], "ivy.Container.static_empty_like": [[275, "ivy-container-static-empty-like"]], "eye": [[276, "eye"]], "ivy.eye": [[277, "ivy-eye"]], "ivy.Container.static_eye": [[278, "ivy-container-static-eye"]], "from_dlpack": [[279, "from-dlpack"]], "ivy.Array.from_dlpack": [[280, "ivy-array-from-dlpack"]], "ivy.Container.from_dlpack": [[281, "ivy-container-from-dlpack"]], "ivy.from_dlpack": [[282, "ivy-from-dlpack"]], "ivy.Container.static_from_dlpack": [[283, "ivy-container-static-from-dlpack"]], "full": [[284, "full"]], "full_like": [[285, "full-like"]], "ivy.Array.full_like": [[286, "ivy-array-full-like"]], "ivy.Container.full_like": [[287, "ivy-container-full-like"]], "ivy.full_like": [[288, "ivy-full-like"]], "ivy.Container.static_full_like": [[289, "ivy-container-static-full-like"]], "linspace": [[290, "linspace"]], "ivy.Array.linspace": [[291, "ivy-array-linspace"]], "ivy.Container.linspace": [[292, "ivy-container-linspace"]], "ivy.linspace": [[293, "ivy-linspace"]], "ivy.Container.static_linspace": [[294, "ivy-container-static-linspace"]], "logspace": [[295, "logspace"]], "ivy.Array.logspace": [[296, "ivy-array-logspace"]], "ivy.Container.logspace": [[297, "ivy-container-logspace"]], "ivy.logspace": [[298, "ivy-logspace"]], "ivy.Container.static_logspace": [[299, "ivy-container-static-logspace"]], "meshgrid": [[300, "meshgrid"]], "ivy.Array.meshgrid": [[301, "ivy-array-meshgrid"]], "ivy.Container.meshgrid": [[302, "ivy-container-meshgrid"]], "ivy.meshgrid": [[303, "ivy-meshgrid"]], "ivy.Container.static_meshgrid": [[304, "ivy-container-static-meshgrid"]], "native_array": [[305, "native-array"]], "ivy.Array.native_array": [[306, "ivy-array-native-array"]], "ivy.Container.native_array": [[307, "ivy-container-native-array"]], "ivy.native_array": [[308, "ivy-native-array"]], "ivy.Container.static_native_array": [[309, "ivy-container-static-native-array"]], "one_hot": [[310, "one-hot"]], "ivy.Array.one_hot": [[311, "ivy-array-one-hot"]], "ivy.Container.one_hot": [[312, "ivy-container-one-hot"]], "ivy.one_hot": [[313, "ivy-one-hot"]], "ivy.Container.static_one_hot": [[314, "ivy-container-static-one-hot"]], "ones": [[315, "ones"]], "ivy.ones": [[316, "ivy-ones"]], "ivy.Container.static_ones": [[317, "ivy-container-static-ones"]], "ones_like": [[318, "ones-like"]], "ivy.Array.ones_like": [[319, "ivy-array-ones-like"]], "ivy.Container.ones_like": [[320, "ivy-container-ones-like"]], "ivy.ones_like": [[321, "ivy-ones-like"]], "ivy.Container.static_ones_like": [[322, "ivy-container-static-ones-like"]], "tril": [[323, "tril"]], "ivy.Container.static_tril": [[324, "ivy-container-static-tril"]], "ivy.Array.tril": [[325, "ivy-array-tril"]], "ivy.Container.tril": [[326, "ivy-container-tril"]], "ivy.tril": [[327, "ivy-tril"]], "triu": [[328, "triu"]], "ivy.Container.static_triu": [[329, "ivy-container-static-triu"]], "ivy.Array.triu": [[330, "ivy-array-triu"]], "ivy.Container.triu": [[331, "ivy-container-triu"]], "ivy.triu": [[332, "ivy-triu"]], "zeros": [[333, "zeros"]], "ivy.Container.static_zeros": [[334, "ivy-container-static-zeros"]], "ivy.zeros": [[335, "ivy-zeros"]], "zeros_like": [[336, "zeros-like"]], "ivy.Container.static_zeros_like": [[337, "ivy-container-static-zeros-like"]], "ivy.Array.zeros_like": [[338, "ivy-array-zeros-like"]], "ivy.Container.zeros_like": [[339, "ivy-container-zeros-like"]], "ivy.zeros_like": [[340, "ivy-zeros-like"]], "DefaultComplexDtype": [[342, "defaultcomplexdtype"]], "DefaultDtype": [[343, "defaultdtype"]], "DefaultFloatDtype": [[344, "defaultfloatdtype"]], "DefaultIntDtype": [[345, "defaultintdtype"]], "DefaultUintDtype": [[346, "defaultuintdtype"]], "as_ivy_dtype": [[347, "as-ivy-dtype"]], "as_native_dtype": [[348, "as-native-dtype"]], "astype": [[349, "astype"]], "ivy.Array.astype": [[350, "ivy-array-astype"]], "ivy.Container.astype": [[351, "ivy-container-astype"]], "ivy.astype": [[352, "ivy-astype"]], "ivy.Container.static_astype": [[353, "ivy-container-static-astype"]], "broadcast_arrays": [[354, "broadcast-arrays"]], "ivy.Array.broadcast_arrays": [[355, "ivy-array-broadcast-arrays"]], "ivy.Container.broadcast_arrays": [[356, "ivy-container-broadcast-arrays"]], "ivy.broadcast_arrays": [[357, "ivy-broadcast-arrays"]], "ivy.Container.static_broadcast_arrays": [[358, "ivy-container-static-broadcast-arrays"]], "broadcast_to": [[359, "broadcast-to"]], "ivy.Array.broadcast_to": [[360, "ivy-array-broadcast-to"]], "ivy.Container.broadcast_to": [[361, "ivy-container-broadcast-to"]], "ivy.broadcast_to": [[362, "ivy-broadcast-to"]], "ivy.Container.static_broadcast_to": [[363, "ivy-container-static-broadcast-to"]], "can_cast": [[364, "can-cast"]], "ivy.Array.can_cast": [[365, "ivy-array-can-cast"]], "ivy.Container.can_cast": [[366, "ivy-container-can-cast"]], "ivy.can_cast": [[367, "ivy-can-cast"]], "ivy.Container.static_can_cast": [[368, "ivy-container-static-can-cast"]], "check_float": [[369, "check-float"]], "closest_valid_dtype": [[370, "closest-valid-dtype"]], "default_complex_dtype": [[371, "default-complex-dtype"]], "ivy.default_complex_dtype": [[372, "ivy-default-complex-dtype"]], "ivy.Container.static_default_complex_dtype": [[373, "ivy-container-static-default-complex-dtype"]], "default_dtype": [[374, "default-dtype"]], "default_float_dtype": [[375, "default-float-dtype"]], "ivy.default_float_dtype": [[376, "ivy-default-float-dtype"]], "ivy.Container.static_default_float_dtype": [[377, "ivy-container-static-default-float-dtype"]], "default_int_dtype": [[378, "default-int-dtype"]], "default_uint_dtype": [[379, "default-uint-dtype"]], "dtype": [[380, "dtype"]], "ivy.Container.dtype": [[381, "ivy-container-dtype"]], "ivy.dtype": [[382, "ivy-dtype"]], "ivy.Container.static_dtype": [[383, "ivy-container-static-dtype"]], "dtype_bits": [[384, "dtype-bits"]], "finfo": [[385, "finfo"]], "ivy.Array.finfo": [[386, "ivy-array-finfo"]], "ivy.Container.finfo": [[387, "ivy-container-finfo"]], "ivy.finfo": [[388, "ivy-finfo"]], "ivy.Container.static_finfo": [[389, "ivy-container-static-finfo"]], "function_supported_dtypes": [[390, "function-supported-dtypes"]], "ivy.function_supported_dtypes": [[391, "ivy-function-supported-dtypes"]], "ivy.Container.static_function_supported_dtypes": [[392, "ivy-container-static-function-supported-dtypes"]], "function_unsupported_dtypes": [[393, "function-unsupported-dtypes"]], "ivy.function_unsupported_dtypes": [[394, "ivy-function-unsupported-dtypes"]], "ivy.Container.static_function_unsupported_dtypes": [[395, "ivy-container-static-function-unsupported-dtypes"]], "iinfo": [[396, "iinfo"]], "ivy.Array.iinfo": [[397, "ivy-array-iinfo"]], "ivy.Container.iinfo": [[398, "ivy-container-iinfo"]], "ivy.iinfo": [[399, "ivy-iinfo"]], "ivy.Container.static_iinfo": [[400, "ivy-container-static-iinfo"]], "infer_default_dtype": [[401, "infer-default-dtype"]], "invalid_dtype": [[402, "invalid-dtype"]], "is_bool_dtype": [[403, "is-bool-dtype"]], "ivy.Array.is_bool_dtype": [[404, "ivy-array-is-bool-dtype"]], "ivy.Container.is_bool_dtype": [[405, "ivy-container-is-bool-dtype"]], "ivy.is_bool_dtype": [[406, "ivy-is-bool-dtype"]], "ivy.Container.static_is_bool_dtype": [[407, "ivy-container-static-is-bool-dtype"]], "is_complex_dtype": [[408, "is-complex-dtype"]], "ivy.Container.is_complex_dtype": [[409, "ivy-container-is-complex-dtype"]], "ivy.is_complex_dtype": [[410, "ivy-is-complex-dtype"]], "ivy.Container.static_is_complex_dtype": [[411, "ivy-container-static-is-complex-dtype"]], "is_float_dtype": [[412, "is-float-dtype"]], "ivy.Array.is_float_dtype": [[413, "ivy-array-is-float-dtype"]], "ivy.Container.is_float_dtype": [[414, "ivy-container-is-float-dtype"]], "ivy.is_float_dtype": [[415, "ivy-is-float-dtype"]], "ivy.Container.static_is_float_dtype": [[416, "ivy-container-static-is-float-dtype"]], "is_int_dtype": [[417, "is-int-dtype"]], "ivy.Array.is_int_dtype": [[418, "ivy-array-is-int-dtype"]], "ivy.Container.is_int_dtype": [[419, "ivy-container-is-int-dtype"]], "ivy.is_int_dtype": [[420, "ivy-is-int-dtype"]], "ivy.Container.static_is_int_dtype": [[421, "ivy-container-static-is-int-dtype"]], "is_uint_dtype": [[422, "is-uint-dtype"]], "ivy.Array.is_uint_dtype": [[423, "ivy-array-is-uint-dtype"]], "ivy.Container.is_uint_dtype": [[424, "ivy-container-is-uint-dtype"]], "ivy.is_uint_dtype": [[425, "ivy-is-uint-dtype"]], "ivy.Container.static_is_uint_dtype": [[426, "ivy-container-static-is-uint-dtype"]], "promote_types": [[427, "promote-types"]], "promote_types_of_inputs": [[428, "promote-types-of-inputs"]], "result_type": [[429, "result-type"]], "ivy.Array.result_type": [[430, "ivy-array-result-type"]], "ivy.Container.result_type": [[431, "ivy-container-result-type"]], "ivy.result_type": [[432, "ivy-result-type"]], "ivy.Container.static_result_type": [[433, "ivy-container-static-result-type"]], "set_default_complex_dtype": [[434, "set-default-complex-dtype"]], "set_default_dtype": [[435, "set-default-dtype"]], "set_default_float_dtype": [[436, "set-default-float-dtype"]], "set_default_int_dtype": [[437, "set-default-int-dtype"]], "set_default_uint_dtype": [[438, "set-default-uint-dtype"]], "type_promote_arrays": [[439, "type-promote-arrays"]], "unset_default_complex_dtype": [[440, "unset-default-complex-dtype"]], "unset_default_dtype": [[441, "unset-default-dtype"]], "unset_default_float_dtype": [[442, "unset-default-float-dtype"]], "unset_default_int_dtype": [[443, "unset-default-int-dtype"]], "unset_default_uint_dtype": [[444, "unset-default-uint-dtype"]], "valid_dtype": [[445, "valid-dtype"]], "DefaultDevice": [[447, "defaultdevice"]], "Profiler": [[448, "profiler"]], "as_ivy_dev": [[449, "as-ivy-dev"]], "as_native_dev": [[450, "as-native-dev"]], "clear_mem_on_dev": [[451, "clear-mem-on-dev"]], "default_device": [[452, "default-device"]], "dev": [[453, "dev"]], "ivy.Array.dev": [[454, "ivy-array-dev"]], "ivy.Container.dev": [[455, "ivy-container-dev"]], "ivy.dev": [[456, "ivy-dev"]], "ivy.Container.static_dev": [[457, "ivy-container-static-dev"]], "dev_util": [[458, "dev-util"]], "function_supported_devices": [[459, "function-supported-devices"]], "function_unsupported_devices": [[460, "function-unsupported-devices"]], "get_all_ivy_arrays_on_dev": [[461, "get-all-ivy-arrays-on-dev"]], "gpu_is_available": [[462, "gpu-is-available"]], "num_cpu_cores": [[463, "num-cpu-cores"]], "num_gpus": [[464, "num-gpus"]], "num_ivy_arrays_on_dev": [[465, "num-ivy-arrays-on-dev"]], "percent_used_mem_on_dev": [[466, "percent-used-mem-on-dev"]], "print_all_ivy_arrays_on_dev": [[467, "print-all-ivy-arrays-on-dev"]], "set_default_device": [[468, "set-default-device"]], "set_split_factor": [[469, "set-split-factor"]], "split_factor": [[470, "split-factor"]], "split_func_call": [[471, "split-func-call"]], "to_device": [[472, "to-device"]], "ivy.Container.static_to_device": [[473, "ivy-container-static-to-device"]], "ivy.Array.to_device": [[474, "ivy-array-to-device"]], "ivy.Container.to_device": [[475, "ivy-container-to-device"]], "ivy.to_device": [[476, "ivy-to-device"]], "total_mem_on_dev": [[477, "total-mem-on-dev"]], "tpu_is_available": [[478, "tpu-is-available"]], "unset_default_device": [[479, "unset-default-device"]], "used_mem_on_dev": [[480, "used-mem-on-dev"]], "abs": [[482, "abs"]], "ivy.Array.abs": [[483, "ivy-array-abs"]], "ivy.Container.abs": [[484, "ivy-container-abs"]], "ivy.abs": [[485, "ivy-abs"]], "ivy.Container.static_abs": [[486, "ivy-container-static-abs"]], "acos": [[487, "acos"]], "ivy.Array.acos": [[488, "ivy-array-acos"]], "ivy.Container.acos": [[489, "ivy-container-acos"]], "ivy.acos": [[490, "ivy-acos"]], "ivy.Container.static_acos": [[491, "ivy-container-static-acos"]], "acosh": [[492, "acosh"]], "ivy.Array.acosh": [[493, "ivy-array-acosh"]], "ivy.Container.acosh": [[494, "ivy-container-acosh"]], "ivy.acosh": [[495, "ivy-acosh"]], "ivy.Container.static_acosh": [[496, "ivy-container-static-acosh"]], "add": [[497, "add"]], "ivy.Array.add": [[498, "ivy-array-add"]], "ivy.Container.add": [[499, "ivy-container-add"]], "ivy.Container.static_add": [[501, "ivy-container-static-add"]], "asin": [[502, "asin"]], "ivy.Array.asin": [[503, "ivy-array-asin"]], "ivy.Container.asin": [[504, "ivy-container-asin"]], "ivy.asin": [[505, "ivy-asin"]], "ivy.Container.static_asin": [[506, "ivy-container-static-asin"]], "asinh": [[507, "asinh"]], "ivy.Array.asinh": [[508, "ivy-array-asinh"]], "ivy.Container.asinh": [[509, "ivy-container-asinh"]], "ivy.asinh": [[510, "ivy-asinh"]], "ivy.Container.static_asinh": [[511, "ivy-container-static-asinh"]], "atan": [[512, "atan"]], "ivy.Array.atan": [[513, "ivy-array-atan"]], "ivy.Container.atan": [[514, "ivy-container-atan"]], "ivy.atan": [[515, "ivy-atan"]], "ivy.Container.static_atan": [[516, "ivy-container-static-atan"]], "atan2": [[517, "atan2"]], "ivy.Array.atan2": [[518, "ivy-array-atan2"]], "ivy.Container.atan2": [[519, "ivy-container-atan2"]], "ivy.atan2": [[520, "ivy-atan2"]], "ivy.Container.static_atan2": [[521, "ivy-container-static-atan2"]], "atanh": [[522, "atanh"]], "ivy.Array.atanh": [[523, "ivy-array-atanh"]], "ivy.Container.atanh": [[524, "ivy-container-atanh"]], "ivy.atanh": [[525, "ivy-atanh"]], "ivy.Container.static_atanh": [[526, "ivy-container-static-atanh"]], "bitwise_and": [[527, "bitwise-and"]], "ivy.Array.bitwise_and": [[528, "ivy-array-bitwise-and"]], "ivy.Container.bitwise_and": [[529, "ivy-container-bitwise-and"]], "ivy.bitwise_and": [[530, "ivy-bitwise-and"]], "ivy.Container.static_bitwise_and": [[531, "ivy-container-static-bitwise-and"]], "bitwise_invert": [[532, "bitwise-invert"]], "ivy.Array.bitwise_invert": [[533, "ivy-array-bitwise-invert"]], "ivy.Container.bitwise_invert": [[534, "ivy-container-bitwise-invert"]], "ivy.bitwise_invert": [[535, "ivy-bitwise-invert"]], "ivy.Container.static_bitwise_invert": [[536, "ivy-container-static-bitwise-invert"]], "bitwise_left_shift": [[537, "bitwise-left-shift"]], "ivy.Array.bitwise_left_shift": [[538, "ivy-array-bitwise-left-shift"]], "ivy.Container.bitwise_left_shift": [[539, "ivy-container-bitwise-left-shift"]], "ivy.bitwise_left_shift": [[540, "ivy-bitwise-left-shift"]], "ivy.Container.static_bitwise_left_shift": [[541, "ivy-container-static-bitwise-left-shift"]], "bitwise_or": [[542, "bitwise-or"]], "ivy.Array.bitwise_or": [[543, "ivy-array-bitwise-or"]], "ivy.Container.bitwise_or": [[544, "ivy-container-bitwise-or"]], "ivy.bitwise_or": [[545, "ivy-bitwise-or"]], "ivy.Container.static_bitwise_or": [[546, "ivy-container-static-bitwise-or"]], "bitwise_right_shift": [[547, "bitwise-right-shift"]], "ivy.Array.bitwise_right_shift": [[548, "ivy-array-bitwise-right-shift"]], "ivy.Container.bitwise_right_shift": [[549, "ivy-container-bitwise-right-shift"]], "ivy.bitwise_right_shift": [[550, "ivy-bitwise-right-shift"]], "ivy.Container.static_bitwise_right_shift": [[551, "ivy-container-static-bitwise-right-shift"]], "bitwise_xor": [[552, "bitwise-xor"]], "ivy.Array.bitwise_xor": [[553, "ivy-array-bitwise-xor"]], "ivy.Container.bitwise_xor": [[554, "ivy-container-bitwise-xor"]], "ivy.bitwise_xor": [[555, "ivy-bitwise-xor"]], "ivy.Container.static_bitwise_xor": [[556, "ivy-container-static-bitwise-xor"]], "ceil": [[557, "ceil"]], "ivy.Array.ceil": [[558, "ivy-array-ceil"]], "ivy.Container.ceil": [[559, "ivy-container-ceil"]], "ivy.ceil": [[560, "ivy-ceil"]], "ivy.Container.static_ceil": [[561, "ivy-container-static-ceil"]], "cos": [[562, "cos"]], "ivy.Array.cos": [[563, "ivy-array-cos"]], "ivy.Container.cos": [[564, "ivy-container-cos"]], "ivy.cos": [[565, "ivy-cos"]], "ivy.Container.static_cos": [[566, "ivy-container-static-cos"]], "cosh": [[567, "cosh"]], "ivy.Array.cosh": [[568, "ivy-array-cosh"]], "ivy.Container.cosh": [[569, "ivy-container-cosh"]], "ivy.cosh": [[570, "ivy-cosh"]], "ivy.Container.static_cosh": [[571, "ivy-container-static-cosh"]], "deg2rad": [[572, "deg2rad"]], "ivy.Array.deg2rad": [[573, "ivy-array-deg2rad"]], "ivy.Container.deg2rad": [[574, "ivy-container-deg2rad"]], "ivy.deg2rad": [[575, "ivy-deg2rad"]], "ivy.Container.static_deg2rad": [[576, "ivy-container-static-deg2rad"]], "divide": [[577, "divide"]], "ivy.Array.divide": [[578, "ivy-array-divide"]], "ivy.Container.divide": [[579, "ivy-container-divide"]], "ivy.divide": [[580, "ivy-divide"]], "ivy.Container.static_divide": [[581, "ivy-container-static-divide"]], "equal": [[582, "equal"]], "ivy.Array.equal": [[583, "ivy-array-equal"]], "ivy.Container.equal": [[584, "ivy-container-equal"]], "ivy.equal": [[585, "ivy-equal"]], "ivy.Container.static_equal": [[586, "ivy-container-static-equal"]], "erf": [[587, "erf"]], "ivy.Array.erf": [[588, "ivy-array-erf"]], "ivy.Container.erf": [[589, "ivy-container-erf"]], "ivy.erf": [[590, "ivy-erf"]], "ivy.Container.static_erf": [[591, "ivy-container-static-erf"]], "exp": [[592, "exp"]], "ivy.Array.exp": [[593, "ivy-array-exp"]], "ivy.Container.exp": [[594, "ivy-container-exp"]], "ivy.exp": [[595, "ivy-exp"]], "ivy.Container.static_exp": [[596, "ivy-container-static-exp"]], "expm1": [[597, "expm1"]], "ivy.Array.expm1": [[598, "ivy-array-expm1"]], "ivy.Container.expm1": [[599, "ivy-container-expm1"]], "ivy.expm1": [[600, "ivy-expm1"]], "ivy.Container.static_expm1": [[601, "ivy-container-static-expm1"]], "floor": [[602, "floor"]], "ivy.Array.floor": [[603, "ivy-array-floor"]], "ivy.Container.floor": [[604, "ivy-container-floor"]], "ivy.floor": [[605, "ivy-floor"]], "ivy.Container.static_floor": [[606, "ivy-container-static-floor"]], "floor_divide": [[607, "floor-divide"]], "ivy.Array.floor_divide": [[608, "ivy-array-floor-divide"]], "ivy.Container.floor_divide": [[609, "ivy-container-floor-divide"]], "ivy.floor_divide": [[610, "ivy-floor-divide"]], "ivy.Container.static_floor_divide": [[611, "ivy-container-static-floor-divide"]], "greater": [[612, "greater"]], "ivy.Array.greater": [[613, "ivy-array-greater"]], "ivy.Container.greater": [[614, "ivy-container-greater"]], "ivy.greater": [[615, "ivy-greater"]], "ivy.Container.static_greater": [[616, "ivy-container-static-greater"]], "greater_equal": [[617, "greater-equal"]], "ivy.Array.greater_equal": [[618, "ivy-array-greater-equal"]], "ivy.Container.greater_equal": [[619, "ivy-container-greater-equal"]], "ivy.greater_equal": [[620, "ivy-greater-equal"]], "ivy.Container.static_greater_equal": [[621, "ivy-container-static-greater-equal"]], "isfinite": [[622, "isfinite"]], "ivy.Array.isfinite": [[623, "ivy-array-isfinite"]], "ivy.Container.isfinite": [[624, "ivy-container-isfinite"]], "ivy.isfinite": [[625, "ivy-isfinite"]], "ivy.Container.static_isfinite": [[626, "ivy-container-static-isfinite"]], "isinf": [[627, "isinf"]], "ivy.Array.isinf": [[628, "ivy-array-isinf"]], "ivy.Container.isinf": [[629, "ivy-container-isinf"]], "ivy.isinf": [[630, "ivy-isinf"]], "ivy.Container.static_isinf": [[631, "ivy-container-static-isinf"]], "isnan": [[632, "isnan"]], "ivy.Array.isnan": [[633, "ivy-array-isnan"]], "ivy.Container.isnan": [[634, "ivy-container-isnan"]], "ivy.isnan": [[635, "ivy-isnan"]], "ivy.Container.static_isnan": [[636, "ivy-container-static-isnan"]], "isreal": [[637, "isreal"]], "ivy.Array.isreal": [[638, "ivy-array-isreal"]], "ivy.Container.isreal": [[639, "ivy-container-isreal"]], "ivy.isreal": [[640, "ivy-isreal"]], "ivy.Container.static_isreal": [[641, "ivy-container-static-isreal"]], "less": [[642, "less"]], "ivy.Array.less": [[643, "ivy-array-less"]], "ivy.Container.less": [[644, "ivy-container-less"]], "ivy.less": [[645, "ivy-less"]], "ivy.Container.static_less": [[646, "ivy-container-static-less"]], "less_equal": [[647, "less-equal"]], "ivy.Array.less_equal": [[648, "ivy-array-less-equal"]], "ivy.Container.less_equal": [[649, "ivy-container-less-equal"]], "ivy.less_equal": [[650, "ivy-less-equal"]], "ivy.Container.static_less_equal": [[651, "ivy-container-static-less-equal"]], "log": [[652, "log"]], "ivy.Array.log": [[653, "ivy-array-log"]], "ivy.Container.log": [[654, "ivy-container-log"]], "ivy.log": [[655, "ivy-log"]], "ivy.Container.static_log": [[656, "ivy-container-static-log"]], "log10": [[657, "log10"]], "ivy.Array.log10": [[658, "ivy-array-log10"]], "ivy.Container.log10": [[659, "ivy-container-log10"]], "ivy.log10": [[660, "ivy-log10"]], "ivy.Container.static_log10": [[661, "ivy-container-static-log10"]], "log1p": [[662, "log1p"]], "ivy.Array.log1p": [[663, "ivy-array-log1p"]], "ivy.Container.log1p": [[664, "ivy-container-log1p"]], "ivy.log1p": [[665, "ivy-log1p"]], "ivy.Container.static_log1p": [[666, "ivy-container-static-log1p"]], "log2": [[667, "log2"]], "ivy.Array.log2": [[668, "ivy-array-log2"]], "ivy.Container.log2": [[669, "ivy-container-log2"]], "ivy.log2": [[670, "ivy-log2"]], "ivy.Container.static_log2": [[671, "ivy-container-static-log2"]], "logaddexp": [[672, "logaddexp"]], "ivy.Array.logaddexp": [[673, "ivy-array-logaddexp"]], "ivy.Container.logaddexp": [[674, "ivy-container-logaddexp"]], "ivy.logaddexp": [[675, "ivy-logaddexp"]], "ivy.Container.static_logaddexp": [[676, "ivy-container-static-logaddexp"]], "logical_and": [[677, "logical-and"]], "ivy.Array.logical_and": [[678, "ivy-array-logical-and"]], "ivy.Container.logical_and": [[679, "ivy-container-logical-and"]], "ivy.logical_and": [[680, "ivy-logical-and"]], "ivy.Container.static_logical_and": [[681, "ivy-container-static-logical-and"]], "logical_not": [[682, "logical-not"]], "ivy.Array.logical_not": [[683, "ivy-array-logical-not"]], "ivy.Container.logical_not": [[684, "ivy-container-logical-not"]], "ivy.logical_not": [[685, "ivy-logical-not"]], "ivy.Container.static_logical_not": [[686, "ivy-container-static-logical-not"]], "logical_or": [[687, "logical-or"]], "ivy.Array.logical_or": [[688, "ivy-array-logical-or"]], "ivy.Container.logical_or": [[689, "ivy-container-logical-or"]], "ivy.logical_or": [[690, "ivy-logical-or"]], "ivy.Container.static_logical_or": [[691, "ivy-container-static-logical-or"]], "logical_xor": [[692, "logical-xor"]], "ivy.Array.logical_xor": [[693, "ivy-array-logical-xor"]], "ivy.Container.logical_xor": [[694, "ivy-container-logical-xor"]], "ivy.logical_xor": [[695, "ivy-logical-xor"]], "ivy.Container.static_logical_xor": [[696, "ivy-container-static-logical-xor"]], "maximum": [[697, "maximum"]], "ivy.Array.maximum": [[698, "ivy-array-maximum"]], "ivy.Container.maximum": [[699, "ivy-container-maximum"]], "ivy.maximum": [[700, "ivy-maximum"]], "ivy.Container.static_maximum": [[701, "ivy-container-static-maximum"]], "minimum": [[702, "minimum"]], "ivy.Array.minimum": [[703, "ivy-array-minimum"]], "ivy.Container.minimum": [[704, "ivy-container-minimum"]], "ivy.minimum": [[705, "ivy-minimum"]], "ivy.Container.static_minimum": [[706, "ivy-container-static-minimum"]], "multiply": [[707, "multiply"]], "ivy.Array.multiply": [[708, "ivy-array-multiply"]], "ivy.Container.multiply": [[709, "ivy-container-multiply"]], "ivy.multiply": [[710, "ivy-multiply"]], "ivy.Container.static_multiply": [[711, "ivy-container-static-multiply"]], "negative": [[712, "negative"]], "ivy.Array.negative": [[713, "ivy-array-negative"]], "ivy.Container.negative": [[714, "ivy-container-negative"]], "ivy.negative": [[715, "ivy-negative"]], "ivy.Container.static_negative": [[716, "ivy-container-static-negative"]], "not_equal": [[717, "not-equal"]], "ivy.Array.not_equal": [[718, "ivy-array-not-equal"]], "ivy.Container.not_equal": [[719, "ivy-container-not-equal"]], "ivy.not_equal": [[720, "ivy-not-equal"]], "ivy.Container.static_not_equal": [[721, "ivy-container-static-not-equal"]], "positive": [[722, "positive"]], "ivy.Array.positive": [[723, "ivy-array-positive"]], "ivy.Container.positive": [[724, "ivy-container-positive"]], "ivy.positive": [[725, "ivy-positive"]], "ivy.Container.static_positive": [[726, "ivy-container-static-positive"]], "pow": [[727, "pow"]], "ivy.Array.pow": [[728, "ivy-array-pow"]], "ivy.Container.pow": [[729, "ivy-container-pow"]], "ivy.pow": [[730, "ivy-pow"]], "ivy.Container.static_pow": [[731, "ivy-container-static-pow"]], "rad2deg": [[732, "rad2deg"]], "ivy.Array.rad2deg": [[733, "ivy-array-rad2deg"]], "ivy.Container.rad2deg": [[734, "ivy-container-rad2deg"]], "ivy.rad2deg": [[735, "ivy-rad2deg"]], "ivy.Container.static_rad2deg": [[736, "ivy-container-static-rad2deg"]], "reciprocal": [[737, "reciprocal"]], "ivy.Array.reciprocal": [[738, "ivy-array-reciprocal"]], "ivy.Container.reciprocal": [[739, "ivy-container-reciprocal"]], "ivy.reciprocal": [[740, "ivy-reciprocal"]], "ivy.Container.static_reciprocal": [[741, "ivy-container-static-reciprocal"]], "remainder": [[742, "remainder"]], "ivy.Array.remainder": [[743, "ivy-array-remainder"]], "ivy.Container.remainder": [[744, "ivy-container-remainder"]], "ivy.remainder": [[745, "ivy-remainder"]], "ivy.Container.static_remainder": [[746, "ivy-container-static-remainder"]], "round": [[747, "round"]], "ivy.Array.round": [[748, "ivy-array-round"]], "ivy.Container.round": [[749, "ivy-container-round"]], "ivy.round": [[750, "ivy-round"]], "ivy.Container.static_round": [[751, "ivy-container-static-round"]], "sign": [[752, "sign"]], "ivy.Array.sign": [[753, "ivy-array-sign"]], "ivy.Container.sign": [[754, "ivy-container-sign"]], "ivy.sign": [[755, "ivy-sign"]], "ivy.Container.static_sign": [[756, "ivy-container-static-sign"]], "sin": [[757, "sin"]], "ivy.Array.sin": [[758, "ivy-array-sin"]], "ivy.Container.sin": [[759, "ivy-container-sin"]], "ivy.sin": [[760, "ivy-sin"]], "ivy.Container.static_sin": [[761, "ivy-container-static-sin"]], "sinh": [[762, "sinh"]], "ivy.Array.sinh": [[763, "ivy-array-sinh"]], "ivy.Container.sinh": [[764, "ivy-container-sinh"]], "ivy.sinh": [[765, "ivy-sinh"]], "ivy.Container.static_sinh": [[766, "ivy-container-static-sinh"]], "sqrt": [[767, "sqrt"]], "ivy.Array.sqrt": [[768, "ivy-array-sqrt"]], "ivy.Container.sqrt": [[769, "ivy-container-sqrt"]], "ivy.sqrt": [[770, "ivy-sqrt"]], "ivy.Container.static_sqrt": [[771, "ivy-container-static-sqrt"]], "square": [[772, "square"]], "ivy.Array.square": [[773, "ivy-array-square"]], "ivy.Container.square": [[774, "ivy-container-square"]], "ivy.square": [[775, "ivy-square"]], "ivy.Container.static_square": [[776, "ivy-container-static-square"]], "subtract": [[777, "subtract"]], "ivy.Container.static_subtract": [[778, "ivy-container-static-subtract"]], "ivy.Array.subtract": [[779, "ivy-array-subtract"]], "ivy.Container.subtract": [[780, "ivy-container-subtract"]], "ivy.subtract": [[781, "ivy-subtract"]], "tan": [[782, "tan"]], "ivy.Container.static_tan": [[783, "ivy-container-static-tan"]], "ivy.Array.tan": [[784, "ivy-array-tan"]], "ivy.Container.tan": [[785, "ivy-container-tan"]], "tanh": [[787, "tanh"]], "ivy.Container.static_tanh": [[788, "ivy-container-static-tanh"]], "ivy.Array.tanh": [[789, "ivy-array-tanh"]], "ivy.Container.tanh": [[790, "ivy-container-tanh"]], "ivy.tanh": [[791, "ivy-tanh"]], "trunc": [[792, "trunc"]], "ivy.Container.static_trunc": [[793, "ivy-container-static-trunc"]], "ivy.Array.trunc": [[794, "ivy-array-trunc"]], "ivy.Container.trunc": [[795, "ivy-container-trunc"]], "ivy.trunc": [[796, "ivy-trunc"]], "trunc_divide": [[797, "trunc-divide"]], "ivy.Container.static_trunc_divide": [[798, "ivy-container-static-trunc-divide"]], "ivy.Array.trunc_divide": [[799, "ivy-array-trunc-divide"]], "ivy.Container.trunc_divide": [[800, "ivy-container-trunc-divide"]], "ivy.trunc_divide": [[801, "ivy-trunc-divide"]], "NativeSparseArray": [[803, "nativesparsearray"], [1347, "nativesparsearray"]], "SparseArray": [[804, "sparsearray"], [1348, "sparsearray"]], "logit": [[806, "logit"], [1188, "logit"]], "prelu": [[807, "prelu"], [1305, "prelu"]], "thresholded_relu": [[808, "thresholded-relu"], [1365, "thresholded-relu"]], "adjoint": [[809, "adjoint"], [1177, "adjoint"]], "ivy.Array.adjoint": [[810, "ivy-array-adjoint"]], "ivy.Container.adjoint": [[811, "ivy-container-adjoint"]], "ivy.adjoint": [[812, "ivy-adjoint"]], "ivy.Container.static_adjoint": [[813, "ivy-container-static-adjoint"]], "allclose": [[814, "allclose"], [954, "allclose"]], "ivy.Array.allclose": [[815, "ivy-array-allclose"]], "ivy.Container.allclose": [[816, "ivy-container-allclose"]], "ivy.allclose": [[817, "ivy-allclose"]], "ivy.Container.static_allclose": [[818, "ivy-container-static-allclose"]], "angle": [[819, "angle"], [955, "angle"]], "ivy.Array.angle": [[820, "ivy-array-angle"]], "ivy.Container.angle": [[821, "ivy-container-angle"]], "ivy.angle": [[822, "ivy-angle"]], "ivy.Container.static_angle": [[823, "ivy-container-static-angle"]], "atleast_1d": [[824, "atleast-1d"], [1201, "atleast-1d"]], "ivy.Array.atleast_1d": [[825, "ivy-array-atleast-1d"]], "ivy.Container.atleast_1d": [[826, "ivy-container-atleast-1d"]], "ivy.atleast_1d": [[827, "ivy-atleast-1d"]], "ivy.Container.static_atleast_1d": [[828, "ivy-container-static-atleast-1d"]], "atleast_2d": [[829, "atleast-2d"], [1202, "atleast-2d"]], "ivy.Array.atleast_2d": [[830, "ivy-array-atleast-2d"]], "ivy.Container.atleast_2d": [[831, "ivy-container-atleast-2d"]], "ivy.atleast_2d": [[832, "ivy-atleast-2d"]], "ivy.Container.static_atleast_2d": [[833, "ivy-container-static-atleast-2d"]], "atleast_3d": [[834, "atleast-3d"], [1203, "atleast-3d"]], "ivy.Array.atleast_3d": [[835, "ivy-array-atleast-3d"]], "ivy.Container.atleast_3d": [[836, "ivy-container-atleast-3d"]], "ivy.atleast_3d": [[837, "ivy-atleast-3d"]], "ivy.Container.static_atleast_3d": [[838, "ivy-container-static-atleast-3d"]], "avg_pool1d": [[839, "avg-pool1d"], [1150, "avg-pool1d"]], "ivy.Array.avg_pool1d": [[840, "ivy-array-avg-pool1d"]], "ivy.Container.avg_pool1d": [[841, "ivy-container-avg-pool1d"]], "ivy.avg_pool1d": [[842, "ivy-avg-pool1d"]], "ivy.Container.static_avg_pool1d": [[843, "ivy-container-static-avg-pool1d"]], "avg_pool2d": [[844, "avg-pool2d"], [1151, "avg-pool2d"]], "ivy.Array.avg_pool2d": [[845, "ivy-array-avg-pool2d"]], "ivy.Container.avg_pool2d": [[846, "ivy-container-avg-pool2d"]], "ivy.avg_pool2d": [[847, "ivy-avg-pool2d"]], "ivy.Container.static_avg_pool2d": [[848, "ivy-container-static-avg-pool2d"]], "avg_pool3d": [[849, "avg-pool3d"], [1152, "avg-pool3d"]], "ivy.Array.avg_pool3d": [[850, "ivy-array-avg-pool3d"]], "ivy.Container.avg_pool3d": [[851, "ivy-container-avg-pool3d"]], "ivy.avg_pool3d": [[852, "ivy-avg-pool3d"]], "ivy.Container.static_avg_pool3d": [[853, "ivy-container-static-avg-pool3d"]], "bernoulli": [[854, "bernoulli"], [1316, "bernoulli"]], "ivy.Array.bernoulli": [[855, "ivy-array-bernoulli"]], "ivy.Container.bernoulli": [[856, "ivy-container-bernoulli"]], "ivy.bernoulli": [[857, "ivy-bernoulli"]], "ivy.Container.static_bernoulli": [[858, "ivy-container-static-bernoulli"]], "beta": [[859, "beta"], [1317, "beta"]], "ivy.Array.beta": [[860, "ivy-array-beta"]], "ivy.Container.beta": [[861, "ivy-container-beta"]], "ivy.beta": [[862, "ivy-beta"]], "ivy.Container.static_beta": [[863, "ivy-container-static-beta"]], "binarizer": [[864, "binarizer"], [956, "binarizer"]], "ivy.Array.binarizer": [[865, "ivy-array-binarizer"]], "ivy.Container.binarizer": [[866, "ivy-container-binarizer"]], "ivy.binarizer": [[867, "ivy-binarizer"]], "ivy.Container.static_binarizer": [[868, "ivy-container-static-binarizer"]], "binary_cross_entropy_with_logits": [[869, "binary-cross-entropy-with-logits"], [1194, "binary-cross-entropy-with-logits"]], "ivy.Container.binary_cross_entropy_with_logits": [[870, "ivy-container-binary-cross-entropy-with-logits"]], "ivy.binary_cross_entropy_with_logits": [[871, "ivy-binary-cross-entropy-with-logits"]], "ivy.Container.static_binary_cross_entropy_with_logits": [[872, "ivy-container-static-binary-cross-entropy-with-logits"]], "bind_custom_gradient_function": [[873, "bind-custom-gradient-function"], [1063, "bind-custom-gradient-function"]], "broadcast_shapes": [[874, "broadcast-shapes"], [1204, "broadcast-shapes"], [2244, "broadcast-shapes"]], "ivy.Container.broadcast_shapes": [[875, "ivy-container-broadcast-shapes"]], "ivy.broadcast_shapes": [[876, "ivy-broadcast-shapes"]], "ivy.Container.static_broadcast_shapes": [[877, "ivy-container-static-broadcast-shapes"]], "Compilation": [[878, "module-ivy.functional.ivy.experimental.compilation"]], "compute_weight_mat": [[879, "compute-weight-mat"], [1153, "compute-weight-mat"]], "copysign": [[881, "copysign"], [957, "copysign"]], "ivy.Array.copysign": [[882, "ivy-array-copysign"]], "ivy.Container.copysign": [[883, "ivy-container-copysign"]], "ivy.copysign": [[884, "ivy-copysign"]], "ivy.Container.static_copysign": [[885, "ivy-container-static-copysign"]], "corrcoef": [[886, "corrcoef"], [1354, "corrcoef"]], "ivy.Array.corrcoef": [[887, "ivy-array-corrcoef"]], "ivy.Container.corrcoef": [[888, "ivy-container-corrcoef"]], "ivy.corrcoef": [[889, "ivy-corrcoef"]], "ivy.Container.static_corrcoef": [[890, "ivy-container-static-corrcoef"]], "count_nonzero": [[891, "count-nonzero"], [958, "count-nonzero"]], "ivy.Array.count_nonzero": [[892, "ivy-array-count-nonzero"]], "ivy.Container.count_nonzero": [[893, "ivy-container-count-nonzero"]], "ivy.count_nonzero": [[894, "ivy-count-nonzero"]], "ivy.Container.static_count_nonzero": [[895, "ivy-container-static-count-nonzero"]], "eye_like": [[897, "eye-like"], [997, "eye-like"]], "hamming_window": [[898, "hamming-window"], [1064, "hamming-window"]], "hann_window": [[899, "hann-window"], [1068, "hann-window"]], "kaiser_bessel_derived_window": [[900, "kaiser-bessel-derived-window"], [1131, "kaiser-bessel-derived-window"]], "kaiser_window": [[901, "kaiser-window"], [1135, "kaiser-window"]], "tril_indices": [[902, "tril-indices"], [1378, "tril-indices"]], "triu_indices": [[903, "triu-indices"], [1382, "triu-indices"]], "vorbis_window": [[904, "vorbis-window"], [1392, "vorbis-window"]], "is_native_dtype": [[906, "is-native-dtype"], [1119, "is-native-dtype"]], "dct": [[907, "dct"], [1154, "dct"]], "ivy.Array.dct": [[908, "ivy-array-dct"]], "ivy.Container.dct": [[909, "ivy-container-dct"]], "ivy.dct": [[910, "ivy-dct"]], "ivy.Container.static_dct": [[911, "ivy-container-static-dct"]], "dft": [[913, "dft"], [1155, "dft"]], "ivy.Container.dft": [[914, "ivy-container-dft"]], "ivy.dft": [[915, "ivy-dft"]], "ivy.Container.static_dft": [[916, "ivy-container-static-dft"]], "diagflat": [[917, "diagflat"], [1178, "diagflat"]], "ivy.Array.diagflat": [[918, "ivy-array-diagflat"]], "ivy.Container.diagflat": [[919, "ivy-container-diagflat"]], "ivy.diagflat": [[920, "ivy-diagflat"]], "ivy.Container.static_diagflat": [[921, "ivy-container-static-diagflat"]], "diff": [[922, "diff"], [959, "diff"]], "ivy.Array.diff": [[923, "ivy-array-diff"]], "ivy.Container.diff": [[924, "ivy-container-diff"]], "ivy.diff": [[925, "ivy-diff"]], "ivy.Container.static_diff": [[926, "ivy-container-static-diff"]], "dirichlet": [[927, "dirichlet"], [1318, "dirichlet"]], "ivy.Array.dirichlet": [[928, "ivy-array-dirichlet"]], "ivy.Container.dirichlet": [[929, "ivy-container-dirichlet"]], "ivy.dirichlet": [[930, "ivy-dirichlet"]], "ivy.Container.static_dirichlet": [[931, "ivy-container-static-dirichlet"]], "dropout1d": [[932, "dropout1d"], [1156, "dropout1d"]], "dsplit": [[933, "dsplit"], [1205, "dsplit"]], "ivy.Array.dsplit": [[934, "ivy-array-dsplit"]], "ivy.Container.dsplit": [[935, "ivy-container-dsplit"]], "ivy.dsplit": [[936, "ivy-dsplit"]], "ivy.Container.static_dsplit": [[937, "ivy-container-static-dsplit"]], "dstack": [[938, "dstack"], [1206, "dstack"]], "ivy.Array.dstack": [[939, "ivy-array-dstack"]], "ivy.Container.dstack": [[940, "ivy-container-dstack"]], "ivy.dstack": [[941, "ivy-dstack"]], "ivy.Container.static_dstack": [[942, "ivy-container-static-dstack"]], "eig": [[943, "eig"], [1179, "eig"], [1740, "eig"]], "ivy.Array.eig": [[944, "ivy-array-eig"]], "ivy.Container.eig": [[945, "ivy-container-eig"]], "ivy.eig": [[946, "ivy-eig"]], "ivy.Container.static_eig": [[947, "ivy-container-static-eig"]], "eigvals": [[948, "eigvals"], [1180, "eigvals"]], "ivy.Array.eigvals": [[949, "ivy-array-eigvals"]], "ivy.Container.eigvals": [[950, "ivy-container-eigvals"]], "ivy.eigvals": [[951, "ivy-eigvals"]], "ivy.Container.static_eigvals": [[952, "ivy-container-static-eigvals"]], "exp2": [[960, "exp2"], [987, "exp2"]], "fix": [[961, "fix"], [1007, "fix"]], "float_power": [[962, "float-power"], [1027, "float-power"]], "fmax": [[963, "fmax"], [1032, "fmax"]], "fmin": [[964, "fmin"], [1037, "fmin"]], "fmod": [[965, "fmod"], [1042, "fmod"]], "gcd": [[966, "gcd"], [1050, "gcd"]], "gradient": [[967, "gradient"], [1057, "gradient"]], "hypot": [[968, "hypot"], [1087, "hypot"]], "imag": [[969, "imag"], [1102, "imag"]], "isclose": [[970, "isclose"], [1121, "isclose"]], "lcm": [[971, "lcm"], [1166, "lcm"]], "logaddexp2": [[972, "logaddexp2"], [1183, "logaddexp2"]], "nan_to_num": [[973, "nan-to-num"], [1260, "nan-to-num"]], "nansum": [[974, "nansum"], [1275, "nansum"]], "nextafter": [[975, "nextafter"], [1285, "nextafter"]], "real": [[976, "real"], [1321, "real"]], "signbit": [[977, "signbit"], [1333, "signbit"]], "sinc": [[978, "sinc"], [1338, "sinc"]], "trapz": [[979, "trapz"], [1375, "trapz"]], "xlogy": [[980, "xlogy"], [1406, "xlogy"]], "zeta": [[981, "zeta"], [1411, "zeta"]], "embedding": [[982, "embedding"], [1157, "embedding"]], "ivy.Array.embedding": [[983, "ivy-array-embedding"]], "ivy.Container.embedding": [[984, "ivy-container-embedding"]], "ivy.embedding": [[985, "ivy-embedding"]], "ivy.Container.static_embedding": [[986, "ivy-container-static-embedding"]], "ivy.Array.exp2": [[988, "ivy-array-exp2"]], "ivy.Container.exp2": [[989, "ivy-container-exp2"]], "ivy.exp2": [[990, "ivy-exp2"]], "ivy.Container.static_exp2": [[991, "ivy-container-static-exp2"]], "expand": [[992, "expand"], [1207, "expand"]], "ivy.Array.expand": [[993, "ivy-array-expand"]], "ivy.Container.expand": [[994, "ivy-container-expand"]], "ivy.expand": [[995, "ivy-expand"]], "ivy.Container.static_expand": [[996, "ivy-container-static-expand"]], "ivy.Array.eye_like": [[998, "ivy-array-eye-like"]], "ivy.Container.eye_like": [[999, "ivy-container-eye-like"]], "ivy.eye_like": [[1000, "ivy-eye-like"]], "ivy.Container.static_eye_like": [[1001, "ivy-container-static-eye-like"]], "fft": [[1002, "fft"], [1158, "fft"]], "ivy.Array.fft": [[1003, "ivy-array-fft"]], "ivy.Container.fft": [[1004, "ivy-container-fft"]], "ivy.fft": [[1005, "ivy-fft"]], "ivy.Container.static_fft": [[1006, "ivy-container-static-fft"]], "ivy.Array.fix": [[1008, "ivy-array-fix"]], "ivy.Container.fix": [[1009, "ivy-container-fix"]], "ivy.fix": [[1010, "ivy-fix"]], "ivy.Container.static_fix": [[1011, "ivy-container-static-fix"]], "flatten": [[1012, "flatten"], [1208, "flatten"], [2212, "flatten"]], "ivy.Array.flatten": [[1013, "ivy-array-flatten"]], "ivy.Container.flatten": [[1014, "ivy-container-flatten"]], "ivy.flatten": [[1015, "ivy-flatten"]], "ivy.Container.static_flatten": [[1016, "ivy-container-static-flatten"]], "fliplr": [[1017, "fliplr"], [1209, "fliplr"]], "ivy.Array.fliplr": [[1018, "ivy-array-fliplr"]], "ivy.Container.fliplr": [[1019, "ivy-container-fliplr"]], "ivy.fliplr": [[1020, "ivy-fliplr"]], "ivy.Container.static_fliplr": [[1021, "ivy-container-static-fliplr"]], "flipud": [[1022, "flipud"], [1210, "flipud"]], "ivy.Array.flipud": [[1023, "ivy-array-flipud"]], "ivy.Container.flipud": [[1024, "ivy-container-flipud"]], "ivy.flipud": [[1025, "ivy-flipud"]], "ivy.Container.static_flipud": [[1026, "ivy-container-static-flipud"]], "ivy.Array.float_power": [[1028, "ivy-array-float-power"]], "ivy.Container.float_power": [[1029, "ivy-container-float-power"]], "ivy.float_power": [[1030, "ivy-float-power"]], "ivy.Container.static_float_power": [[1031, "ivy-container-static-float-power"]], "ivy.Array.fmax": [[1033, "ivy-array-fmax"]], "ivy.Container.fmax": [[1034, "ivy-container-fmax"]], "ivy.fmax": [[1035, "ivy-fmax"]], "ivy.Container.static_fmax": [[1036, "ivy-container-static-fmax"]], "ivy.Array.fmin": [[1038, "ivy-array-fmin"]], "ivy.Container.fmin": [[1039, "ivy-container-fmin"]], "ivy.fmin": [[1040, "ivy-fmin"]], "ivy.Container.static_fmin": [[1041, "ivy-container-static-fmin"]], "ivy.Array.fmod": [[1043, "ivy-array-fmod"]], "ivy.Container.fmod": [[1044, "ivy-container-fmod"]], "ivy.fmod": [[1045, "ivy-fmod"]], "ivy.Container.static_fmod": [[1046, "ivy-container-static-fmod"]], "gamma": [[1047, "gamma"], [1319, "gamma"]], "ivy.Array.gamma": [[1048, "ivy-array-gamma"]], "ivy.gamma": [[1049, "ivy-gamma"]], "ivy.Array.gcd": [[1051, "ivy-array-gcd"]], "ivy.Container.gcd": [[1052, "ivy-container-gcd"]], "ivy.gcd": [[1053, "ivy-gcd"]], "ivy.Container.static_gcd": [[1054, "ivy-container-static-gcd"]], "isin": [[1056, "isin"], [1126, "isin"]], "ivy.Array.gradient": [[1058, "ivy-array-gradient"]], "ivy.Container.gradient": [[1059, "ivy-container-gradient"]], "ivy.gradient": [[1060, "ivy-gradient"]], "ivy.Container.static_gradient": [[1061, "ivy-container-static-gradient"]], "ivy.Container.hamming_window": [[1065, "ivy-container-hamming-window"]], "ivy.hamming_window": [[1066, "ivy-hamming-window"]], "ivy.Container.static_hamming_window": [[1067, "ivy-container-static-hamming-window"]], "ivy.Container.hann_window": [[1069, "ivy-container-hann-window"]], "ivy.hann_window": [[1070, "ivy-hann-window"]], "ivy.Container.static_hann_window": [[1071, "ivy-container-static-hann-window"]], "heaviside": [[1072, "heaviside"], [1211, "heaviside"]], "ivy.Array.heaviside": [[1073, "ivy-array-heaviside"]], "ivy.Container.heaviside": [[1074, "ivy-container-heaviside"]], "ivy.heaviside": [[1075, "ivy-heaviside"]], "ivy.Container.static_heaviside": [[1076, "ivy-container-static-heaviside"]], "hsplit": [[1077, "hsplit"], [1212, "hsplit"]], "ivy.Array.hsplit": [[1078, "ivy-array-hsplit"]], "ivy.Container.hsplit": [[1079, "ivy-container-hsplit"]], "ivy.hsplit": [[1080, "ivy-hsplit"]], "ivy.Container.static_hsplit": [[1081, "ivy-container-static-hsplit"]], "hstack": [[1082, "hstack"], [1213, "hstack"]], "ivy.Array.hstack": [[1083, "ivy-array-hstack"]], "ivy.Container.hstack": [[1084, "ivy-container-hstack"]], "ivy.hstack": [[1085, "ivy-hstack"]], "ivy.Container.static_hstack": [[1086, "ivy-container-static-hstack"]], "ivy.Array.hypot": [[1088, "ivy-array-hypot"]], "ivy.Container.hypot": [[1089, "ivy-container-hypot"]], "ivy.hypot": [[1090, "ivy-hypot"]], "ivy.Container.static_hypot": [[1091, "ivy-container-static-hypot"]], "i0": [[1092, "i0"], [1214, "i0"]], "ivy.Array.i0": [[1093, "ivy-array-i0"]], "ivy.Container.i0": [[1094, "ivy-container-i0"]], "ivy.i0": [[1095, "ivy-i0"]], "ivy.Container.static_i0": [[1096, "ivy-container-static-i0"]], "ifft": [[1097, "ifft"], [1159, "ifft"]], "ivy.Array.ifft": [[1098, "ivy-array-ifft"]], "ivy.Container.ifft": [[1099, "ivy-container-ifft"]], "ivy.ifft": [[1100, "ivy-ifft"]], "ivy.Container.static_ifft": [[1101, "ivy-container-static-ifft"]], "ivy.Array.imag": [[1103, "ivy-array-imag"]], "ivy.Container.imag": [[1104, "ivy-container-imag"]], "ivy.imag": [[1105, "ivy-imag"]], "ivy.Container.static_imag": [[1106, "ivy-container-static-imag"]], "instance_norm": [[1107, "instance-norm"], [1291, "instance-norm"]], "ivy.Array.instance_norm": [[1108, "ivy-array-instance-norm"]], "ivy.Container.instance_norm": [[1109, "ivy-container-instance-norm"]], "ivy.instance_norm": [[1110, "ivy-instance-norm"]], "ivy.Container.static_instance_norm": [[1111, "ivy-container-static-instance-norm"]], "interp": [[1112, "interp"], [1160, "interp"]], "interpolate": [[1113, "interpolate"], [1161, "interpolate"]], "ivy.Array.interpolate": [[1114, "ivy-array-interpolate"]], "ivy.Container.interpolate": [[1115, "ivy-container-interpolate"]], "ivy.interpolate": [[1116, "ivy-interpolate"]], "ivy.Container.static_interpolate": [[1117, "ivy-container-static-interpolate"]], "is_ivy_sparse_array": [[1118, "is-ivy-sparse-array"], [1349, "is-ivy-sparse-array"]], "is_native_sparse_array": [[1120, "is-native-sparse-array"], [1350, "is-native-sparse-array"]], "ivy.Array.isclose": [[1122, "ivy-array-isclose"]], "ivy.Container.isclose": [[1123, "ivy-container-isclose"]], "ivy.isclose": [[1124, "ivy-isclose"]], "ivy.Container.static_isclose": [[1125, "ivy-container-static-isclose"]], "ivy.Array.isin": [[1127, "ivy-array-isin"]], "ivy.Container.isin": [[1128, "ivy-container-isin"]], "ivy.isin": [[1129, "ivy-isin"]], "ivy.Container.static_isin": [[1130, "ivy-container-static-isin"]], "ivy.Container.kaiser_bessel_derived_window": [[1132, "ivy-container-kaiser-bessel-derived-window"]], "ivy.kaiser_bessel_derived_window": [[1133, "ivy-kaiser-bessel-derived-window"]], "ivy.Container.static_kaiser_bessel_derived_window": [[1134, "ivy-container-static-kaiser-bessel-derived-window"]], "ivy.Container.kaiser_window": [[1136, "ivy-container-kaiser-window"]], "ivy.kaiser_window": [[1137, "ivy-kaiser-window"]], "ivy.Container.static_kaiser_window": [[1138, "ivy-container-static-kaiser-window"]], "kron": [[1139, "kron"], [1181, "kron"]], "ivy.Array.kron": [[1140, "ivy-array-kron"]], "ivy.Container.kron": [[1141, "ivy-container-kron"]], "ivy.kron": [[1142, "ivy-kron"]], "ivy.Container.static_kron": [[1143, "ivy-container-static-kron"]], "l2_normalize": [[1144, "l2-normalize"], [1292, "l2-normalize"]], "ivy.Array.l2_normalize": [[1145, "ivy-array-l2-normalize"]], "ivy.Container.l2_normalize": [[1146, "ivy-container-l2-normalize"]], "ivy.l2_normalize": [[1147, "ivy-l2-normalize"]], "ivy.Container.static_l2_normalize": [[1148, "ivy-container-static-l2-normalize"]], "max_pool1d": [[1162, "max-pool1d"], [1229, "max-pool1d"]], "max_pool2d": [[1163, "max-pool2d"], [1234, "max-pool2d"]], "max_pool3d": [[1164, "max-pool3d"], [1239, "max-pool3d"]], "padding_ceil_mode": [[1165, "padding-ceil-mode"], [1299, "padding-ceil-mode"]], "ivy.Array.lcm": [[1167, "ivy-array-lcm"]], "ivy.Container.lcm": [[1168, "ivy-container-lcm"]], "ivy.lcm": [[1169, "ivy-lcm"]], "ivy.Container.static_lcm": [[1170, "ivy-container-static-lcm"]], "lexsort": [[1171, "lexsort"], [1344, "lexsort"]], "ivy.Array.lexsort": [[1172, "ivy-array-lexsort"]], "ivy.Container.lexsort": [[1173, "ivy-container-lexsort"]], "ivy.lexsort": [[1174, "ivy-lexsort"]], "ivy.Container.static_lexsort": [[1175, "ivy-container-static-lexsort"]], "matrix_exp": [[1182, "matrix-exp"], [1224, "matrix-exp"]], "ivy.Array.logaddexp2": [[1184, "ivy-array-logaddexp2"]], "ivy.Container.logaddexp2": [[1185, "ivy-container-logaddexp2"]], "ivy.logaddexp2": [[1186, "ivy-logaddexp2"]], "ivy.Container.static_logaddexp2": [[1187, "ivy-container-static-logaddexp2"]], "ivy.Array.logit": [[1189, "ivy-array-logit"]], "ivy.Container.logit": [[1190, "ivy-container-logit"]], "ivy.logit": [[1191, "ivy-logit"]], "ivy.Container.static_logit": [[1192, "ivy-container-static-logit"]], "lp_normalize": [[1195, "lp-normalize"], [1293, "lp-normalize"]], "ivy.Array.lp_normalize": [[1196, "ivy-array-lp-normalize"]], "ivy.Container.lp_normalize": [[1197, "ivy-container-lp-normalize"]], "ivy.lp_normalize": [[1198, "ivy-lp-normalize"]], "ivy.Container.static_lp_normalize": [[1199, "ivy-container-static-lp-normalize"]], "moveaxis": [[1215, "moveaxis"], [1250, "moveaxis"]], "ndenumerate": [[1216, "ndenumerate"], [1282, "ndenumerate"]], "ndindex": [[1217, "ndindex"], [1283, "ndindex"]], "pad": [[1218, "pad"], [1294, "pad"]], "rot90": [[1219, "rot90"], [1326, "rot90"]], "take_along_axis": [[1220, "take-along-axis"], [1360, "take-along-axis"]], "top_k": [[1221, "top-k"], [1370, "top-k"]], "vsplit": [[1222, "vsplit"], [1396, "vsplit"]], "vstack": [[1223, "vstack"], [1401, "vstack"]], "ivy.Array.matrix_exp": [[1225, "ivy-array-matrix-exp"]], "ivy.Container.matrix_exp": [[1226, "ivy-container-matrix-exp"]], "ivy.matrix_exp": [[1227, "ivy-matrix-exp"]], "ivy.Container.static_matrix_exp": [[1228, "ivy-container-static-matrix-exp"]], "ivy.Array.max_pool1d": [[1230, "ivy-array-max-pool1d"]], "ivy.Container.max_pool1d": [[1231, "ivy-container-max-pool1d"]], "ivy.max_pool1d": [[1232, "ivy-max-pool1d"]], "ivy.Container.static_max_pool1d": [[1233, "ivy-container-static-max-pool1d"]], "ivy.Array.max_pool2d": [[1235, "ivy-array-max-pool2d"]], "ivy.Container.max_pool2d": [[1236, "ivy-container-max-pool2d"]], "ivy.max_pool2d": [[1237, "ivy-max-pool2d"]], "ivy.Container.static_max_pool2d": [[1238, "ivy-container-static-max-pool2d"]], "ivy.Array.max_pool3d": [[1240, "ivy-array-max-pool3d"]], "ivy.Container.max_pool3d": [[1241, "ivy-container-max-pool3d"]], "ivy.max_pool3d": [[1242, "ivy-max-pool3d"]], "ivy.Container.static_max_pool3d": [[1243, "ivy-container-static-max-pool3d"]], "median": [[1244, "median"], [1355, "median"]], "ivy.Array.median": [[1245, "ivy-array-median"]], "ivy.Container.median": [[1246, "ivy-container-median"]], "ivy.median": [[1247, "ivy-median"]], "ivy.Container.static_median": [[1248, "ivy-container-static-median"]], "Meta": [[1249, "module-ivy.functional.ivy.experimental.meta"], [1951, "module-ivy.functional.ivy.meta"]], "ivy.Array.moveaxis": [[1251, "ivy-array-moveaxis"]], "ivy.Container.moveaxis": [[1252, "ivy-container-moveaxis"]], "ivy.moveaxis": [[1253, "ivy-moveaxis"]], "ivy.Container.static_moveaxis": [[1254, "ivy-container-static-moveaxis"]], "msort": [[1255, "msort"], [1345, "msort"]], "ivy.Array.msort": [[1256, "ivy-array-msort"]], "ivy.Container.msort": [[1257, "ivy-container-msort"]], "ivy.msort": [[1258, "ivy-msort"]], "ivy.Container.static_msort": [[1259, "ivy-container-static-msort"]], "ivy.Array.nan_to_num": [[1261, "ivy-array-nan-to-num"]], "ivy.Container.nan_to_num": [[1262, "ivy-container-nan-to-num"]], "ivy.nan_to_num": [[1263, "ivy-nan-to-num"]], "ivy.Container.static_nan_to_num": [[1264, "ivy-container-static-nan-to-num"]], "nanmean": [[1265, "nanmean"], [1356, "nanmean"]], "ivy.Array.nanmean": [[1266, "ivy-array-nanmean"]], "ivy.Container.nanmean": [[1267, "ivy-container-nanmean"]], "ivy.nanmean": [[1268, "ivy-nanmean"]], "ivy.Container.static_nanmean": [[1269, "ivy-container-static-nanmean"]], "nanmedian": [[1270, "nanmedian"], [1357, "nanmedian"]], "ivy.Array.nanmedian": [[1271, "ivy-array-nanmedian"]], "ivy.Container.nanmedian": [[1272, "ivy-container-nanmedian"]], "ivy.nanmedian": [[1273, "ivy-nanmedian"]], "ivy.Container.static_nanmedian": [[1274, "ivy-container-static-nanmedian"]], "ivy.Array.nansum": [[1276, "ivy-array-nansum"]], "ivy.Container.nansum": [[1277, "ivy-container-nansum"]], "ivy.nansum": [[1278, "ivy-nansum"]], "ivy.Container.static_nansum": [[1279, "ivy-container-static-nansum"]], "native_sparse_array": [[1280, "native-sparse-array"], [1351, "native-sparse-array"]], "native_sparse_array_to_indices_values_and_shape": [[1281, "native-sparse-array-to-indices-values-and-shape"], [1352, "native-sparse-array-to-indices-values-and-shape"]], "Nest": [[1284, "module-ivy.functional.ivy.experimental.nest"], [1955, "module-ivy.functional.ivy.nest"]], "ivy.Array.nextafter": [[1286, "ivy-array-nextafter"]], "ivy.Container.nextafter": [[1287, "ivy-container-nextafter"]], "ivy.nextafter": [[1288, "ivy-nextafter"]], "ivy.Container.static_nextafter": [[1289, "ivy-container-static-nextafter"]], "ivy.Array.pad": [[1295, "ivy-array-pad"]], "ivy.Container.pad": [[1296, "ivy-container-pad"]], "ivy.pad": [[1297, "ivy-pad"]], "ivy.Container.static_pad": [[1298, "ivy-container-static-pad"]], "poisson": [[1300, "poisson"], [1320, "poisson"]], "ivy.Array.poisson": [[1301, "ivy-array-poisson"]], "ivy.Container.poisson": [[1302, "ivy-container-poisson"]], "ivy.poisson": [[1303, "ivy-poisson"]], "ivy.Container.static_poisson": [[1304, "ivy-container-static-poisson"]], "ivy.Array.prelu": [[1306, "ivy-array-prelu"]], "ivy.Container.prelu": [[1307, "ivy-container-prelu"]], "ivy.prelu": [[1308, "ivy-prelu"]], "ivy.Container.static_prelu": [[1309, "ivy-container-static-prelu"]], "quantile": [[1310, "quantile"], [1358, "quantile"]], "ivy.Array.quantile": [[1311, "ivy-array-quantile"]], "ivy.Container.quantile": [[1312, "ivy-container-quantile"]], "ivy.quantile": [[1313, "ivy-quantile"]], "ivy.Container.static_quantile": [[1314, "ivy-container-static-quantile"]], "ivy.Array.real": [[1322, "ivy-array-real"]], "ivy.Container.real": [[1323, "ivy-container-real"]], "ivy.real": [[1324, "ivy-real"]], "ivy.Container.static_real": [[1325, "ivy-container-static-real"]], "ivy.Array.rot90": [[1327, "ivy-array-rot90"]], "ivy.Container.rot90": [[1328, "ivy-container-rot90"]], "ivy.rot90": [[1329, "ivy-rot90"]], "ivy.Container.static_rot90": [[1330, "ivy-container-static-rot90"]], "ivy.Array.signbit": [[1334, "ivy-array-signbit"]], "ivy.Container.signbit": [[1335, "ivy-container-signbit"]], "ivy.signbit": [[1336, "ivy-signbit"]], "ivy.Container.static_signbit": [[1337, "ivy-container-static-signbit"]], "ivy.Array.sinc": [[1339, "ivy-array-sinc"]], "ivy.Container.sinc": [[1340, "ivy-container-sinc"]], "ivy.sinc": [[1341, "ivy-sinc"]], "ivy.Container.static_sinc": [[1342, "ivy-container-static-sinc"]], "Sparse array": [[1346, "module-ivy.functional.ivy.experimental.sparse_array"]], "unravel_index": [[1359, "unravel-index"], [1386, "unravel-index"]], "ivy.Container.static_take_along_axis": [[1361, "ivy-container-static-take-along-axis"]], "ivy.Array.take_along_axis": [[1362, "ivy-array-take-along-axis"]], "ivy.Container.take_along_axis": [[1363, "ivy-container-take-along-axis"]], "ivy.take_along_axis": [[1364, "ivy-take-along-axis"]], "ivy.Container.static_thresholded_relu": [[1366, "ivy-container-static-thresholded-relu"]], "ivy.Array.thresholded_relu": [[1367, "ivy-array-thresholded-relu"]], "ivy.Container.thresholded_relu": [[1368, "ivy-container-thresholded-relu"]], "ivy.thresholded_relu": [[1369, "ivy-thresholded-relu"]], "ivy.Container.static_top_k": [[1371, "ivy-container-static-top-k"]], "ivy.Array.top_k": [[1372, "ivy-array-top-k"]], "ivy.Container.top_k": [[1373, "ivy-container-top-k"]], "ivy.top_k": [[1374, "ivy-top-k"]], "ivy.Array.trapz": [[1376, "ivy-array-trapz"]], "ivy.trapz": [[1377, "ivy-trapz"]], "ivy.Container.static_tril_indices": [[1379, "ivy-container-static-tril-indices"]], "ivy.Container.tril_indices": [[1380, "ivy-container-tril-indices"]], "ivy.tril_indices": [[1381, "ivy-tril-indices"]], "ivy.Container.static_triu_indices": [[1383, "ivy-container-static-triu-indices"]], "ivy.Container.triu_indices": [[1384, "ivy-container-triu-indices"]], "ivy.triu_indices": [[1385, "ivy-triu-indices"]], "ivy.Container.static_unravel_index": [[1387, "ivy-container-static-unravel-index"]], "ivy.Array.unravel_index": [[1388, "ivy-array-unravel-index"]], "ivy.Container.unravel_index": [[1389, "ivy-container-unravel-index"]], "ivy.unravel_index": [[1390, "ivy-unravel-index"]], "ivy.Container.static_vorbis_window": [[1393, "ivy-container-static-vorbis-window"]], "ivy.Container.vorbis_window": [[1394, "ivy-container-vorbis-window"]], "ivy.vorbis_window": [[1395, "ivy-vorbis-window"]], "ivy.Container.static_vsplit": [[1397, "ivy-container-static-vsplit"]], "ivy.Array.vsplit": [[1398, "ivy-array-vsplit"]], "ivy.Container.vsplit": [[1399, "ivy-container-vsplit"]], "ivy.vsplit": [[1400, "ivy-vsplit"]], "ivy.Container.static_vstack": [[1402, "ivy-container-static-vstack"]], "ivy.Array.vstack": [[1403, "ivy-array-vstack"]], "ivy.Container.vstack": [[1404, "ivy-container-vstack"]], "ivy.vstack": [[1405, "ivy-vstack"]], "ivy.Container.static_xlogy": [[1407, "ivy-container-static-xlogy"]], "ivy.Array.xlogy": [[1408, "ivy-array-xlogy"]], "ivy.Container.xlogy": [[1409, "ivy-container-xlogy"]], "ivy.xlogy": [[1410, "ivy-xlogy"]], "ivy.Container.static_zeta": [[1412, "ivy-container-static-zeta"]], "ivy.Array.zeta": [[1413, "ivy-array-zeta"]], "ivy.Container.zeta": [[1414, "ivy-container-zeta"]], "ivy.zeta": [[1415, "ivy-zeta"]], "Parameter": [[1417, "parameter"], [1417, "id1"], [1417, "id2"], [1417, "id3"], [1417, "id4"], [1557, "parameter"], [1558, "parameter"], [1561, "parameter"], [1563, "parameter"], [1564, "parameter"]], "all_equal": [[1418, "all-equal"]], "ivy.Array.all_equal": [[1419, "ivy-array-all-equal"]], "ivy.Container.all_equal": [[1420, "ivy-container-all-equal"]], "ivy.all_equal": [[1421, "ivy-all-equal"]], "ivy.Container.static_all_equal": [[1422, "ivy-container-static-all-equal"]], "arg_info": [[1423, "arg-info"]], "arg_names": [[1424, "arg-names"]], "array_equal": [[1425, "array-equal"]], "ivy.Array.array_equal": [[1426, "ivy-array-array-equal"]], "ivy.Container.array_equal": [[1427, "ivy-container-array-equal"]], "ivy.array_equal": [[1428, "ivy-array-equal"]], "ivy.Container.static_array_equal": [[1429, "ivy-container-static-array-equal"]], "assert_supports_inplace": [[1430, "assert-supports-inplace"]], "ivy.Array.assert_supports_inplace": [[1431, "ivy-array-assert-supports-inplace"]], "ivy.Container.assert_supports_inplace": [[1432, "ivy-container-assert-supports-inplace"]], "ivy.assert_supports_inplace": [[1433, "ivy-assert-supports-inplace"]], "ivy.Container.static_assert_supports_inplace": [[1434, "ivy-container-static-assert-supports-inplace"]], "cache_fn": [[1435, "cache-fn"]], "clip_matrix_norm": [[1436, "clip-matrix-norm"]], "ivy.Array.clip_matrix_norm": [[1437, "ivy-array-clip-matrix-norm"]], "ivy.Container.clip_matrix_norm": [[1438, "ivy-container-clip-matrix-norm"]], "ivy.clip_matrix_norm": [[1439, "ivy-clip-matrix-norm"]], "ivy.Container.static_clip_matrix_norm": [[1440, "ivy-container-static-clip-matrix-norm"]], "clip_vector_norm": [[1441, "clip-vector-norm"]], "ivy.Array.clip_vector_norm": [[1442, "ivy-array-clip-vector-norm"]], "ivy.Container.clip_vector_norm": [[1443, "ivy-container-clip-vector-norm"]], "ivy.clip_vector_norm": [[1444, "ivy-clip-vector-norm"]], "ivy.Container.static_clip_vector_norm": [[1445, "ivy-container-static-clip-vector-norm"]], "container_types": [[1446, "container-types"]], "current_backend_str": [[1447, "current-backend-str"]], "default": [[1448, "default"]], "ivy.Array.default": [[1449, "ivy-array-default"]], "ivy.default": [[1450, "ivy-default"]], "einops_rearrange": [[1451, "einops-rearrange"]], "ivy.Array.einops_rearrange": [[1452, "ivy-array-einops-rearrange"]], "ivy.Container.einops_rearrange": [[1453, "ivy-container-einops-rearrange"]], "ivy.einops_rearrange": [[1454, "ivy-einops-rearrange"]], "ivy.Container.static_einops_rearrange": [[1455, "ivy-container-static-einops-rearrange"]], "einops_reduce": [[1456, "einops-reduce"]], "ivy.Array.einops_reduce": [[1457, "ivy-array-einops-reduce"]], "ivy.Container.einops_reduce": [[1458, "ivy-container-einops-reduce"]], "ivy.einops_reduce": [[1459, "ivy-einops-reduce"]], "ivy.Container.static_einops_reduce": [[1460, "ivy-container-static-einops-reduce"]], "einops_repeat": [[1461, "einops-repeat"]], "ivy.Array.einops_repeat": [[1462, "ivy-array-einops-repeat"]], "ivy.Container.einops_repeat": [[1463, "ivy-container-einops-repeat"]], "ivy.einops_repeat": [[1464, "ivy-einops-repeat"]], "ivy.Container.static_einops_repeat": [[1465, "ivy-container-static-einops-repeat"]], "exists": [[1466, "exists"]], "ivy.Array.exists": [[1467, "ivy-array-exists"]], "ivy.exists": [[1468, "ivy-exists"]], "fourier_encode": [[1469, "fourier-encode"]], "ivy.Array.fourier_encode": [[1470, "ivy-array-fourier-encode"]], "ivy.Container.fourier_encode": [[1471, "ivy-container-fourier-encode"]], "ivy.fourier_encode": [[1472, "ivy-fourier-encode"]], "ivy.Container.static_fourier_encode": [[1473, "ivy-container-static-fourier-encode"]], "function_supported_devices_and_dtypes": [[1474, "function-supported-devices-and-dtypes"]], "function_unsupported_devices_and_dtypes": [[1475, "function-unsupported-devices-and-dtypes"]], "gather": [[1476, "gather"]], "ivy.Array.gather": [[1477, "ivy-array-gather"]], "ivy.Container.gather": [[1478, "ivy-container-gather"]], "ivy.gather": [[1479, "ivy-gather"]], "ivy.Container.static_gather": [[1480, "ivy-container-static-gather"]], "gather_nd": [[1481, "gather-nd"]], "ivy.Array.gather_nd": [[1482, "ivy-array-gather-nd"]], "ivy.Container.gather_nd": [[1483, "ivy-container-gather-nd"]], "ivy.gather_nd": [[1484, "ivy-gather-nd"]], "ivy.Container.static_gather_nd": [[1485, "ivy-container-static-gather-nd"]], "get_all_arrays_in_memory": [[1486, "get-all-arrays-in-memory"]], "get_array_mode": [[1487, "get-array-mode"]], "get_exception_trace_mode": [[1488, "get-exception-trace-mode"]], "get_item": [[1489, "get-item"]], "get_min_base": [[1490, "get-min-base"]], "get_min_denominator": [[1491, "get-min-denominator"]], "get_nestable_mode": [[1492, "get-nestable-mode"]], "get_num_dims": [[1493, "get-num-dims"]], "ivy.Array.get_num_dims": [[1494, "ivy-array-get-num-dims"]], "ivy.Container.get_num_dims": [[1495, "ivy-container-get-num-dims"]], "ivy.get_num_dims": [[1496, "ivy-get-num-dims"]], "ivy.Container.static_get_num_dims": [[1497, "ivy-container-static-get-num-dims"]], "get_queue_timeout": [[1498, "get-queue-timeout"]], "get_referrers_recursive": [[1499, "get-referrers-recursive"]], "get_show_func_wrapper_trace_mode": [[1500, "get-show-func-wrapper-trace-mode"]], "get_tmp_dir": [[1501, "get-tmp-dir"]], "has_nans": [[1502, "has-nans"]], "ivy.Array.has_nans": [[1503, "ivy-array-has-nans"]], "ivy.Container.has_nans": [[1504, "ivy-container-has-nans"]], "ivy.has_nans": [[1505, "ivy-has-nans"]], "ivy.Container.static_has_nans": [[1506, "ivy-container-static-has-nans"]], "inplace_arrays_supported": [[1507, "inplace-arrays-supported"]], "inplace_decrement": [[1508, "inplace-decrement"]], "ivy.Array.inplace_decrement": [[1509, "ivy-array-inplace-decrement"]], "ivy.Container.inplace_decrement": [[1510, "ivy-container-inplace-decrement"]], "ivy.inplace_decrement": [[1511, "ivy-inplace-decrement"]], "ivy.Container.static_inplace_decrement": [[1512, "ivy-container-static-inplace-decrement"]], "inplace_increment": [[1513, "inplace-increment"]], "ivy.Array.inplace_increment": [[1514, "ivy-array-inplace-increment"]], "ivy.Container.inplace_increment": [[1515, "ivy-container-inplace-increment"]], "ivy.inplace_increment": [[1516, "ivy-inplace-increment"]], "ivy.Container.static_inplace_increment": [[1517, "ivy-container-static-inplace-increment"]], "inplace_update": [[1518, "inplace-update"]], "ivy.Array.inplace_update": [[1519, "ivy-array-inplace-update"]], "ivy.Container.inplace_update": [[1520, "ivy-container-inplace-update"]], "ivy.inplace_update": [[1521, "ivy-inplace-update"]], "ivy.Container.static_inplace_update": [[1522, "ivy-container-static-inplace-update"]], "inplace_variables_supported": [[1523, "inplace-variables-supported"]], "is_array": [[1524, "is-array"]], "ivy.Array.is_array": [[1525, "ivy-array-is-array"]], "ivy.Container.is_array": [[1526, "ivy-container-is-array"]], "ivy.is_array": [[1527, "ivy-is-array"]], "ivy.Container.static_is_array": [[1528, "ivy-container-static-is-array"]], "is_ivy_array": [[1529, "is-ivy-array"]], "ivy.Array.is_ivy_array": [[1530, "ivy-array-is-ivy-array"]], "ivy.Container.is_ivy_array": [[1531, "ivy-container-is-ivy-array"]], "ivy.is_ivy_array": [[1532, "ivy-is-ivy-array"]], "ivy.Container.static_is_ivy_array": [[1533, "ivy-container-static-is-ivy-array"]], "is_ivy_container": [[1534, "is-ivy-container"]], "ivy.Array.is_ivy_container": [[1535, "ivy-array-is-ivy-container"]], "ivy.is_ivy_container": [[1536, "ivy-is-ivy-container"]], "is_native_array": [[1537, "is-native-array"]], "ivy.Array.is_native_array": [[1538, "ivy-array-is-native-array"]], "ivy.Container.is_native_array": [[1539, "ivy-container-is-native-array"]], "ivy.is_native_array": [[1540, "ivy-is-native-array"]], "ivy.Container.static_is_native_array": [[1541, "ivy-container-static-is-native-array"]], "isscalar": [[1542, "isscalar"]], "match_kwargs": [[1543, "match-kwargs"]], "multiprocessing": [[1544, "multiprocessing"]], "num_arrays_in_memory": [[1545, "num-arrays-in-memory"]], "print_all_arrays_in_memory": [[1546, "print-all-arrays-in-memory"]], "scatter_flat": [[1547, "scatter-flat"]], "ivy.Array.scatter_flat": [[1548, "ivy-array-scatter-flat"]], "ivy.Container.scatter_flat": [[1549, "ivy-container-scatter-flat"]], "ivy.scatter_flat": [[1550, "ivy-scatter-flat"]], "ivy.Container.static_scatter_flat": [[1551, "ivy-container-static-scatter-flat"]], "scatter_nd": [[1552, "scatter-nd"]], "ivy.Array.scatter_nd": [[1553, "ivy-array-scatter-nd"]], "ivy.Container.scatter_nd": [[1554, "ivy-container-scatter-nd"]], "ivy.scatter_nd": [[1555, "ivy-scatter-nd"]], "ivy.Container.static_scatter_nd": [[1556, "ivy-container-static-scatter-nd"]], "set_array_mode": [[1557, "set-array-mode"]], "set_exception_trace_mode": [[1558, "set-exception-trace-mode"]], "set_min_base": [[1559, "set-min-base"]], "set_min_denominator": [[1560, "set-min-denominator"]], "set_nestable_mode": [[1561, "set-nestable-mode"]], "set_queue_timeout": [[1562, "set-queue-timeout"]], "set_shape_array_mode": [[1563, "set-shape-array-mode"]], "set_show_func_wrapper_trace_mode": [[1564, "set-show-func-wrapper-trace-mode"]], "set_tmp_dir": [[1565, "set-tmp-dir"]], "shape": [[1566, "shape"]], "shape_array_mode": [[1567, "shape-array-mode"]], "stable_divide": [[1568, "stable-divide"]], "ivy.Array.stable_divide": [[1569, "ivy-array-stable-divide"]], "ivy.Container.stable_divide": [[1570, "ivy-container-stable-divide"]], "ivy.stable_divide": [[1571, "ivy-stable-divide"]], "ivy.Container.static_stable_divide": [[1572, "ivy-container-static-stable-divide"]], "stable_pow": [[1573, "stable-pow"]], "ivy.Array.stable_pow": [[1574, "ivy-array-stable-pow"]], "ivy.Container.stable_pow": [[1575, "ivy-container-stable-pow"]], "ivy.stable_pow": [[1576, "ivy-stable-pow"]], "ivy.Container.static_stable_pow": [[1577, "ivy-container-static-stable-pow"]], "supports_inplace_updates": [[1578, "supports-inplace-updates"]], "ivy.Container.static_supports_inplace_updates": [[1579, "ivy-container-static-supports-inplace-updates"]], "ivy.Array.supports_inplace_updates": [[1580, "ivy-array-supports-inplace-updates"]], "ivy.Container.supports_inplace_updates": [[1581, "ivy-container-supports-inplace-updates"]], "ivy.supports_inplace_updates": [[1582, "ivy-supports-inplace-updates"]], "to_ivy_shape": [[1583, "to-ivy-shape"]], "to_list": [[1584, "to-list"]], "ivy.Container.static_to_list": [[1585, "ivy-container-static-to-list"]], "ivy.Array.to_list": [[1586, "ivy-array-to-list"]], "ivy.to_list": [[1587, "ivy-to-list"]], "to_native_shape": [[1588, "to-native-shape"]], "to_numpy": [[1589, "to-numpy"]], "ivy.Container.static_to_numpy": [[1590, "ivy-container-static-to-numpy"]], "ivy.Array.to_numpy": [[1591, "ivy-array-to-numpy"]], "ivy.Container.to_numpy": [[1592, "ivy-container-to-numpy"]], "ivy.to_numpy": [[1593, "ivy-to-numpy"]], "to_scalar": [[1594, "to-scalar"]], "ivy.Container.static_to_scalar": [[1595, "ivy-container-static-to-scalar"]], "ivy.Array.to_scalar": [[1596, "ivy-array-to-scalar"]], "ivy.Container.to_scalar": [[1597, "ivy-container-to-scalar"]], "ivy.to_scalar": [[1598, "ivy-to-scalar"]], "try_else_none": [[1599, "try-else-none"]], "unset_array_mode": [[1600, "unset-array-mode"]], "unset_exception_trace_mode": [[1601, "unset-exception-trace-mode"]], "unset_nestable_mode": [[1602, "unset-nestable-mode"]], "unset_queue_timeout": [[1603, "unset-queue-timeout"]], "unset_shape_array_mode": [[1604, "unset-shape-array-mode"]], "unset_show_func_wrapper_trace_mode": [[1605, "unset-show-func-wrapper-trace-mode"]], "value_is_nan": [[1606, "value-is-nan"]], "ivy.Container.static_value_is_nan": [[1607, "ivy-container-static-value-is-nan"]], "ivy.Array.value_is_nan": [[1608, "ivy-array-value-is-nan"]], "ivy.Container.value_is_nan": [[1609, "ivy-container-value-is-nan"]], "ivy.value_is_nan": [[1610, "ivy-value-is-nan"]], "vmap": [[1611, "vmap"]], "GradientTracking": [[1613, "gradienttracking"]], "adam_step": [[1614, "adam-step"]], "ivy.Array.adam_step": [[1615, "ivy-array-adam-step"]], "ivy.Container.adam_step": [[1616, "ivy-container-adam-step"]], "ivy.adam_step": [[1617, "ivy-adam-step"]], "adam_update": [[1618, "adam-update"]], "ivy.Array.adam_update": [[1619, "ivy-array-adam-update"]], "ivy.Container.adam_update": [[1620, "ivy-container-adam-update"]], "ivy.adam_update": [[1621, "ivy-adam-update"]], "execute_with_gradients": [[1622, "execute-with-gradients"]], "grad": [[1623, "grad"]], "gradient_descent_update": [[1624, "gradient-descent-update"]], "ivy.Array.gradient_descent_update": [[1625, "ivy-array-gradient-descent-update"]], "ivy.Container.gradient_descent_update": [[1626, "ivy-container-gradient-descent-update"]], "ivy.gradient_descent_update": [[1627, "ivy-gradient-descent-update"]], "jac": [[1628, "jac"]], "lamb_update": [[1629, "lamb-update"]], "ivy.Array.lamb_update": [[1630, "ivy-array-lamb-update"]], "ivy.Container.lamb_update": [[1631, "ivy-container-lamb-update"]], "ivy.lamb_update": [[1632, "ivy-lamb-update"]], "lars_update": [[1633, "lars-update"]], "ivy.Array.lars_update": [[1634, "ivy-array-lars-update"]], "ivy.Container.lars_update": [[1635, "ivy-container-lars-update"]], "ivy.lars_update": [[1636, "ivy-lars-update"]], "optimizer_update": [[1637, "optimizer-update"]], "ivy.Array.optimizer_update": [[1638, "ivy-array-optimizer-update"]], "ivy.Container.optimizer_update": [[1639, "ivy-container-optimizer-update"]], "ivy.optimizer_update": [[1640, "ivy-optimizer-update"]], "set_with_grads": [[1641, "set-with-grads"]], "stop_gradient": [[1642, "stop-gradient"]], "ivy.Container.static_stop_gradient": [[1643, "ivy-container-static-stop-gradient"]], "ivy.Array.stop_gradient": [[1644, "ivy-array-stop-gradient"]], "ivy.Container.stop_gradient": [[1645, "ivy-container-stop-gradient"]], "ivy.stop_gradient": [[1646, "ivy-stop-gradient"]], "unset_with_grads": [[1647, "unset-with-grads"]], "value_and_grad": [[1648, "value-and-grad"]], "with_grads": [[1649, "with-grads"]], "conv": [[1651, "conv"]], "conv1d": [[1652, "conv1d"]], "ivy.Array.conv1d": [[1653, "ivy-array-conv1d"]], "ivy.Container.conv1d": [[1654, "ivy-container-conv1d"]], "ivy.conv1d": [[1655, "ivy-conv1d"]], "ivy.Container.static_conv1d": [[1656, "ivy-container-static-conv1d"]], "conv1d_transpose": [[1657, "conv1d-transpose"]], "ivy.Array.conv1d_transpose": [[1658, "ivy-array-conv1d-transpose"]], "ivy.Container.conv1d_transpose": [[1659, "ivy-container-conv1d-transpose"]], "ivy.conv1d_transpose": [[1660, "ivy-conv1d-transpose"]], "ivy.Container.static_conv1d_transpose": [[1661, "ivy-container-static-conv1d-transpose"]], "conv2d": [[1662, "conv2d"]], "ivy.Array.conv2d": [[1663, "ivy-array-conv2d"]], "ivy.Container.conv2d": [[1664, "ivy-container-conv2d"]], "ivy.conv2d": [[1665, "ivy-conv2d"]], "ivy.Container.static_conv2d": [[1666, "ivy-container-static-conv2d"]], "conv2d_transpose": [[1667, "conv2d-transpose"]], "ivy.Array.conv2d_transpose": [[1668, "ivy-array-conv2d-transpose"]], "ivy.Container.conv2d_transpose": [[1669, "ivy-container-conv2d-transpose"]], "ivy.conv2d_transpose": [[1670, "ivy-conv2d-transpose"]], "ivy.Container.static_conv2d_transpose": [[1671, "ivy-container-static-conv2d-transpose"]], "conv3d": [[1672, "conv3d"]], "ivy.Array.conv3d": [[1673, "ivy-array-conv3d"]], "ivy.Container.conv3d": [[1674, "ivy-container-conv3d"]], "ivy.conv3d": [[1675, "ivy-conv3d"]], "ivy.Container.static_conv3d": [[1676, "ivy-container-static-conv3d"]], "conv3d_transpose": [[1677, "conv3d-transpose"]], "ivy.Array.conv3d_transpose": [[1678, "ivy-array-conv3d-transpose"]], "ivy.Container.conv3d_transpose": [[1679, "ivy-container-conv3d-transpose"]], "ivy.conv3d_transpose": [[1680, "ivy-conv3d-transpose"]], "ivy.Container.static_conv3d_transpose": [[1681, "ivy-container-static-conv3d-transpose"]], "conv_general_dilated": [[1682, "conv-general-dilated"]], "conv_general_transpose": [[1683, "conv-general-transpose"]], "depthwise_conv2d": [[1684, "depthwise-conv2d"]], "ivy.Array.depthwise_conv2d": [[1685, "ivy-array-depthwise-conv2d"]], "ivy.Container.depthwise_conv2d": [[1686, "ivy-container-depthwise-conv2d"]], "ivy.depthwise_conv2d": [[1687, "ivy-depthwise-conv2d"]], "ivy.Container.static_depthwise_conv2d": [[1688, "ivy-container-static-depthwise-conv2d"]], "dropout": [[1689, "dropout"]], "ivy.Array.dropout": [[1690, "ivy-array-dropout"]], "ivy.Container.dropout": [[1691, "ivy-container-dropout"]], "ivy.dropout": [[1692, "ivy-dropout"]], "ivy.Container.static_dropout": [[1693, "ivy-container-static-dropout"]], "linear": [[1694, "linear"]], "ivy.Array.linear": [[1695, "ivy-array-linear"]], "ivy.Container.linear": [[1696, "ivy-container-linear"]], "ivy.linear": [[1697, "ivy-linear"]], "ivy.Container.static_linear": [[1698, "ivy-container-static-linear"]], "lstm_update": [[1699, "lstm-update"]], "ivy.Array.lstm_update": [[1700, "ivy-array-lstm-update"]], "ivy.Container.lstm_update": [[1701, "ivy-container-lstm-update"]], "ivy.lstm_update": [[1702, "ivy-lstm-update"]], "ivy.Container.static_lstm_update": [[1703, "ivy-container-static-lstm-update"]], "multi_head_attention": [[1704, "multi-head-attention"]], "ivy.Array.multi_head_attention": [[1705, "ivy-array-multi-head-attention"]], "ivy.Container.multi_head_attention": [[1706, "ivy-container-multi-head-attention"]], "ivy.multi_head_attention": [[1707, "ivy-multi-head-attention"]], "ivy.Container.static_multi_head_attention": [[1708, "ivy-container-static-multi-head-attention"]], "scaled_dot_product_attention": [[1709, "scaled-dot-product-attention"]], "ivy.Array.scaled_dot_product_attention": [[1710, "ivy-array-scaled-dot-product-attention"]], "ivy.Container.scaled_dot_product_attention": [[1711, "ivy-container-scaled-dot-product-attention"]], "ivy.scaled_dot_product_attention": [[1712, "ivy-scaled-dot-product-attention"]], "ivy.Container.static_scaled_dot_product_attention": [[1713, "ivy-container-static-scaled-dot-product-attention"]], "cholesky": [[1715, "cholesky"]], "ivy.Array.cholesky": [[1716, "ivy-array-cholesky"]], "ivy.Container.cholesky": [[1717, "ivy-container-cholesky"]], "ivy.cholesky": [[1718, "ivy-cholesky"]], "ivy.Container.static_cholesky": [[1719, "ivy-container-static-cholesky"]], "cross": [[1720, "cross"]], "ivy.Array.cross": [[1721, "ivy-array-cross"]], "ivy.Container.cross": [[1722, "ivy-container-cross"]], "ivy.cross": [[1723, "ivy-cross"]], "ivy.Container.static_cross": [[1724, "ivy-container-static-cross"]], "det": [[1725, "det"]], "ivy.Array.det": [[1726, "ivy-array-det"]], "ivy.Container.det": [[1727, "ivy-container-det"]], "ivy.det": [[1728, "ivy-det"]], "ivy.Container.static_det": [[1729, "ivy-container-static-det"]], "diag": [[1730, "diag"]], "ivy.Array.diag": [[1731, "ivy-array-diag"]], "ivy.Container.diag": [[1732, "ivy-container-diag"]], "ivy.diag": [[1733, "ivy-diag"]], "ivy.Container.static_diag": [[1734, "ivy-container-static-diag"]], "diagonal": [[1735, "diagonal"]], "ivy.Array.diagonal": [[1736, "ivy-array-diagonal"]], "ivy.Container.diagonal": [[1737, "ivy-container-diagonal"]], "ivy.diagonal": [[1738, "ivy-diagonal"]], "ivy.Container.static_diagonal": [[1739, "ivy-container-static-diagonal"]], "eigh": [[1741, "eigh"]], "ivy.Array.eigh": [[1742, "ivy-array-eigh"]], "ivy.Container.eigh": [[1743, "ivy-container-eigh"]], "ivy.eigh": [[1744, "ivy-eigh"]], "ivy.Container.static_eigh": [[1745, "ivy-container-static-eigh"]], "eigvalsh": [[1746, "eigvalsh"]], "ivy.Array.eigvalsh": [[1747, "ivy-array-eigvalsh"]], "ivy.Container.eigvalsh": [[1748, "ivy-container-eigvalsh"]], "ivy.eigvalsh": [[1749, "ivy-eigvalsh"]], "ivy.Container.static_eigvalsh": [[1750, "ivy-container-static-eigvalsh"]], "inner": [[1751, "inner"]], "ivy.Array.inner": [[1752, "ivy-array-inner"]], "ivy.Container.inner": [[1753, "ivy-container-inner"]], "ivy.inner": [[1754, "ivy-inner"]], "ivy.Container.static_inner": [[1755, "ivy-container-static-inner"]], "inv": [[1756, "inv"]], "ivy.Array.inv": [[1757, "ivy-array-inv"]], "ivy.Container.inv": [[1758, "ivy-container-inv"]], "ivy.inv": [[1759, "ivy-inv"]], "ivy.Container.static_inv": [[1760, "ivy-container-static-inv"]], "matmul": [[1761, "matmul"]], "ivy.Array.matmul": [[1762, "ivy-array-matmul"]], "ivy.Container.matmul": [[1763, "ivy-container-matmul"]], "ivy.matmul": [[1764, "ivy-matmul"]], "ivy.Container.static_matmul": [[1765, "ivy-container-static-matmul"]], "matrix_norm": [[1766, "matrix-norm"]], "ivy.Array.matrix_norm": [[1767, "ivy-array-matrix-norm"]], "ivy.Container.matrix_norm": [[1768, "ivy-container-matrix-norm"]], "ivy.matrix_norm": [[1769, "ivy-matrix-norm"]], "ivy.Container.static_matrix_norm": [[1770, "ivy-container-static-matrix-norm"]], "matrix_power": [[1771, "matrix-power"]], "ivy.Array.matrix_power": [[1772, "ivy-array-matrix-power"]], "ivy.Container.matrix_power": [[1773, "ivy-container-matrix-power"]], "ivy.matrix_power": [[1774, "ivy-matrix-power"]], "ivy.Container.static_matrix_power": [[1775, "ivy-container-static-matrix-power"]], "matrix_rank": [[1776, "matrix-rank"]], "ivy.Array.matrix_rank": [[1777, "ivy-array-matrix-rank"]], "ivy.Container.matrix_rank": [[1778, "ivy-container-matrix-rank"]], "ivy.matrix_rank": [[1779, "ivy-matrix-rank"]], "ivy.Container.static_matrix_rank": [[1780, "ivy-container-static-matrix-rank"]], "matrix_transpose": [[1781, "matrix-transpose"]], "ivy.Array.matrix_transpose": [[1782, "ivy-array-matrix-transpose"]], "ivy.Container.matrix_transpose": [[1783, "ivy-container-matrix-transpose"]], "ivy.matrix_transpose": [[1784, "ivy-matrix-transpose"]], "ivy.Container.static_matrix_transpose": [[1785, "ivy-container-static-matrix-transpose"]], "outer": [[1786, "outer"]], "ivy.Array.outer": [[1787, "ivy-array-outer"]], "ivy.Container.outer": [[1788, "ivy-container-outer"]], "ivy.outer": [[1789, "ivy-outer"]], "ivy.Container.static_outer": [[1790, "ivy-container-static-outer"]], "pinv": [[1791, "pinv"]], "ivy.Array.pinv": [[1792, "ivy-array-pinv"]], "ivy.Container.pinv": [[1793, "ivy-container-pinv"]], "ivy.pinv": [[1794, "ivy-pinv"]], "ivy.Container.static_pinv": [[1795, "ivy-container-static-pinv"]], "qr": [[1796, "qr"]], "ivy.Array.qr": [[1797, "ivy-array-qr"]], "ivy.Container.qr": [[1798, "ivy-container-qr"]], "ivy.qr": [[1799, "ivy-qr"]], "ivy.Container.static_qr": [[1800, "ivy-container-static-qr"]], "slogdet": [[1801, "slogdet"]], "ivy.Array.slogdet": [[1802, "ivy-array-slogdet"]], "ivy.Container.slogdet": [[1803, "ivy-container-slogdet"]], "ivy.slogdet": [[1804, "ivy-slogdet"]], "ivy.Container.static_slogdet": [[1805, "ivy-container-static-slogdet"]], "solve": [[1806, "solve"]], "ivy.Array.solve": [[1807, "ivy-array-solve"]], "ivy.Container.solve": [[1808, "ivy-container-solve"]], "ivy.solve": [[1809, "ivy-solve"]], "ivy.Container.static_solve": [[1810, "ivy-container-static-solve"]], "svd": [[1811, "svd"]], "ivy.Container.static_svd": [[1812, "ivy-container-static-svd"]], "ivy.Array.svd": [[1813, "ivy-array-svd"]], "ivy.Container.svd": [[1814, "ivy-container-svd"]], "ivy.svd": [[1815, "ivy-svd"]], "svdvals": [[1816, "svdvals"]], "ivy.Container.static_svdvals": [[1817, "ivy-container-static-svdvals"]], "ivy.Array.svdvals": [[1818, "ivy-array-svdvals"]], "ivy.Container.svdvals": [[1819, "ivy-container-svdvals"]], "ivy.svdvals": [[1820, "ivy-svdvals"]], "tensordot": [[1821, "tensordot"]], "ivy.Container.static_tensordot": [[1822, "ivy-container-static-tensordot"]], "ivy.Container.tensordot": [[1823, "ivy-container-tensordot"]], "ivy.tensordot": [[1824, "ivy-tensordot"]], "tensorsolve": [[1825, "tensorsolve"]], "ivy.Array.tensorsolve": [[1826, "ivy-array-tensorsolve"]], "ivy.Container.tensorsolve": [[1827, "ivy-container-tensorsolve"]], "ivy.tensorsolve": [[1828, "ivy-tensorsolve"]], "trace": [[1829, "trace"]], "ivy.Container.static_trace": [[1830, "ivy-container-static-trace"]], "ivy.Array.trace": [[1831, "ivy-array-trace"]], "ivy.Container.trace": [[1832, "ivy-container-trace"]], "ivy.trace": [[1833, "ivy-trace"]], "vander": [[1834, "vander"]], "ivy.Container.static_vander": [[1835, "ivy-container-static-vander"]], "ivy.Array.vander": [[1836, "ivy-array-vander"]], "ivy.Container.vander": [[1837, "ivy-container-vander"]], "ivy.vander": [[1838, "ivy-vander"]], "vecdot": [[1839, "vecdot"]], "ivy.Container.static_vecdot": [[1840, "ivy-container-static-vecdot"]], "ivy.Array.vecdot": [[1841, "ivy-array-vecdot"]], "ivy.Container.vecdot": [[1842, "ivy-container-vecdot"]], "ivy.vecdot": [[1843, "ivy-vecdot"]], "vector_norm": [[1844, "vector-norm"]], "ivy.Container.static_vector_norm": [[1845, "ivy-container-static-vector-norm"]], "ivy.Array.vector_norm": [[1846, "ivy-array-vector-norm"]], "ivy.Container.vector_norm": [[1847, "ivy-container-vector-norm"]], "ivy.vector_norm": [[1848, "ivy-vector-norm"]], "vector_to_skew_symmetric_matrix": [[1849, "vector-to-skew-symmetric-matrix"]], "ivy.Container.static_vector_to_skew_symmetric_matrix": [[1850, "ivy-container-static-vector-to-skew-symmetric-matrix"]], "ivy.Array.vector_to_skew_symmetric_matrix": [[1851, "ivy-array-vector-to-skew-symmetric-matrix"]], "ivy.Container.vector_to_skew_symmetric_matrix": [[1852, "ivy-container-vector-to-skew-symmetric-matrix"]], "ivy.vector_to_skew_symmetric_matrix": [[1853, "ivy-vector-to-skew-symmetric-matrix"]], "binary_cross_entropy": [[1855, "binary-cross-entropy"]], "ivy.Array.binary_cross_entropy": [[1856, "ivy-array-binary-cross-entropy"]], "ivy.Container.binary_cross_entropy": [[1857, "ivy-container-binary-cross-entropy"]], "ivy.binary_cross_entropy": [[1858, "ivy-binary-cross-entropy"]], "ivy.Container.static_binary_cross_entropy": [[1859, "ivy-container-static-binary-cross-entropy"]], "cross_entropy": [[1860, "cross-entropy"]], "ivy.Array.cross_entropy": [[1861, "ivy-array-cross-entropy"]], "ivy.Container.cross_entropy": [[1862, "ivy-container-cross-entropy"]], "ivy.cross_entropy": [[1863, "ivy-cross-entropy"]], "ivy.Container.static_cross_entropy": [[1864, "ivy-container-static-cross-entropy"]], "sparse_cross_entropy": [[1865, "sparse-cross-entropy"]], "ivy.Array.sparse_cross_entropy": [[1866, "ivy-array-sparse-cross-entropy"]], "ivy.Container.sparse_cross_entropy": [[1867, "ivy-container-sparse-cross-entropy"]], "ivy.sparse_cross_entropy": [[1868, "ivy-sparse-cross-entropy"]], "ivy.Container.static_sparse_cross_entropy": [[1869, "ivy-container-static-sparse-cross-entropy"]], "clip": [[1871, "clip"]], "ivy.Array.clip": [[1872, "ivy-array-clip"]], "ivy.Container.clip": [[1873, "ivy-container-clip"]], "ivy.clip": [[1874, "ivy-clip"]], "ivy.Container.static_clip": [[1875, "ivy-container-static-clip"]], "concat": [[1876, "concat"]], "ivy.Array.concat": [[1877, "ivy-array-concat"]], "ivy.Container.concat": [[1878, "ivy-container-concat"]], "ivy.concat": [[1879, "ivy-concat"]], "ivy.Container.static_concat": [[1880, "ivy-container-static-concat"]], "constant_pad": [[1881, "constant-pad"]], "ivy.Array.constant_pad": [[1882, "ivy-array-constant-pad"]], "ivy.Container.constant_pad": [[1883, "ivy-container-constant-pad"]], "ivy.constant_pad": [[1884, "ivy-constant-pad"]], "ivy.Container.static_constant_pad": [[1885, "ivy-container-static-constant-pad"]], "expand_dims": [[1886, "expand-dims"]], "ivy.Array.expand_dims": [[1887, "ivy-array-expand-dims"]], "ivy.Container.expand_dims": [[1888, "ivy-container-expand-dims"]], "ivy.expand_dims": [[1889, "ivy-expand-dims"]], "ivy.Container.static_expand_dims": [[1890, "ivy-container-static-expand-dims"]], "flip": [[1891, "flip"]], "ivy.Array.flip": [[1892, "ivy-array-flip"]], "ivy.Container.flip": [[1893, "ivy-container-flip"]], "ivy.flip": [[1894, "ivy-flip"]], "ivy.Container.static_flip": [[1895, "ivy-container-static-flip"]], "permute_dims": [[1896, "permute-dims"]], "ivy.Array.permute_dims": [[1897, "ivy-array-permute-dims"]], "ivy.Container.permute_dims": [[1898, "ivy-container-permute-dims"]], "ivy.permute_dims": [[1899, "ivy-permute-dims"]], "ivy.Container.static_permute_dims": [[1900, "ivy-container-static-permute-dims"]], "repeat": [[1901, "repeat"]], "ivy.Array.repeat": [[1902, "ivy-array-repeat"]], "ivy.Container.repeat": [[1903, "ivy-container-repeat"]], "ivy.repeat": [[1904, "ivy-repeat"]], "ivy.Container.static_repeat": [[1905, "ivy-container-static-repeat"]], "reshape": [[1906, "reshape"]], "ivy.Array.reshape": [[1907, "ivy-array-reshape"]], "ivy.Container.reshape": [[1908, "ivy-container-reshape"]], "ivy.reshape": [[1909, "ivy-reshape"]], "ivy.Container.static_reshape": [[1910, "ivy-container-static-reshape"]], "roll": [[1911, "roll"]], "ivy.Array.roll": [[1912, "ivy-array-roll"]], "ivy.Container.roll": [[1913, "ivy-container-roll"]], "ivy.Container.static_roll": [[1915, "ivy-container-static-roll"]], "split": [[1916, "split"]], "ivy.Array.split": [[1917, "ivy-array-split"]], "ivy.Container.split": [[1918, "ivy-container-split"]], "ivy.split": [[1919, "ivy-split"]], "ivy.Container.static_split": [[1920, "ivy-container-static-split"]], "squeeze": [[1921, "squeeze"]], "ivy.Array.squeeze": [[1922, "ivy-array-squeeze"]], "ivy.Container.squeeze": [[1923, "ivy-container-squeeze"]], "ivy.squeeze": [[1924, "ivy-squeeze"]], "ivy.Container.static_squeeze": [[1925, "ivy-container-static-squeeze"]], "stack": [[1926, "stack"]], "ivy.Array.stack": [[1927, "ivy-array-stack"]], "ivy.Container.stack": [[1928, "ivy-container-stack"]], "ivy.stack": [[1929, "ivy-stack"]], "ivy.Container.static_stack": [[1930, "ivy-container-static-stack"]], "swapaxes": [[1931, "swapaxes"]], "ivy.Container.static_swapaxes": [[1932, "ivy-container-static-swapaxes"]], "ivy.Array.swapaxes": [[1933, "ivy-array-swapaxes"]], "ivy.Container.swapaxes": [[1934, "ivy-container-swapaxes"]], "ivy.swapaxes": [[1935, "ivy-swapaxes"]], "tile": [[1936, "tile"]], "ivy.Container.static_tile": [[1937, "ivy-container-static-tile"]], "ivy.Array.tile": [[1938, "ivy-array-tile"]], "ivy.Container.tile": [[1939, "ivy-container-tile"]], "ivy.tile": [[1940, "ivy-tile"]], "unstack": [[1941, "unstack"]], "ivy.Container.static_unstack": [[1942, "ivy-container-static-unstack"]], "ivy.Array.unstack": [[1943, "ivy-array-unstack"]], "ivy.Container.unstack": [[1944, "ivy-container-unstack"]], "ivy.unstack": [[1945, "ivy-unstack"]], "zero_pad": [[1946, "zero-pad"]], "ivy.Container.static_zero_pad": [[1947, "ivy-container-static-zero-pad"]], "ivy.Array.zero_pad": [[1948, "ivy-array-zero-pad"]], "ivy.Container.zero_pad": [[1949, "ivy-container-zero-pad"]], "ivy.zero_pad": [[1950, "ivy-zero-pad"]], "fomaml_step": [[1952, "fomaml-step"]], "maml_step": [[1953, "maml-step"]], "reptile_step": [[1954, "reptile-step"]], "all_nested_indices": [[1956, "all-nested-indices"]], "copy_nest": [[1957, "copy-nest"]], "duplicate_array_index_chains": [[1958, "duplicate-array-index-chains"]], "index_nest": [[1959, "index-nest"]], "insert_into_nest_at_index": [[1960, "insert-into-nest-at-index"]], "insert_into_nest_at_indices": [[1961, "insert-into-nest-at-indices"]], "map": [[1962, "map"]], "map_nest_at_index": [[1963, "map-nest-at-index"]], "map_nest_at_indices": [[1964, "map-nest-at-indices"]], "multi_index_nest": [[1965, "multi-index-nest"]], "nested_any": [[1966, "nested-any"]], "nested_argwhere": [[1967, "nested-argwhere"]], "nested_map": [[1968, "nested-map"]], "nested_multi_map": [[1969, "nested-multi-map"]], "prune_empty": [[1970, "prune-empty"]], "prune_nest_at_index": [[1971, "prune-nest-at-index"]], "prune_nest_at_indices": [[1972, "prune-nest-at-indices"]], "set_nest_at_index": [[1973, "set-nest-at-index"]], "set_nest_at_indices": [[1974, "set-nest-at-indices"]], "layer_norm": [[1976, "layer-norm"]], "ivy.Array.layer_norm": [[1977, "ivy-array-layer-norm"]], "ivy.Container.layer_norm": [[1978, "ivy-container-layer-norm"]], "ivy.layer_norm": [[1979, "ivy-layer-norm"]], "multinomial": [[1981, "multinomial"]], "ivy.Array.multinomial": [[1982, "ivy-array-multinomial"]], "ivy.Container.multinomial": [[1983, "ivy-container-multinomial"]], "ivy.multinomial": [[1984, "ivy-multinomial"]], "ivy.Container.static_multinomial": [[1985, "ivy-container-static-multinomial"]], "randint": [[1986, "randint"]], "ivy.Array.randint": [[1987, "ivy-array-randint"]], "ivy.Container.randint": [[1988, "ivy-container-randint"]], "ivy.randint": [[1989, "ivy-randint"]], "ivy.Container.static_randint": [[1990, "ivy-container-static-randint"]], "random_normal": [[1991, "random-normal"]], "ivy.Array.random_normal": [[1992, "ivy-array-random-normal"]], "ivy.Container.random_normal": [[1993, "ivy-container-random-normal"]], "ivy.random_normal": [[1994, "ivy-random-normal"]], "ivy.Container.static_random_normal": [[1995, "ivy-container-static-random-normal"]], "random_uniform": [[1996, "random-uniform"]], "ivy.Array.random_uniform": [[1997, "ivy-array-random-uniform"]], "ivy.Container.random_uniform": [[1998, "ivy-container-random-uniform"]], "ivy.random_uniform": [[1999, "ivy-random-uniform"]], "ivy.Container.static_random_uniform": [[2000, "ivy-container-static-random-uniform"]], "seed": [[2001, "seed"], [2289, "seed"]], "shuffle": [[2002, "shuffle"]], "ivy.Array.shuffle": [[2003, "ivy-array-shuffle"]], "ivy.Container.shuffle": [[2004, "ivy-container-shuffle"]], "ivy.shuffle": [[2005, "ivy-shuffle"]], "ivy.Container.static_shuffle": [[2006, "ivy-container-static-shuffle"]], "argmax": [[2008, "argmax"]], "ivy.Array.argmax": [[2009, "ivy-array-argmax"]], "ivy.Container.argmax": [[2010, "ivy-container-argmax"]], "ivy.argmax": [[2011, "ivy-argmax"]], "ivy.Container.static_argmax": [[2012, "ivy-container-static-argmax"]], "argmin": [[2013, "argmin"]], "ivy.Array.argmin": [[2014, "ivy-array-argmin"]], "ivy.Container.argmin": [[2015, "ivy-container-argmin"]], "ivy.argmin": [[2016, "ivy-argmin"]], "ivy.Container.static_argmin": [[2017, "ivy-container-static-argmin"]], "argwhere": [[2018, "argwhere"]], "ivy.Array.argwhere": [[2019, "ivy-array-argwhere"]], "ivy.Container.argwhere": [[2020, "ivy-container-argwhere"]], "ivy.argwhere": [[2021, "ivy-argwhere"]], "ivy.Container.static_argwhere": [[2022, "ivy-container-static-argwhere"]], "nonzero": [[2023, "nonzero"]], "ivy.Array.nonzero": [[2024, "ivy-array-nonzero"]], "ivy.Container.nonzero": [[2025, "ivy-container-nonzero"]], "ivy.nonzero": [[2026, "ivy-nonzero"]], "ivy.Container.static_nonzero": [[2027, "ivy-container-static-nonzero"]], "where": [[2028, "where"]], "ivy.Container.static_where": [[2029, "ivy-container-static-where"]], "ivy.Array.where": [[2030, "ivy-array-where"]], "ivy.Container.where": [[2031, "ivy-container-where"]], "ivy.where": [[2032, "ivy-where"]], "Data-dependent output shape": [[2033, null], [2033, null], [2033, null], [2033, null], [2034, null], [2038, null], [2039, null], [2043, null], [2044, null], [2048, null], [2049, null], [2053, null]], "unique_all": [[2034, "unique-all"]], "ivy.Container.static_unique_all": [[2035, "ivy-container-static-unique-all"]], "ivy.Array.unique_all": [[2036, "ivy-array-unique-all"]], "ivy.Container.unique_all": [[2037, "ivy-container-unique-all"]], "ivy.unique_all": [[2038, "ivy-unique-all"]], "unique_counts": [[2039, "unique-counts"]], "ivy.Container.static_unique_counts": [[2040, "ivy-container-static-unique-counts"]], "ivy.Array.unique_counts": [[2041, "ivy-array-unique-counts"]], "ivy.Container.unique_counts": [[2042, "ivy-container-unique-counts"]], "ivy.unique_counts": [[2043, "ivy-unique-counts"]], "unique_inverse": [[2044, "unique-inverse"]], "ivy.Container.static_unique_inverse": [[2045, "ivy-container-static-unique-inverse"]], "ivy.Array.unique_inverse": [[2046, "ivy-array-unique-inverse"]], "ivy.Container.unique_inverse": [[2047, "ivy-container-unique-inverse"]], "ivy.unique_inverse": [[2048, "ivy-unique-inverse"]], "unique_values": [[2049, "unique-values"]], "ivy.Container.static_unique_values": [[2050, "ivy-container-static-unique-values"]], "ivy.Array.unique_values": [[2051, "ivy-array-unique-values"]], "ivy.Container.unique_values": [[2052, "ivy-container-unique-values"]], "ivy.unique_values": [[2053, "ivy-unique-values"]], "argsort": [[2055, "argsort"]], "ivy.Array.argsort": [[2056, "ivy-array-argsort"]], "ivy.Container.argsort": [[2057, "ivy-container-argsort"]], "ivy.argsort": [[2058, "ivy-argsort"]], "ivy.Container.static_argsort": [[2059, "ivy-container-static-argsort"]], "searchsorted": [[2060, "searchsorted"]], "ivy.Array.searchsorted": [[2061, "ivy-array-searchsorted"]], "ivy.Container.searchsorted": [[2062, "ivy-container-searchsorted"]], "ivy.searchsorted": [[2063, "ivy-searchsorted"]], "ivy.Container.static_searchsorted": [[2064, "ivy-container-static-searchsorted"]], "sort": [[2065, "sort"]], "ivy.Array.sort": [[2066, "ivy-array-sort"]], "ivy.Container.sort": [[2067, "ivy-container-sort"]], "ivy.sort": [[2068, "ivy-sort"]], "ivy.Container.static_sort": [[2069, "ivy-container-static-sort"]], "cumprod": [[2071, "cumprod"]], "ivy.Array.cumprod": [[2072, "ivy-array-cumprod"]], "ivy.Container.cumprod": [[2073, "ivy-container-cumprod"]], "ivy.cumprod": [[2074, "ivy-cumprod"]], "ivy.Container.static_cumprod": [[2075, "ivy-container-static-cumprod"]], "cumsum": [[2076, "cumsum"]], "ivy.Array.cumsum": [[2077, "ivy-array-cumsum"]], "ivy.Container.cumsum": [[2078, "ivy-container-cumsum"]], "ivy.cumsum": [[2079, "ivy-cumsum"]], "ivy.Container.static_cumsum": [[2080, "ivy-container-static-cumsum"]], "einsum": [[2081, "einsum"]], "ivy.Array.einsum": [[2082, "ivy-array-einsum"]], "ivy.Container.einsum": [[2083, "ivy-container-einsum"]], "ivy.einsum": [[2084, "ivy-einsum"]], "max": [[2085, "max"]], "ivy.Array.max": [[2086, "ivy-array-max"]], "ivy.Container.max": [[2087, "ivy-container-max"]], "ivy.max": [[2088, "ivy-max"]], "mean": [[2089, "mean"]], "ivy.Array.mean": [[2090, "ivy-array-mean"]], "ivy.Container.mean": [[2091, "ivy-container-mean"]], "ivy.mean": [[2092, "ivy-mean"]], "min": [[2093, "min"]], "ivy.Array.min": [[2094, "ivy-array-min"]], "ivy.Container.min": [[2095, "ivy-container-min"]], "ivy.min": [[2096, "ivy-min"]], "prod": [[2097, "prod"], [2250, "prod"]], "ivy.Array.prod": [[2098, "ivy-array-prod"]], "ivy.Container.prod": [[2099, "ivy-container-prod"]], "ivy.prod": [[2100, "ivy-prod"]], "ivy.Container.static_prod": [[2101, "ivy-container-static-prod"]], "std": [[2102, "std"]], "ivy.Array.std": [[2103, "ivy-array-std"]], "ivy.Container.std": [[2104, "ivy-container-std"]], "ivy.std": [[2105, "ivy-std"]], "sum": [[2106, "sum"]], "ivy.Container.static_sum": [[2107, "ivy-container-static-sum"]], "ivy.Array.sum": [[2108, "ivy-array-sum"]], "ivy.Container.sum": [[2109, "ivy-container-sum"]], "ivy.sum": [[2110, "ivy-sum"]], "var": [[2111, "var"]], "ivy.Container.static_var": [[2112, "ivy-container-static-var"]], "ivy.Array.var": [[2113, "ivy-array-var"]], "ivy.Container.var": [[2114, "ivy-container-var"]], "ivy.var": [[2115, "ivy-var"]], "all": [[2117, "all"]], "ivy.Array.all": [[2118, "ivy-array-all"]], "ivy.Container.all": [[2119, "ivy-container-all"]], "ivy.all": [[2120, "ivy-all"]], "ivy.Container.static_all": [[2121, "ivy-container-static-all"]], "any": [[2122, "any"]], "ivy.Array.any": [[2123, "ivy-array-any"]], "ivy.Container.any": [[2124, "ivy-container-any"]], "ivy.any": [[2125, "ivy-any"]], "ivy.Container.static_any": [[2126, "ivy-container-static-any"]], "Glossary": [[2127, "glossary"]], "Contents": [[2128, "contents"]], "Overview": [[2128, "overview"]], "Quick Start": [[2128, "quick-start"]], "Citation": [[2128, "citation"]], "Inspection": [[2131, "module-ivy.inspection"]], "add_array_specs": [[2132, "add-array-specs"]], "fn_array_spec": [[2133, "fn-array-spec"]], "Nested array": [[2134, "module-ivy.nested_array.nested_array"]], "NestedArray": [[2135, "nestedarray"]], "Related Work": [[2136, "related-work"]], "API Standards": [[2137, "api-standards"], [2146, "api-standards"]], "Array API Standard": [[2137, "id1"]], "Compiler Infrastructure": [[2138, "compiler-infrastructure"], [2146, "compiler-infrastructure"]], "LLVM": [[2138, "id1"]], "MLIR": [[2138, "id2"]], "OneAPI": [[2138, "id3"]], "Exchange Formats": [[2139, "exchange-formats"], [2146, "exchange-formats"]], "ONNX onnx": [[2139, "onnx-onnx"]], "NNEF nnef": [[2139, "nnef-nnef"]], "CoreML coreml": [[2139, "coreml-coreml"]], "Frameworks": [[2140, "frameworks"], [2146, "frameworks"]], "MATLAB matlab": [[2140, "matlab-matlab"]], "SciPy scipy": [[2140, "scipy-scipy"]], "Torch torch": [[2140, "torch-torch"]], "NumPy numpy": [[2140, "numpy-numpy"]], "SciKit Learn scikit-learn": [[2140, "scikit-learn-scikit-learn"]], "Theano theano": [[2140, "theano-theano"]], "Pandas pandas": [[2140, "pandas-pandas"]], "Julia julia": [[2140, "julia-julia"]], "Apache Spark MLlib apache-spark-mllib": [[2140, "apache-spark-mllib-apache-spark-mllib"]], "Caffe caffe": [[2140, "caffe-caffe"]], "Chainer chainer": [[2140, "chainer-chainer"]], "TensorFlow 1 tensorflow-1": [[2140, "tensorflow-1-tensorflow-1"]], "MXNet mxnet": [[2140, "mxnet-mxnet"]], "CNTK cntk": [[2140, "cntk-cntk"]], "PyTorch pytorch": [[2140, "pytorch-pytorch"]], "Flux flux": [[2140, "flux-flux"]], "JAX jax": [[2140, "jax-jax"]], "TensorFlow 2 tensorflow-2": [[2140, "tensorflow-2-tensorflow-2"]], "DEX Language dex-language": [[2140, "dex-language-dex-language"]], "Graph Tracers": [[2141, "graph-tracers"], [2146, "graph-tracers"]], "tf.Graph": [[2141, "tf-graph"]], "Jaxpr": [[2141, "jaxpr"]], "torch.jit": [[2141, "torch-jit"]], "torch.fx": [[2141, "torch-fx"]], "ML-Unifying Companies": [[2142, "ml-unifying-companies"], [2146, "ml-unifying-companies"]], "Quansight": [[2142, "id1"]], "Modular": [[2142, "id2"]], "OctoML": [[2142, "id3"]], "Multi-Vendor Compiler Frameworks": [[2143, "multi-vendor-compiler-frameworks"], [2146, "multi-vendor-compiler-frameworks"]], "Apache TVM": [[2143, "apache-tvm"]], "XLA": [[2143, "xla"]], "GCC": [[2143, "gcc"]], "Vendor-Specific APIs": [[2144, "vendor-specific-apis"], [2146, "vendor-specific-apis"]], "TensorRT tensorrt": [[2144, "tensorrt-tensorrt"]], "CUDA cuda": [[2144, "cuda-cuda"]], "Vendor-Specific Compilers": [[2145, "vendor-specific-compilers"], [2146, "vendor-specific-compilers"]], "ICC": [[2145, "id1"]], "ICX": [[2145, "icx"]], "NVCC": [[2145, "nvcc"]], "What does Ivy Add?": [[2146, "what-does-ivy-add"]], "Wrapper Frameworks": [[2146, "wrapper-frameworks"], [2147, "wrapper-frameworks"]], "EagerPy eagerpy": [[2147, "eagerpy-eagerpy"]], "Keras keras": [[2147, "keras-keras"]], "Thinc thinc": [[2147, "thinc-thinc"]], "TensorLy tensorly": [[2147, "tensorly-tensorly"]], "NeuroPod": [[2147, "id1"]], "Framework classes": [[2148, "module-ivy.stateful"]], "GEGLU": [[2150, "geglu"]], "GELU": [[2151, "gelu"]], "Converters": [[2152, "module-ivy.stateful.converters"]], "ModuleConverters": [[2153, "moduleconverters"]], "MyTFModule": [[2154, "mytfmodule"]], "MyTorchModule": [[2155, "mytorchmodule"]], "to_ivy_module": [[2156, "to-ivy-module"]], "Helpers": [[2157, "module-ivy.stateful.helpers"]], "ModuleHelpers": [[2158, "modulehelpers"]], "Constant": [[2160, "constant"]], "FirstLayerSiren": [[2161, "firstlayersiren"]], "GlorotUniform": [[2162, "glorotuniform"]], "Initializer": [[2163, "initializer"]], "KaimingNormal": [[2164, "kaimingnormal"]], "Ones": [[2165, "ones"]], "Siren": [[2166, "siren"]], "Uniform": [[2167, "uniform"]], "Zeros": [[2168, "zeros"]], "Conv1D": [[2170, "conv1d"]], "Conv1DTranspose": [[2171, "conv1dtranspose"]], "Conv2D": [[2172, "conv2d"]], "Conv2DTranspose": [[2173, "conv2dtranspose"]], "Conv3D": [[2174, "conv3d"]], "Conv3DTranspose": [[2175, "conv3dtranspose"]], "DepthwiseConv2D": [[2176, "depthwiseconv2d"]], "Dropout": [[2177, "dropout"]], "LSTM": [[2178, "lstm"]], "Linear": [[2179, "linear"]], "MultiHeadAttention": [[2180, "multiheadattention"]], "Module": [[2181, "module-ivy.stateful.module"], [2182, "module"]], "LayerNorm": [[2184, "layernorm"]], "Adam": [[2186, "adam"]], "LAMB": [[2187, "lamb"]], "LARS": [[2188, "lars"]], "Optimizer": [[2189, "optimizer"]], "SGD": [[2190, "sgd"]], "Sequential": [[2191, "module-ivy.stateful.sequential"], [2192, "sequential"]], "assert_all_close": [[2195, "assert-all-close"]], "assert_same_type_and_shape": [[2196, "assert-same-type-and-shape"]], "check_unsupported_device": [[2197, "check-unsupported-device"]], "check_unsupported_device_and_dtype": [[2198, "check-unsupported-device-and-dtype"]], "check_unsupported_dtype": [[2199, "check-unsupported-dtype"]], "test_unsupported_function": [[2200, "test-unsupported-function"]], "value_test": [[2201, "value-test"]], "Available frameworks": [[2202, "module-ivy_tests.test_ivy.helpers.available_frameworks"]], "available_frameworks": [[2203, "available-frameworks"]], "ground_truth": [[2204, "ground-truth"]], "Function testing": [[2205, "module-ivy_tests.test_ivy.helpers.function_testing"]], "args_to_container": [[2206, "args-to-container"]], "as_cont": [[2207, "as-cont"]], "as_lists": [[2208, "as-lists"]], "convtrue": [[2209, "convtrue"]], "create_args_kwargs": [[2210, "create-args-kwargs"]], "empty_func": [[2211, "empty-func"]], "flatten_and_to_np": [[2213, "flatten-and-to-np"]], "flatten_fw_and_to_np": [[2214, "flatten-fw-and-to-np"]], "framework_comparator": [[2215, "framework-comparator"]], "get_frontend_ret": [[2216, "get-frontend-ret"]], "get_ret_and_flattened_np_array": [[2217, "get-ret-and-flattened-np-array"]], "gradient_incompatible_function": [[2218, "gradient-incompatible-function"]], "gradient_test": [[2219, "gradient-test"]], "gradient_unsupported_dtypes": [[2220, "gradient-unsupported-dtypes"]], "kwargs_to_args_n_kwargs": [[2221, "kwargs-to-args-n-kwargs"]], "make_json_pickable": [[2222, "make-json-pickable"]], "test_frontend_function": [[2223, "test-frontend-function"]], "test_frontend_method": [[2224, "test-frontend-method"]], "test_function": [[2225, "test-function"]], "test_method": [[2226, "test-method"]], "var_fn": [[2227, "var-fn"]], "Globals": [[2228, "module-ivy_tests.test_ivy.helpers.globals"]], "InterruptedTest": [[2229, "interruptedtest"]], "TestData": [[2230, "testdata"]], "remove_all_current_framework": [[2231, "remove-all-current-framework"]], "setup_api_test": [[2232, "setup-api-test"]], "setup_frontend_test": [[2233, "setup-frontend-test"]], "teardown_api_test": [[2234, "teardown-api-test"]], "teardown_frontend_test": [[2235, "teardown-frontend-test"]], "Hypothesis helpers": [[2236, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers"]], "Array helpers": [[2237, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers"]], "array_and_broadcastable_shape": [[2238, "array-and-broadcastable-shape"]], "array_bools": [[2239, "array-bools"]], "array_indices_axis": [[2240, "array-indices-axis"]], "array_values": [[2241, "array-values"]], "arrays_and_axes": [[2242, "arrays-and-axes"]], "arrays_for_pooling": [[2243, "arrays-for-pooling"]], "dtype_and_values": [[2245, "dtype-and-values"]], "dtype_values_axis": [[2246, "dtype-values-axis"]], "list_of_length": [[2247, "list-of-length"]], "lists": [[2248, "lists"]], "mutually_broadcastable_shapes": [[2249, "mutually-broadcastable-shapes"]], "Dtype helpers": [[2251, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers"]], "array_dtypes": [[2252, "array-dtypes"]], "get_castable_dtype": [[2253, "get-castable-dtype"]], "get_dtypes": [[2254, "get-dtypes"]], "General helpers": [[2255, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers"]], "apply_safety_factor": [[2256, "apply-safety-factor"]], "embedding_helper": [[2257, "embedding-helper"]], "get_axis": [[2258, "get-axis"]], "get_bounds": [[2259, "get-bounds"]], "get_mean_std": [[2260, "get-mean-std"]], "get_shape": [[2261, "get-shape"]], "matrix_is_stable": [[2262, "matrix-is-stable"]], "reshape_shapes": [[2263, "reshape-shapes"]], "subsets": [[2264, "subsets"]], "x_and_filters": [[2265, "x-and-filters"]], "Number helpers": [[2266, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers"]], "floats": [[2267, "floats"]], "ints": [[2268, "ints"]], "number": [[2269, "number"]], "Structs": [[2270, "module-ivy_tests.test_ivy.helpers.structs"]], "FrontendMethodData": [[2271, "frontendmethoddata"]], "Test parameter flags": [[2272, "module-ivy_tests.test_ivy.helpers.test_parameter_flags"]], "FrontendFunctionTestFlags": [[2273, "frontendfunctiontestflags"]], "FrontendMethodTestFlags": [[2274, "frontendmethodtestflags"]], "FunctionTestFlags": [[2275, "functiontestflags"]], "MethodTestFlags": [[2276, "methodtestflags"]], "build_flag": [[2277, "build-flag"]], "frontend_function_flags": [[2278, "frontend-function-flags"]], "frontend_method_flags": [[2279, "frontend-method-flags"]], "function_flags": [[2280, "function-flags"]], "method_flags": [[2281, "method-flags"]], "Testing helpers": [[2282, "module-ivy_tests.test_ivy.helpers.testing_helpers"]], "handle_frontend_method": [[2283, "handle-frontend-method"]], "handle_frontend_test": [[2284, "handle-frontend-test"]], "handle_method": [[2285, "handle-method"]], "handle_test": [[2286, "handle-test"]], "num_positional_args": [[2287, "num-positional-args"]], "num_positional_args_method": [[2288, "num-positional-args-method"]], "Verbosity": [[2290, "module-ivy.verbosity"]], "cprint": [[2291, "cprint"]]}, "indexentries": {"ivy._version": [[0, "module-ivy._version"]], "module": [[0, "module-ivy._version"], [1, "module-ivy.assertions"], [23, "module-ivy.backend_handler"], [51, "module-ivy.array.array"], [52, "module-ivy.array.activations"], [54, "module-ivy.array.array"], [56, "module-ivy.array.conversions"], [61, "module-ivy.array.creation"], [63, "module-ivy.array.data_type"], [65, "module-ivy.array.device"], [67, "module-ivy.array.elementwise"], [70, "module-ivy.array.general"], [72, "module-ivy.array.gradients"], [74, "module-ivy.array.image"], [76, "module-ivy.array.layers"], [78, "module-ivy.array.linear_algebra"], [80, "module-ivy.array.losses"], [82, "module-ivy.array.manipulation"], [84, "module-ivy.array.norms"], [86, "module-ivy.array.random"], [88, "module-ivy.array.searching"], [90, "module-ivy.array.set"], [92, "module-ivy.array.sorting"], [94, "module-ivy.array.statistical"], [96, "module-ivy.array.utility"], [98, "module-ivy.array.wrapping"], [100, "module-ivy.container.container"], [101, "module-ivy.container.activations"], [103, "module-ivy.container.base"], [105, "module-ivy.container.container"], [107, "module-ivy.container.conversions"], [109, "module-ivy.container.creation"], [111, "module-ivy.container.data_type"], [113, "module-ivy.container.device"], [115, "module-ivy.container.elementwise"], [118, "module-ivy.container.general"], [120, "module-ivy.container.gradients"], [122, "module-ivy.container.image"], [124, "module-ivy.container.layers"], [126, "module-ivy.container.linear_algebra"], [128, "module-ivy.container.losses"], [130, "module-ivy.container.manipulation"], [132, "module-ivy.container.norms"], [134, "module-ivy.container.random"], [136, "module-ivy.container.searching"], [138, "module-ivy.container.set"], [140, "module-ivy.container.sorting"], [142, "module-ivy.container.statistical"], [144, "module-ivy.container.utility"], [146, "module-ivy.container.wrapping"], [188, "module-ivy.func_wrapper"], [205, "module-ivy.functional.ivy.activations"], [249, "module-ivy.functional.ivy.constants"], [250, "module-ivy.functional.ivy.control_flow_ops"], [255, "module-ivy.functional.ivy.creation"], [341, "module-ivy.functional.ivy.data_type"], [446, "module-ivy.functional.ivy.device"], [481, "module-ivy.functional.ivy.elementwise"], [802, "module-ivy.functional.ivy.experimental"], [805, "module-ivy.functional.ivy.experimental.activations"], [878, "module-ivy.functional.ivy.experimental.compilation"], [880, "module-ivy.functional.ivy.experimental.constants"], [896, "module-ivy.functional.ivy.experimental.creation"], [905, "module-ivy.functional.ivy.experimental.data_type"], [912, "module-ivy.functional.ivy.experimental.device"], [953, "module-ivy.functional.ivy.experimental.elementwise"], [1055, "module-ivy.functional.ivy.experimental.general"], [1062, "module-ivy.functional.ivy.experimental.gradients"], [1149, "module-ivy.functional.ivy.experimental.layers"], [1176, "module-ivy.functional.ivy.experimental.linear_algebra"], [1193, "module-ivy.functional.ivy.experimental.losses"], [1200, "module-ivy.functional.ivy.experimental.manipulation"], [1249, "module-ivy.functional.ivy.experimental.meta"], [1284, "module-ivy.functional.ivy.experimental.nest"], [1290, "module-ivy.functional.ivy.experimental.norms"], [1315, "module-ivy.functional.ivy.experimental.random"], [1331, "module-ivy.functional.ivy.experimental.searching"], [1332, "module-ivy.functional.ivy.experimental.set"], [1343, "module-ivy.functional.ivy.experimental.sorting"], [1346, "module-ivy.functional.ivy.experimental.sparse_array"], [1353, "module-ivy.functional.ivy.experimental.statistical"], [1391, "module-ivy.functional.ivy.experimental.utility"], [1417, "module-ivy.functional.ivy.general"], [1612, "module-ivy.functional.ivy.gradients"], [1650, "module-ivy.functional.ivy.layers"], [1714, "module-ivy.functional.ivy.linear_algebra"], [1854, "module-ivy.functional.ivy.losses"], [1870, "module-ivy.functional.ivy.manipulation"], [1951, "module-ivy.functional.ivy.meta"], [1955, "module-ivy.functional.ivy.nest"], [1975, "module-ivy.functional.ivy.norms"], [1980, "module-ivy.functional.ivy.random"], [2007, "module-ivy.functional.ivy.searching"], [2033, "module-ivy.functional.ivy.set"], [2054, "module-ivy.functional.ivy.sorting"], [2070, "module-ivy.functional.ivy.statistical"], [2116, "module-ivy.functional.ivy.utility"], [2131, "module-ivy.inspection"], [2134, "module-ivy.nested_array.nested_array"], [2148, "module-ivy.stateful"], [2149, "module-ivy.stateful.activations"], [2152, "module-ivy.stateful.converters"], [2157, "module-ivy.stateful.helpers"], [2159, "module-ivy.stateful.initializers"], [2169, "module-ivy.stateful.layers"], [2181, "module-ivy.stateful.module"], [2183, "module-ivy.stateful.norms"], [2185, "module-ivy.stateful.optimizers"], [2191, "module-ivy.stateful.sequential"], [2194, "module-ivy_tests.test_ivy.helpers.assertions"], [2202, "module-ivy_tests.test_ivy.helpers.available_frameworks"], [2205, "module-ivy_tests.test_ivy.helpers.function_testing"], [2228, "module-ivy_tests.test_ivy.helpers.globals"], [2236, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers"], [2237, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers"], [2251, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers"], [2255, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers"], [2266, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers"], [2270, "module-ivy_tests.test_ivy.helpers.structs"], [2272, "module-ivy_tests.test_ivy.helpers.test_parameter_flags"], [2282, "module-ivy_tests.test_ivy.helpers.testing_helpers"], [2290, "module-ivy.verbosity"]], "check_all() (in module ivy.assertions)": [[1, "ivy.assertions.check_all"], [2, "ivy.assertions.check_all"]], "check_all_or_any_fn() (in module ivy.assertions)": [[1, "ivy.assertions.check_all_or_any_fn"], [3, "ivy.assertions.check_all_or_any_fn"]], "check_any() (in module ivy.assertions)": [[1, "ivy.assertions.check_any"], [4, "ivy.assertions.check_any"]], "check_dimensions() (in module ivy.assertions)": [[1, "ivy.assertions.check_dimensions"], [5, "ivy.assertions.check_dimensions"]], "check_elem_in_list() (in module ivy.assertions)": [[1, "ivy.assertions.check_elem_in_list"], [6, "ivy.assertions.check_elem_in_list"]], "check_equal() (in module ivy.assertions)": [[1, "ivy.assertions.check_equal"], [7, "ivy.assertions.check_equal"]], "check_exists() (in module ivy.assertions)": [[1, "ivy.assertions.check_exists"], [8, "ivy.assertions.check_exists"]], "check_false() (in module ivy.assertions)": [[1, "ivy.assertions.check_false"], [9, "ivy.assertions.check_false"]], "check_fill_value_and_dtype_are_compatible() (in module ivy.assertions)": [[1, "ivy.assertions.check_fill_value_and_dtype_are_compatible"], [10, "ivy.assertions.check_fill_value_and_dtype_are_compatible"]], "check_gather_input_valid() (in module ivy.assertions)": [[1, "ivy.assertions.check_gather_input_valid"], [11, "ivy.assertions.check_gather_input_valid"]], "check_gather_nd_input_valid() (in module ivy.assertions)": [[1, "ivy.assertions.check_gather_nd_input_valid"], [12, "ivy.assertions.check_gather_nd_input_valid"]], "check_greater() (in module ivy.assertions)": [[1, "ivy.assertions.check_greater"], [13, "ivy.assertions.check_greater"]], "check_inplace_sizes_valid() (in module ivy.assertions)": [[1, "ivy.assertions.check_inplace_sizes_valid"], [14, "ivy.assertions.check_inplace_sizes_valid"]], "check_isinstance() (in module ivy.assertions)": [[1, "ivy.assertions.check_isinstance"], [15, "ivy.assertions.check_isinstance"]], "check_kernel_padding_size() (in module ivy.assertions)": [[1, "ivy.assertions.check_kernel_padding_size"], [16, "ivy.assertions.check_kernel_padding_size"]], "check_less() (in module ivy.assertions)": [[1, "ivy.assertions.check_less"], [17, "ivy.assertions.check_less"]], "check_one_way_broadcastable() (in module ivy.assertions)": [[1, "ivy.assertions.check_one_way_broadcastable"], [18, "ivy.assertions.check_one_way_broadcastable"]], "check_same_dtype() (in module ivy.assertions)": [[1, "ivy.assertions.check_same_dtype"], [19, "ivy.assertions.check_same_dtype"]], "check_shape() (in module ivy.assertions)": [[1, "ivy.assertions.check_shape"], [20, "ivy.assertions.check_shape"]], "check_shapes_broadcastable() (in module ivy.assertions)": [[1, "ivy.assertions.check_shapes_broadcastable"], [21, "ivy.assertions.check_shapes_broadcastable"]], "check_true() (in module ivy.assertions)": [[1, "ivy.assertions.check_true"], [22, "ivy.assertions.check_true"]], "ivy.assertions": [[1, "module-ivy.assertions"]], "contextmanager (class in ivy.backend_handler)": [[23, "ivy.backend_handler.ContextManager"], [24, "ivy.backend_handler.ContextManager"]], "__init__() (ivy.backend_handler.contextmanager method)": [[23, "ivy.backend_handler.ContextManager.__init__"], [24, "ivy.backend_handler.ContextManager.__init__"]], "choose_random_backend() (in module ivy.backend_handler)": [[23, "ivy.backend_handler.choose_random_backend"], [25, "ivy.backend_handler.choose_random_backend"]], "clear_backend_stack() (in module ivy.backend_handler)": [[23, "ivy.backend_handler.clear_backend_stack"], [26, "ivy.backend_handler.clear_backend_stack"]], "convert_from_numpy_to_target_backend() (in module ivy.backend_handler)": [[23, "ivy.backend_handler.convert_from_numpy_to_target_backend"], [27, "ivy.backend_handler.convert_from_numpy_to_target_backend"]], "convert_from_source_backend_to_numpy() (in module ivy.backend_handler)": [[23, "ivy.backend_handler.convert_from_source_backend_to_numpy"], [28, "ivy.backend_handler.convert_from_source_backend_to_numpy"]], "current_backend() (in module ivy.backend_handler)": [[23, "ivy.backend_handler.current_backend"], [29, "ivy.backend_handler.current_backend"]], "fn_name_from_version_specific_fn_name() (in module ivy.backend_handler)": [[23, "ivy.backend_handler.fn_name_from_version_specific_fn_name"], [30, "ivy.backend_handler.fn_name_from_version_specific_fn_name"]], "get_backend() (in module ivy.backend_handler)": [[23, "ivy.backend_handler.get_backend"], [31, "ivy.backend_handler.get_backend"]], "ivy.backend_handler": [[23, "module-ivy.backend_handler"]], "set_backend() (in module ivy.backend_handler)": [[23, "ivy.backend_handler.set_backend"], [32, "ivy.backend_handler.set_backend"]], "set_backend_to_specific_version() (in module ivy.backend_handler)": [[23, "ivy.backend_handler.set_backend_to_specific_version"], [33, "ivy.backend_handler.set_backend_to_specific_version"]], "set_jax_backend() (in module ivy.backend_handler)": [[23, "ivy.backend_handler.set_jax_backend"], [34, "ivy.backend_handler.set_jax_backend"]], "set_numpy_backend() (in module ivy.backend_handler)": [[23, "ivy.backend_handler.set_numpy_backend"], [35, "ivy.backend_handler.set_numpy_backend"]], "set_tensorflow_backend() (in module ivy.backend_handler)": [[23, "ivy.backend_handler.set_tensorflow_backend"], [36, "ivy.backend_handler.set_tensorflow_backend"]], "set_torch_backend() (in module ivy.backend_handler)": [[23, "ivy.backend_handler.set_torch_backend"], [37, "ivy.backend_handler.set_torch_backend"]], "unset_backend() (in module ivy.backend_handler)": [[23, "ivy.backend_handler.unset_backend"], [38, "ivy.backend_handler.unset_backend"]], "array (class in ivy.array.array)": [[51, "ivy.array.array.Array"], [54, "ivy.array.array.Array"], [55, "ivy.array.array.Array"]], "t (ivy.array.array.array property)": [[51, "ivy.array.array.Array.T"], [54, "ivy.array.array.Array.T"], [55, "ivy.array.array.Array.T"]], "__abs__() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.__abs__"], [54, "ivy.array.array.Array.__abs__"], [55, "ivy.array.array.Array.__abs__"]], "__add__() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.__add__"], [54, "ivy.array.array.Array.__add__"], [55, "ivy.array.array.Array.__add__"]], "__eq__() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.__eq__"], [54, "ivy.array.array.Array.__eq__"], [55, "ivy.array.array.Array.__eq__"]], "__ge__() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.__ge__"], [54, "ivy.array.array.Array.__ge__"], [55, "ivy.array.array.Array.__ge__"]], "__gt__() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.__gt__"], [54, "ivy.array.array.Array.__gt__"], [55, "ivy.array.array.Array.__gt__"]], "__init__() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.__init__"], [54, "ivy.array.array.Array.__init__"], [55, "ivy.array.array.Array.__init__"]], "__le__() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.__le__"], [54, "ivy.array.array.Array.__le__"], [55, "ivy.array.array.Array.__le__"]], "__lt__() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.__lt__"], [54, "ivy.array.array.Array.__lt__"], [55, "ivy.array.array.Array.__lt__"]], "__ne__() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.__ne__"], [54, "ivy.array.array.Array.__ne__"], [55, "ivy.array.array.Array.__ne__"]], "__pow__() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.__pow__"], [54, "ivy.array.array.Array.__pow__"], [55, "ivy.array.array.Array.__pow__"]], "__radd__() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.__radd__"], [54, "ivy.array.array.Array.__radd__"], [55, "ivy.array.array.Array.__radd__"]], "__rrshift__() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.__rrshift__"], [54, "ivy.array.array.Array.__rrshift__"], [55, "ivy.array.array.Array.__rrshift__"]], "__rshift__() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.__rshift__"], [54, "ivy.array.array.Array.__rshift__"], [55, "ivy.array.array.Array.__rshift__"]], "__rsub__() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.__rsub__"], [54, "ivy.array.array.Array.__rsub__"], [55, "ivy.array.array.Array.__rsub__"]], "__sub__() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.__sub__"], [54, "ivy.array.array.Array.__sub__"], [55, "ivy.array.array.Array.__sub__"]], "__truediv__() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.__truediv__"], [54, "ivy.array.array.Array.__truediv__"], [55, "ivy.array.array.Array.__truediv__"]], "__xor__() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.__xor__"], [54, "ivy.array.array.Array.__xor__"], [55, "ivy.array.array.Array.__xor__"]], "arange() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.arange"], [54, "ivy.array.array.Array.arange"], [55, "ivy.array.array.Array.arange"]], "arg_info() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.arg_info"], [54, "ivy.array.array.Array.arg_info"], [55, "ivy.array.array.Array.arg_info"]], "arg_names() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.arg_names"], [54, "ivy.array.array.Array.arg_names"], [55, "ivy.array.array.Array.arg_names"]], "args_to_ivy() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.args_to_ivy"], [54, "ivy.array.array.Array.args_to_ivy"], [55, "ivy.array.array.Array.args_to_ivy"]], "args_to_native() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.args_to_native"], [54, "ivy.array.array.Array.args_to_native"], [55, "ivy.array.array.Array.args_to_native"]], "array() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.array"], [54, "ivy.array.array.Array.array"], [55, "ivy.array.array.Array.array"]], "as_ivy_dev() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.as_ivy_dev"], [54, "ivy.array.array.Array.as_ivy_dev"], [55, "ivy.array.array.Array.as_ivy_dev"]], "as_ivy_dtype() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.as_ivy_dtype"], [54, "ivy.array.array.Array.as_ivy_dtype"], [55, "ivy.array.array.Array.as_ivy_dtype"]], "as_native_dev() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.as_native_dev"], [54, "ivy.array.array.Array.as_native_dev"], [55, "ivy.array.array.Array.as_native_dev"]], "as_native_dtype() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.as_native_dtype"], [54, "ivy.array.array.Array.as_native_dtype"], [55, "ivy.array.array.Array.as_native_dtype"]], "asarray_handle_nestable() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.asarray_handle_nestable"], [54, "ivy.array.array.Array.asarray_handle_nestable"], [55, "ivy.array.array.Array.asarray_handle_nestable"]], "asarray_infer_device() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.asarray_infer_device"], [54, "ivy.array.array.Array.asarray_infer_device"], [55, "ivy.array.array.Array.asarray_infer_device"]], "asarray_to_native_arrays_and_back() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.asarray_to_native_arrays_and_back"], [54, "ivy.array.array.Array.asarray_to_native_arrays_and_back"], [55, "ivy.array.array.Array.asarray_to_native_arrays_and_back"]], "cache_fn() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.cache_fn"], [54, "ivy.array.array.Array.cache_fn"], [55, "ivy.array.array.Array.cache_fn"]], "check_float() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.check_float"], [54, "ivy.array.array.Array.check_float"], [55, "ivy.array.array.Array.check_float"]], "clear_mem_on_dev() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.clear_mem_on_dev"], [54, "ivy.array.array.Array.clear_mem_on_dev"], [55, "ivy.array.array.Array.clear_mem_on_dev"]], "closest_valid_dtype() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.closest_valid_dtype"], [54, "ivy.array.array.Array.closest_valid_dtype"], [55, "ivy.array.array.Array.closest_valid_dtype"]], "container_types() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.container_types"], [54, "ivy.array.array.Array.container_types"], [55, "ivy.array.array.Array.container_types"]], "conv() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.conv"], [54, "ivy.array.array.Array.conv"], [55, "ivy.array.array.Array.conv"]], "conv_general_dilated() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.conv_general_dilated"], [54, "ivy.array.array.Array.conv_general_dilated"], [55, "ivy.array.array.Array.conv_general_dilated"]], "conv_general_transpose() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.conv_general_transpose"], [54, "ivy.array.array.Array.conv_general_transpose"], [55, "ivy.array.array.Array.conv_general_transpose"]], "current_backend() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.current_backend"], [54, "ivy.array.array.Array.current_backend"], [55, "ivy.array.array.Array.current_backend"]], "current_backend_str() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.current_backend_str"], [54, "ivy.array.array.Array.current_backend_str"], [55, "ivy.array.array.Array.current_backend_str"]], "data (ivy.array.array.array property)": [[51, "ivy.array.array.Array.data"], [54, "ivy.array.array.Array.data"], [55, "ivy.array.array.Array.data"]], "default_complex_dtype() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.default_complex_dtype"], [54, "ivy.array.array.Array.default_complex_dtype"], [55, "ivy.array.array.Array.default_complex_dtype"]], "default_device() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.default_device"], [54, "ivy.array.array.Array.default_device"], [55, "ivy.array.array.Array.default_device"]], "default_dtype() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.default_dtype"], [54, "ivy.array.array.Array.default_dtype"], [55, "ivy.array.array.Array.default_dtype"]], "default_float_dtype() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.default_float_dtype"], [54, "ivy.array.array.Array.default_float_dtype"], [55, "ivy.array.array.Array.default_float_dtype"]], "default_int_dtype() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.default_int_dtype"], [54, "ivy.array.array.Array.default_int_dtype"], [55, "ivy.array.array.Array.default_int_dtype"]], "default_uint_dtype() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.default_uint_dtype"], [54, "ivy.array.array.Array.default_uint_dtype"], [55, "ivy.array.array.Array.default_uint_dtype"]], "deserialize() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.deserialize"], [54, "ivy.array.array.Array.deserialize"], [55, "ivy.array.array.Array.deserialize"]], "dev_util() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.dev_util"], [54, "ivy.array.array.Array.dev_util"], [55, "ivy.array.array.Array.dev_util"]], "device (ivy.array.array.array property)": [[51, "ivy.array.array.Array.device"], [54, "ivy.array.array.Array.device"], [55, "ivy.array.array.Array.device"]], "dtype (ivy.array.array.array property)": [[51, "ivy.array.array.Array.dtype"], [54, "ivy.array.array.Array.dtype"], [55, "ivy.array.array.Array.dtype"]], "dtype_bits() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.dtype_bits"], [54, "ivy.array.array.Array.dtype_bits"], [55, "ivy.array.array.Array.dtype_bits"]], "dynamic_backend (ivy.array.array.array property)": [[51, "ivy.array.array.Array.dynamic_backend"], [54, "ivy.array.array.Array.dynamic_backend"], [55, "ivy.array.array.Array.dynamic_backend"]], "empty() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.empty"], [54, "ivy.array.array.Array.empty"], [55, "ivy.array.array.Array.empty"]], "execute_with_gradients() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.execute_with_gradients"], [54, "ivy.array.array.Array.execute_with_gradients"], [55, "ivy.array.array.Array.execute_with_gradients"]], "eye() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.eye"], [54, "ivy.array.array.Array.eye"], [55, "ivy.array.array.Array.eye"]], "full() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.full"], [54, "ivy.array.array.Array.full"], [55, "ivy.array.array.Array.full"]], "function_supported_devices() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.function_supported_devices"], [54, "ivy.array.array.Array.function_supported_devices"], [55, "ivy.array.array.Array.function_supported_devices"]], "function_supported_devices_and_dtypes() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.function_supported_devices_and_dtypes"], [54, "ivy.array.array.Array.function_supported_devices_and_dtypes"], [55, "ivy.array.array.Array.function_supported_devices_and_dtypes"]], "function_supported_dtypes() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.function_supported_dtypes"], [54, "ivy.array.array.Array.function_supported_dtypes"], [55, "ivy.array.array.Array.function_supported_dtypes"]], "function_unsupported_devices() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.function_unsupported_devices"], [54, "ivy.array.array.Array.function_unsupported_devices"], [55, "ivy.array.array.Array.function_unsupported_devices"]], "function_unsupported_devices_and_dtypes() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.function_unsupported_devices_and_dtypes"], [54, "ivy.array.array.Array.function_unsupported_devices_and_dtypes"], [55, "ivy.array.array.Array.function_unsupported_devices_and_dtypes"]], "function_unsupported_dtypes() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.function_unsupported_dtypes"], [54, "ivy.array.array.Array.function_unsupported_dtypes"], [55, "ivy.array.array.Array.function_unsupported_dtypes"]], "get() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.get"], [54, "ivy.array.array.Array.get"], [55, "ivy.array.array.Array.get"]], "get_all_arrays_in_memory() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.get_all_arrays_in_memory"], [54, "ivy.array.array.Array.get_all_arrays_in_memory"], [55, "ivy.array.array.Array.get_all_arrays_in_memory"]], "get_all_ivy_arrays_on_dev() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.get_all_ivy_arrays_on_dev"], [54, "ivy.array.array.Array.get_all_ivy_arrays_on_dev"], [55, "ivy.array.array.Array.get_all_ivy_arrays_on_dev"]], "get_array_mode() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.get_array_mode"], [54, "ivy.array.array.Array.get_array_mode"], [55, "ivy.array.array.Array.get_array_mode"]], "get_exception_trace_mode() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.get_exception_trace_mode"], [54, "ivy.array.array.Array.get_exception_trace_mode"], [55, "ivy.array.array.Array.get_exception_trace_mode"]], "get_item() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.get_item"], [54, "ivy.array.array.Array.get_item"], [55, "ivy.array.array.Array.get_item"]], "get_min_base() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.get_min_base"], [54, "ivy.array.array.Array.get_min_base"], [55, "ivy.array.array.Array.get_min_base"]], "get_min_denominator() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.get_min_denominator"], [54, "ivy.array.array.Array.get_min_denominator"], [55, "ivy.array.array.Array.get_min_denominator"]], "get_nestable_mode() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.get_nestable_mode"], [54, "ivy.array.array.Array.get_nestable_mode"], [55, "ivy.array.array.Array.get_nestable_mode"]], "get_queue_timeout() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.get_queue_timeout"], [54, "ivy.array.array.Array.get_queue_timeout"], [55, "ivy.array.array.Array.get_queue_timeout"]], "get_referrers_recursive() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.get_referrers_recursive"], [54, "ivy.array.array.Array.get_referrers_recursive"], [55, "ivy.array.array.Array.get_referrers_recursive"]], "get_show_func_wrapper_trace_mode() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.get_show_func_wrapper_trace_mode"], [54, "ivy.array.array.Array.get_show_func_wrapper_trace_mode"], [55, "ivy.array.array.Array.get_show_func_wrapper_trace_mode"]], "get_tmp_dir() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.get_tmp_dir"], [54, "ivy.array.array.Array.get_tmp_dir"], [55, "ivy.array.array.Array.get_tmp_dir"]], "gpu_is_available() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.gpu_is_available"], [54, "ivy.array.array.Array.gpu_is_available"], [55, "ivy.array.array.Array.gpu_is_available"]], "grad() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.grad"], [54, "ivy.array.array.Array.grad"], [55, "ivy.array.array.Array.grad"]], "handle_array_function() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.handle_array_function"], [54, "ivy.array.array.Array.handle_array_function"], [55, "ivy.array.array.Array.handle_array_function"]], "handle_array_like_without_promotion() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.handle_array_like_without_promotion"], [54, "ivy.array.array.Array.handle_array_like_without_promotion"], [55, "ivy.array.array.Array.handle_array_like_without_promotion"]], "handle_exceptions() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.handle_exceptions"], [54, "ivy.array.array.Array.handle_exceptions"], [55, "ivy.array.array.Array.handle_exceptions"]], "handle_nestable() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.handle_nestable"], [54, "ivy.array.array.Array.handle_nestable"], [55, "ivy.array.array.Array.handle_nestable"]], "handle_out_argument() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.handle_out_argument"], [54, "ivy.array.array.Array.handle_out_argument"], [55, "ivy.array.array.Array.handle_out_argument"]], "infer_default_dtype() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.infer_default_dtype"], [54, "ivy.array.array.Array.infer_default_dtype"], [55, "ivy.array.array.Array.infer_default_dtype"]], "infer_device() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.infer_device"], [54, "ivy.array.array.Array.infer_device"], [55, "ivy.array.array.Array.infer_device"]], "infer_dtype() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.infer_dtype"], [54, "ivy.array.array.Array.infer_dtype"], [55, "ivy.array.array.Array.infer_dtype"]], "inplace_arrays_supported() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.inplace_arrays_supported"], [54, "ivy.array.array.Array.inplace_arrays_supported"], [55, "ivy.array.array.Array.inplace_arrays_supported"]], "inplace_variables_supported() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.inplace_variables_supported"], [54, "ivy.array.array.Array.inplace_variables_supported"], [55, "ivy.array.array.Array.inplace_variables_supported"]], "inputs_to_ivy_arrays() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.inputs_to_ivy_arrays"], [54, "ivy.array.array.Array.inputs_to_ivy_arrays"], [55, "ivy.array.array.Array.inputs_to_ivy_arrays"]], "inputs_to_native_arrays() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.inputs_to_native_arrays"], [54, "ivy.array.array.Array.inputs_to_native_arrays"], [55, "ivy.array.array.Array.inputs_to_native_arrays"]], "integer_arrays_to_float() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.integer_arrays_to_float"], [54, "ivy.array.array.Array.integer_arrays_to_float"], [55, "ivy.array.array.Array.integer_arrays_to_float"]], "invalid_dtype() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.invalid_dtype"], [54, "ivy.array.array.Array.invalid_dtype"], [55, "ivy.array.array.Array.invalid_dtype"]], "is_complex_dtype() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.is_complex_dtype"], [54, "ivy.array.array.Array.is_complex_dtype"], [55, "ivy.array.array.Array.is_complex_dtype"]], "isscalar() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.isscalar"], [54, "ivy.array.array.Array.isscalar"], [55, "ivy.array.array.Array.isscalar"]], "ivy.array.array": [[51, "module-ivy.array.array"], [54, "module-ivy.array.array"]], "jac() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.jac"], [54, "ivy.array.array.Array.jac"], [55, "ivy.array.array.Array.jac"]], "mt (ivy.array.array.array property)": [[51, "ivy.array.array.Array.mT"], [54, "ivy.array.array.Array.mT"], [55, "ivy.array.array.Array.mT"]], "match_kwargs() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.match_kwargs"], [54, "ivy.array.array.Array.match_kwargs"], [55, "ivy.array.array.Array.match_kwargs"]], "multiprocessing() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.multiprocessing"], [54, "ivy.array.array.Array.multiprocessing"], [55, "ivy.array.array.Array.multiprocessing"]], "ndim (ivy.array.array.array property)": [[51, "ivy.array.array.Array.ndim"], [54, "ivy.array.array.Array.ndim"], [55, "ivy.array.array.Array.ndim"]], "normalize_axis_tuple() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.normalize_axis_tuple"], [54, "ivy.array.array.Array.normalize_axis_tuple"], [55, "ivy.array.array.Array.normalize_axis_tuple"]], "num_arrays_in_memory() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.num_arrays_in_memory"], [54, "ivy.array.array.Array.num_arrays_in_memory"], [55, "ivy.array.array.Array.num_arrays_in_memory"]], "num_cpu_cores() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.num_cpu_cores"], [54, "ivy.array.array.Array.num_cpu_cores"], [55, "ivy.array.array.Array.num_cpu_cores"]], "num_gpus() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.num_gpus"], [54, "ivy.array.array.Array.num_gpus"], [55, "ivy.array.array.Array.num_gpus"]], "num_ivy_arrays_on_dev() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.num_ivy_arrays_on_dev"], [54, "ivy.array.array.Array.num_ivy_arrays_on_dev"], [55, "ivy.array.array.Array.num_ivy_arrays_on_dev"]], "ones() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.ones"], [54, "ivy.array.array.Array.ones"], [55, "ivy.array.array.Array.ones"]], "outputs_to_ivy_arrays() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.outputs_to_ivy_arrays"], [54, "ivy.array.array.Array.outputs_to_ivy_arrays"], [55, "ivy.array.array.Array.outputs_to_ivy_arrays"]], "percent_used_mem_on_dev() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.percent_used_mem_on_dev"], [54, "ivy.array.array.Array.percent_used_mem_on_dev"], [55, "ivy.array.array.Array.percent_used_mem_on_dev"]], "print_all_arrays_in_memory() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.print_all_arrays_in_memory"], [54, "ivy.array.array.Array.print_all_arrays_in_memory"], [55, "ivy.array.array.Array.print_all_arrays_in_memory"]], "print_all_ivy_arrays_on_dev() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.print_all_ivy_arrays_on_dev"], [54, "ivy.array.array.Array.print_all_ivy_arrays_on_dev"], [55, "ivy.array.array.Array.print_all_ivy_arrays_on_dev"]], "promote_types() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.promote_types"], [54, "ivy.array.array.Array.promote_types"], [55, "ivy.array.array.Array.promote_types"]], "promote_types_of_inputs() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.promote_types_of_inputs"], [54, "ivy.array.array.Array.promote_types_of_inputs"], [55, "ivy.array.array.Array.promote_types_of_inputs"]], "seed() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.seed"], [54, "ivy.array.array.Array.seed"], [55, "ivy.array.array.Array.seed"]], "set_array_mode() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.set_array_mode"], [54, "ivy.array.array.Array.set_array_mode"], [55, "ivy.array.array.Array.set_array_mode"]], "set_default_complex_dtype() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.set_default_complex_dtype"], [54, "ivy.array.array.Array.set_default_complex_dtype"], [55, "ivy.array.array.Array.set_default_complex_dtype"]], "set_default_device() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.set_default_device"], [54, "ivy.array.array.Array.set_default_device"], [55, "ivy.array.array.Array.set_default_device"]], "set_default_dtype() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.set_default_dtype"], [54, "ivy.array.array.Array.set_default_dtype"], [55, "ivy.array.array.Array.set_default_dtype"]], "set_default_float_dtype() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.set_default_float_dtype"], [54, "ivy.array.array.Array.set_default_float_dtype"], [55, "ivy.array.array.Array.set_default_float_dtype"]], "set_default_int_dtype() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.set_default_int_dtype"], [54, "ivy.array.array.Array.set_default_int_dtype"], [55, "ivy.array.array.Array.set_default_int_dtype"]], "set_default_uint_dtype() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.set_default_uint_dtype"], [54, "ivy.array.array.Array.set_default_uint_dtype"], [55, "ivy.array.array.Array.set_default_uint_dtype"]], "set_exception_trace_mode() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.set_exception_trace_mode"], [54, "ivy.array.array.Array.set_exception_trace_mode"], [55, "ivy.array.array.Array.set_exception_trace_mode"]], "set_min_base() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.set_min_base"], [54, "ivy.array.array.Array.set_min_base"], [55, "ivy.array.array.Array.set_min_base"]], "set_min_denominator() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.set_min_denominator"], [54, "ivy.array.array.Array.set_min_denominator"], [55, "ivy.array.array.Array.set_min_denominator"]], "set_nestable_mode() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.set_nestable_mode"], [54, "ivy.array.array.Array.set_nestable_mode"], [55, "ivy.array.array.Array.set_nestable_mode"]], "set_queue_timeout() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.set_queue_timeout"], [54, "ivy.array.array.Array.set_queue_timeout"], [55, "ivy.array.array.Array.set_queue_timeout"]], "set_shape_array_mode() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.set_shape_array_mode"], [54, "ivy.array.array.Array.set_shape_array_mode"], [55, "ivy.array.array.Array.set_shape_array_mode"]], "set_show_func_wrapper_trace_mode() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.set_show_func_wrapper_trace_mode"], [54, "ivy.array.array.Array.set_show_func_wrapper_trace_mode"], [55, "ivy.array.array.Array.set_show_func_wrapper_trace_mode"]], "set_split_factor() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.set_split_factor"], [54, "ivy.array.array.Array.set_split_factor"], [55, "ivy.array.array.Array.set_split_factor"]], "set_tmp_dir() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.set_tmp_dir"], [54, "ivy.array.array.Array.set_tmp_dir"], [55, "ivy.array.array.Array.set_tmp_dir"]], "set_with_grads() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.set_with_grads"], [54, "ivy.array.array.Array.set_with_grads"], [55, "ivy.array.array.Array.set_with_grads"]], "shape (ivy.array.array.array property)": [[51, "ivy.array.array.Array.shape"], [54, "ivy.array.array.Array.shape"], [55, "ivy.array.array.Array.shape"]], "shape_array_mode() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.shape_array_mode"], [54, "ivy.array.array.Array.shape_array_mode"], [55, "ivy.array.array.Array.shape_array_mode"]], "size (ivy.array.array.array property)": [[51, "ivy.array.array.Array.size"], [54, "ivy.array.array.Array.size"], [55, "ivy.array.array.Array.size"]], "split_factor() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.split_factor"], [54, "ivy.array.array.Array.split_factor"], [55, "ivy.array.array.Array.split_factor"]], "split_func_call() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.split_func_call"], [54, "ivy.array.array.Array.split_func_call"], [55, "ivy.array.array.Array.split_func_call"]], "to_ivy() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.to_ivy"], [54, "ivy.array.array.Array.to_ivy"], [55, "ivy.array.array.Array.to_ivy"]], "to_ivy_shape() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.to_ivy_shape"], [54, "ivy.array.array.Array.to_ivy_shape"], [55, "ivy.array.array.Array.to_ivy_shape"]], "to_native() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.to_native"], [54, "ivy.array.array.Array.to_native"], [55, "ivy.array.array.Array.to_native"]], "to_native_arrays_and_back() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.to_native_arrays_and_back"], [54, "ivy.array.array.Array.to_native_arrays_and_back"], [55, "ivy.array.array.Array.to_native_arrays_and_back"]], "to_native_shape() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.to_native_shape"], [54, "ivy.array.array.Array.to_native_shape"], [55, "ivy.array.array.Array.to_native_shape"]], "total_mem_on_dev() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.total_mem_on_dev"], [54, "ivy.array.array.Array.total_mem_on_dev"], [55, "ivy.array.array.Array.total_mem_on_dev"]], "tpu_is_available() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.tpu_is_available"], [54, "ivy.array.array.Array.tpu_is_available"], [55, "ivy.array.array.Array.tpu_is_available"]], "try_else_none() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.try_else_none"], [54, "ivy.array.array.Array.try_else_none"], [55, "ivy.array.array.Array.try_else_none"]], "type_promote_arrays() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.type_promote_arrays"], [54, "ivy.array.array.Array.type_promote_arrays"], [55, "ivy.array.array.Array.type_promote_arrays"]], "unset_array_mode() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.unset_array_mode"], [54, "ivy.array.array.Array.unset_array_mode"], [55, "ivy.array.array.Array.unset_array_mode"]], "unset_default_complex_dtype() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.unset_default_complex_dtype"], [54, "ivy.array.array.Array.unset_default_complex_dtype"], [55, "ivy.array.array.Array.unset_default_complex_dtype"]], "unset_default_device() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.unset_default_device"], [54, "ivy.array.array.Array.unset_default_device"], [55, "ivy.array.array.Array.unset_default_device"]], "unset_default_dtype() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.unset_default_dtype"], [54, "ivy.array.array.Array.unset_default_dtype"], [55, "ivy.array.array.Array.unset_default_dtype"]], "unset_default_float_dtype() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.unset_default_float_dtype"], [54, "ivy.array.array.Array.unset_default_float_dtype"], [55, "ivy.array.array.Array.unset_default_float_dtype"]], "unset_default_int_dtype() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.unset_default_int_dtype"], [54, "ivy.array.array.Array.unset_default_int_dtype"], [55, "ivy.array.array.Array.unset_default_int_dtype"]], "unset_default_uint_dtype() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.unset_default_uint_dtype"], [54, "ivy.array.array.Array.unset_default_uint_dtype"], [55, "ivy.array.array.Array.unset_default_uint_dtype"]], "unset_exception_trace_mode() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.unset_exception_trace_mode"], [54, "ivy.array.array.Array.unset_exception_trace_mode"], [55, "ivy.array.array.Array.unset_exception_trace_mode"]], "unset_nestable_mode() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.unset_nestable_mode"], [54, "ivy.array.array.Array.unset_nestable_mode"], [55, "ivy.array.array.Array.unset_nestable_mode"]], "unset_queue_timeout() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.unset_queue_timeout"], [54, "ivy.array.array.Array.unset_queue_timeout"], [55, "ivy.array.array.Array.unset_queue_timeout"]], "unset_shape_array_mode() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.unset_shape_array_mode"], [54, "ivy.array.array.Array.unset_shape_array_mode"], [55, "ivy.array.array.Array.unset_shape_array_mode"]], "unset_show_func_wrapper_trace_mode() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.unset_show_func_wrapper_trace_mode"], [54, "ivy.array.array.Array.unset_show_func_wrapper_trace_mode"], [55, "ivy.array.array.Array.unset_show_func_wrapper_trace_mode"]], "unset_with_grads() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.unset_with_grads"], [54, "ivy.array.array.Array.unset_with_grads"], [55, "ivy.array.array.Array.unset_with_grads"]], "used_mem_on_dev() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.used_mem_on_dev"], [54, "ivy.array.array.Array.used_mem_on_dev"], [55, "ivy.array.array.Array.used_mem_on_dev"]], "valid_dtype() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.valid_dtype"], [54, "ivy.array.array.Array.valid_dtype"], [55, "ivy.array.array.Array.valid_dtype"]], "value_and_grad() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.value_and_grad"], [54, "ivy.array.array.Array.value_and_grad"], [55, "ivy.array.array.Array.value_and_grad"]], "vmap() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.vmap"], [54, "ivy.array.array.Array.vmap"], [55, "ivy.array.array.Array.vmap"]], "with_grads() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.with_grads"], [54, "ivy.array.array.Array.with_grads"], [55, "ivy.array.array.Array.with_grads"]], "wraps() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.wraps"], [54, "ivy.array.array.Array.wraps"], [55, "ivy.array.array.Array.wraps"]], "zeros() (ivy.array.array.array method)": [[51, "ivy.array.array.Array.zeros"], [54, "ivy.array.array.Array.zeros"], [55, "ivy.array.array.Array.zeros"]], "arraywithactivations (class in ivy.array.activations)": [[52, "ivy.array.activations.ArrayWithActivations"], [53, "ivy.array.activations.ArrayWithActivations"]], "gelu() (ivy.array.activations.arraywithactivations method)": [[52, "ivy.array.activations.ArrayWithActivations.gelu"], [53, "ivy.array.activations.ArrayWithActivations.gelu"]], "ivy.array.activations": [[52, "module-ivy.array.activations"]], "leaky_relu() (ivy.array.activations.arraywithactivations method)": [[52, "ivy.array.activations.ArrayWithActivations.leaky_relu"], [53, "ivy.array.activations.ArrayWithActivations.leaky_relu"]], "log_softmax() (ivy.array.activations.arraywithactivations method)": [[52, "ivy.array.activations.ArrayWithActivations.log_softmax"], [53, "ivy.array.activations.ArrayWithActivations.log_softmax"]], "mish() (ivy.array.activations.arraywithactivations method)": [[52, "ivy.array.activations.ArrayWithActivations.mish"], [53, "ivy.array.activations.ArrayWithActivations.mish"]], "relu() (ivy.array.activations.arraywithactivations method)": [[52, "ivy.array.activations.ArrayWithActivations.relu"], [53, "ivy.array.activations.ArrayWithActivations.relu"]], "sigmoid() (ivy.array.activations.arraywithactivations method)": [[52, "ivy.array.activations.ArrayWithActivations.sigmoid"], [53, "ivy.array.activations.ArrayWithActivations.sigmoid"]], "softmax() (ivy.array.activations.arraywithactivations method)": [[52, "ivy.array.activations.ArrayWithActivations.softmax"], [53, "ivy.array.activations.ArrayWithActivations.softmax"]], "softplus() (ivy.array.activations.arraywithactivations method)": [[52, "ivy.array.activations.ArrayWithActivations.softplus"], [53, "ivy.array.activations.ArrayWithActivations.softplus"]], "args_to_ivy() (in module ivy.array.conversions)": [[56, "ivy.array.conversions.args_to_ivy"], [57, "ivy.array.conversions.args_to_ivy"]], "args_to_native() (in module ivy.array.conversions)": [[56, "ivy.array.conversions.args_to_native"], [58, "ivy.array.conversions.args_to_native"]], "ivy.array.conversions": [[56, "module-ivy.array.conversions"]], "to_ivy() (in module ivy.array.conversions)": [[56, "ivy.array.conversions.to_ivy"], [59, "ivy.array.conversions.to_ivy"]], "to_native() (in module ivy.array.conversions)": [[56, "ivy.array.conversions.to_native"], [60, "ivy.array.conversions.to_native"]], "arraywithcreation (class in ivy.array.creation)": [[61, "ivy.array.creation.ArrayWithCreation"], [62, "ivy.array.creation.ArrayWithCreation"]], "asarray() (ivy.array.creation.arraywithcreation method)": [[61, "ivy.array.creation.ArrayWithCreation.asarray"], [62, "ivy.array.creation.ArrayWithCreation.asarray"]], "copy_array() (ivy.array.creation.arraywithcreation method)": [[61, "ivy.array.creation.ArrayWithCreation.copy_array"], [62, "ivy.array.creation.ArrayWithCreation.copy_array"]], "empty_like() (ivy.array.creation.arraywithcreation method)": [[61, "ivy.array.creation.ArrayWithCreation.empty_like"], [62, "ivy.array.creation.ArrayWithCreation.empty_like"]], "from_dlpack() (ivy.array.creation.arraywithcreation method)": [[61, "ivy.array.creation.ArrayWithCreation.from_dlpack"], [62, "ivy.array.creation.ArrayWithCreation.from_dlpack"]], "full_like() (ivy.array.creation.arraywithcreation method)": [[61, "ivy.array.creation.ArrayWithCreation.full_like"], [62, "ivy.array.creation.ArrayWithCreation.full_like"]], "ivy.array.creation": [[61, "module-ivy.array.creation"]], "linspace() (ivy.array.creation.arraywithcreation method)": [[61, "ivy.array.creation.ArrayWithCreation.linspace"], [62, "ivy.array.creation.ArrayWithCreation.linspace"]], "logspace() (ivy.array.creation.arraywithcreation method)": [[61, "ivy.array.creation.ArrayWithCreation.logspace"], [62, "ivy.array.creation.ArrayWithCreation.logspace"]], "meshgrid() (ivy.array.creation.arraywithcreation method)": [[61, "ivy.array.creation.ArrayWithCreation.meshgrid"], [62, "ivy.array.creation.ArrayWithCreation.meshgrid"]], "native_array() (ivy.array.creation.arraywithcreation method)": [[61, "ivy.array.creation.ArrayWithCreation.native_array"], [62, "ivy.array.creation.ArrayWithCreation.native_array"]], "one_hot() (ivy.array.creation.arraywithcreation method)": [[61, "ivy.array.creation.ArrayWithCreation.one_hot"], [62, "ivy.array.creation.ArrayWithCreation.one_hot"]], "ones_like() (ivy.array.creation.arraywithcreation method)": [[61, "ivy.array.creation.ArrayWithCreation.ones_like"], [62, "ivy.array.creation.ArrayWithCreation.ones_like"]], "tril() (ivy.array.creation.arraywithcreation method)": [[61, "ivy.array.creation.ArrayWithCreation.tril"], [62, "ivy.array.creation.ArrayWithCreation.tril"]], "triu() (ivy.array.creation.arraywithcreation method)": [[61, "ivy.array.creation.ArrayWithCreation.triu"], [62, "ivy.array.creation.ArrayWithCreation.triu"]], "zeros_like() (ivy.array.creation.arraywithcreation method)": [[61, "ivy.array.creation.ArrayWithCreation.zeros_like"], [62, "ivy.array.creation.ArrayWithCreation.zeros_like"]], "arraywithdatatypes (class in ivy.array.data_type)": [[63, "ivy.array.data_type.ArrayWithDataTypes"], [64, "ivy.array.data_type.ArrayWithDataTypes"]], "astype() (ivy.array.data_type.arraywithdatatypes method)": [[63, "ivy.array.data_type.ArrayWithDataTypes.astype"], [64, "ivy.array.data_type.ArrayWithDataTypes.astype"]], "broadcast_arrays() (ivy.array.data_type.arraywithdatatypes method)": [[63, "ivy.array.data_type.ArrayWithDataTypes.broadcast_arrays"], [64, "ivy.array.data_type.ArrayWithDataTypes.broadcast_arrays"]], "broadcast_to() (ivy.array.data_type.arraywithdatatypes method)": [[63, "ivy.array.data_type.ArrayWithDataTypes.broadcast_to"], [64, "ivy.array.data_type.ArrayWithDataTypes.broadcast_to"]], "can_cast() (ivy.array.data_type.arraywithdatatypes method)": [[63, "ivy.array.data_type.ArrayWithDataTypes.can_cast"], [64, "ivy.array.data_type.ArrayWithDataTypes.can_cast"]], "dtype() (ivy.array.data_type.arraywithdatatypes method)": [[63, "ivy.array.data_type.ArrayWithDataTypes.dtype"], [64, "ivy.array.data_type.ArrayWithDataTypes.dtype"]], "finfo() (ivy.array.data_type.arraywithdatatypes method)": [[63, "ivy.array.data_type.ArrayWithDataTypes.finfo"], [64, "ivy.array.data_type.ArrayWithDataTypes.finfo"]], "iinfo() (ivy.array.data_type.arraywithdatatypes method)": [[63, "ivy.array.data_type.ArrayWithDataTypes.iinfo"], [64, "ivy.array.data_type.ArrayWithDataTypes.iinfo"]], "is_bool_dtype() (ivy.array.data_type.arraywithdatatypes method)": [[63, "ivy.array.data_type.ArrayWithDataTypes.is_bool_dtype"], [64, "ivy.array.data_type.ArrayWithDataTypes.is_bool_dtype"]], "is_float_dtype() (ivy.array.data_type.arraywithdatatypes method)": [[63, "ivy.array.data_type.ArrayWithDataTypes.is_float_dtype"], [64, "ivy.array.data_type.ArrayWithDataTypes.is_float_dtype"]], "is_int_dtype() (ivy.array.data_type.arraywithdatatypes method)": [[63, "ivy.array.data_type.ArrayWithDataTypes.is_int_dtype"], [64, "ivy.array.data_type.ArrayWithDataTypes.is_int_dtype"]], "is_uint_dtype() (ivy.array.data_type.arraywithdatatypes method)": [[63, "ivy.array.data_type.ArrayWithDataTypes.is_uint_dtype"], [64, "ivy.array.data_type.ArrayWithDataTypes.is_uint_dtype"]], "ivy.array.data_type": [[63, "module-ivy.array.data_type"]], "result_type() (ivy.array.data_type.arraywithdatatypes method)": [[63, "ivy.array.data_type.ArrayWithDataTypes.result_type"], [64, "ivy.array.data_type.ArrayWithDataTypes.result_type"]], "arraywithdevice (class in ivy.array.device)": [[65, "ivy.array.device.ArrayWithDevice"], [66, "ivy.array.device.ArrayWithDevice"]], "dev() (ivy.array.device.arraywithdevice method)": [[65, "ivy.array.device.ArrayWithDevice.dev"], [66, "ivy.array.device.ArrayWithDevice.dev"]], "ivy.array.device": [[65, "module-ivy.array.device"]], "to_device() (ivy.array.device.arraywithdevice method)": [[65, "ivy.array.device.ArrayWithDevice.to_device"], [66, "ivy.array.device.ArrayWithDevice.to_device"]], "arraywithelementwise (class in ivy.array.elementwise)": [[67, "ivy.array.elementwise.ArrayWithElementwise"], [68, "ivy.array.elementwise.ArrayWithElementwise"]], "abs() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.abs"], [68, "ivy.array.elementwise.ArrayWithElementwise.abs"]], "acos() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.acos"], [68, "ivy.array.elementwise.ArrayWithElementwise.acos"]], "acosh() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.acosh"], [68, "ivy.array.elementwise.ArrayWithElementwise.acosh"]], "add() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.add"], [68, "ivy.array.elementwise.ArrayWithElementwise.add"]], "asin() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.asin"], [68, "ivy.array.elementwise.ArrayWithElementwise.asin"]], "asinh() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.asinh"], [68, "ivy.array.elementwise.ArrayWithElementwise.asinh"]], "atan() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.atan"], [68, "ivy.array.elementwise.ArrayWithElementwise.atan"]], "atan2() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.atan2"], [68, "ivy.array.elementwise.ArrayWithElementwise.atan2"]], "atanh() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.atanh"], [68, "ivy.array.elementwise.ArrayWithElementwise.atanh"]], "bitwise_and() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.bitwise_and"], [68, "ivy.array.elementwise.ArrayWithElementwise.bitwise_and"]], "bitwise_invert() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.bitwise_invert"], [68, "ivy.array.elementwise.ArrayWithElementwise.bitwise_invert"]], "bitwise_left_shift() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.bitwise_left_shift"], [68, "ivy.array.elementwise.ArrayWithElementwise.bitwise_left_shift"]], "bitwise_or() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.bitwise_or"], [68, "ivy.array.elementwise.ArrayWithElementwise.bitwise_or"]], "bitwise_right_shift() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.bitwise_right_shift"], [68, "ivy.array.elementwise.ArrayWithElementwise.bitwise_right_shift"]], "bitwise_xor() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.bitwise_xor"], [68, "ivy.array.elementwise.ArrayWithElementwise.bitwise_xor"]], "ceil() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.ceil"], [68, "ivy.array.elementwise.ArrayWithElementwise.ceil"]], "cos() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.cos"], [68, "ivy.array.elementwise.ArrayWithElementwise.cos"]], "cosh() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.cosh"], [68, "ivy.array.elementwise.ArrayWithElementwise.cosh"]], "deg2rad() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.deg2rad"], [68, "ivy.array.elementwise.ArrayWithElementwise.deg2rad"]], "divide() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.divide"], [68, "ivy.array.elementwise.ArrayWithElementwise.divide"]], "equal() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.equal"], [68, "ivy.array.elementwise.ArrayWithElementwise.equal"]], "erf() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.erf"], [68, "ivy.array.elementwise.ArrayWithElementwise.erf"]], "exp() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.exp"], [68, "ivy.array.elementwise.ArrayWithElementwise.exp"]], "expm1() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.expm1"], [68, "ivy.array.elementwise.ArrayWithElementwise.expm1"]], "floor() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.floor"], [68, "ivy.array.elementwise.ArrayWithElementwise.floor"]], "floor_divide() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.floor_divide"], [68, "ivy.array.elementwise.ArrayWithElementwise.floor_divide"]], "greater() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.greater"], [68, "ivy.array.elementwise.ArrayWithElementwise.greater"]], "greater_equal() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.greater_equal"], [68, "ivy.array.elementwise.ArrayWithElementwise.greater_equal"]], "isfinite() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.isfinite"], [68, "ivy.array.elementwise.ArrayWithElementwise.isfinite"]], "isinf() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.isinf"], [68, "ivy.array.elementwise.ArrayWithElementwise.isinf"]], "isnan() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.isnan"], [68, "ivy.array.elementwise.ArrayWithElementwise.isnan"]], "isreal() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.isreal"], [68, "ivy.array.elementwise.ArrayWithElementwise.isreal"]], "ivy.array.elementwise": [[67, "module-ivy.array.elementwise"]], "less() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.less"], [68, "ivy.array.elementwise.ArrayWithElementwise.less"]], "less_equal() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.less_equal"], [68, "ivy.array.elementwise.ArrayWithElementwise.less_equal"]], "log() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.log"], [68, "ivy.array.elementwise.ArrayWithElementwise.log"]], "log10() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.log10"], [68, "ivy.array.elementwise.ArrayWithElementwise.log10"]], "log1p() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.log1p"], [68, "ivy.array.elementwise.ArrayWithElementwise.log1p"]], "log2() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.log2"], [68, "ivy.array.elementwise.ArrayWithElementwise.log2"]], "logaddexp() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.logaddexp"], [68, "ivy.array.elementwise.ArrayWithElementwise.logaddexp"]], "logical_and() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.logical_and"], [68, "ivy.array.elementwise.ArrayWithElementwise.logical_and"]], "logical_not() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.logical_not"], [68, "ivy.array.elementwise.ArrayWithElementwise.logical_not"]], "logical_or() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.logical_or"], [68, "ivy.array.elementwise.ArrayWithElementwise.logical_or"]], "logical_xor() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.logical_xor"], [68, "ivy.array.elementwise.ArrayWithElementwise.logical_xor"]], "maximum() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.maximum"], [68, "ivy.array.elementwise.ArrayWithElementwise.maximum"]], "minimum() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.minimum"], [68, "ivy.array.elementwise.ArrayWithElementwise.minimum"]], "multiply() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.multiply"], [68, "ivy.array.elementwise.ArrayWithElementwise.multiply"]], "negative() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.negative"], [68, "ivy.array.elementwise.ArrayWithElementwise.negative"]], "not_equal() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.not_equal"], [68, "ivy.array.elementwise.ArrayWithElementwise.not_equal"]], "positive() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.positive"], [68, "ivy.array.elementwise.ArrayWithElementwise.positive"]], "pow() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.pow"], [68, "ivy.array.elementwise.ArrayWithElementwise.pow"]], "rad2deg() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.rad2deg"], [68, "ivy.array.elementwise.ArrayWithElementwise.rad2deg"]], "reciprocal() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.reciprocal"], [68, "ivy.array.elementwise.ArrayWithElementwise.reciprocal"]], "remainder() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.remainder"], [68, "ivy.array.elementwise.ArrayWithElementwise.remainder"]], "round() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.round"], [68, "ivy.array.elementwise.ArrayWithElementwise.round"]], "sign() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.sign"], [68, "ivy.array.elementwise.ArrayWithElementwise.sign"]], "sin() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.sin"], [68, "ivy.array.elementwise.ArrayWithElementwise.sin"]], "sinh() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.sinh"], [68, "ivy.array.elementwise.ArrayWithElementwise.sinh"]], "sqrt() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.sqrt"], [68, "ivy.array.elementwise.ArrayWithElementwise.sqrt"]], "square() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.square"], [68, "ivy.array.elementwise.ArrayWithElementwise.square"]], "subtract() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.subtract"], [68, "ivy.array.elementwise.ArrayWithElementwise.subtract"]], "tan() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.tan"], [68, "ivy.array.elementwise.ArrayWithElementwise.tan"]], "tanh() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.tanh"], [68, "ivy.array.elementwise.ArrayWithElementwise.tanh"]], "trunc() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.trunc"], [68, "ivy.array.elementwise.ArrayWithElementwise.trunc"]], "trunc_divide() (ivy.array.elementwise.arraywithelementwise method)": [[67, "ivy.array.elementwise.ArrayWithElementwise.trunc_divide"], [68, "ivy.array.elementwise.ArrayWithElementwise.trunc_divide"]], "arraywithactivationsexperimental (class in ivy.array.experimental)": [[69, "ivy.array.experimental.ArrayWithActivationsExperimental"]], "arraywithconversionsexperimental (class in ivy.array.experimental)": [[69, "ivy.array.experimental.ArrayWithConversionsExperimental"]], "arraywithcreationexperimental (class in ivy.array.experimental)": [[69, "ivy.array.experimental.ArrayWithCreationExperimental"]], "arraywithdata_typeexperimental (class in ivy.array.experimental)": [[69, "ivy.array.experimental.ArrayWithData_typeExperimental"]], "arraywithdeviceexperimental (class in ivy.array.experimental)": [[69, "ivy.array.experimental.ArrayWithDeviceExperimental"]], "arraywithelementwiseexperimental (class in ivy.array.experimental)": [[69, "ivy.array.experimental.ArrayWithElementWiseExperimental"]], "arraywithgeneralexperimental (class in ivy.array.experimental)": [[69, "ivy.array.experimental.ArrayWithGeneralExperimental"]], "arraywithgradientsexperimental (class in ivy.array.experimental)": [[69, "ivy.array.experimental.ArrayWithGradientsExperimental"]], "arraywithimageexperimental (class in ivy.array.experimental)": [[69, "ivy.array.experimental.ArrayWithImageExperimental"]], "arraywithlayersexperimental (class in ivy.array.experimental)": [[69, "ivy.array.experimental.ArrayWithLayersExperimental"]], "arraywithlinearalgebraexperimental (class in ivy.array.experimental)": [[69, "ivy.array.experimental.ArrayWithLinearAlgebraExperimental"]], "arraywithlossesexperimental (class in ivy.array.experimental)": [[69, "ivy.array.experimental.ArrayWithLossesExperimental"]], "arraywithmanipulationexperimental (class in ivy.array.experimental)": [[69, "ivy.array.experimental.ArrayWithManipulationExperimental"]], "arraywithnormsexperimental (class in ivy.array.experimental)": [[69, "ivy.array.experimental.ArrayWithNormsExperimental"]], "arraywithrandomexperimental (class in ivy.array.experimental)": [[69, "ivy.array.experimental.ArrayWithRandomExperimental"]], "arraywithsearchingexperimental (class in ivy.array.experimental)": [[69, "ivy.array.experimental.ArrayWithSearchingExperimental"]], "arraywithsetexperimental (class in ivy.array.experimental)": [[69, "ivy.array.experimental.ArrayWithSetExperimental"]], "arraywithsortingexperimental (class in ivy.array.experimental)": [[69, "ivy.array.experimental.ArrayWithSortingExperimental"]], "arraywithstatisticalexperimental (class in ivy.array.experimental)": [[69, "ivy.array.experimental.ArrayWithStatisticalExperimental"]], "arraywithutilityexperimental (class in ivy.array.experimental)": [[69, "ivy.array.experimental.ArrayWithUtilityExperimental"]], "adjoint() (ivy.array.experimental.arraywithlinearalgebraexperimental method)": [[69, "ivy.array.experimental.ArrayWithLinearAlgebraExperimental.adjoint"]], "allclose() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[69, "ivy.array.experimental.ArrayWithElementWiseExperimental.allclose"]], "angle() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[69, "ivy.array.experimental.ArrayWithElementWiseExperimental.angle"]], "atleast_1d() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[69, "ivy.array.experimental.ArrayWithManipulationExperimental.atleast_1d"]], "atleast_2d() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[69, "ivy.array.experimental.ArrayWithManipulationExperimental.atleast_2d"]], "atleast_3d() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[69, "ivy.array.experimental.ArrayWithManipulationExperimental.atleast_3d"]], "avg_pool1d() (ivy.array.experimental.arraywithlayersexperimental method)": [[69, "ivy.array.experimental.ArrayWithLayersExperimental.avg_pool1d"]], "avg_pool2d() (ivy.array.experimental.arraywithlayersexperimental method)": [[69, "ivy.array.experimental.ArrayWithLayersExperimental.avg_pool2d"]], "avg_pool3d() (ivy.array.experimental.arraywithlayersexperimental method)": [[69, "ivy.array.experimental.ArrayWithLayersExperimental.avg_pool3d"]], "bernoulli() (ivy.array.experimental.arraywithrandomexperimental method)": [[69, "ivy.array.experimental.ArrayWithRandomExperimental.bernoulli"]], "beta() (ivy.array.experimental.arraywithrandomexperimental method)": [[69, "ivy.array.experimental.ArrayWithRandomExperimental.beta"]], "binarizer() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[69, "ivy.array.experimental.ArrayWithElementWiseExperimental.binarizer"]], "copysign() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[69, "ivy.array.experimental.ArrayWithElementWiseExperimental.copysign"]], "corrcoef() (ivy.array.experimental.arraywithstatisticalexperimental method)": [[69, "ivy.array.experimental.ArrayWithStatisticalExperimental.corrcoef"]], "count_nonzero() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[69, "ivy.array.experimental.ArrayWithElementWiseExperimental.count_nonzero"]], "dct() (ivy.array.experimental.arraywithlayersexperimental method)": [[69, "ivy.array.experimental.ArrayWithLayersExperimental.dct"]], "dft() (ivy.array.experimental.arraywithlayersexperimental method)": [[69, "ivy.array.experimental.ArrayWithLayersExperimental.dft"]], "diagflat() (ivy.array.experimental.arraywithlinearalgebraexperimental method)": [[69, "ivy.array.experimental.ArrayWithLinearAlgebraExperimental.diagflat"]], "diff() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[69, "ivy.array.experimental.ArrayWithElementWiseExperimental.diff"]], "dirichlet() (ivy.array.experimental.arraywithrandomexperimental method)": [[69, "ivy.array.experimental.ArrayWithRandomExperimental.dirichlet"]], "dsplit() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[69, "ivy.array.experimental.ArrayWithManipulationExperimental.dsplit"]], "dstack() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[69, "ivy.array.experimental.ArrayWithManipulationExperimental.dstack"]], "eig() (ivy.array.experimental.arraywithlinearalgebraexperimental method)": [[69, "ivy.array.experimental.ArrayWithLinearAlgebraExperimental.eig"]], "eigvals() (ivy.array.experimental.arraywithlinearalgebraexperimental method)": [[69, "ivy.array.experimental.ArrayWithLinearAlgebraExperimental.eigvals"]], "embedding() (ivy.array.experimental.arraywithlayersexperimental method)": [[69, "ivy.array.experimental.ArrayWithLayersExperimental.embedding"]], "exp2() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[69, "ivy.array.experimental.ArrayWithElementWiseExperimental.exp2"]], "expand() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[69, "ivy.array.experimental.ArrayWithManipulationExperimental.expand"]], "eye_like() (ivy.array.experimental.arraywithcreationexperimental method)": [[69, "ivy.array.experimental.ArrayWithCreationExperimental.eye_like"]], "fft() (ivy.array.experimental.arraywithlayersexperimental method)": [[69, "ivy.array.experimental.ArrayWithLayersExperimental.fft"]], "fix() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[69, "ivy.array.experimental.ArrayWithElementWiseExperimental.fix"]], "flatten() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[69, "ivy.array.experimental.ArrayWithManipulationExperimental.flatten"]], "fliplr() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[69, "ivy.array.experimental.ArrayWithManipulationExperimental.fliplr"]], "flipud() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[69, "ivy.array.experimental.ArrayWithManipulationExperimental.flipud"]], "float_power() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[69, "ivy.array.experimental.ArrayWithElementWiseExperimental.float_power"]], "fmax() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[69, "ivy.array.experimental.ArrayWithElementWiseExperimental.fmax"]], "fmin() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[69, "ivy.array.experimental.ArrayWithElementWiseExperimental.fmin"]], "fmod() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[69, "ivy.array.experimental.ArrayWithElementWiseExperimental.fmod"]], "gamma() (ivy.array.experimental.arraywithrandomexperimental method)": [[69, "ivy.array.experimental.ArrayWithRandomExperimental.gamma"]], "gcd() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[69, "ivy.array.experimental.ArrayWithElementWiseExperimental.gcd"]], "gradient() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[69, "ivy.array.experimental.ArrayWithElementWiseExperimental.gradient"]], "heaviside() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[69, "ivy.array.experimental.ArrayWithManipulationExperimental.heaviside"]], "hsplit() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[69, "ivy.array.experimental.ArrayWithManipulationExperimental.hsplit"]], "hstack() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[69, "ivy.array.experimental.ArrayWithManipulationExperimental.hstack"]], "hypot() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[69, "ivy.array.experimental.ArrayWithElementWiseExperimental.hypot"]], "i0() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[69, "ivy.array.experimental.ArrayWithManipulationExperimental.i0"]], "ifft() (ivy.array.experimental.arraywithlayersexperimental method)": [[69, "ivy.array.experimental.ArrayWithLayersExperimental.ifft"]], "imag() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[69, "ivy.array.experimental.ArrayWithElementWiseExperimental.imag"]], "instance_norm() (ivy.array.experimental.arraywithnormsexperimental method)": [[69, "ivy.array.experimental.ArrayWithNormsExperimental.instance_norm"]], "interpolate() (ivy.array.experimental.arraywithlayersexperimental method)": [[69, "ivy.array.experimental.ArrayWithLayersExperimental.interpolate"]], "isclose() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[69, "ivy.array.experimental.ArrayWithElementWiseExperimental.isclose"]], "isin() (ivy.array.experimental.arraywithgeneralexperimental method)": [[69, "ivy.array.experimental.ArrayWithGeneralExperimental.isin"]], "kron() (ivy.array.experimental.arraywithlinearalgebraexperimental method)": [[69, "ivy.array.experimental.ArrayWithLinearAlgebraExperimental.kron"]], "l2_normalize() (ivy.array.experimental.arraywithnormsexperimental method)": [[69, "ivy.array.experimental.ArrayWithNormsExperimental.l2_normalize"]], "lcm() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[69, "ivy.array.experimental.ArrayWithElementWiseExperimental.lcm"]], "lexsort() (ivy.array.experimental.arraywithsortingexperimental method)": [[69, "ivy.array.experimental.ArrayWithSortingExperimental.lexsort"]], "logaddexp2() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[69, "ivy.array.experimental.ArrayWithElementWiseExperimental.logaddexp2"]], "logit() (ivy.array.experimental.arraywithactivationsexperimental method)": [[69, "ivy.array.experimental.ArrayWithActivationsExperimental.logit"]], "lp_normalize() (ivy.array.experimental.arraywithnormsexperimental method)": [[69, "ivy.array.experimental.ArrayWithNormsExperimental.lp_normalize"]], "matrix_exp() (ivy.array.experimental.arraywithlinearalgebraexperimental method)": [[69, "ivy.array.experimental.ArrayWithLinearAlgebraExperimental.matrix_exp"]], "max_pool1d() (ivy.array.experimental.arraywithlayersexperimental method)": [[69, "ivy.array.experimental.ArrayWithLayersExperimental.max_pool1d"]], "max_pool2d() (ivy.array.experimental.arraywithlayersexperimental method)": [[69, "ivy.array.experimental.ArrayWithLayersExperimental.max_pool2d"]], "max_pool3d() (ivy.array.experimental.arraywithlayersexperimental method)": [[69, "ivy.array.experimental.ArrayWithLayersExperimental.max_pool3d"]], "median() (ivy.array.experimental.arraywithstatisticalexperimental method)": [[69, "ivy.array.experimental.ArrayWithStatisticalExperimental.median"]], "moveaxis() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[69, "ivy.array.experimental.ArrayWithManipulationExperimental.moveaxis"]], "msort() (ivy.array.experimental.arraywithsortingexperimental method)": [[69, "ivy.array.experimental.ArrayWithSortingExperimental.msort"]], "nan_to_num() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[69, "ivy.array.experimental.ArrayWithElementWiseExperimental.nan_to_num"]], "nanmean() (ivy.array.experimental.arraywithstatisticalexperimental method)": [[69, "ivy.array.experimental.ArrayWithStatisticalExperimental.nanmean"]], "nanmedian() (ivy.array.experimental.arraywithstatisticalexperimental method)": [[69, "ivy.array.experimental.ArrayWithStatisticalExperimental.nanmedian"]], "nansum() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[69, "ivy.array.experimental.ArrayWithElementWiseExperimental.nansum"]], "nextafter() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[69, "ivy.array.experimental.ArrayWithElementWiseExperimental.nextafter"]], "pad() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[69, "ivy.array.experimental.ArrayWithManipulationExperimental.pad"]], "poisson() (ivy.array.experimental.arraywithrandomexperimental method)": [[69, "ivy.array.experimental.ArrayWithRandomExperimental.poisson"]], "prelu() (ivy.array.experimental.arraywithactivationsexperimental method)": [[69, "ivy.array.experimental.ArrayWithActivationsExperimental.prelu"]], "quantile() (ivy.array.experimental.arraywithstatisticalexperimental method)": [[69, "ivy.array.experimental.ArrayWithStatisticalExperimental.quantile"]], "real() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[69, "ivy.array.experimental.ArrayWithElementWiseExperimental.real"]], "rot90() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[69, "ivy.array.experimental.ArrayWithManipulationExperimental.rot90"]], "signbit() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[69, "ivy.array.experimental.ArrayWithElementWiseExperimental.signbit"]], "sinc() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[69, "ivy.array.experimental.ArrayWithElementWiseExperimental.sinc"]], "take_along_axis() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[69, "ivy.array.experimental.ArrayWithManipulationExperimental.take_along_axis"]], "thresholded_relu() (ivy.array.experimental.arraywithactivationsexperimental method)": [[69, "ivy.array.experimental.ArrayWithActivationsExperimental.thresholded_relu"]], "top_k() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[69, "ivy.array.experimental.ArrayWithManipulationExperimental.top_k"]], "trapz() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[69, "ivy.array.experimental.ArrayWithElementWiseExperimental.trapz"]], "unravel_index() (ivy.array.experimental.arraywithstatisticalexperimental method)": [[69, "ivy.array.experimental.ArrayWithStatisticalExperimental.unravel_index"]], "vsplit() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[69, "ivy.array.experimental.ArrayWithManipulationExperimental.vsplit"]], "vstack() (ivy.array.experimental.arraywithmanipulationexperimental method)": [[69, "ivy.array.experimental.ArrayWithManipulationExperimental.vstack"]], "xlogy() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[69, "ivy.array.experimental.ArrayWithElementWiseExperimental.xlogy"]], "zeta() (ivy.array.experimental.arraywithelementwiseexperimental method)": [[69, "ivy.array.experimental.ArrayWithElementWiseExperimental.zeta"]], "arraywithgeneral (class in ivy.array.general)": [[70, "ivy.array.general.ArrayWithGeneral"], [71, "ivy.array.general.ArrayWithGeneral"]], "all_equal() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.all_equal"], [71, "ivy.array.general.ArrayWithGeneral.all_equal"]], "array_equal() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.array_equal"], [71, "ivy.array.general.ArrayWithGeneral.array_equal"]], "assert_supports_inplace() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.assert_supports_inplace"], [71, "ivy.array.general.ArrayWithGeneral.assert_supports_inplace"]], "clip_matrix_norm() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.clip_matrix_norm"], [71, "ivy.array.general.ArrayWithGeneral.clip_matrix_norm"]], "clip_vector_norm() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.clip_vector_norm"], [71, "ivy.array.general.ArrayWithGeneral.clip_vector_norm"]], "default() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.default"], [71, "ivy.array.general.ArrayWithGeneral.default"]], "einops_rearrange() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.einops_rearrange"], [71, "ivy.array.general.ArrayWithGeneral.einops_rearrange"]], "einops_reduce() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.einops_reduce"], [71, "ivy.array.general.ArrayWithGeneral.einops_reduce"]], "einops_repeat() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.einops_repeat"], [71, "ivy.array.general.ArrayWithGeneral.einops_repeat"]], "exists() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.exists"], [71, "ivy.array.general.ArrayWithGeneral.exists"]], "fourier_encode() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.fourier_encode"], [71, "ivy.array.general.ArrayWithGeneral.fourier_encode"]], "gather() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.gather"], [71, "ivy.array.general.ArrayWithGeneral.gather"]], "gather_nd() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.gather_nd"], [71, "ivy.array.general.ArrayWithGeneral.gather_nd"]], "get_num_dims() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.get_num_dims"], [71, "ivy.array.general.ArrayWithGeneral.get_num_dims"]], "has_nans() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.has_nans"], [71, "ivy.array.general.ArrayWithGeneral.has_nans"]], "inplace_decrement() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.inplace_decrement"], [71, "ivy.array.general.ArrayWithGeneral.inplace_decrement"]], "inplace_increment() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.inplace_increment"], [71, "ivy.array.general.ArrayWithGeneral.inplace_increment"]], "inplace_update() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.inplace_update"], [71, "ivy.array.general.ArrayWithGeneral.inplace_update"]], "is_array() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.is_array"], [71, "ivy.array.general.ArrayWithGeneral.is_array"]], "is_ivy_array() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.is_ivy_array"], [71, "ivy.array.general.ArrayWithGeneral.is_ivy_array"]], "is_ivy_container() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.is_ivy_container"], [71, "ivy.array.general.ArrayWithGeneral.is_ivy_container"]], "is_native_array() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.is_native_array"], [71, "ivy.array.general.ArrayWithGeneral.is_native_array"]], "ivy.array.general": [[70, "module-ivy.array.general"]], "scatter_flat() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.scatter_flat"], [71, "ivy.array.general.ArrayWithGeneral.scatter_flat"]], "scatter_nd() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.scatter_nd"], [71, "ivy.array.general.ArrayWithGeneral.scatter_nd"]], "stable_divide() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.stable_divide"], [71, "ivy.array.general.ArrayWithGeneral.stable_divide"]], "stable_pow() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.stable_pow"], [71, "ivy.array.general.ArrayWithGeneral.stable_pow"]], "supports_inplace_updates() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.supports_inplace_updates"], [71, "ivy.array.general.ArrayWithGeneral.supports_inplace_updates"]], "to_list() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.to_list"], [71, "ivy.array.general.ArrayWithGeneral.to_list"]], "to_numpy() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.to_numpy"], [71, "ivy.array.general.ArrayWithGeneral.to_numpy"]], "to_scalar() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.to_scalar"], [71, "ivy.array.general.ArrayWithGeneral.to_scalar"]], "value_is_nan() (ivy.array.general.arraywithgeneral method)": [[70, "ivy.array.general.ArrayWithGeneral.value_is_nan"], [71, "ivy.array.general.ArrayWithGeneral.value_is_nan"]], "arraywithgradients (class in ivy.array.gradients)": [[72, "ivy.array.gradients.ArrayWithGradients"], [73, "ivy.array.gradients.ArrayWithGradients"]], "adam_step() (ivy.array.gradients.arraywithgradients method)": [[72, "ivy.array.gradients.ArrayWithGradients.adam_step"], [73, "ivy.array.gradients.ArrayWithGradients.adam_step"]], "adam_update() (ivy.array.gradients.arraywithgradients method)": [[72, "ivy.array.gradients.ArrayWithGradients.adam_update"], [73, "ivy.array.gradients.ArrayWithGradients.adam_update"]], "gradient_descent_update() (ivy.array.gradients.arraywithgradients method)": [[72, "ivy.array.gradients.ArrayWithGradients.gradient_descent_update"], [73, "ivy.array.gradients.ArrayWithGradients.gradient_descent_update"]], "ivy.array.gradients": [[72, "module-ivy.array.gradients"]], "lamb_update() (ivy.array.gradients.arraywithgradients method)": [[72, "ivy.array.gradients.ArrayWithGradients.lamb_update"], [73, "ivy.array.gradients.ArrayWithGradients.lamb_update"]], "lars_update() (ivy.array.gradients.arraywithgradients method)": [[72, "ivy.array.gradients.ArrayWithGradients.lars_update"], [73, "ivy.array.gradients.ArrayWithGradients.lars_update"]], "optimizer_update() (ivy.array.gradients.arraywithgradients method)": [[72, "ivy.array.gradients.ArrayWithGradients.optimizer_update"], [73, "ivy.array.gradients.ArrayWithGradients.optimizer_update"]], "stop_gradient() (ivy.array.gradients.arraywithgradients method)": [[72, "ivy.array.gradients.ArrayWithGradients.stop_gradient"], [73, "ivy.array.gradients.ArrayWithGradients.stop_gradient"]], "arraywithimage (class in ivy.array.image)": [[74, "ivy.array.image.ArrayWithImage"], [75, "ivy.array.image.ArrayWithImage"]], "ivy.array.image": [[74, "module-ivy.array.image"]], "arraywithlayers (class in ivy.array.layers)": [[76, "ivy.array.layers.ArrayWithLayers"], [77, "ivy.array.layers.ArrayWithLayers"]], "conv1d() (ivy.array.layers.arraywithlayers method)": [[76, "ivy.array.layers.ArrayWithLayers.conv1d"], [77, "ivy.array.layers.ArrayWithLayers.conv1d"]], "conv1d_transpose() (ivy.array.layers.arraywithlayers method)": [[76, "ivy.array.layers.ArrayWithLayers.conv1d_transpose"], [77, "ivy.array.layers.ArrayWithLayers.conv1d_transpose"]], "conv2d() (ivy.array.layers.arraywithlayers method)": [[76, "ivy.array.layers.ArrayWithLayers.conv2d"], [77, "ivy.array.layers.ArrayWithLayers.conv2d"]], "conv2d_transpose() (ivy.array.layers.arraywithlayers method)": [[76, "ivy.array.layers.ArrayWithLayers.conv2d_transpose"], [77, "ivy.array.layers.ArrayWithLayers.conv2d_transpose"]], "conv3d() (ivy.array.layers.arraywithlayers method)": [[76, "ivy.array.layers.ArrayWithLayers.conv3d"], [77, "ivy.array.layers.ArrayWithLayers.conv3d"]], "conv3d_transpose() (ivy.array.layers.arraywithlayers method)": [[76, "ivy.array.layers.ArrayWithLayers.conv3d_transpose"], [77, "ivy.array.layers.ArrayWithLayers.conv3d_transpose"]], "depthwise_conv2d() (ivy.array.layers.arraywithlayers method)": [[76, "ivy.array.layers.ArrayWithLayers.depthwise_conv2d"], [77, "ivy.array.layers.ArrayWithLayers.depthwise_conv2d"]], "dropout() (ivy.array.layers.arraywithlayers method)": [[76, "ivy.array.layers.ArrayWithLayers.dropout"], [77, "ivy.array.layers.ArrayWithLayers.dropout"]], "dropout1d() (ivy.array.layers.arraywithlayers method)": [[76, "ivy.array.layers.ArrayWithLayers.dropout1d"], [77, "ivy.array.layers.ArrayWithLayers.dropout1d"]], "ivy.array.layers": [[76, "module-ivy.array.layers"]], "linear() (ivy.array.layers.arraywithlayers method)": [[76, "ivy.array.layers.ArrayWithLayers.linear"], [77, "ivy.array.layers.ArrayWithLayers.linear"]], "lstm_update() (ivy.array.layers.arraywithlayers method)": [[76, "ivy.array.layers.ArrayWithLayers.lstm_update"], [77, "ivy.array.layers.ArrayWithLayers.lstm_update"]], "multi_head_attention() (ivy.array.layers.arraywithlayers method)": [[76, "ivy.array.layers.ArrayWithLayers.multi_head_attention"], [77, "ivy.array.layers.ArrayWithLayers.multi_head_attention"]], "scaled_dot_product_attention() (ivy.array.layers.arraywithlayers method)": [[76, "ivy.array.layers.ArrayWithLayers.scaled_dot_product_attention"], [77, "ivy.array.layers.ArrayWithLayers.scaled_dot_product_attention"]], "arraywithlinearalgebra (class in ivy.array.linear_algebra)": [[78, "ivy.array.linear_algebra.ArrayWithLinearAlgebra"], [79, "ivy.array.linear_algebra.ArrayWithLinearAlgebra"]], "cholesky() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[78, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.cholesky"], [79, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.cholesky"]], "cross() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[78, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.cross"], [79, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.cross"]], "det() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[78, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.det"], [79, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.det"]], "diag() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[78, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.diag"], [79, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.diag"]], "diagonal() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[78, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.diagonal"], [79, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.diagonal"]], "eig() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[78, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.eig"], [79, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.eig"]], "eigh() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[78, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.eigh"], [79, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.eigh"]], "eigvalsh() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[78, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.eigvalsh"], [79, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.eigvalsh"]], "inner() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[78, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.inner"], [79, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.inner"]], "inv() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[78, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.inv"], [79, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.inv"]], "ivy.array.linear_algebra": [[78, "module-ivy.array.linear_algebra"]], "matmul() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[78, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matmul"], [79, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matmul"]], "matrix_norm() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[78, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_norm"], [79, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_norm"]], "matrix_power() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[78, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_power"], [79, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_power"]], "matrix_rank() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[78, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_rank"], [79, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_rank"]], "matrix_transpose() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[78, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_transpose"], [79, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.matrix_transpose"]], "outer() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[78, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.outer"], [79, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.outer"]], "pinv() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[78, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.pinv"], [79, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.pinv"]], "qr() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[78, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.qr"], [79, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.qr"]], "slogdet() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[78, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.slogdet"], [79, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.slogdet"]], "solve() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[78, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.solve"], [79, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.solve"]], "svd() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[78, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.svd"], [79, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.svd"]], "svdvals() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[78, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.svdvals"], [79, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.svdvals"]], "tensordot() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[78, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.tensordot"], [79, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.tensordot"]], "tensorsolve() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[78, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.tensorsolve"], [79, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.tensorsolve"]], "trace() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[78, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.trace"], [79, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.trace"]], "vander() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[78, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vander"], [79, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vander"]], "vecdot() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[78, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vecdot"], [79, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vecdot"]], "vector_norm() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[78, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vector_norm"], [79, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vector_norm"]], "vector_to_skew_symmetric_matrix() (ivy.array.linear_algebra.arraywithlinearalgebra method)": [[78, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vector_to_skew_symmetric_matrix"], [79, "ivy.array.linear_algebra.ArrayWithLinearAlgebra.vector_to_skew_symmetric_matrix"]], "arraywithlosses (class in ivy.array.losses)": [[80, "ivy.array.losses.ArrayWithLosses"], [81, "ivy.array.losses.ArrayWithLosses"]], "binary_cross_entropy() (ivy.array.losses.arraywithlosses method)": [[80, "ivy.array.losses.ArrayWithLosses.binary_cross_entropy"], [81, "ivy.array.losses.ArrayWithLosses.binary_cross_entropy"]], "cross_entropy() (ivy.array.losses.arraywithlosses method)": [[80, "ivy.array.losses.ArrayWithLosses.cross_entropy"], [81, "ivy.array.losses.ArrayWithLosses.cross_entropy"]], "ivy.array.losses": [[80, "module-ivy.array.losses"]], "sparse_cross_entropy() (ivy.array.losses.arraywithlosses method)": [[80, "ivy.array.losses.ArrayWithLosses.sparse_cross_entropy"], [81, "ivy.array.losses.ArrayWithLosses.sparse_cross_entropy"]], "arraywithmanipulation (class in ivy.array.manipulation)": [[82, "ivy.array.manipulation.ArrayWithManipulation"], [83, "ivy.array.manipulation.ArrayWithManipulation"]], "clip() (ivy.array.manipulation.arraywithmanipulation method)": [[82, "ivy.array.manipulation.ArrayWithManipulation.clip"], [83, "ivy.array.manipulation.ArrayWithManipulation.clip"]], "concat() (ivy.array.manipulation.arraywithmanipulation method)": [[82, "ivy.array.manipulation.ArrayWithManipulation.concat"], [83, "ivy.array.manipulation.ArrayWithManipulation.concat"]], "constant_pad() (ivy.array.manipulation.arraywithmanipulation method)": [[82, "ivy.array.manipulation.ArrayWithManipulation.constant_pad"], [83, "ivy.array.manipulation.ArrayWithManipulation.constant_pad"]], "expand_dims() (ivy.array.manipulation.arraywithmanipulation method)": [[82, "ivy.array.manipulation.ArrayWithManipulation.expand_dims"], [83, "ivy.array.manipulation.ArrayWithManipulation.expand_dims"]], "flip() (ivy.array.manipulation.arraywithmanipulation method)": [[82, "ivy.array.manipulation.ArrayWithManipulation.flip"], [83, "ivy.array.manipulation.ArrayWithManipulation.flip"]], "ivy.array.manipulation": [[82, "module-ivy.array.manipulation"]], "permute_dims() (ivy.array.manipulation.arraywithmanipulation method)": [[82, "ivy.array.manipulation.ArrayWithManipulation.permute_dims"], [83, "ivy.array.manipulation.ArrayWithManipulation.permute_dims"]], "repeat() (ivy.array.manipulation.arraywithmanipulation method)": [[82, "ivy.array.manipulation.ArrayWithManipulation.repeat"], [83, "ivy.array.manipulation.ArrayWithManipulation.repeat"]], "reshape() (ivy.array.manipulation.arraywithmanipulation method)": [[82, "ivy.array.manipulation.ArrayWithManipulation.reshape"], [83, "ivy.array.manipulation.ArrayWithManipulation.reshape"]], "roll() (ivy.array.manipulation.arraywithmanipulation method)": [[82, "ivy.array.manipulation.ArrayWithManipulation.roll"], [83, "ivy.array.manipulation.ArrayWithManipulation.roll"]], "split() (ivy.array.manipulation.arraywithmanipulation method)": [[82, "ivy.array.manipulation.ArrayWithManipulation.split"], [83, "ivy.array.manipulation.ArrayWithManipulation.split"]], "squeeze() (ivy.array.manipulation.arraywithmanipulation method)": [[82, "ivy.array.manipulation.ArrayWithManipulation.squeeze"], [83, "ivy.array.manipulation.ArrayWithManipulation.squeeze"]], "stack() (ivy.array.manipulation.arraywithmanipulation method)": [[82, "ivy.array.manipulation.ArrayWithManipulation.stack"], [83, "ivy.array.manipulation.ArrayWithManipulation.stack"]], "swapaxes() (ivy.array.manipulation.arraywithmanipulation method)": [[82, "ivy.array.manipulation.ArrayWithManipulation.swapaxes"], [83, "ivy.array.manipulation.ArrayWithManipulation.swapaxes"]], "tile() (ivy.array.manipulation.arraywithmanipulation method)": [[82, "ivy.array.manipulation.ArrayWithManipulation.tile"], [83, "ivy.array.manipulation.ArrayWithManipulation.tile"]], "unstack() (ivy.array.manipulation.arraywithmanipulation method)": [[82, "ivy.array.manipulation.ArrayWithManipulation.unstack"], [83, "ivy.array.manipulation.ArrayWithManipulation.unstack"]], "zero_pad() (ivy.array.manipulation.arraywithmanipulation method)": [[82, "ivy.array.manipulation.ArrayWithManipulation.zero_pad"], [83, "ivy.array.manipulation.ArrayWithManipulation.zero_pad"]], "arraywithnorms (class in ivy.array.norms)": [[84, "ivy.array.norms.ArrayWithNorms"], [85, "ivy.array.norms.ArrayWithNorms"]], "ivy.array.norms": [[84, "module-ivy.array.norms"]], "layer_norm() (ivy.array.norms.arraywithnorms method)": [[84, "ivy.array.norms.ArrayWithNorms.layer_norm"], [85, "ivy.array.norms.ArrayWithNorms.layer_norm"]], "arraywithrandom (class in ivy.array.random)": [[86, "ivy.array.random.ArrayWithRandom"], [87, "ivy.array.random.ArrayWithRandom"]], "ivy.array.random": [[86, "module-ivy.array.random"]], "multinomial() (ivy.array.random.arraywithrandom method)": [[86, "ivy.array.random.ArrayWithRandom.multinomial"], [87, "ivy.array.random.ArrayWithRandom.multinomial"]], "randint() (ivy.array.random.arraywithrandom method)": [[86, "ivy.array.random.ArrayWithRandom.randint"], [87, "ivy.array.random.ArrayWithRandom.randint"]], "random_normal() (ivy.array.random.arraywithrandom method)": [[86, "ivy.array.random.ArrayWithRandom.random_normal"], [87, "ivy.array.random.ArrayWithRandom.random_normal"]], "random_uniform() (ivy.array.random.arraywithrandom method)": [[86, "ivy.array.random.ArrayWithRandom.random_uniform"], [87, "ivy.array.random.ArrayWithRandom.random_uniform"]], "shuffle() (ivy.array.random.arraywithrandom method)": [[86, "ivy.array.random.ArrayWithRandom.shuffle"], [87, "ivy.array.random.ArrayWithRandom.shuffle"]], "arraywithsearching (class in ivy.array.searching)": [[88, "ivy.array.searching.ArrayWithSearching"], [89, "ivy.array.searching.ArrayWithSearching"]], "argmax() (ivy.array.searching.arraywithsearching method)": [[88, "ivy.array.searching.ArrayWithSearching.argmax"], [89, "ivy.array.searching.ArrayWithSearching.argmax"]], "argmin() (ivy.array.searching.arraywithsearching method)": [[88, "ivy.array.searching.ArrayWithSearching.argmin"], [89, "ivy.array.searching.ArrayWithSearching.argmin"]], "argwhere() (ivy.array.searching.arraywithsearching method)": [[88, "ivy.array.searching.ArrayWithSearching.argwhere"], [89, "ivy.array.searching.ArrayWithSearching.argwhere"]], "ivy.array.searching": [[88, "module-ivy.array.searching"]], "nonzero() (ivy.array.searching.arraywithsearching method)": [[88, "ivy.array.searching.ArrayWithSearching.nonzero"], [89, "ivy.array.searching.ArrayWithSearching.nonzero"]], "where() (ivy.array.searching.arraywithsearching method)": [[88, "ivy.array.searching.ArrayWithSearching.where"], [89, "ivy.array.searching.ArrayWithSearching.where"]], "arraywithset (class in ivy.array.set)": [[90, "ivy.array.set.ArrayWithSet"], [91, "ivy.array.set.ArrayWithSet"]], "ivy.array.set": [[90, "module-ivy.array.set"]], "unique_all() (ivy.array.set.arraywithset method)": [[90, "ivy.array.set.ArrayWithSet.unique_all"], [91, "ivy.array.set.ArrayWithSet.unique_all"]], "unique_counts() (ivy.array.set.arraywithset method)": [[90, "ivy.array.set.ArrayWithSet.unique_counts"], [91, "ivy.array.set.ArrayWithSet.unique_counts"]], "unique_inverse() (ivy.array.set.arraywithset method)": [[90, "ivy.array.set.ArrayWithSet.unique_inverse"], [91, "ivy.array.set.ArrayWithSet.unique_inverse"]], "unique_values() (ivy.array.set.arraywithset method)": [[90, "ivy.array.set.ArrayWithSet.unique_values"], [91, "ivy.array.set.ArrayWithSet.unique_values"]], "arraywithsorting (class in ivy.array.sorting)": [[92, "ivy.array.sorting.ArrayWithSorting"], [93, "ivy.array.sorting.ArrayWithSorting"]], "argsort() (ivy.array.sorting.arraywithsorting method)": [[92, "ivy.array.sorting.ArrayWithSorting.argsort"], [93, "ivy.array.sorting.ArrayWithSorting.argsort"]], "ivy.array.sorting": [[92, "module-ivy.array.sorting"]], "searchsorted() (ivy.array.sorting.arraywithsorting method)": [[92, "ivy.array.sorting.ArrayWithSorting.searchsorted"], [93, "ivy.array.sorting.ArrayWithSorting.searchsorted"]], "sort() (ivy.array.sorting.arraywithsorting method)": [[92, "ivy.array.sorting.ArrayWithSorting.sort"], [93, "ivy.array.sorting.ArrayWithSorting.sort"]], "arraywithstatistical (class in ivy.array.statistical)": [[94, "ivy.array.statistical.ArrayWithStatistical"], [95, "ivy.array.statistical.ArrayWithStatistical"]], "cumprod() (ivy.array.statistical.arraywithstatistical method)": [[94, "ivy.array.statistical.ArrayWithStatistical.cumprod"], [95, "ivy.array.statistical.ArrayWithStatistical.cumprod"]], "cumsum() (ivy.array.statistical.arraywithstatistical method)": [[94, "ivy.array.statistical.ArrayWithStatistical.cumsum"], [95, "ivy.array.statistical.ArrayWithStatistical.cumsum"]], "einsum() (ivy.array.statistical.arraywithstatistical method)": [[94, "ivy.array.statistical.ArrayWithStatistical.einsum"], [95, "ivy.array.statistical.ArrayWithStatistical.einsum"]], "ivy.array.statistical": [[94, "module-ivy.array.statistical"]], "max() (ivy.array.statistical.arraywithstatistical method)": [[94, "ivy.array.statistical.ArrayWithStatistical.max"], [95, "ivy.array.statistical.ArrayWithStatistical.max"]], "mean() (ivy.array.statistical.arraywithstatistical method)": [[94, "ivy.array.statistical.ArrayWithStatistical.mean"], [95, "ivy.array.statistical.ArrayWithStatistical.mean"]], "min() (ivy.array.statistical.arraywithstatistical method)": [[94, "ivy.array.statistical.ArrayWithStatistical.min"], [95, "ivy.array.statistical.ArrayWithStatistical.min"]], "prod() (ivy.array.statistical.arraywithstatistical method)": [[94, "ivy.array.statistical.ArrayWithStatistical.prod"], [95, "ivy.array.statistical.ArrayWithStatistical.prod"]], "std() (ivy.array.statistical.arraywithstatistical method)": [[94, "ivy.array.statistical.ArrayWithStatistical.std"], [95, "ivy.array.statistical.ArrayWithStatistical.std"]], "sum() (ivy.array.statistical.arraywithstatistical method)": [[94, "ivy.array.statistical.ArrayWithStatistical.sum"], [95, "ivy.array.statistical.ArrayWithStatistical.sum"]], "var() (ivy.array.statistical.arraywithstatistical method)": [[94, "ivy.array.statistical.ArrayWithStatistical.var"], [95, "ivy.array.statistical.ArrayWithStatistical.var"]], "arraywithutility (class in ivy.array.utility)": [[96, "ivy.array.utility.ArrayWithUtility"], [97, "ivy.array.utility.ArrayWithUtility"]], "all() (ivy.array.utility.arraywithutility method)": [[96, "ivy.array.utility.ArrayWithUtility.all"], [97, "ivy.array.utility.ArrayWithUtility.all"]], "any() (ivy.array.utility.arraywithutility method)": [[96, "ivy.array.utility.ArrayWithUtility.any"], [97, "ivy.array.utility.ArrayWithUtility.any"]], "ivy.array.utility": [[96, "module-ivy.array.utility"]], "add_ivy_array_instance_methods() (in module ivy.array.wrapping)": [[98, "ivy.array.wrapping.add_ivy_array_instance_methods"], [99, "ivy.array.wrapping.add_ivy_array_instance_methods"]], "ivy.array.wrapping": [[98, "module-ivy.array.wrapping"]], "container (class in ivy.container.container)": [[100, "ivy.container.container.Container"], [105, "ivy.container.container.Container"], [106, "ivy.container.container.Container"]], "__abs__() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.__abs__"], [105, "ivy.container.container.Container.__abs__"], [106, "ivy.container.container.Container.__abs__"]], "__add__() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.__add__"], [105, "ivy.container.container.Container.__add__"], [106, "ivy.container.container.Container.__add__"]], "__eq__() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.__eq__"], [105, "ivy.container.container.Container.__eq__"], [106, "ivy.container.container.Container.__eq__"]], "__ge__() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.__ge__"], [105, "ivy.container.container.Container.__ge__"], [106, "ivy.container.container.Container.__ge__"]], "__gt__() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.__gt__"], [105, "ivy.container.container.Container.__gt__"], [106, "ivy.container.container.Container.__gt__"]], "__init__() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.__init__"], [105, "ivy.container.container.Container.__init__"], [106, "ivy.container.container.Container.__init__"]], "__le__() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.__le__"], [105, "ivy.container.container.Container.__le__"], [106, "ivy.container.container.Container.__le__"]], "__lt__() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.__lt__"], [105, "ivy.container.container.Container.__lt__"], [106, "ivy.container.container.Container.__lt__"]], "__ne__() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.__ne__"], [105, "ivy.container.container.Container.__ne__"], [106, "ivy.container.container.Container.__ne__"]], "__pow__() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.__pow__"], [105, "ivy.container.container.Container.__pow__"], [106, "ivy.container.container.Container.__pow__"]], "__radd__() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.__radd__"], [105, "ivy.container.container.Container.__radd__"], [106, "ivy.container.container.Container.__radd__"]], "__rrshift__() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.__rrshift__"], [105, "ivy.container.container.Container.__rrshift__"], [106, "ivy.container.container.Container.__rrshift__"]], "__rshift__() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.__rshift__"], [105, "ivy.container.container.Container.__rshift__"], [106, "ivy.container.container.Container.__rshift__"]], "__rsub__() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.__rsub__"], [105, "ivy.container.container.Container.__rsub__"], [106, "ivy.container.container.Container.__rsub__"]], "__sub__() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.__sub__"], [105, "ivy.container.container.Container.__sub__"], [106, "ivy.container.container.Container.__sub__"]], "__truediv__() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.__truediv__"], [105, "ivy.container.container.Container.__truediv__"], [106, "ivy.container.container.Container.__truediv__"]], "__xor__() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.__xor__"], [105, "ivy.container.container.Container.__xor__"], [106, "ivy.container.container.Container.__xor__"]], "arange() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.arange"], [105, "ivy.container.container.Container.arange"], [106, "ivy.container.container.Container.arange"]], "arg_info() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.arg_info"], [105, "ivy.container.container.Container.arg_info"], [106, "ivy.container.container.Container.arg_info"]], "arg_names() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.arg_names"], [105, "ivy.container.container.Container.arg_names"], [106, "ivy.container.container.Container.arg_names"]], "array() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.array"], [105, "ivy.container.container.Container.array"], [106, "ivy.container.container.Container.array"]], "as_ivy_dev() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.as_ivy_dev"], [105, "ivy.container.container.Container.as_ivy_dev"], [106, "ivy.container.container.Container.as_ivy_dev"]], "as_ivy_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.as_ivy_dtype"], [105, "ivy.container.container.Container.as_ivy_dtype"], [106, "ivy.container.container.Container.as_ivy_dtype"]], "as_native_dev() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.as_native_dev"], [105, "ivy.container.container.Container.as_native_dev"], [106, "ivy.container.container.Container.as_native_dev"]], "as_native_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.as_native_dtype"], [105, "ivy.container.container.Container.as_native_dtype"], [106, "ivy.container.container.Container.as_native_dtype"]], "asarray() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.asarray"], [105, "ivy.container.container.Container.asarray"], [106, "ivy.container.container.Container.asarray"]], "asarray_handle_nestable() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.asarray_handle_nestable"], [105, "ivy.container.container.Container.asarray_handle_nestable"], [106, "ivy.container.container.Container.asarray_handle_nestable"]], "asarray_infer_device() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.asarray_infer_device"], [105, "ivy.container.container.Container.asarray_infer_device"], [106, "ivy.container.container.Container.asarray_infer_device"]], "asarray_to_native_arrays_and_back() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.asarray_to_native_arrays_and_back"], [105, "ivy.container.container.Container.asarray_to_native_arrays_and_back"], [106, "ivy.container.container.Container.asarray_to_native_arrays_and_back"]], "cache_fn() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.cache_fn"], [105, "ivy.container.container.Container.cache_fn"], [106, "ivy.container.container.Container.cache_fn"]], "check_float() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.check_float"], [105, "ivy.container.container.Container.check_float"], [106, "ivy.container.container.Container.check_float"]], "clear_mem_on_dev() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.clear_mem_on_dev"], [105, "ivy.container.container.Container.clear_mem_on_dev"], [106, "ivy.container.container.Container.clear_mem_on_dev"]], "closest_valid_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.closest_valid_dtype"], [105, "ivy.container.container.Container.closest_valid_dtype"], [106, "ivy.container.container.Container.closest_valid_dtype"]], "container_types() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.container_types"], [105, "ivy.container.container.Container.container_types"], [106, "ivy.container.container.Container.container_types"]], "conv() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.conv"], [105, "ivy.container.container.Container.conv"], [106, "ivy.container.container.Container.conv"]], "conv_general_dilated() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.conv_general_dilated"], [105, "ivy.container.container.Container.conv_general_dilated"], [106, "ivy.container.container.Container.conv_general_dilated"]], "conv_general_transpose() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.conv_general_transpose"], [105, "ivy.container.container.Container.conv_general_transpose"], [106, "ivy.container.container.Container.conv_general_transpose"]], "copy_array() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.copy_array"], [105, "ivy.container.container.Container.copy_array"], [106, "ivy.container.container.Container.copy_array"]], "current_backend() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.current_backend"], [105, "ivy.container.container.Container.current_backend"], [106, "ivy.container.container.Container.current_backend"]], "current_backend_str() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.current_backend_str"], [105, "ivy.container.container.Container.current_backend_str"], [106, "ivy.container.container.Container.current_backend_str"]], "default() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.default"], [105, "ivy.container.container.Container.default"], [106, "ivy.container.container.Container.default"]], "default_complex_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.default_complex_dtype"], [105, "ivy.container.container.Container.default_complex_dtype"], [106, "ivy.container.container.Container.default_complex_dtype"]], "default_device() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.default_device"], [105, "ivy.container.container.Container.default_device"], [106, "ivy.container.container.Container.default_device"]], "default_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.default_dtype"], [105, "ivy.container.container.Container.default_dtype"], [106, "ivy.container.container.Container.default_dtype"]], "default_float_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.default_float_dtype"], [105, "ivy.container.container.Container.default_float_dtype"], [106, "ivy.container.container.Container.default_float_dtype"]], "default_int_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.default_int_dtype"], [105, "ivy.container.container.Container.default_int_dtype"], [106, "ivy.container.container.Container.default_int_dtype"]], "default_uint_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.default_uint_dtype"], [105, "ivy.container.container.Container.default_uint_dtype"], [106, "ivy.container.container.Container.default_uint_dtype"]], "deserialize() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.deserialize"], [105, "ivy.container.container.Container.deserialize"], [106, "ivy.container.container.Container.deserialize"]], "dev_util() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.dev_util"], [105, "ivy.container.container.Container.dev_util"], [106, "ivy.container.container.Container.dev_util"]], "dtype_bits() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.dtype_bits"], [105, "ivy.container.container.Container.dtype_bits"], [106, "ivy.container.container.Container.dtype_bits"]], "empty() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.empty"], [105, "ivy.container.container.Container.empty"], [106, "ivy.container.container.Container.empty"]], "execute_with_gradients() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.execute_with_gradients"], [105, "ivy.container.container.Container.execute_with_gradients"], [106, "ivy.container.container.Container.execute_with_gradients"]], "exists() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.exists"], [105, "ivy.container.container.Container.exists"], [106, "ivy.container.container.Container.exists"]], "eye() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.eye"], [105, "ivy.container.container.Container.eye"], [106, "ivy.container.container.Container.eye"]], "full() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.full"], [105, "ivy.container.container.Container.full"], [106, "ivy.container.container.Container.full"]], "function_supported_devices() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.function_supported_devices"], [105, "ivy.container.container.Container.function_supported_devices"], [106, "ivy.container.container.Container.function_supported_devices"]], "function_supported_devices_and_dtypes() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.function_supported_devices_and_dtypes"], [105, "ivy.container.container.Container.function_supported_devices_and_dtypes"], [106, "ivy.container.container.Container.function_supported_devices_and_dtypes"]], "function_supported_dtypes() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.function_supported_dtypes"], [105, "ivy.container.container.Container.function_supported_dtypes"], [106, "ivy.container.container.Container.function_supported_dtypes"]], "function_unsupported_devices() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.function_unsupported_devices"], [105, "ivy.container.container.Container.function_unsupported_devices"], [106, "ivy.container.container.Container.function_unsupported_devices"]], "function_unsupported_devices_and_dtypes() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.function_unsupported_devices_and_dtypes"], [105, "ivy.container.container.Container.function_unsupported_devices_and_dtypes"], [106, "ivy.container.container.Container.function_unsupported_devices_and_dtypes"]], "function_unsupported_dtypes() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.function_unsupported_dtypes"], [105, "ivy.container.container.Container.function_unsupported_dtypes"], [106, "ivy.container.container.Container.function_unsupported_dtypes"]], "get_all_arrays_in_memory() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.get_all_arrays_in_memory"], [105, "ivy.container.container.Container.get_all_arrays_in_memory"], [106, "ivy.container.container.Container.get_all_arrays_in_memory"]], "get_all_ivy_arrays_on_dev() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.get_all_ivy_arrays_on_dev"], [105, "ivy.container.container.Container.get_all_ivy_arrays_on_dev"], [106, "ivy.container.container.Container.get_all_ivy_arrays_on_dev"]], "get_array_mode() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.get_array_mode"], [105, "ivy.container.container.Container.get_array_mode"], [106, "ivy.container.container.Container.get_array_mode"]], "get_exception_trace_mode() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.get_exception_trace_mode"], [105, "ivy.container.container.Container.get_exception_trace_mode"], [106, "ivy.container.container.Container.get_exception_trace_mode"]], "get_item() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.get_item"], [105, "ivy.container.container.Container.get_item"], [106, "ivy.container.container.Container.get_item"]], "get_min_base() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.get_min_base"], [105, "ivy.container.container.Container.get_min_base"], [106, "ivy.container.container.Container.get_min_base"]], "get_min_denominator() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.get_min_denominator"], [105, "ivy.container.container.Container.get_min_denominator"], [106, "ivy.container.container.Container.get_min_denominator"]], "get_nestable_mode() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.get_nestable_mode"], [105, "ivy.container.container.Container.get_nestable_mode"], [106, "ivy.container.container.Container.get_nestable_mode"]], "get_queue_timeout() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.get_queue_timeout"], [105, "ivy.container.container.Container.get_queue_timeout"], [106, "ivy.container.container.Container.get_queue_timeout"]], "get_referrers_recursive() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.get_referrers_recursive"], [105, "ivy.container.container.Container.get_referrers_recursive"], [106, "ivy.container.container.Container.get_referrers_recursive"]], "get_show_func_wrapper_trace_mode() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.get_show_func_wrapper_trace_mode"], [105, "ivy.container.container.Container.get_show_func_wrapper_trace_mode"], [106, "ivy.container.container.Container.get_show_func_wrapper_trace_mode"]], "get_tmp_dir() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.get_tmp_dir"], [105, "ivy.container.container.Container.get_tmp_dir"], [106, "ivy.container.container.Container.get_tmp_dir"]], "gpu_is_available() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.gpu_is_available"], [105, "ivy.container.container.Container.gpu_is_available"], [106, "ivy.container.container.Container.gpu_is_available"]], "grad() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.grad"], [105, "ivy.container.container.Container.grad"], [106, "ivy.container.container.Container.grad"]], "handle_array_function() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.handle_array_function"], [105, "ivy.container.container.Container.handle_array_function"], [106, "ivy.container.container.Container.handle_array_function"]], "handle_array_like_without_promotion() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.handle_array_like_without_promotion"], [105, "ivy.container.container.Container.handle_array_like_without_promotion"], [106, "ivy.container.container.Container.handle_array_like_without_promotion"]], "handle_exceptions() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.handle_exceptions"], [105, "ivy.container.container.Container.handle_exceptions"], [106, "ivy.container.container.Container.handle_exceptions"]], "handle_nestable() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.handle_nestable"], [105, "ivy.container.container.Container.handle_nestable"], [106, "ivy.container.container.Container.handle_nestable"]], "handle_out_argument() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.handle_out_argument"], [105, "ivy.container.container.Container.handle_out_argument"], [106, "ivy.container.container.Container.handle_out_argument"]], "infer_default_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.infer_default_dtype"], [105, "ivy.container.container.Container.infer_default_dtype"], [106, "ivy.container.container.Container.infer_default_dtype"]], "infer_device() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.infer_device"], [105, "ivy.container.container.Container.infer_device"], [106, "ivy.container.container.Container.infer_device"]], "infer_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.infer_dtype"], [105, "ivy.container.container.Container.infer_dtype"], [106, "ivy.container.container.Container.infer_dtype"]], "inplace_arrays_supported() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.inplace_arrays_supported"], [105, "ivy.container.container.Container.inplace_arrays_supported"], [106, "ivy.container.container.Container.inplace_arrays_supported"]], "inplace_variables_supported() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.inplace_variables_supported"], [105, "ivy.container.container.Container.inplace_variables_supported"], [106, "ivy.container.container.Container.inplace_variables_supported"]], "inputs_to_ivy_arrays() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.inputs_to_ivy_arrays"], [105, "ivy.container.container.Container.inputs_to_ivy_arrays"], [106, "ivy.container.container.Container.inputs_to_ivy_arrays"]], "inputs_to_native_arrays() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.inputs_to_native_arrays"], [105, "ivy.container.container.Container.inputs_to_native_arrays"], [106, "ivy.container.container.Container.inputs_to_native_arrays"]], "integer_arrays_to_float() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.integer_arrays_to_float"], [105, "ivy.container.container.Container.integer_arrays_to_float"], [106, "ivy.container.container.Container.integer_arrays_to_float"]], "invalid_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.invalid_dtype"], [105, "ivy.container.container.Container.invalid_dtype"], [106, "ivy.container.container.Container.invalid_dtype"]], "is_ivy_container() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.is_ivy_container"], [105, "ivy.container.container.Container.is_ivy_container"], [106, "ivy.container.container.Container.is_ivy_container"]], "isscalar() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.isscalar"], [105, "ivy.container.container.Container.isscalar"], [106, "ivy.container.container.Container.isscalar"]], "ivy.container.container": [[100, "module-ivy.container.container"], [105, "module-ivy.container.container"]], "jac() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.jac"], [105, "ivy.container.container.Container.jac"], [106, "ivy.container.container.Container.jac"]], "match_kwargs() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.match_kwargs"], [105, "ivy.container.container.Container.match_kwargs"], [106, "ivy.container.container.Container.match_kwargs"]], "multiprocessing() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.multiprocessing"], [105, "ivy.container.container.Container.multiprocessing"], [106, "ivy.container.container.Container.multiprocessing"]], "normalize_axis_tuple() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.normalize_axis_tuple"], [105, "ivy.container.container.Container.normalize_axis_tuple"], [106, "ivy.container.container.Container.normalize_axis_tuple"]], "num_arrays_in_memory() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.num_arrays_in_memory"], [105, "ivy.container.container.Container.num_arrays_in_memory"], [106, "ivy.container.container.Container.num_arrays_in_memory"]], "num_cpu_cores() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.num_cpu_cores"], [105, "ivy.container.container.Container.num_cpu_cores"], [106, "ivy.container.container.Container.num_cpu_cores"]], "num_gpus() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.num_gpus"], [105, "ivy.container.container.Container.num_gpus"], [106, "ivy.container.container.Container.num_gpus"]], "num_ivy_arrays_on_dev() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.num_ivy_arrays_on_dev"], [105, "ivy.container.container.Container.num_ivy_arrays_on_dev"], [106, "ivy.container.container.Container.num_ivy_arrays_on_dev"]], "ones() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.ones"], [105, "ivy.container.container.Container.ones"], [106, "ivy.container.container.Container.ones"]], "outputs_to_ivy_arrays() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.outputs_to_ivy_arrays"], [105, "ivy.container.container.Container.outputs_to_ivy_arrays"], [106, "ivy.container.container.Container.outputs_to_ivy_arrays"]], "percent_used_mem_on_dev() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.percent_used_mem_on_dev"], [105, "ivy.container.container.Container.percent_used_mem_on_dev"], [106, "ivy.container.container.Container.percent_used_mem_on_dev"]], "print_all_arrays_in_memory() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.print_all_arrays_in_memory"], [105, "ivy.container.container.Container.print_all_arrays_in_memory"], [106, "ivy.container.container.Container.print_all_arrays_in_memory"]], "print_all_ivy_arrays_on_dev() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.print_all_ivy_arrays_on_dev"], [105, "ivy.container.container.Container.print_all_ivy_arrays_on_dev"], [106, "ivy.container.container.Container.print_all_ivy_arrays_on_dev"]], "promote_types() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.promote_types"], [105, "ivy.container.container.Container.promote_types"], [106, "ivy.container.container.Container.promote_types"]], "promote_types_of_inputs() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.promote_types_of_inputs"], [105, "ivy.container.container.Container.promote_types_of_inputs"], [106, "ivy.container.container.Container.promote_types_of_inputs"]], "seed() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.seed"], [105, "ivy.container.container.Container.seed"], [106, "ivy.container.container.Container.seed"]], "set_array_mode() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.set_array_mode"], [105, "ivy.container.container.Container.set_array_mode"], [106, "ivy.container.container.Container.set_array_mode"]], "set_default_complex_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.set_default_complex_dtype"], [105, "ivy.container.container.Container.set_default_complex_dtype"], [106, "ivy.container.container.Container.set_default_complex_dtype"]], "set_default_device() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.set_default_device"], [105, "ivy.container.container.Container.set_default_device"], [106, "ivy.container.container.Container.set_default_device"]], "set_default_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.set_default_dtype"], [105, "ivy.container.container.Container.set_default_dtype"], [106, "ivy.container.container.Container.set_default_dtype"]], "set_default_float_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.set_default_float_dtype"], [105, "ivy.container.container.Container.set_default_float_dtype"], [106, "ivy.container.container.Container.set_default_float_dtype"]], "set_default_int_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.set_default_int_dtype"], [105, "ivy.container.container.Container.set_default_int_dtype"], [106, "ivy.container.container.Container.set_default_int_dtype"]], "set_default_uint_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.set_default_uint_dtype"], [105, "ivy.container.container.Container.set_default_uint_dtype"], [106, "ivy.container.container.Container.set_default_uint_dtype"]], "set_exception_trace_mode() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.set_exception_trace_mode"], [105, "ivy.container.container.Container.set_exception_trace_mode"], [106, "ivy.container.container.Container.set_exception_trace_mode"]], "set_min_base() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.set_min_base"], [105, "ivy.container.container.Container.set_min_base"], [106, "ivy.container.container.Container.set_min_base"]], "set_min_denominator() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.set_min_denominator"], [105, "ivy.container.container.Container.set_min_denominator"], [106, "ivy.container.container.Container.set_min_denominator"]], "set_nestable_mode() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.set_nestable_mode"], [105, "ivy.container.container.Container.set_nestable_mode"], [106, "ivy.container.container.Container.set_nestable_mode"]], "set_queue_timeout() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.set_queue_timeout"], [105, "ivy.container.container.Container.set_queue_timeout"], [106, "ivy.container.container.Container.set_queue_timeout"]], "set_shape_array_mode() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.set_shape_array_mode"], [105, "ivy.container.container.Container.set_shape_array_mode"], [106, "ivy.container.container.Container.set_shape_array_mode"]], "set_show_func_wrapper_trace_mode() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.set_show_func_wrapper_trace_mode"], [105, "ivy.container.container.Container.set_show_func_wrapper_trace_mode"], [106, "ivy.container.container.Container.set_show_func_wrapper_trace_mode"]], "set_split_factor() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.set_split_factor"], [105, "ivy.container.container.Container.set_split_factor"], [106, "ivy.container.container.Container.set_split_factor"]], "set_tmp_dir() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.set_tmp_dir"], [105, "ivy.container.container.Container.set_tmp_dir"], [106, "ivy.container.container.Container.set_tmp_dir"]], "set_with_grads() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.set_with_grads"], [105, "ivy.container.container.Container.set_with_grads"], [106, "ivy.container.container.Container.set_with_grads"]], "shape_array_mode() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.shape_array_mode"], [105, "ivy.container.container.Container.shape_array_mode"], [106, "ivy.container.container.Container.shape_array_mode"]], "split_factor() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.split_factor"], [105, "ivy.container.container.Container.split_factor"], [106, "ivy.container.container.Container.split_factor"]], "split_func_call() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.split_func_call"], [105, "ivy.container.container.Container.split_func_call"], [106, "ivy.container.container.Container.split_func_call"]], "static_adam_step() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_adam_step"], [105, "ivy.container.container.Container.static_adam_step"], [106, "ivy.container.container.Container.static_adam_step"]], "static_adam_update() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_adam_update"], [105, "ivy.container.container.Container.static_adam_update"], [106, "ivy.container.container.Container.static_adam_update"]], "static_arg_info() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_arg_info"], [105, "ivy.container.container.Container.static_arg_info"], [106, "ivy.container.container.Container.static_arg_info"]], "static_arg_names() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_arg_names"], [105, "ivy.container.container.Container.static_arg_names"], [106, "ivy.container.container.Container.static_arg_names"]], "static_array() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_array"], [105, "ivy.container.container.Container.static_array"], [106, "ivy.container.container.Container.static_array"]], "static_as_ivy_dev() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_as_ivy_dev"], [105, "ivy.container.container.Container.static_as_ivy_dev"], [106, "ivy.container.container.Container.static_as_ivy_dev"]], "static_as_ivy_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_as_ivy_dtype"], [105, "ivy.container.container.Container.static_as_ivy_dtype"], [106, "ivy.container.container.Container.static_as_ivy_dtype"]], "static_as_native_dev() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_as_native_dev"], [105, "ivy.container.container.Container.static_as_native_dev"], [106, "ivy.container.container.Container.static_as_native_dev"]], "static_as_native_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_as_native_dtype"], [105, "ivy.container.container.Container.static_as_native_dtype"], [106, "ivy.container.container.Container.static_as_native_dtype"]], "static_asarray_handle_nestable() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_asarray_handle_nestable"], [105, "ivy.container.container.Container.static_asarray_handle_nestable"], [106, "ivy.container.container.Container.static_asarray_handle_nestable"]], "static_asarray_infer_device() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_asarray_infer_device"], [105, "ivy.container.container.Container.static_asarray_infer_device"], [106, "ivy.container.container.Container.static_asarray_infer_device"]], "static_asarray_to_native_arrays_and_back() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_asarray_to_native_arrays_and_back"], [105, "ivy.container.container.Container.static_asarray_to_native_arrays_and_back"], [106, "ivy.container.container.Container.static_asarray_to_native_arrays_and_back"]], "static_cache_fn() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_cache_fn"], [105, "ivy.container.container.Container.static_cache_fn"], [106, "ivy.container.container.Container.static_cache_fn"]], "static_check_float() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_check_float"], [105, "ivy.container.container.Container.static_check_float"], [106, "ivy.container.container.Container.static_check_float"]], "static_clear_mem_on_dev() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_clear_mem_on_dev"], [105, "ivy.container.container.Container.static_clear_mem_on_dev"], [106, "ivy.container.container.Container.static_clear_mem_on_dev"]], "static_closest_valid_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_closest_valid_dtype"], [105, "ivy.container.container.Container.static_closest_valid_dtype"], [106, "ivy.container.container.Container.static_closest_valid_dtype"]], "static_container_types() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_container_types"], [105, "ivy.container.container.Container.static_container_types"], [106, "ivy.container.container.Container.static_container_types"]], "static_conv() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_conv"], [105, "ivy.container.container.Container.static_conv"], [106, "ivy.container.container.Container.static_conv"]], "static_conv_general_dilated() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_conv_general_dilated"], [105, "ivy.container.container.Container.static_conv_general_dilated"], [106, "ivy.container.container.Container.static_conv_general_dilated"]], "static_conv_general_transpose() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_conv_general_transpose"], [105, "ivy.container.container.Container.static_conv_general_transpose"], [106, "ivy.container.container.Container.static_conv_general_transpose"]], "static_copy_array() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_copy_array"], [105, "ivy.container.container.Container.static_copy_array"], [106, "ivy.container.container.Container.static_copy_array"]], "static_current_backend() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_current_backend"], [105, "ivy.container.container.Container.static_current_backend"], [106, "ivy.container.container.Container.static_current_backend"]], "static_current_backend_str() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_current_backend_str"], [105, "ivy.container.container.Container.static_current_backend_str"], [106, "ivy.container.container.Container.static_current_backend_str"]], "static_default() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_default"], [105, "ivy.container.container.Container.static_default"], [106, "ivy.container.container.Container.static_default"]], "static_default_device() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_default_device"], [105, "ivy.container.container.Container.static_default_device"], [106, "ivy.container.container.Container.static_default_device"]], "static_default_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_default_dtype"], [105, "ivy.container.container.Container.static_default_dtype"], [106, "ivy.container.container.Container.static_default_dtype"]], "static_default_int_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_default_int_dtype"], [105, "ivy.container.container.Container.static_default_int_dtype"], [106, "ivy.container.container.Container.static_default_int_dtype"]], "static_default_uint_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_default_uint_dtype"], [105, "ivy.container.container.Container.static_default_uint_dtype"], [106, "ivy.container.container.Container.static_default_uint_dtype"]], "static_deserialize() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_deserialize"], [105, "ivy.container.container.Container.static_deserialize"], [106, "ivy.container.container.Container.static_deserialize"]], "static_dev_util() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_dev_util"], [105, "ivy.container.container.Container.static_dev_util"], [106, "ivy.container.container.Container.static_dev_util"]], "static_dtype_bits() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_dtype_bits"], [105, "ivy.container.container.Container.static_dtype_bits"], [106, "ivy.container.container.Container.static_dtype_bits"]], "static_einsum() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_einsum"], [105, "ivy.container.container.Container.static_einsum"], [106, "ivy.container.container.Container.static_einsum"]], "static_empty() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_empty"], [105, "ivy.container.container.Container.static_empty"], [106, "ivy.container.container.Container.static_empty"]], "static_execute_with_gradients() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_execute_with_gradients"], [105, "ivy.container.container.Container.static_execute_with_gradients"], [106, "ivy.container.container.Container.static_execute_with_gradients"]], "static_exists() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_exists"], [105, "ivy.container.container.Container.static_exists"], [106, "ivy.container.container.Container.static_exists"]], "static_full() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_full"], [105, "ivy.container.container.Container.static_full"], [106, "ivy.container.container.Container.static_full"]], "static_function_supported_devices() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_function_supported_devices"], [105, "ivy.container.container.Container.static_function_supported_devices"], [106, "ivy.container.container.Container.static_function_supported_devices"]], "static_function_supported_devices_and_dtypes() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_function_supported_devices_and_dtypes"], [105, "ivy.container.container.Container.static_function_supported_devices_and_dtypes"], [106, "ivy.container.container.Container.static_function_supported_devices_and_dtypes"]], "static_function_unsupported_devices() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_function_unsupported_devices"], [105, "ivy.container.container.Container.static_function_unsupported_devices"], [106, "ivy.container.container.Container.static_function_unsupported_devices"]], "static_function_unsupported_devices_and_dtypes() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_function_unsupported_devices_and_dtypes"], [105, "ivy.container.container.Container.static_function_unsupported_devices_and_dtypes"], [106, "ivy.container.container.Container.static_function_unsupported_devices_and_dtypes"]], "static_get() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_get"], [105, "ivy.container.container.Container.static_get"], [106, "ivy.container.container.Container.static_get"]], "static_get_all_arrays_in_memory() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_get_all_arrays_in_memory"], [105, "ivy.container.container.Container.static_get_all_arrays_in_memory"], [106, "ivy.container.container.Container.static_get_all_arrays_in_memory"]], "static_get_all_ivy_arrays_on_dev() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_get_all_ivy_arrays_on_dev"], [105, "ivy.container.container.Container.static_get_all_ivy_arrays_on_dev"], [106, "ivy.container.container.Container.static_get_all_ivy_arrays_on_dev"]], "static_get_array_mode() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_get_array_mode"], [105, "ivy.container.container.Container.static_get_array_mode"], [106, "ivy.container.container.Container.static_get_array_mode"]], "static_get_exception_trace_mode() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_get_exception_trace_mode"], [105, "ivy.container.container.Container.static_get_exception_trace_mode"], [106, "ivy.container.container.Container.static_get_exception_trace_mode"]], "static_get_item() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_get_item"], [105, "ivy.container.container.Container.static_get_item"], [106, "ivy.container.container.Container.static_get_item"]], "static_get_min_base() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_get_min_base"], [105, "ivy.container.container.Container.static_get_min_base"], [106, "ivy.container.container.Container.static_get_min_base"]], "static_get_min_denominator() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_get_min_denominator"], [105, "ivy.container.container.Container.static_get_min_denominator"], [106, "ivy.container.container.Container.static_get_min_denominator"]], "static_get_nestable_mode() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_get_nestable_mode"], [105, "ivy.container.container.Container.static_get_nestable_mode"], [106, "ivy.container.container.Container.static_get_nestable_mode"]], "static_get_queue_timeout() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_get_queue_timeout"], [105, "ivy.container.container.Container.static_get_queue_timeout"], [106, "ivy.container.container.Container.static_get_queue_timeout"]], "static_get_referrers_recursive() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_get_referrers_recursive"], [105, "ivy.container.container.Container.static_get_referrers_recursive"], [106, "ivy.container.container.Container.static_get_referrers_recursive"]], "static_get_show_func_wrapper_trace_mode() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_get_show_func_wrapper_trace_mode"], [105, "ivy.container.container.Container.static_get_show_func_wrapper_trace_mode"], [106, "ivy.container.container.Container.static_get_show_func_wrapper_trace_mode"]], "static_get_tmp_dir() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_get_tmp_dir"], [105, "ivy.container.container.Container.static_get_tmp_dir"], [106, "ivy.container.container.Container.static_get_tmp_dir"]], "static_gpu_is_available() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_gpu_is_available"], [105, "ivy.container.container.Container.static_gpu_is_available"], [106, "ivy.container.container.Container.static_gpu_is_available"]], "static_grad() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_grad"], [105, "ivy.container.container.Container.static_grad"], [106, "ivy.container.container.Container.static_grad"]], "static_gradient_descent_update() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_gradient_descent_update"], [105, "ivy.container.container.Container.static_gradient_descent_update"], [106, "ivy.container.container.Container.static_gradient_descent_update"]], "static_handle_array_function() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_handle_array_function"], [105, "ivy.container.container.Container.static_handle_array_function"], [106, "ivy.container.container.Container.static_handle_array_function"]], "static_handle_array_like_without_promotion() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_handle_array_like_without_promotion"], [105, "ivy.container.container.Container.static_handle_array_like_without_promotion"], [106, "ivy.container.container.Container.static_handle_array_like_without_promotion"]], "static_handle_exceptions() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_handle_exceptions"], [105, "ivy.container.container.Container.static_handle_exceptions"], [106, "ivy.container.container.Container.static_handle_exceptions"]], "static_handle_nestable() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_handle_nestable"], [105, "ivy.container.container.Container.static_handle_nestable"], [106, "ivy.container.container.Container.static_handle_nestable"]], "static_handle_out_argument() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_handle_out_argument"], [105, "ivy.container.container.Container.static_handle_out_argument"], [106, "ivy.container.container.Container.static_handle_out_argument"]], "static_infer_default_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_infer_default_dtype"], [105, "ivy.container.container.Container.static_infer_default_dtype"], [106, "ivy.container.container.Container.static_infer_default_dtype"]], "static_infer_device() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_infer_device"], [105, "ivy.container.container.Container.static_infer_device"], [106, "ivy.container.container.Container.static_infer_device"]], "static_infer_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_infer_dtype"], [105, "ivy.container.container.Container.static_infer_dtype"], [106, "ivy.container.container.Container.static_infer_dtype"]], "static_inplace_arrays_supported() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_inplace_arrays_supported"], [105, "ivy.container.container.Container.static_inplace_arrays_supported"], [106, "ivy.container.container.Container.static_inplace_arrays_supported"]], "static_inplace_variables_supported() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_inplace_variables_supported"], [105, "ivy.container.container.Container.static_inplace_variables_supported"], [106, "ivy.container.container.Container.static_inplace_variables_supported"]], "static_inputs_to_ivy_arrays() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_inputs_to_ivy_arrays"], [105, "ivy.container.container.Container.static_inputs_to_ivy_arrays"], [106, "ivy.container.container.Container.static_inputs_to_ivy_arrays"]], "static_inputs_to_native_arrays() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_inputs_to_native_arrays"], [105, "ivy.container.container.Container.static_inputs_to_native_arrays"], [106, "ivy.container.container.Container.static_inputs_to_native_arrays"]], "static_integer_arrays_to_float() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_integer_arrays_to_float"], [105, "ivy.container.container.Container.static_integer_arrays_to_float"], [106, "ivy.container.container.Container.static_integer_arrays_to_float"]], "static_invalid_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_invalid_dtype"], [105, "ivy.container.container.Container.static_invalid_dtype"], [106, "ivy.container.container.Container.static_invalid_dtype"]], "static_is_ivy_container() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_is_ivy_container"], [105, "ivy.container.container.Container.static_is_ivy_container"], [106, "ivy.container.container.Container.static_is_ivy_container"]], "static_isscalar() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_isscalar"], [105, "ivy.container.container.Container.static_isscalar"], [106, "ivy.container.container.Container.static_isscalar"]], "static_jac() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_jac"], [105, "ivy.container.container.Container.static_jac"], [106, "ivy.container.container.Container.static_jac"]], "static_lamb_update() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_lamb_update"], [105, "ivy.container.container.Container.static_lamb_update"], [106, "ivy.container.container.Container.static_lamb_update"]], "static_lars_update() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_lars_update"], [105, "ivy.container.container.Container.static_lars_update"], [106, "ivy.container.container.Container.static_lars_update"]], "static_layer_norm() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_layer_norm"], [105, "ivy.container.container.Container.static_layer_norm"], [106, "ivy.container.container.Container.static_layer_norm"]], "static_match_kwargs() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_match_kwargs"], [105, "ivy.container.container.Container.static_match_kwargs"], [106, "ivy.container.container.Container.static_match_kwargs"]], "static_max() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_max"], [105, "ivy.container.container.Container.static_max"], [106, "ivy.container.container.Container.static_max"]], "static_mean() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_mean"], [105, "ivy.container.container.Container.static_mean"], [106, "ivy.container.container.Container.static_mean"]], "static_min() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_min"], [105, "ivy.container.container.Container.static_min"], [106, "ivy.container.container.Container.static_min"]], "static_multiprocessing() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_multiprocessing"], [105, "ivy.container.container.Container.static_multiprocessing"], [106, "ivy.container.container.Container.static_multiprocessing"]], "static_normalize_axis_tuple() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_normalize_axis_tuple"], [105, "ivy.container.container.Container.static_normalize_axis_tuple"], [106, "ivy.container.container.Container.static_normalize_axis_tuple"]], "static_num_arrays_in_memory() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_num_arrays_in_memory"], [105, "ivy.container.container.Container.static_num_arrays_in_memory"], [106, "ivy.container.container.Container.static_num_arrays_in_memory"]], "static_num_cpu_cores() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_num_cpu_cores"], [105, "ivy.container.container.Container.static_num_cpu_cores"], [106, "ivy.container.container.Container.static_num_cpu_cores"]], "static_num_gpus() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_num_gpus"], [105, "ivy.container.container.Container.static_num_gpus"], [106, "ivy.container.container.Container.static_num_gpus"]], "static_num_ivy_arrays_on_dev() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_num_ivy_arrays_on_dev"], [105, "ivy.container.container.Container.static_num_ivy_arrays_on_dev"], [106, "ivy.container.container.Container.static_num_ivy_arrays_on_dev"]], "static_optimizer_update() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_optimizer_update"], [105, "ivy.container.container.Container.static_optimizer_update"], [106, "ivy.container.container.Container.static_optimizer_update"]], "static_outputs_to_ivy_arrays() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_outputs_to_ivy_arrays"], [105, "ivy.container.container.Container.static_outputs_to_ivy_arrays"], [106, "ivy.container.container.Container.static_outputs_to_ivy_arrays"]], "static_percent_used_mem_on_dev() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_percent_used_mem_on_dev"], [105, "ivy.container.container.Container.static_percent_used_mem_on_dev"], [106, "ivy.container.container.Container.static_percent_used_mem_on_dev"]], "static_print_all_arrays_in_memory() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_print_all_arrays_in_memory"], [105, "ivy.container.container.Container.static_print_all_arrays_in_memory"], [106, "ivy.container.container.Container.static_print_all_arrays_in_memory"]], "static_print_all_ivy_arrays_on_dev() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_print_all_ivy_arrays_on_dev"], [105, "ivy.container.container.Container.static_print_all_ivy_arrays_on_dev"], [106, "ivy.container.container.Container.static_print_all_ivy_arrays_on_dev"]], "static_promote_types() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_promote_types"], [105, "ivy.container.container.Container.static_promote_types"], [106, "ivy.container.container.Container.static_promote_types"]], "static_promote_types_of_inputs() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_promote_types_of_inputs"], [105, "ivy.container.container.Container.static_promote_types_of_inputs"], [106, "ivy.container.container.Container.static_promote_types_of_inputs"]], "static_seed() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_seed"], [105, "ivy.container.container.Container.static_seed"], [106, "ivy.container.container.Container.static_seed"]], "static_set_array_mode() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_set_array_mode"], [105, "ivy.container.container.Container.static_set_array_mode"], [106, "ivy.container.container.Container.static_set_array_mode"]], "static_set_default_complex_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_set_default_complex_dtype"], [105, "ivy.container.container.Container.static_set_default_complex_dtype"], [106, "ivy.container.container.Container.static_set_default_complex_dtype"]], "static_set_default_device() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_set_default_device"], [105, "ivy.container.container.Container.static_set_default_device"], [106, "ivy.container.container.Container.static_set_default_device"]], "static_set_default_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_set_default_dtype"], [105, "ivy.container.container.Container.static_set_default_dtype"], [106, "ivy.container.container.Container.static_set_default_dtype"]], "static_set_default_float_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_set_default_float_dtype"], [105, "ivy.container.container.Container.static_set_default_float_dtype"], [106, "ivy.container.container.Container.static_set_default_float_dtype"]], "static_set_default_int_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_set_default_int_dtype"], [105, "ivy.container.container.Container.static_set_default_int_dtype"], [106, "ivy.container.container.Container.static_set_default_int_dtype"]], "static_set_default_uint_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_set_default_uint_dtype"], [105, "ivy.container.container.Container.static_set_default_uint_dtype"], [106, "ivy.container.container.Container.static_set_default_uint_dtype"]], "static_set_exception_trace_mode() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_set_exception_trace_mode"], [105, "ivy.container.container.Container.static_set_exception_trace_mode"], [106, "ivy.container.container.Container.static_set_exception_trace_mode"]], "static_set_min_base() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_set_min_base"], [105, "ivy.container.container.Container.static_set_min_base"], [106, "ivy.container.container.Container.static_set_min_base"]], "static_set_min_denominator() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_set_min_denominator"], [105, "ivy.container.container.Container.static_set_min_denominator"], [106, "ivy.container.container.Container.static_set_min_denominator"]], "static_set_nestable_mode() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_set_nestable_mode"], [105, "ivy.container.container.Container.static_set_nestable_mode"], [106, "ivy.container.container.Container.static_set_nestable_mode"]], "static_set_queue_timeout() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_set_queue_timeout"], [105, "ivy.container.container.Container.static_set_queue_timeout"], [106, "ivy.container.container.Container.static_set_queue_timeout"]], "static_set_shape_array_mode() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_set_shape_array_mode"], [105, "ivy.container.container.Container.static_set_shape_array_mode"], [106, "ivy.container.container.Container.static_set_shape_array_mode"]], "static_set_show_func_wrapper_trace_mode() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_set_show_func_wrapper_trace_mode"], [105, "ivy.container.container.Container.static_set_show_func_wrapper_trace_mode"], [106, "ivy.container.container.Container.static_set_show_func_wrapper_trace_mode"]], "static_set_split_factor() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_set_split_factor"], [105, "ivy.container.container.Container.static_set_split_factor"], [106, "ivy.container.container.Container.static_set_split_factor"]], "static_set_tmp_dir() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_set_tmp_dir"], [105, "ivy.container.container.Container.static_set_tmp_dir"], [106, "ivy.container.container.Container.static_set_tmp_dir"]], "static_set_with_grads() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_set_with_grads"], [105, "ivy.container.container.Container.static_set_with_grads"], [106, "ivy.container.container.Container.static_set_with_grads"]], "static_shape() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_shape"], [105, "ivy.container.container.Container.static_shape"], [106, "ivy.container.container.Container.static_shape"]], "static_shape_array_mode() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_shape_array_mode"], [105, "ivy.container.container.Container.static_shape_array_mode"], [106, "ivy.container.container.Container.static_shape_array_mode"]], "static_split_factor() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_split_factor"], [105, "ivy.container.container.Container.static_split_factor"], [106, "ivy.container.container.Container.static_split_factor"]], "static_split_func_call() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_split_func_call"], [105, "ivy.container.container.Container.static_split_func_call"], [106, "ivy.container.container.Container.static_split_func_call"]], "static_std() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_std"], [105, "ivy.container.container.Container.static_std"], [106, "ivy.container.container.Container.static_std"]], "static_tensorsolve() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_tensorsolve"], [105, "ivy.container.container.Container.static_tensorsolve"], [106, "ivy.container.container.Container.static_tensorsolve"]], "static_to_ivy_shape() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_to_ivy_shape"], [105, "ivy.container.container.Container.static_to_ivy_shape"], [106, "ivy.container.container.Container.static_to_ivy_shape"]], "static_to_native_arrays_and_back() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_to_native_arrays_and_back"], [105, "ivy.container.container.Container.static_to_native_arrays_and_back"], [106, "ivy.container.container.Container.static_to_native_arrays_and_back"]], "static_to_native_shape() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_to_native_shape"], [105, "ivy.container.container.Container.static_to_native_shape"], [106, "ivy.container.container.Container.static_to_native_shape"]], "static_total_mem_on_dev() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_total_mem_on_dev"], [105, "ivy.container.container.Container.static_total_mem_on_dev"], [106, "ivy.container.container.Container.static_total_mem_on_dev"]], "static_tpu_is_available() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_tpu_is_available"], [105, "ivy.container.container.Container.static_tpu_is_available"], [106, "ivy.container.container.Container.static_tpu_is_available"]], "static_try_else_none() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_try_else_none"], [105, "ivy.container.container.Container.static_try_else_none"], [106, "ivy.container.container.Container.static_try_else_none"]], "static_type_promote_arrays() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_type_promote_arrays"], [105, "ivy.container.container.Container.static_type_promote_arrays"], [106, "ivy.container.container.Container.static_type_promote_arrays"]], "static_unset_array_mode() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_unset_array_mode"], [105, "ivy.container.container.Container.static_unset_array_mode"], [106, "ivy.container.container.Container.static_unset_array_mode"]], "static_unset_default_complex_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_unset_default_complex_dtype"], [105, "ivy.container.container.Container.static_unset_default_complex_dtype"], [106, "ivy.container.container.Container.static_unset_default_complex_dtype"]], "static_unset_default_device() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_unset_default_device"], [105, "ivy.container.container.Container.static_unset_default_device"], [106, "ivy.container.container.Container.static_unset_default_device"]], "static_unset_default_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_unset_default_dtype"], [105, "ivy.container.container.Container.static_unset_default_dtype"], [106, "ivy.container.container.Container.static_unset_default_dtype"]], "static_unset_default_float_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_unset_default_float_dtype"], [105, "ivy.container.container.Container.static_unset_default_float_dtype"], [106, "ivy.container.container.Container.static_unset_default_float_dtype"]], "static_unset_default_int_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_unset_default_int_dtype"], [105, "ivy.container.container.Container.static_unset_default_int_dtype"], [106, "ivy.container.container.Container.static_unset_default_int_dtype"]], "static_unset_default_uint_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_unset_default_uint_dtype"], [105, "ivy.container.container.Container.static_unset_default_uint_dtype"], [106, "ivy.container.container.Container.static_unset_default_uint_dtype"]], "static_unset_exception_trace_mode() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_unset_exception_trace_mode"], [105, "ivy.container.container.Container.static_unset_exception_trace_mode"], [106, "ivy.container.container.Container.static_unset_exception_trace_mode"]], "static_unset_nestable_mode() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_unset_nestable_mode"], [105, "ivy.container.container.Container.static_unset_nestable_mode"], [106, "ivy.container.container.Container.static_unset_nestable_mode"]], "static_unset_queue_timeout() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_unset_queue_timeout"], [105, "ivy.container.container.Container.static_unset_queue_timeout"], [106, "ivy.container.container.Container.static_unset_queue_timeout"]], "static_unset_shape_array_mode() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_unset_shape_array_mode"], [105, "ivy.container.container.Container.static_unset_shape_array_mode"], [106, "ivy.container.container.Container.static_unset_shape_array_mode"]], "static_unset_show_func_wrapper_trace_mode() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_unset_show_func_wrapper_trace_mode"], [105, "ivy.container.container.Container.static_unset_show_func_wrapper_trace_mode"], [106, "ivy.container.container.Container.static_unset_show_func_wrapper_trace_mode"]], "static_unset_with_grads() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_unset_with_grads"], [105, "ivy.container.container.Container.static_unset_with_grads"], [106, "ivy.container.container.Container.static_unset_with_grads"]], "static_used_mem_on_dev() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_used_mem_on_dev"], [105, "ivy.container.container.Container.static_used_mem_on_dev"], [106, "ivy.container.container.Container.static_used_mem_on_dev"]], "static_valid_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_valid_dtype"], [105, "ivy.container.container.Container.static_valid_dtype"], [106, "ivy.container.container.Container.static_valid_dtype"]], "static_value_and_grad() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_value_and_grad"], [105, "ivy.container.container.Container.static_value_and_grad"], [106, "ivy.container.container.Container.static_value_and_grad"]], "static_vmap() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_vmap"], [105, "ivy.container.container.Container.static_vmap"], [106, "ivy.container.container.Container.static_vmap"]], "static_with_grads() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_with_grads"], [105, "ivy.container.container.Container.static_with_grads"], [106, "ivy.container.container.Container.static_with_grads"]], "static_wraps() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.static_wraps"], [105, "ivy.container.container.Container.static_wraps"], [106, "ivy.container.container.Container.static_wraps"]], "to_ivy_shape() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.to_ivy_shape"], [105, "ivy.container.container.Container.to_ivy_shape"], [106, "ivy.container.container.Container.to_ivy_shape"]], "to_native_arrays_and_back() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.to_native_arrays_and_back"], [105, "ivy.container.container.Container.to_native_arrays_and_back"], [106, "ivy.container.container.Container.to_native_arrays_and_back"]], "to_native_shape() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.to_native_shape"], [105, "ivy.container.container.Container.to_native_shape"], [106, "ivy.container.container.Container.to_native_shape"]], "total_mem_on_dev() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.total_mem_on_dev"], [105, "ivy.container.container.Container.total_mem_on_dev"], [106, "ivy.container.container.Container.total_mem_on_dev"]], "tpu_is_available() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.tpu_is_available"], [105, "ivy.container.container.Container.tpu_is_available"], [106, "ivy.container.container.Container.tpu_is_available"]], "try_else_none() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.try_else_none"], [105, "ivy.container.container.Container.try_else_none"], [106, "ivy.container.container.Container.try_else_none"]], "type_promote_arrays() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.type_promote_arrays"], [105, "ivy.container.container.Container.type_promote_arrays"], [106, "ivy.container.container.Container.type_promote_arrays"]], "unset_array_mode() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.unset_array_mode"], [105, "ivy.container.container.Container.unset_array_mode"], [106, "ivy.container.container.Container.unset_array_mode"]], "unset_default_complex_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.unset_default_complex_dtype"], [105, "ivy.container.container.Container.unset_default_complex_dtype"], [106, "ivy.container.container.Container.unset_default_complex_dtype"]], "unset_default_device() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.unset_default_device"], [105, "ivy.container.container.Container.unset_default_device"], [106, "ivy.container.container.Container.unset_default_device"]], "unset_default_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.unset_default_dtype"], [105, "ivy.container.container.Container.unset_default_dtype"], [106, "ivy.container.container.Container.unset_default_dtype"]], "unset_default_float_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.unset_default_float_dtype"], [105, "ivy.container.container.Container.unset_default_float_dtype"], [106, "ivy.container.container.Container.unset_default_float_dtype"]], "unset_default_int_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.unset_default_int_dtype"], [105, "ivy.container.container.Container.unset_default_int_dtype"], [106, "ivy.container.container.Container.unset_default_int_dtype"]], "unset_default_uint_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.unset_default_uint_dtype"], [105, "ivy.container.container.Container.unset_default_uint_dtype"], [106, "ivy.container.container.Container.unset_default_uint_dtype"]], "unset_exception_trace_mode() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.unset_exception_trace_mode"], [105, "ivy.container.container.Container.unset_exception_trace_mode"], [106, "ivy.container.container.Container.unset_exception_trace_mode"]], "unset_nestable_mode() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.unset_nestable_mode"], [105, "ivy.container.container.Container.unset_nestable_mode"], [106, "ivy.container.container.Container.unset_nestable_mode"]], "unset_queue_timeout() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.unset_queue_timeout"], [105, "ivy.container.container.Container.unset_queue_timeout"], [106, "ivy.container.container.Container.unset_queue_timeout"]], "unset_shape_array_mode() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.unset_shape_array_mode"], [105, "ivy.container.container.Container.unset_shape_array_mode"], [106, "ivy.container.container.Container.unset_shape_array_mode"]], "unset_show_func_wrapper_trace_mode() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.unset_show_func_wrapper_trace_mode"], [105, "ivy.container.container.Container.unset_show_func_wrapper_trace_mode"], [106, "ivy.container.container.Container.unset_show_func_wrapper_trace_mode"]], "unset_with_grads() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.unset_with_grads"], [105, "ivy.container.container.Container.unset_with_grads"], [106, "ivy.container.container.Container.unset_with_grads"]], "used_mem_on_dev() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.used_mem_on_dev"], [105, "ivy.container.container.Container.used_mem_on_dev"], [106, "ivy.container.container.Container.used_mem_on_dev"]], "valid_dtype() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.valid_dtype"], [105, "ivy.container.container.Container.valid_dtype"], [106, "ivy.container.container.Container.valid_dtype"]], "value_and_grad() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.value_and_grad"], [105, "ivy.container.container.Container.value_and_grad"], [106, "ivy.container.container.Container.value_and_grad"]], "vmap() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.vmap"], [105, "ivy.container.container.Container.vmap"], [106, "ivy.container.container.Container.vmap"]], "with_grads() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.with_grads"], [105, "ivy.container.container.Container.with_grads"], [106, "ivy.container.container.Container.with_grads"]], "wraps() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.wraps"], [105, "ivy.container.container.Container.wraps"], [106, "ivy.container.container.Container.wraps"]], "zeros() (ivy.container.container.container method)": [[100, "ivy.container.container.Container.zeros"], [105, "ivy.container.container.Container.zeros"], [106, "ivy.container.container.Container.zeros"]], "containerwithactivations (class in ivy.container.activations)": [[101, "ivy.container.activations.ContainerWithActivations"], [102, "ivy.container.activations.ContainerWithActivations"]], "gelu() (ivy.container.activations.containerwithactivations method)": [[101, "ivy.container.activations.ContainerWithActivations.gelu"], [102, "ivy.container.activations.ContainerWithActivations.gelu"]], "ivy.container.activations": [[101, "module-ivy.container.activations"]], "leaky_relu() (ivy.container.activations.containerwithactivations method)": [[101, "ivy.container.activations.ContainerWithActivations.leaky_relu"], [102, "ivy.container.activations.ContainerWithActivations.leaky_relu"]], "log_softmax() (ivy.container.activations.containerwithactivations method)": [[101, "ivy.container.activations.ContainerWithActivations.log_softmax"], [102, "ivy.container.activations.ContainerWithActivations.log_softmax"]], "mish() (ivy.container.activations.containerwithactivations method)": [[101, "ivy.container.activations.ContainerWithActivations.mish"], [102, "ivy.container.activations.ContainerWithActivations.mish"]], "relu() (ivy.container.activations.containerwithactivations method)": [[101, "ivy.container.activations.ContainerWithActivations.relu"], [102, "ivy.container.activations.ContainerWithActivations.relu"]], "sigmoid() (ivy.container.activations.containerwithactivations method)": [[101, "ivy.container.activations.ContainerWithActivations.sigmoid"], [102, "ivy.container.activations.ContainerWithActivations.sigmoid"]], "softmax() (ivy.container.activations.containerwithactivations method)": [[101, "ivy.container.activations.ContainerWithActivations.softmax"], [102, "ivy.container.activations.ContainerWithActivations.softmax"]], "softplus() (ivy.container.activations.containerwithactivations method)": [[101, "ivy.container.activations.ContainerWithActivations.softplus"], [102, "ivy.container.activations.ContainerWithActivations.softplus"]], "static_gelu() (ivy.container.activations.containerwithactivations static method)": [[101, "ivy.container.activations.ContainerWithActivations.static_gelu"], [102, "ivy.container.activations.ContainerWithActivations.static_gelu"]], "static_leaky_relu() (ivy.container.activations.containerwithactivations static method)": [[101, "ivy.container.activations.ContainerWithActivations.static_leaky_relu"], [102, "ivy.container.activations.ContainerWithActivations.static_leaky_relu"]], "static_log_softmax() (ivy.container.activations.containerwithactivations static method)": [[101, "ivy.container.activations.ContainerWithActivations.static_log_softmax"], [102, "ivy.container.activations.ContainerWithActivations.static_log_softmax"]], "static_mish() (ivy.container.activations.containerwithactivations static method)": [[101, "ivy.container.activations.ContainerWithActivations.static_mish"], [102, "ivy.container.activations.ContainerWithActivations.static_mish"]], "static_relu() (ivy.container.activations.containerwithactivations static method)": [[101, "ivy.container.activations.ContainerWithActivations.static_relu"], [102, "ivy.container.activations.ContainerWithActivations.static_relu"]], "static_sigmoid() (ivy.container.activations.containerwithactivations static method)": [[101, "ivy.container.activations.ContainerWithActivations.static_sigmoid"], [102, "ivy.container.activations.ContainerWithActivations.static_sigmoid"]], "static_softmax() (ivy.container.activations.containerwithactivations static method)": [[101, "ivy.container.activations.ContainerWithActivations.static_softmax"], [102, "ivy.container.activations.ContainerWithActivations.static_softmax"]], "static_softplus() (ivy.container.activations.containerwithactivations static method)": [[101, "ivy.container.activations.ContainerWithActivations.static_softplus"], [102, "ivy.container.activations.ContainerWithActivations.static_softplus"]], "containerbase (class in ivy.container.base)": [[103, "ivy.container.base.ContainerBase"], [104, "ivy.container.base.ContainerBase"]], "__getitem__() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.__getitem__"], [104, "ivy.container.base.ContainerBase.__getitem__"]], "__init__() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.__init__"], [104, "ivy.container.base.ContainerBase.__init__"]], "__setitem__() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.__setitem__"], [104, "ivy.container.base.ContainerBase.__setitem__"]], "cont_all_false() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_all_false"], [104, "ivy.container.base.ContainerBase.cont_all_false"]], "cont_all_key_chains() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_all_key_chains"], [104, "ivy.container.base.ContainerBase.cont_all_key_chains"]], "cont_all_true() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_all_true"], [104, "ivy.container.base.ContainerBase.cont_all_true"]], "cont_as_bools() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_as_bools"], [104, "ivy.container.base.ContainerBase.cont_as_bools"]], "cont_assert_contains_sub_container() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_assert_contains_sub_container"], [104, "ivy.container.base.ContainerBase.cont_assert_contains_sub_container"]], "cont_assert_contains_sub_structure() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_assert_contains_sub_structure"], [104, "ivy.container.base.ContainerBase.cont_assert_contains_sub_structure"]], "cont_assert_identical() (ivy.container.base.containerbase static method)": [[103, "ivy.container.base.ContainerBase.cont_assert_identical"], [104, "ivy.container.base.ContainerBase.cont_assert_identical"]], "cont_assert_identical_structure() (ivy.container.base.containerbase static method)": [[103, "ivy.container.base.ContainerBase.cont_assert_identical_structure"], [104, "ivy.container.base.ContainerBase.cont_assert_identical_structure"]], "cont_at_key_chain() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_at_key_chain"], [104, "ivy.container.base.ContainerBase.cont_at_key_chain"]], "cont_at_key_chains() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_at_key_chains"], [104, "ivy.container.base.ContainerBase.cont_at_key_chains"]], "cont_at_keys() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_at_keys"], [104, "ivy.container.base.ContainerBase.cont_at_keys"]], "cont_combine() (ivy.container.base.containerbase static method)": [[103, "ivy.container.base.ContainerBase.cont_combine"], [104, "ivy.container.base.ContainerBase.cont_combine"]], "cont_common_key_chains() (ivy.container.base.containerbase static method)": [[103, "ivy.container.base.ContainerBase.cont_common_key_chains"], [104, "ivy.container.base.ContainerBase.cont_common_key_chains"]], "cont_config (ivy.container.base.containerbase property)": [[103, "ivy.container.base.ContainerBase.cont_config"], [104, "ivy.container.base.ContainerBase.cont_config"]], "cont_contains_sub_container() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_contains_sub_container"], [104, "ivy.container.base.ContainerBase.cont_contains_sub_container"]], "cont_contains_sub_structure() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_contains_sub_structure"], [104, "ivy.container.base.ContainerBase.cont_contains_sub_structure"]], "cont_copy() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_copy"], [104, "ivy.container.base.ContainerBase.cont_copy"]], "cont_create_if_absent() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_create_if_absent"], [104, "ivy.container.base.ContainerBase.cont_create_if_absent"]], "cont_cutoff_at_depth() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_cutoff_at_depth"], [104, "ivy.container.base.ContainerBase.cont_cutoff_at_depth"]], "cont_cutoff_at_height() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_cutoff_at_height"], [104, "ivy.container.base.ContainerBase.cont_cutoff_at_height"]], "cont_deep_copy() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_deep_copy"], [104, "ivy.container.base.ContainerBase.cont_deep_copy"]], "cont_dev (ivy.container.base.containerbase property)": [[103, "ivy.container.base.ContainerBase.cont_dev"], [104, "ivy.container.base.ContainerBase.cont_dev"]], "cont_dev_str (ivy.container.base.containerbase property)": [[103, "ivy.container.base.ContainerBase.cont_dev_str"], [104, "ivy.container.base.ContainerBase.cont_dev_str"]], "cont_diff() (ivy.container.base.containerbase static method)": [[103, "ivy.container.base.ContainerBase.cont_diff"], [104, "ivy.container.base.ContainerBase.cont_diff"]], "cont_duplicate_array_keychains() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_duplicate_array_keychains"], [104, "ivy.container.base.ContainerBase.cont_duplicate_array_keychains"]], "cont_find_sub_container() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_find_sub_container"], [104, "ivy.container.base.ContainerBase.cont_find_sub_container"]], "cont_find_sub_structure() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_find_sub_structure"], [104, "ivy.container.base.ContainerBase.cont_find_sub_structure"]], "cont_flatten_key_chain() (ivy.container.base.containerbase static method)": [[103, "ivy.container.base.ContainerBase.cont_flatten_key_chain"], [104, "ivy.container.base.ContainerBase.cont_flatten_key_chain"]], "cont_flatten_key_chains() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_flatten_key_chains"], [104, "ivy.container.base.ContainerBase.cont_flatten_key_chains"]], "cont_format_key_chains() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_format_key_chains"], [104, "ivy.container.base.ContainerBase.cont_format_key_chains"]], "cont_from_disk_as_hdf5() (ivy.container.base.containerbase static method)": [[103, "ivy.container.base.ContainerBase.cont_from_disk_as_hdf5"], [104, "ivy.container.base.ContainerBase.cont_from_disk_as_hdf5"]], "cont_from_disk_as_json() (ivy.container.base.containerbase static method)": [[103, "ivy.container.base.ContainerBase.cont_from_disk_as_json"], [104, "ivy.container.base.ContainerBase.cont_from_disk_as_json"]], "cont_from_disk_as_pickled() (ivy.container.base.containerbase static method)": [[103, "ivy.container.base.ContainerBase.cont_from_disk_as_pickled"], [104, "ivy.container.base.ContainerBase.cont_from_disk_as_pickled"]], "cont_from_flat_list() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_from_flat_list"], [104, "ivy.container.base.ContainerBase.cont_from_flat_list"]], "cont_handle_inplace() (ivy.container.base.containerbase static method)": [[103, "ivy.container.base.ContainerBase.cont_handle_inplace"], [104, "ivy.container.base.ContainerBase.cont_handle_inplace"]], "cont_has_key() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_has_key"], [104, "ivy.container.base.ContainerBase.cont_has_key"]], "cont_has_key_chain() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_has_key_chain"], [104, "ivy.container.base.ContainerBase.cont_has_key_chain"]], "cont_identical() (ivy.container.base.containerbase static method)": [[103, "ivy.container.base.ContainerBase.cont_identical"], [104, "ivy.container.base.ContainerBase.cont_identical"]], "cont_identical_array_shapes() (ivy.container.base.containerbase static method)": [[103, "ivy.container.base.ContainerBase.cont_identical_array_shapes"], [104, "ivy.container.base.ContainerBase.cont_identical_array_shapes"]], "cont_identical_configs() (ivy.container.base.containerbase static method)": [[103, "ivy.container.base.ContainerBase.cont_identical_configs"], [104, "ivy.container.base.ContainerBase.cont_identical_configs"]], "cont_identical_structure() (ivy.container.base.containerbase static method)": [[103, "ivy.container.base.ContainerBase.cont_identical_structure"], [104, "ivy.container.base.ContainerBase.cont_identical_structure"]], "cont_if_exists() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_if_exists"], [104, "ivy.container.base.ContainerBase.cont_if_exists"]], "cont_inplace_update() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_inplace_update"], [104, "ivy.container.base.ContainerBase.cont_inplace_update"]], "cont_ivy (ivy.container.base.containerbase property)": [[103, "ivy.container.base.ContainerBase.cont_ivy"], [104, "ivy.container.base.ContainerBase.cont_ivy"]], "cont_key_chains_containing() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_key_chains_containing"], [104, "ivy.container.base.ContainerBase.cont_key_chains_containing"]], "cont_list_join() (ivy.container.base.containerbase static method)": [[103, "ivy.container.base.ContainerBase.cont_list_join"], [104, "ivy.container.base.ContainerBase.cont_list_join"]], "cont_list_stack() (ivy.container.base.containerbase static method)": [[103, "ivy.container.base.ContainerBase.cont_list_stack"], [104, "ivy.container.base.ContainerBase.cont_list_stack"]], "cont_map() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_map"], [104, "ivy.container.base.ContainerBase.cont_map"]], "cont_map_sub_conts() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_map_sub_conts"], [104, "ivy.container.base.ContainerBase.cont_map_sub_conts"]], "cont_max_depth (ivy.container.base.containerbase property)": [[103, "ivy.container.base.ContainerBase.cont_max_depth"], [104, "ivy.container.base.ContainerBase.cont_max_depth"]], "cont_multi_map() (ivy.container.base.containerbase static method)": [[103, "ivy.container.base.ContainerBase.cont_multi_map"], [104, "ivy.container.base.ContainerBase.cont_multi_map"]], "cont_multi_map_in_function() (ivy.container.base.containerbase static method)": [[103, "ivy.container.base.ContainerBase.cont_multi_map_in_function"], [104, "ivy.container.base.ContainerBase.cont_multi_map_in_function"]], "cont_num_arrays() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_num_arrays"], [104, "ivy.container.base.ContainerBase.cont_num_arrays"]], "cont_overwrite_at_key_chain() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_overwrite_at_key_chain"], [104, "ivy.container.base.ContainerBase.cont_overwrite_at_key_chain"]], "cont_overwrite_at_key_chains() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_overwrite_at_key_chains"], [104, "ivy.container.base.ContainerBase.cont_overwrite_at_key_chains"]], "cont_prune_empty() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_prune_empty"], [104, "ivy.container.base.ContainerBase.cont_prune_empty"]], "cont_prune_key_chain() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_prune_key_chain"], [104, "ivy.container.base.ContainerBase.cont_prune_key_chain"]], "cont_prune_key_chains() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_prune_key_chains"], [104, "ivy.container.base.ContainerBase.cont_prune_key_chains"]], "cont_prune_key_from_key_chains() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_prune_key_from_key_chains"], [104, "ivy.container.base.ContainerBase.cont_prune_key_from_key_chains"]], "cont_prune_keys() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_prune_keys"], [104, "ivy.container.base.ContainerBase.cont_prune_keys"]], "cont_prune_keys_from_key_chains() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_prune_keys_from_key_chains"], [104, "ivy.container.base.ContainerBase.cont_prune_keys_from_key_chains"]], "cont_reduce() (ivy.container.base.containerbase static method)": [[103, "ivy.container.base.ContainerBase.cont_reduce"], [104, "ivy.container.base.ContainerBase.cont_reduce"]], "cont_remove_key_length_limit() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_remove_key_length_limit"], [104, "ivy.container.base.ContainerBase.cont_remove_key_length_limit"]], "cont_remove_print_limit() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_remove_print_limit"], [104, "ivy.container.base.ContainerBase.cont_remove_print_limit"]], "cont_reshape_like() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_reshape_like"], [104, "ivy.container.base.ContainerBase.cont_reshape_like"]], "cont_restructure() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_restructure"], [104, "ivy.container.base.ContainerBase.cont_restructure"]], "cont_restructure_key_chains() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_restructure_key_chains"], [104, "ivy.container.base.ContainerBase.cont_restructure_key_chains"]], "cont_set_at_key_chain() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_set_at_key_chain"], [104, "ivy.container.base.ContainerBase.cont_set_at_key_chain"]], "cont_set_at_key_chains() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_set_at_key_chains"], [104, "ivy.container.base.ContainerBase.cont_set_at_key_chains"]], "cont_set_at_keys() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_set_at_keys"], [104, "ivy.container.base.ContainerBase.cont_set_at_keys"]], "cont_shape (ivy.container.base.containerbase property)": [[103, "ivy.container.base.ContainerBase.cont_shape"], [104, "ivy.container.base.ContainerBase.cont_shape"]], "cont_shapes (ivy.container.base.containerbase property)": [[103, "ivy.container.base.ContainerBase.cont_shapes"], [104, "ivy.container.base.ContainerBase.cont_shapes"]], "cont_show() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_show"], [104, "ivy.container.base.ContainerBase.cont_show"]], "cont_show_sub_container() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_show_sub_container"], [104, "ivy.container.base.ContainerBase.cont_show_sub_container"]], "cont_size_ordered_arrays() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_size_ordered_arrays"], [104, "ivy.container.base.ContainerBase.cont_size_ordered_arrays"]], "cont_slice_keys() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_slice_keys"], [104, "ivy.container.base.ContainerBase.cont_slice_keys"]], "cont_slice_via_key() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_slice_via_key"], [104, "ivy.container.base.ContainerBase.cont_slice_via_key"]], "cont_sort_by_key() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_sort_by_key"], [104, "ivy.container.base.ContainerBase.cont_sort_by_key"]], "cont_structural_diff() (ivy.container.base.containerbase static method)": [[103, "ivy.container.base.ContainerBase.cont_structural_diff"], [104, "ivy.container.base.ContainerBase.cont_structural_diff"]], "cont_to_dict() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_to_dict"], [104, "ivy.container.base.ContainerBase.cont_to_dict"]], "cont_to_disk_as_hdf5() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_to_disk_as_hdf5"], [104, "ivy.container.base.ContainerBase.cont_to_disk_as_hdf5"]], "cont_to_disk_as_json() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_to_disk_as_json"], [104, "ivy.container.base.ContainerBase.cont_to_disk_as_json"]], "cont_to_disk_as_pickled() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_to_disk_as_pickled"], [104, "ivy.container.base.ContainerBase.cont_to_disk_as_pickled"]], "cont_to_flat_list() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_to_flat_list"], [104, "ivy.container.base.ContainerBase.cont_to_flat_list"]], "cont_to_iterator() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_to_iterator"], [104, "ivy.container.base.ContainerBase.cont_to_iterator"]], "cont_to_iterator_keys() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_to_iterator_keys"], [104, "ivy.container.base.ContainerBase.cont_to_iterator_keys"]], "cont_to_iterator_values() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_to_iterator_values"], [104, "ivy.container.base.ContainerBase.cont_to_iterator_values"]], "cont_to_jsonable() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_to_jsonable"], [104, "ivy.container.base.ContainerBase.cont_to_jsonable"]], "cont_to_nested_list() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_to_nested_list"], [104, "ivy.container.base.ContainerBase.cont_to_nested_list"]], "cont_to_raw() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_to_raw"], [104, "ivy.container.base.ContainerBase.cont_to_raw"]], "cont_trim_key() (ivy.container.base.containerbase static method)": [[103, "ivy.container.base.ContainerBase.cont_trim_key"], [104, "ivy.container.base.ContainerBase.cont_trim_key"]], "cont_try_kc() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_try_kc"], [104, "ivy.container.base.ContainerBase.cont_try_kc"]], "cont_unify() (ivy.container.base.containerbase static method)": [[103, "ivy.container.base.ContainerBase.cont_unify"], [104, "ivy.container.base.ContainerBase.cont_unify"]], "cont_unstack_conts() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_unstack_conts"], [104, "ivy.container.base.ContainerBase.cont_unstack_conts"]], "cont_update_config() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_update_config"], [104, "ivy.container.base.ContainerBase.cont_update_config"]], "cont_with_default_key_color() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_with_default_key_color"], [104, "ivy.container.base.ContainerBase.cont_with_default_key_color"]], "cont_with_entries_as_lists() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_with_entries_as_lists"], [104, "ivy.container.base.ContainerBase.cont_with_entries_as_lists"]], "cont_with_ivy_backend() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_with_ivy_backend"], [104, "ivy.container.base.ContainerBase.cont_with_ivy_backend"]], "cont_with_key_length_limit() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_with_key_length_limit"], [104, "ivy.container.base.ContainerBase.cont_with_key_length_limit"]], "cont_with_print_indent() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_with_print_indent"], [104, "ivy.container.base.ContainerBase.cont_with_print_indent"]], "cont_with_print_limit() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_with_print_limit"], [104, "ivy.container.base.ContainerBase.cont_with_print_limit"]], "cont_with_print_line_spacing() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.cont_with_print_line_spacing"], [104, "ivy.container.base.ContainerBase.cont_with_print_line_spacing"]], "dynamic_backend (ivy.container.base.containerbase property)": [[103, "ivy.container.base.ContainerBase.dynamic_backend"], [104, "ivy.container.base.ContainerBase.dynamic_backend"]], "h5_file_size() (ivy.container.base.containerbase static method)": [[103, "ivy.container.base.ContainerBase.h5_file_size"], [104, "ivy.container.base.ContainerBase.h5_file_size"]], "ivy.container.base": [[103, "module-ivy.container.base"]], "shuffle_h5_file() (ivy.container.base.containerbase static method)": [[103, "ivy.container.base.ContainerBase.shuffle_h5_file"], [104, "ivy.container.base.ContainerBase.shuffle_h5_file"]], "split_conts() (ivy.container.base.containerbase method)": [[103, "ivy.container.base.ContainerBase.split_conts"], [104, "ivy.container.base.ContainerBase.split_conts"]], "containerwithconversions (class in ivy.container.conversions)": [[107, "ivy.container.conversions.ContainerWithConversions"], [108, "ivy.container.conversions.ContainerWithConversions"]], "ivy.container.conversions": [[107, "module-ivy.container.conversions"]], "static_to_ivy() (ivy.container.conversions.containerwithconversions static method)": [[107, "ivy.container.conversions.ContainerWithConversions.static_to_ivy"], [108, "ivy.container.conversions.ContainerWithConversions.static_to_ivy"]], "static_to_native() (ivy.container.conversions.containerwithconversions static method)": [[107, "ivy.container.conversions.ContainerWithConversions.static_to_native"], [108, "ivy.container.conversions.ContainerWithConversions.static_to_native"]], "to_ivy() (ivy.container.conversions.containerwithconversions method)": [[107, "ivy.container.conversions.ContainerWithConversions.to_ivy"], [108, "ivy.container.conversions.ContainerWithConversions.to_ivy"]], "to_native() (ivy.container.conversions.containerwithconversions method)": [[107, "ivy.container.conversions.ContainerWithConversions.to_native"], [108, "ivy.container.conversions.ContainerWithConversions.to_native"]], "containerwithcreation (class in ivy.container.creation)": [[109, "ivy.container.creation.ContainerWithCreation"], [110, "ivy.container.creation.ContainerWithCreation"]], "empty_like() (ivy.container.creation.containerwithcreation method)": [[109, "ivy.container.creation.ContainerWithCreation.empty_like"], [110, "ivy.container.creation.ContainerWithCreation.empty_like"]], "from_dlpack() (ivy.container.creation.containerwithcreation method)": [[109, "ivy.container.creation.ContainerWithCreation.from_dlpack"], [110, "ivy.container.creation.ContainerWithCreation.from_dlpack"]], "full_like() (ivy.container.creation.containerwithcreation method)": [[109, "ivy.container.creation.ContainerWithCreation.full_like"], [110, "ivy.container.creation.ContainerWithCreation.full_like"]], "ivy.container.creation": [[109, "module-ivy.container.creation"]], "linspace() (ivy.container.creation.containerwithcreation method)": [[109, "ivy.container.creation.ContainerWithCreation.linspace"], [110, "ivy.container.creation.ContainerWithCreation.linspace"]], "logspace() (ivy.container.creation.containerwithcreation method)": [[109, "ivy.container.creation.ContainerWithCreation.logspace"], [110, "ivy.container.creation.ContainerWithCreation.logspace"]], "meshgrid() (ivy.container.creation.containerwithcreation method)": [[109, "ivy.container.creation.ContainerWithCreation.meshgrid"], [110, "ivy.container.creation.ContainerWithCreation.meshgrid"]], "native_array() (ivy.container.creation.containerwithcreation method)": [[109, "ivy.container.creation.ContainerWithCreation.native_array"], [110, "ivy.container.creation.ContainerWithCreation.native_array"]], "one_hot() (ivy.container.creation.containerwithcreation method)": [[109, "ivy.container.creation.ContainerWithCreation.one_hot"], [110, "ivy.container.creation.ContainerWithCreation.one_hot"]], "ones_like() (ivy.container.creation.containerwithcreation method)": [[109, "ivy.container.creation.ContainerWithCreation.ones_like"], [110, "ivy.container.creation.ContainerWithCreation.ones_like"]], "static_arange() (ivy.container.creation.containerwithcreation static method)": [[109, "ivy.container.creation.ContainerWithCreation.static_arange"], [110, "ivy.container.creation.ContainerWithCreation.static_arange"]], "static_asarray() (ivy.container.creation.containerwithcreation static method)": [[109, "ivy.container.creation.ContainerWithCreation.static_asarray"], [110, "ivy.container.creation.ContainerWithCreation.static_asarray"]], "static_empty_like() (ivy.container.creation.containerwithcreation static method)": [[109, "ivy.container.creation.ContainerWithCreation.static_empty_like"], [110, "ivy.container.creation.ContainerWithCreation.static_empty_like"]], "static_eye() (ivy.container.creation.containerwithcreation static method)": [[109, "ivy.container.creation.ContainerWithCreation.static_eye"], [110, "ivy.container.creation.ContainerWithCreation.static_eye"]], "static_from_dlpack() (ivy.container.creation.containerwithcreation static method)": [[109, "ivy.container.creation.ContainerWithCreation.static_from_dlpack"], [110, "ivy.container.creation.ContainerWithCreation.static_from_dlpack"]], "static_full_like() (ivy.container.creation.containerwithcreation static method)": [[109, "ivy.container.creation.ContainerWithCreation.static_full_like"], [110, "ivy.container.creation.ContainerWithCreation.static_full_like"]], "static_linspace() (ivy.container.creation.containerwithcreation static method)": [[109, "ivy.container.creation.ContainerWithCreation.static_linspace"], [110, "ivy.container.creation.ContainerWithCreation.static_linspace"]], "static_logspace() (ivy.container.creation.containerwithcreation static method)": [[109, "ivy.container.creation.ContainerWithCreation.static_logspace"], [110, "ivy.container.creation.ContainerWithCreation.static_logspace"]], "static_meshgrid() (ivy.container.creation.containerwithcreation static method)": [[109, "ivy.container.creation.ContainerWithCreation.static_meshgrid"], [110, "ivy.container.creation.ContainerWithCreation.static_meshgrid"]], "static_native_array() (ivy.container.creation.containerwithcreation static method)": [[109, "ivy.container.creation.ContainerWithCreation.static_native_array"], [110, "ivy.container.creation.ContainerWithCreation.static_native_array"]], "static_one_hot() (ivy.container.creation.containerwithcreation static method)": [[109, "ivy.container.creation.ContainerWithCreation.static_one_hot"], [110, "ivy.container.creation.ContainerWithCreation.static_one_hot"]], "static_ones() (ivy.container.creation.containerwithcreation static method)": [[109, "ivy.container.creation.ContainerWithCreation.static_ones"], [110, "ivy.container.creation.ContainerWithCreation.static_ones"]], "static_ones_like() (ivy.container.creation.containerwithcreation static method)": [[109, "ivy.container.creation.ContainerWithCreation.static_ones_like"], [110, "ivy.container.creation.ContainerWithCreation.static_ones_like"]], "static_tril() (ivy.container.creation.containerwithcreation static method)": [[109, "ivy.container.creation.ContainerWithCreation.static_tril"], [110, "ivy.container.creation.ContainerWithCreation.static_tril"]], "static_triu() (ivy.container.creation.containerwithcreation static method)": [[109, "ivy.container.creation.ContainerWithCreation.static_triu"], [110, "ivy.container.creation.ContainerWithCreation.static_triu"]], "static_zeros() (ivy.container.creation.containerwithcreation static method)": [[109, "ivy.container.creation.ContainerWithCreation.static_zeros"], [110, "ivy.container.creation.ContainerWithCreation.static_zeros"]], "static_zeros_like() (ivy.container.creation.containerwithcreation static method)": [[109, "ivy.container.creation.ContainerWithCreation.static_zeros_like"], [110, "ivy.container.creation.ContainerWithCreation.static_zeros_like"]], "tril() (ivy.container.creation.containerwithcreation method)": [[109, "ivy.container.creation.ContainerWithCreation.tril"], [110, "ivy.container.creation.ContainerWithCreation.tril"]], "triu() (ivy.container.creation.containerwithcreation method)": [[109, "ivy.container.creation.ContainerWithCreation.triu"], [110, "ivy.container.creation.ContainerWithCreation.triu"]], "zeros_like() (ivy.container.creation.containerwithcreation method)": [[109, "ivy.container.creation.ContainerWithCreation.zeros_like"], [110, "ivy.container.creation.ContainerWithCreation.zeros_like"]], "containerwithdatatypes (class in ivy.container.data_type)": [[111, "ivy.container.data_type.ContainerWithDataTypes"], [112, "ivy.container.data_type.ContainerWithDataTypes"]], "astype() (ivy.container.data_type.containerwithdatatypes method)": [[111, "ivy.container.data_type.ContainerWithDataTypes.astype"], [112, "ivy.container.data_type.ContainerWithDataTypes.astype"]], "broadcast_arrays() (ivy.container.data_type.containerwithdatatypes method)": [[111, "ivy.container.data_type.ContainerWithDataTypes.broadcast_arrays"], [112, "ivy.container.data_type.ContainerWithDataTypes.broadcast_arrays"]], "broadcast_to() (ivy.container.data_type.containerwithdatatypes method)": [[111, "ivy.container.data_type.ContainerWithDataTypes.broadcast_to"], [112, "ivy.container.data_type.ContainerWithDataTypes.broadcast_to"]], "can_cast() (ivy.container.data_type.containerwithdatatypes method)": [[111, "ivy.container.data_type.ContainerWithDataTypes.can_cast"], [112, "ivy.container.data_type.ContainerWithDataTypes.can_cast"]], "dtype() (ivy.container.data_type.containerwithdatatypes method)": [[111, "ivy.container.data_type.ContainerWithDataTypes.dtype"], [112, "ivy.container.data_type.ContainerWithDataTypes.dtype"]], "finfo() (ivy.container.data_type.containerwithdatatypes method)": [[111, "ivy.container.data_type.ContainerWithDataTypes.finfo"], [112, "ivy.container.data_type.ContainerWithDataTypes.finfo"]], "iinfo() (ivy.container.data_type.containerwithdatatypes method)": [[111, "ivy.container.data_type.ContainerWithDataTypes.iinfo"], [112, "ivy.container.data_type.ContainerWithDataTypes.iinfo"]], "is_bool_dtype() (ivy.container.data_type.containerwithdatatypes method)": [[111, "ivy.container.data_type.ContainerWithDataTypes.is_bool_dtype"], [112, "ivy.container.data_type.ContainerWithDataTypes.is_bool_dtype"]], "is_complex_dtype() (ivy.container.data_type.containerwithdatatypes method)": [[111, "ivy.container.data_type.ContainerWithDataTypes.is_complex_dtype"], [112, "ivy.container.data_type.ContainerWithDataTypes.is_complex_dtype"]], "is_float_dtype() (ivy.container.data_type.containerwithdatatypes method)": [[111, "ivy.container.data_type.ContainerWithDataTypes.is_float_dtype"], [112, "ivy.container.data_type.ContainerWithDataTypes.is_float_dtype"]], "is_int_dtype() (ivy.container.data_type.containerwithdatatypes method)": [[111, "ivy.container.data_type.ContainerWithDataTypes.is_int_dtype"], [112, "ivy.container.data_type.ContainerWithDataTypes.is_int_dtype"]], "is_uint_dtype() (ivy.container.data_type.containerwithdatatypes method)": [[111, "ivy.container.data_type.ContainerWithDataTypes.is_uint_dtype"], [112, "ivy.container.data_type.ContainerWithDataTypes.is_uint_dtype"]], "ivy.container.data_type": [[111, "module-ivy.container.data_type"]], "result_type() (ivy.container.data_type.containerwithdatatypes method)": [[111, "ivy.container.data_type.ContainerWithDataTypes.result_type"], [112, "ivy.container.data_type.ContainerWithDataTypes.result_type"]], "static_astype() (ivy.container.data_type.containerwithdatatypes static method)": [[111, "ivy.container.data_type.ContainerWithDataTypes.static_astype"], [112, "ivy.container.data_type.ContainerWithDataTypes.static_astype"]], "static_broadcast_arrays() (ivy.container.data_type.containerwithdatatypes static method)": [[111, "ivy.container.data_type.ContainerWithDataTypes.static_broadcast_arrays"], [112, "ivy.container.data_type.ContainerWithDataTypes.static_broadcast_arrays"]], "static_broadcast_to() (ivy.container.data_type.containerwithdatatypes static method)": [[111, "ivy.container.data_type.ContainerWithDataTypes.static_broadcast_to"], [112, "ivy.container.data_type.ContainerWithDataTypes.static_broadcast_to"]], "static_can_cast() (ivy.container.data_type.containerwithdatatypes static method)": [[111, "ivy.container.data_type.ContainerWithDataTypes.static_can_cast"], [112, "ivy.container.data_type.ContainerWithDataTypes.static_can_cast"]], "static_default_complex_dtype() (ivy.container.data_type.containerwithdatatypes static method)": [[111, "ivy.container.data_type.ContainerWithDataTypes.static_default_complex_dtype"], [112, "ivy.container.data_type.ContainerWithDataTypes.static_default_complex_dtype"]], "static_default_float_dtype() (ivy.container.data_type.containerwithdatatypes static method)": [[111, "ivy.container.data_type.ContainerWithDataTypes.static_default_float_dtype"], [112, "ivy.container.data_type.ContainerWithDataTypes.static_default_float_dtype"]], "static_dtype() (ivy.container.data_type.containerwithdatatypes static method)": [[111, "ivy.container.data_type.ContainerWithDataTypes.static_dtype"], [112, "ivy.container.data_type.ContainerWithDataTypes.static_dtype"]], "static_finfo() (ivy.container.data_type.containerwithdatatypes static method)": [[111, "ivy.container.data_type.ContainerWithDataTypes.static_finfo"], [112, "ivy.container.data_type.ContainerWithDataTypes.static_finfo"]], "static_function_supported_dtypes() (ivy.container.data_type.containerwithdatatypes static method)": [[111, "ivy.container.data_type.ContainerWithDataTypes.static_function_supported_dtypes"], [112, "ivy.container.data_type.ContainerWithDataTypes.static_function_supported_dtypes"]], "static_function_unsupported_dtypes() (ivy.container.data_type.containerwithdatatypes static method)": [[111, "ivy.container.data_type.ContainerWithDataTypes.static_function_unsupported_dtypes"], [112, "ivy.container.data_type.ContainerWithDataTypes.static_function_unsupported_dtypes"]], "static_iinfo() (ivy.container.data_type.containerwithdatatypes static method)": [[111, "ivy.container.data_type.ContainerWithDataTypes.static_iinfo"], [112, "ivy.container.data_type.ContainerWithDataTypes.static_iinfo"]], "static_is_bool_dtype() (ivy.container.data_type.containerwithdatatypes static method)": [[111, "ivy.container.data_type.ContainerWithDataTypes.static_is_bool_dtype"], [112, "ivy.container.data_type.ContainerWithDataTypes.static_is_bool_dtype"]], "static_is_complex_dtype() (ivy.container.data_type.containerwithdatatypes static method)": [[111, "ivy.container.data_type.ContainerWithDataTypes.static_is_complex_dtype"], [112, "ivy.container.data_type.ContainerWithDataTypes.static_is_complex_dtype"]], "static_is_float_dtype() (ivy.container.data_type.containerwithdatatypes static method)": [[111, "ivy.container.data_type.ContainerWithDataTypes.static_is_float_dtype"], [112, "ivy.container.data_type.ContainerWithDataTypes.static_is_float_dtype"]], "static_is_int_dtype() (ivy.container.data_type.containerwithdatatypes static method)": [[111, "ivy.container.data_type.ContainerWithDataTypes.static_is_int_dtype"], [112, "ivy.container.data_type.ContainerWithDataTypes.static_is_int_dtype"]], "static_is_uint_dtype() (ivy.container.data_type.containerwithdatatypes static method)": [[111, "ivy.container.data_type.ContainerWithDataTypes.static_is_uint_dtype"], [112, "ivy.container.data_type.ContainerWithDataTypes.static_is_uint_dtype"]], "static_result_type() (ivy.container.data_type.containerwithdatatypes static method)": [[111, "ivy.container.data_type.ContainerWithDataTypes.static_result_type"], [112, "ivy.container.data_type.ContainerWithDataTypes.static_result_type"]], "containerwithdevice (class in ivy.container.device)": [[113, "ivy.container.device.ContainerWithDevice"], [114, "ivy.container.device.ContainerWithDevice"]], "dev() (ivy.container.device.containerwithdevice method)": [[113, "ivy.container.device.ContainerWithDevice.dev"], [114, "ivy.container.device.ContainerWithDevice.dev"]], "ivy.container.device": [[113, "module-ivy.container.device"]], "static_dev() (ivy.container.device.containerwithdevice static method)": [[113, "ivy.container.device.ContainerWithDevice.static_dev"], [114, "ivy.container.device.ContainerWithDevice.static_dev"]], "static_to_device() (ivy.container.device.containerwithdevice static method)": [[113, "ivy.container.device.ContainerWithDevice.static_to_device"], [114, "ivy.container.device.ContainerWithDevice.static_to_device"]], "to_device() (ivy.container.device.containerwithdevice method)": [[113, "ivy.container.device.ContainerWithDevice.to_device"], [114, "ivy.container.device.ContainerWithDevice.to_device"]], "containerwithelementwise (class in ivy.container.elementwise)": [[115, "ivy.container.elementwise.ContainerWithElementwise"], [116, "ivy.container.elementwise.ContainerWithElementwise"]], "abs() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.abs"], [116, "ivy.container.elementwise.ContainerWithElementwise.abs"]], "acos() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.acos"], [116, "ivy.container.elementwise.ContainerWithElementwise.acos"]], "acosh() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.acosh"], [116, "ivy.container.elementwise.ContainerWithElementwise.acosh"]], "add() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.add"], [116, "ivy.container.elementwise.ContainerWithElementwise.add"]], "asin() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.asin"], [116, "ivy.container.elementwise.ContainerWithElementwise.asin"]], "asinh() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.asinh"], [116, "ivy.container.elementwise.ContainerWithElementwise.asinh"]], "atan() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.atan"], [116, "ivy.container.elementwise.ContainerWithElementwise.atan"]], "atan2() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.atan2"], [116, "ivy.container.elementwise.ContainerWithElementwise.atan2"]], "atanh() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.atanh"], [116, "ivy.container.elementwise.ContainerWithElementwise.atanh"]], "bitwise_and() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.bitwise_and"], [116, "ivy.container.elementwise.ContainerWithElementwise.bitwise_and"]], "bitwise_invert() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.bitwise_invert"], [116, "ivy.container.elementwise.ContainerWithElementwise.bitwise_invert"]], "bitwise_left_shift() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.bitwise_left_shift"], [116, "ivy.container.elementwise.ContainerWithElementwise.bitwise_left_shift"]], "bitwise_or() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.bitwise_or"], [116, "ivy.container.elementwise.ContainerWithElementwise.bitwise_or"]], "bitwise_right_shift() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.bitwise_right_shift"], [116, "ivy.container.elementwise.ContainerWithElementwise.bitwise_right_shift"]], "bitwise_xor() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.bitwise_xor"], [116, "ivy.container.elementwise.ContainerWithElementwise.bitwise_xor"]], "ceil() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.ceil"], [116, "ivy.container.elementwise.ContainerWithElementwise.ceil"]], "cos() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.cos"], [116, "ivy.container.elementwise.ContainerWithElementwise.cos"]], "cosh() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.cosh"], [116, "ivy.container.elementwise.ContainerWithElementwise.cosh"]], "deg2rad() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.deg2rad"], [116, "ivy.container.elementwise.ContainerWithElementwise.deg2rad"]], "divide() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.divide"], [116, "ivy.container.elementwise.ContainerWithElementwise.divide"]], "equal() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.equal"], [116, "ivy.container.elementwise.ContainerWithElementwise.equal"]], "erf() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.erf"], [116, "ivy.container.elementwise.ContainerWithElementwise.erf"]], "exp() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.exp"], [116, "ivy.container.elementwise.ContainerWithElementwise.exp"]], "expm1() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.expm1"], [116, "ivy.container.elementwise.ContainerWithElementwise.expm1"]], "floor() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.floor"], [116, "ivy.container.elementwise.ContainerWithElementwise.floor"]], "floor_divide() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.floor_divide"], [116, "ivy.container.elementwise.ContainerWithElementwise.floor_divide"]], "greater() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.greater"], [116, "ivy.container.elementwise.ContainerWithElementwise.greater"]], "greater_equal() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.greater_equal"], [116, "ivy.container.elementwise.ContainerWithElementwise.greater_equal"]], "isfinite() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.isfinite"], [116, "ivy.container.elementwise.ContainerWithElementwise.isfinite"]], "isinf() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.isinf"], [116, "ivy.container.elementwise.ContainerWithElementwise.isinf"]], "isnan() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.isnan"], [116, "ivy.container.elementwise.ContainerWithElementwise.isnan"]], "isreal() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.isreal"], [116, "ivy.container.elementwise.ContainerWithElementwise.isreal"]], "ivy.container.elementwise": [[115, "module-ivy.container.elementwise"]], "less() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.less"], [116, "ivy.container.elementwise.ContainerWithElementwise.less"]], "less_equal() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.less_equal"], [116, "ivy.container.elementwise.ContainerWithElementwise.less_equal"]], "log() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.log"], [116, "ivy.container.elementwise.ContainerWithElementwise.log"]], "log10() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.log10"], [116, "ivy.container.elementwise.ContainerWithElementwise.log10"]], "log1p() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.log1p"], [116, "ivy.container.elementwise.ContainerWithElementwise.log1p"]], "log2() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.log2"], [116, "ivy.container.elementwise.ContainerWithElementwise.log2"]], "logaddexp() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.logaddexp"], [116, "ivy.container.elementwise.ContainerWithElementwise.logaddexp"]], "logical_and() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.logical_and"], [116, "ivy.container.elementwise.ContainerWithElementwise.logical_and"]], "logical_not() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.logical_not"], [116, "ivy.container.elementwise.ContainerWithElementwise.logical_not"]], "logical_or() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.logical_or"], [116, "ivy.container.elementwise.ContainerWithElementwise.logical_or"]], "logical_xor() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.logical_xor"], [116, "ivy.container.elementwise.ContainerWithElementwise.logical_xor"]], "maximum() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.maximum"], [116, "ivy.container.elementwise.ContainerWithElementwise.maximum"]], "minimum() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.minimum"], [116, "ivy.container.elementwise.ContainerWithElementwise.minimum"]], "multiply() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.multiply"], [116, "ivy.container.elementwise.ContainerWithElementwise.multiply"]], "negative() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.negative"], [116, "ivy.container.elementwise.ContainerWithElementwise.negative"]], "not_equal() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.not_equal"], [116, "ivy.container.elementwise.ContainerWithElementwise.not_equal"]], "positive() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.positive"], [116, "ivy.container.elementwise.ContainerWithElementwise.positive"]], "pow() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.pow"], [116, "ivy.container.elementwise.ContainerWithElementwise.pow"]], "rad2deg() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.rad2deg"], [116, "ivy.container.elementwise.ContainerWithElementwise.rad2deg"]], "reciprocal() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.reciprocal"], [116, "ivy.container.elementwise.ContainerWithElementwise.reciprocal"]], "remainder() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.remainder"], [116, "ivy.container.elementwise.ContainerWithElementwise.remainder"]], "round() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.round"], [116, "ivy.container.elementwise.ContainerWithElementwise.round"]], "sign() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.sign"], [116, "ivy.container.elementwise.ContainerWithElementwise.sign"]], "sin() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.sin"], [116, "ivy.container.elementwise.ContainerWithElementwise.sin"]], "sinh() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.sinh"], [116, "ivy.container.elementwise.ContainerWithElementwise.sinh"]], "sqrt() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.sqrt"], [116, "ivy.container.elementwise.ContainerWithElementwise.sqrt"]], "square() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.square"], [116, "ivy.container.elementwise.ContainerWithElementwise.square"]], "static_abs() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_abs"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_abs"]], "static_acos() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_acos"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_acos"]], "static_acosh() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_acosh"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_acosh"]], "static_add() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_add"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_add"]], "static_asin() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_asin"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_asin"]], "static_asinh() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_asinh"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_asinh"]], "static_atan() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_atan"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_atan"]], "static_atan2() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_atan2"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_atan2"]], "static_atanh() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_atanh"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_atanh"]], "static_bitwise_and() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_and"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_and"]], "static_bitwise_invert() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_invert"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_invert"]], "static_bitwise_left_shift() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_left_shift"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_left_shift"]], "static_bitwise_or() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_or"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_or"]], "static_bitwise_right_shift() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_right_shift"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_right_shift"]], "static_bitwise_xor() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_xor"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_bitwise_xor"]], "static_ceil() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_ceil"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_ceil"]], "static_cos() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_cos"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_cos"]], "static_cosh() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_cosh"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_cosh"]], "static_deg2rad() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_deg2rad"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_deg2rad"]], "static_divide() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_divide"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_divide"]], "static_equal() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_equal"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_equal"]], "static_erf() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_erf"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_erf"]], "static_exp() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_exp"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_exp"]], "static_expm1() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_expm1"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_expm1"]], "static_floor() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_floor"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_floor"]], "static_floor_divide() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_floor_divide"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_floor_divide"]], "static_greater() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_greater"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_greater"]], "static_greater_equal() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_greater_equal"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_greater_equal"]], "static_isfinite() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_isfinite"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_isfinite"]], "static_isinf() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_isinf"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_isinf"]], "static_isnan() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_isnan"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_isnan"]], "static_isreal() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_isreal"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_isreal"]], "static_less() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_less"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_less"]], "static_less_equal() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_less_equal"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_less_equal"]], "static_log() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_log"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_log"]], "static_log10() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_log10"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_log10"]], "static_log1p() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_log1p"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_log1p"]], "static_log2() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_log2"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_log2"]], "static_logaddexp() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_logaddexp"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_logaddexp"]], "static_logical_and() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_logical_and"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_logical_and"]], "static_logical_not() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_logical_not"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_logical_not"]], "static_logical_or() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_logical_or"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_logical_or"]], "static_logical_xor() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_logical_xor"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_logical_xor"]], "static_maximum() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_maximum"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_maximum"]], "static_minimum() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_minimum"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_minimum"]], "static_multiply() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_multiply"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_multiply"]], "static_negative() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_negative"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_negative"]], "static_not_equal() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_not_equal"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_not_equal"]], "static_positive() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_positive"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_positive"]], "static_pow() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_pow"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_pow"]], "static_rad2deg() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_rad2deg"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_rad2deg"]], "static_reciprocal() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_reciprocal"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_reciprocal"]], "static_remainder() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_remainder"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_remainder"]], "static_round() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_round"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_round"]], "static_sign() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_sign"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_sign"]], "static_sin() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_sin"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_sin"]], "static_sinh() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_sinh"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_sinh"]], "static_sqrt() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_sqrt"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_sqrt"]], "static_square() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_square"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_square"]], "static_subtract() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_subtract"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_subtract"]], "static_tan() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_tan"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_tan"]], "static_tanh() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_tanh"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_tanh"]], "static_trapz() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_trapz"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_trapz"]], "static_trunc() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_trunc"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_trunc"]], "static_trunc_divide() (ivy.container.elementwise.containerwithelementwise static method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.static_trunc_divide"], [116, "ivy.container.elementwise.ContainerWithElementwise.static_trunc_divide"]], "subtract() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.subtract"], [116, "ivy.container.elementwise.ContainerWithElementwise.subtract"]], "tan() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.tan"], [116, "ivy.container.elementwise.ContainerWithElementwise.tan"]], "tanh() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.tanh"], [116, "ivy.container.elementwise.ContainerWithElementwise.tanh"]], "trapz() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.trapz"], [116, "ivy.container.elementwise.ContainerWithElementwise.trapz"]], "trunc() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.trunc"], [116, "ivy.container.elementwise.ContainerWithElementwise.trunc"]], "trunc_divide() (ivy.container.elementwise.containerwithelementwise method)": [[115, "ivy.container.elementwise.ContainerWithElementwise.trunc_divide"], [116, "ivy.container.elementwise.ContainerWithElementwise.trunc_divide"]], "containerwithactivationexperimental (class in ivy.container.experimental)": [[117, "ivy.container.experimental.ContainerWithActivationExperimental"]], "containerwithconversionexperimental (class in ivy.container.experimental)": [[117, "ivy.container.experimental.ContainerWithConversionExperimental"]], "containerwithcreationexperimental (class in ivy.container.experimental)": [[117, "ivy.container.experimental.ContainerWithCreationExperimental"]], "containerwithdata_typeexperimental (class in ivy.container.experimental)": [[117, "ivy.container.experimental.ContainerWithData_typeExperimental"]], "containerwithdeviceexperimental (class in ivy.container.experimental)": [[117, "ivy.container.experimental.ContainerWithDeviceExperimental"]], "containerwithelementwiseexperimental (class in ivy.container.experimental)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental"]], "containerwithgeneralexperimental (class in ivy.container.experimental)": [[117, "ivy.container.experimental.ContainerWithGeneralExperimental"]], "containerwithgradientsexperimental (class in ivy.container.experimental)": [[117, "ivy.container.experimental.ContainerWithGradientsExperimental"]], "containerwithimageexperimental (class in ivy.container.experimental)": [[117, "ivy.container.experimental.ContainerWithImageExperimental"]], "containerwithlayersexperimental (class in ivy.container.experimental)": [[117, "ivy.container.experimental.ContainerWithLayersExperimental"]], "containerwithlinearalgebraexperimental (class in ivy.container.experimental)": [[117, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental"]], "containerwithlossesexperimental (class in ivy.container.experimental)": [[117, "ivy.container.experimental.ContainerWithLossesExperimental"]], "containerwithmanipulationexperimental (class in ivy.container.experimental)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental"]], "containerwithnormsexperimental (class in ivy.container.experimental)": [[117, "ivy.container.experimental.ContainerWithNormsExperimental"]], "containerwithrandomexperimental (class in ivy.container.experimental)": [[117, "ivy.container.experimental.ContainerWithRandomExperimental"]], "containerwithsearchingexperimental (class in ivy.container.experimental)": [[117, "ivy.container.experimental.ContainerWithSearchingExperimental"]], "containerwithsetexperimental (class in ivy.container.experimental)": [[117, "ivy.container.experimental.ContainerWithSetExperimental"]], "containerwithsortingexperimental (class in ivy.container.experimental)": [[117, "ivy.container.experimental.ContainerWithSortingExperimental"]], "containerwithstatisticalexperimental (class in ivy.container.experimental)": [[117, "ivy.container.experimental.ContainerWithStatisticalExperimental"]], "containerwithutilityexperimental (class in ivy.container.experimental)": [[117, "ivy.container.experimental.ContainerWithUtilityExperimental"]], "adjoint() (ivy.container.experimental.containerwithlinearalgebraexperimental method)": [[117, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.adjoint"]], "allclose() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.allclose"]], "angle() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.angle"]], "atleast_1d() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.atleast_1d"]], "atleast_2d() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.atleast_2d"]], "atleast_3d() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.atleast_3d"]], "avg_pool1d() (ivy.container.experimental.containerwithlayersexperimental method)": [[117, "ivy.container.experimental.ContainerWithLayersExperimental.avg_pool1d"]], "avg_pool2d() (ivy.container.experimental.containerwithlayersexperimental method)": [[117, "ivy.container.experimental.ContainerWithLayersExperimental.avg_pool2d"]], "avg_pool3d() (ivy.container.experimental.containerwithlayersexperimental method)": [[117, "ivy.container.experimental.ContainerWithLayersExperimental.avg_pool3d"]], "bernoulli() (ivy.container.experimental.containerwithrandomexperimental method)": [[117, "ivy.container.experimental.ContainerWithRandomExperimental.bernoulli"]], "beta() (ivy.container.experimental.containerwithrandomexperimental method)": [[117, "ivy.container.experimental.ContainerWithRandomExperimental.beta"]], "binarizer() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.binarizer"]], "binary_cross_entropy_with_logits() (ivy.container.experimental.containerwithlossesexperimental method)": [[117, "ivy.container.experimental.ContainerWithLossesExperimental.binary_cross_entropy_with_logits"]], "broadcast_shapes() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.broadcast_shapes"]], "copysign() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.copysign"]], "corrcoef() (ivy.container.experimental.containerwithstatisticalexperimental method)": [[117, "ivy.container.experimental.ContainerWithStatisticalExperimental.corrcoef"]], "count_nonzero() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.count_nonzero"]], "dct() (ivy.container.experimental.containerwithlayersexperimental method)": [[117, "ivy.container.experimental.ContainerWithLayersExperimental.dct"]], "dft() (ivy.container.experimental.containerwithlayersexperimental method)": [[117, "ivy.container.experimental.ContainerWithLayersExperimental.dft"]], "diagflat() (ivy.container.experimental.containerwithlinearalgebraexperimental method)": [[117, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.diagflat"]], "diff() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.diff"]], "dirichlet() (ivy.container.experimental.containerwithrandomexperimental method)": [[117, "ivy.container.experimental.ContainerWithRandomExperimental.dirichlet"]], "dsplit() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.dsplit"]], "dstack() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.dstack"]], "eig() (ivy.container.experimental.containerwithlinearalgebraexperimental method)": [[117, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.eig"]], "eigvals() (ivy.container.experimental.containerwithlinearalgebraexperimental method)": [[117, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.eigvals"]], "embedding() (ivy.container.experimental.containerwithlayersexperimental method)": [[117, "ivy.container.experimental.ContainerWithLayersExperimental.embedding"]], "exp2() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.exp2"]], "expand() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.expand"]], "eye_like() (ivy.container.experimental.containerwithcreationexperimental method)": [[117, "ivy.container.experimental.ContainerWithCreationExperimental.eye_like"]], "fft() (ivy.container.experimental.containerwithlayersexperimental method)": [[117, "ivy.container.experimental.ContainerWithLayersExperimental.fft"]], "fix() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.fix"]], "flatten() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.flatten"]], "fliplr() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.fliplr"]], "flipud() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.flipud"]], "float_power() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.float_power"]], "fmax() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.fmax"]], "fmin() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.fmin"]], "fmod() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.fmod"]], "gcd() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.gcd"]], "gradient() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.gradient"]], "hamming_window() (ivy.container.experimental.containerwithcreationexperimental method)": [[117, "ivy.container.experimental.ContainerWithCreationExperimental.hamming_window"]], "hann_window() (ivy.container.experimental.containerwithcreationexperimental method)": [[117, "ivy.container.experimental.ContainerWithCreationExperimental.hann_window"]], "heaviside() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.heaviside"]], "hsplit() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.hsplit"]], "hstack() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.hstack"]], "hypot() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.hypot"]], "i0() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.i0"]], "ifft() (ivy.container.experimental.containerwithlayersexperimental method)": [[117, "ivy.container.experimental.ContainerWithLayersExperimental.ifft"]], "imag() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.imag"]], "instance_norm() (ivy.container.experimental.containerwithnormsexperimental method)": [[117, "ivy.container.experimental.ContainerWithNormsExperimental.instance_norm"]], "interpolate() (ivy.container.experimental.containerwithlayersexperimental method)": [[117, "ivy.container.experimental.ContainerWithLayersExperimental.interpolate"]], "isclose() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.isclose"]], "isin() (ivy.container.experimental.containerwithgeneralexperimental method)": [[117, "ivy.container.experimental.ContainerWithGeneralExperimental.isin"]], "kaiser_bessel_derived_window() (ivy.container.experimental.containerwithcreationexperimental method)": [[117, "ivy.container.experimental.ContainerWithCreationExperimental.kaiser_bessel_derived_window"]], "kaiser_window() (ivy.container.experimental.containerwithcreationexperimental method)": [[117, "ivy.container.experimental.ContainerWithCreationExperimental.kaiser_window"]], "kron() (ivy.container.experimental.containerwithlinearalgebraexperimental method)": [[117, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.kron"]], "l2_normalize() (ivy.container.experimental.containerwithnormsexperimental method)": [[117, "ivy.container.experimental.ContainerWithNormsExperimental.l2_normalize"]], "lcm() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.lcm"]], "lexsort() (ivy.container.experimental.containerwithsortingexperimental method)": [[117, "ivy.container.experimental.ContainerWithSortingExperimental.lexsort"]], "logaddexp2() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.logaddexp2"]], "logit() (ivy.container.experimental.containerwithactivationexperimental method)": [[117, "ivy.container.experimental.ContainerWithActivationExperimental.logit"]], "lp_normalize() (ivy.container.experimental.containerwithnormsexperimental method)": [[117, "ivy.container.experimental.ContainerWithNormsExperimental.lp_normalize"]], "matrix_exp() (ivy.container.experimental.containerwithlinearalgebraexperimental method)": [[117, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.matrix_exp"]], "max_pool1d() (ivy.container.experimental.containerwithlayersexperimental method)": [[117, "ivy.container.experimental.ContainerWithLayersExperimental.max_pool1d"]], "max_pool2d() (ivy.container.experimental.containerwithlayersexperimental method)": [[117, "ivy.container.experimental.ContainerWithLayersExperimental.max_pool2d"]], "max_pool3d() (ivy.container.experimental.containerwithlayersexperimental method)": [[117, "ivy.container.experimental.ContainerWithLayersExperimental.max_pool3d"]], "median() (ivy.container.experimental.containerwithstatisticalexperimental method)": [[117, "ivy.container.experimental.ContainerWithStatisticalExperimental.median"]], "moveaxis() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.moveaxis"]], "msort() (ivy.container.experimental.containerwithsortingexperimental method)": [[117, "ivy.container.experimental.ContainerWithSortingExperimental.msort"]], "nan_to_num() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.nan_to_num"]], "nanmean() (ivy.container.experimental.containerwithstatisticalexperimental method)": [[117, "ivy.container.experimental.ContainerWithStatisticalExperimental.nanmean"]], "nanmedian() (ivy.container.experimental.containerwithstatisticalexperimental method)": [[117, "ivy.container.experimental.ContainerWithStatisticalExperimental.nanmedian"]], "nansum() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.nansum"]], "nextafter() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.nextafter"]], "pad() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.pad"]], "poisson() (ivy.container.experimental.containerwithrandomexperimental method)": [[117, "ivy.container.experimental.ContainerWithRandomExperimental.poisson"]], "prelu() (ivy.container.experimental.containerwithactivationexperimental method)": [[117, "ivy.container.experimental.ContainerWithActivationExperimental.prelu"]], "quantile() (ivy.container.experimental.containerwithstatisticalexperimental method)": [[117, "ivy.container.experimental.ContainerWithStatisticalExperimental.quantile"]], "real() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.real"]], "rot90() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.rot90"]], "signbit() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.signbit"]], "sinc() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.sinc"]], "static_adjoint() (ivy.container.experimental.containerwithlinearalgebraexperimental static method)": [[117, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.static_adjoint"]], "static_allclose() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_allclose"]], "static_angle() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_angle"]], "static_atleast_1d() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.static_atleast_1d"]], "static_atleast_2d() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.static_atleast_2d"]], "static_atleast_3d() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.static_atleast_3d"]], "static_avg_pool1d() (ivy.container.experimental.containerwithlayersexperimental static method)": [[117, "ivy.container.experimental.ContainerWithLayersExperimental.static_avg_pool1d"]], "static_avg_pool2d() (ivy.container.experimental.containerwithlayersexperimental static method)": [[117, "ivy.container.experimental.ContainerWithLayersExperimental.static_avg_pool2d"]], "static_avg_pool3d() (ivy.container.experimental.containerwithlayersexperimental static method)": [[117, "ivy.container.experimental.ContainerWithLayersExperimental.static_avg_pool3d"]], "static_bernoulli() (ivy.container.experimental.containerwithrandomexperimental static method)": [[117, "ivy.container.experimental.ContainerWithRandomExperimental.static_bernoulli"]], "static_beta() (ivy.container.experimental.containerwithrandomexperimental static method)": [[117, "ivy.container.experimental.ContainerWithRandomExperimental.static_beta"]], "static_binarizer() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_binarizer"]], "static_binary_cross_entropy_with_logits() (ivy.container.experimental.containerwithlossesexperimental static method)": [[117, "ivy.container.experimental.ContainerWithLossesExperimental.static_binary_cross_entropy_with_logits"]], "static_broadcast_shapes() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.static_broadcast_shapes"]], "static_copysign() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_copysign"]], "static_corrcoef() (ivy.container.experimental.containerwithstatisticalexperimental static method)": [[117, "ivy.container.experimental.ContainerWithStatisticalExperimental.static_corrcoef"]], "static_count_nonzero() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_count_nonzero"]], "static_dct() (ivy.container.experimental.containerwithlayersexperimental static method)": [[117, "ivy.container.experimental.ContainerWithLayersExperimental.static_dct"]], "static_dft() (ivy.container.experimental.containerwithlayersexperimental static method)": [[117, "ivy.container.experimental.ContainerWithLayersExperimental.static_dft"]], "static_diagflat() (ivy.container.experimental.containerwithlinearalgebraexperimental static method)": [[117, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.static_diagflat"]], "static_diff() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_diff"]], "static_dirichlet() (ivy.container.experimental.containerwithrandomexperimental static method)": [[117, "ivy.container.experimental.ContainerWithRandomExperimental.static_dirichlet"]], "static_dsplit() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.static_dsplit"]], "static_dstack() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.static_dstack"]], "static_eig() (ivy.container.experimental.containerwithlinearalgebraexperimental static method)": [[117, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.static_eig"]], "static_eigvals() (ivy.container.experimental.containerwithlinearalgebraexperimental static method)": [[117, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.static_eigvals"]], "static_embedding() (ivy.container.experimental.containerwithlayersexperimental static method)": [[117, "ivy.container.experimental.ContainerWithLayersExperimental.static_embedding"]], "static_exp2() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_exp2"]], "static_expand() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.static_expand"]], "static_eye_like() (ivy.container.experimental.containerwithcreationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithCreationExperimental.static_eye_like"]], "static_fft() (ivy.container.experimental.containerwithlayersexperimental static method)": [[117, "ivy.container.experimental.ContainerWithLayersExperimental.static_fft"]], "static_fix() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_fix"]], "static_flatten() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.static_flatten"]], "static_fliplr() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.static_fliplr"]], "static_flipud() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.static_flipud"]], "static_float_power() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_float_power"]], "static_fmax() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_fmax"]], "static_fmin() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_fmin"]], "static_fmod() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_fmod"]], "static_gcd() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_gcd"]], "static_gradient() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_gradient"]], "static_hamming_window() (ivy.container.experimental.containerwithcreationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithCreationExperimental.static_hamming_window"]], "static_hann_window() (ivy.container.experimental.containerwithcreationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithCreationExperimental.static_hann_window"]], "static_heaviside() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.static_heaviside"]], "static_hsplit() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.static_hsplit"]], "static_hstack() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.static_hstack"]], "static_hypot() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_hypot"]], "static_i0() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.static_i0"]], "static_ifft() (ivy.container.experimental.containerwithlayersexperimental static method)": [[117, "ivy.container.experimental.ContainerWithLayersExperimental.static_ifft"]], "static_imag() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_imag"]], "static_instance_norm() (ivy.container.experimental.containerwithnormsexperimental static method)": [[117, "ivy.container.experimental.ContainerWithNormsExperimental.static_instance_norm"]], "static_interpolate() (ivy.container.experimental.containerwithlayersexperimental static method)": [[117, "ivy.container.experimental.ContainerWithLayersExperimental.static_interpolate"]], "static_isclose() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_isclose"]], "static_isin() (ivy.container.experimental.containerwithgeneralexperimental static method)": [[117, "ivy.container.experimental.ContainerWithGeneralExperimental.static_isin"]], "static_kaiser_bessel_derived_window() (ivy.container.experimental.containerwithcreationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithCreationExperimental.static_kaiser_bessel_derived_window"]], "static_kaiser_window() (ivy.container.experimental.containerwithcreationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithCreationExperimental.static_kaiser_window"]], "static_kron() (ivy.container.experimental.containerwithlinearalgebraexperimental static method)": [[117, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.static_kron"]], "static_l2_normalize() (ivy.container.experimental.containerwithnormsexperimental static method)": [[117, "ivy.container.experimental.ContainerWithNormsExperimental.static_l2_normalize"]], "static_lcm() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_lcm"]], "static_lexsort() (ivy.container.experimental.containerwithsortingexperimental static method)": [[117, "ivy.container.experimental.ContainerWithSortingExperimental.static_lexsort"]], "static_logaddexp2() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_logaddexp2"]], "static_logit() (ivy.container.experimental.containerwithactivationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithActivationExperimental.static_logit"]], "static_lp_normalize() (ivy.container.experimental.containerwithnormsexperimental static method)": [[117, "ivy.container.experimental.ContainerWithNormsExperimental.static_lp_normalize"]], "static_matrix_exp() (ivy.container.experimental.containerwithlinearalgebraexperimental static method)": [[117, "ivy.container.experimental.ContainerWithLinearAlgebraExperimental.static_matrix_exp"]], "static_max_pool1d() (ivy.container.experimental.containerwithlayersexperimental static method)": [[117, "ivy.container.experimental.ContainerWithLayersExperimental.static_max_pool1d"]], "static_max_pool2d() (ivy.container.experimental.containerwithlayersexperimental static method)": [[117, "ivy.container.experimental.ContainerWithLayersExperimental.static_max_pool2d"]], "static_max_pool3d() (ivy.container.experimental.containerwithlayersexperimental static method)": [[117, "ivy.container.experimental.ContainerWithLayersExperimental.static_max_pool3d"]], "static_median() (ivy.container.experimental.containerwithstatisticalexperimental static method)": [[117, "ivy.container.experimental.ContainerWithStatisticalExperimental.static_median"]], "static_moveaxis() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.static_moveaxis"]], "static_msort() (ivy.container.experimental.containerwithsortingexperimental static method)": [[117, "ivy.container.experimental.ContainerWithSortingExperimental.static_msort"]], "static_nan_to_num() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_nan_to_num"]], "static_nanmean() (ivy.container.experimental.containerwithstatisticalexperimental static method)": [[117, "ivy.container.experimental.ContainerWithStatisticalExperimental.static_nanmean"]], "static_nanmedian() (ivy.container.experimental.containerwithstatisticalexperimental static method)": [[117, "ivy.container.experimental.ContainerWithStatisticalExperimental.static_nanmedian"]], "static_nansum() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_nansum"]], "static_nextafter() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_nextafter"]], "static_pad() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.static_pad"]], "static_poisson() (ivy.container.experimental.containerwithrandomexperimental static method)": [[117, "ivy.container.experimental.ContainerWithRandomExperimental.static_poisson"]], "static_prelu() (ivy.container.experimental.containerwithactivationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithActivationExperimental.static_prelu"]], "static_quantile() (ivy.container.experimental.containerwithstatisticalexperimental static method)": [[117, "ivy.container.experimental.ContainerWithStatisticalExperimental.static_quantile"]], "static_real() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_real"]], "static_rot90() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.static_rot90"]], "static_signbit() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_signbit"]], "static_sinc() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_sinc"]], "static_take_along_axis() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.static_take_along_axis"]], "static_thresholded_relu() (ivy.container.experimental.containerwithactivationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithActivationExperimental.static_thresholded_relu"]], "static_top_k() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.static_top_k"]], "static_tril_indices() (ivy.container.experimental.containerwithcreationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithCreationExperimental.static_tril_indices"]], "static_triu_indices() (ivy.container.experimental.containerwithcreationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithCreationExperimental.static_triu_indices"]], "static_unravel_index() (ivy.container.experimental.containerwithstatisticalexperimental static method)": [[117, "ivy.container.experimental.ContainerWithStatisticalExperimental.static_unravel_index"]], "static_vorbis_window() (ivy.container.experimental.containerwithcreationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithCreationExperimental.static_vorbis_window"]], "static_vsplit() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.static_vsplit"]], "static_vstack() (ivy.container.experimental.containerwithmanipulationexperimental static method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.static_vstack"]], "static_xlogy() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_xlogy"]], "static_zeta() (ivy.container.experimental.containerwithelementwiseexperimental static method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.static_zeta"]], "take_along_axis() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.take_along_axis"]], "thresholded_relu() (ivy.container.experimental.containerwithactivationexperimental method)": [[117, "ivy.container.experimental.ContainerWithActivationExperimental.thresholded_relu"]], "top_k() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.top_k"]], "tril_indices() (ivy.container.experimental.containerwithcreationexperimental method)": [[117, "ivy.container.experimental.ContainerWithCreationExperimental.tril_indices"]], "triu_indices() (ivy.container.experimental.containerwithcreationexperimental method)": [[117, "ivy.container.experimental.ContainerWithCreationExperimental.triu_indices"]], "unravel_index() (ivy.container.experimental.containerwithstatisticalexperimental method)": [[117, "ivy.container.experimental.ContainerWithStatisticalExperimental.unravel_index"]], "vorbis_window() (ivy.container.experimental.containerwithcreationexperimental method)": [[117, "ivy.container.experimental.ContainerWithCreationExperimental.vorbis_window"]], "vsplit() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.vsplit"]], "vstack() (ivy.container.experimental.containerwithmanipulationexperimental method)": [[117, "ivy.container.experimental.ContainerWithManipulationExperimental.vstack"]], "xlogy() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.xlogy"]], "zeta() (ivy.container.experimental.containerwithelementwiseexperimental method)": [[117, "ivy.container.experimental.ContainerWithElementWiseExperimental.zeta"]], "containerwithgeneral (class in ivy.container.general)": [[118, "ivy.container.general.ContainerWithGeneral"], [119, "ivy.container.general.ContainerWithGeneral"]], "all_equal() (ivy.container.general.containerwithgeneral method)": [[118, "ivy.container.general.ContainerWithGeneral.all_equal"], [119, "ivy.container.general.ContainerWithGeneral.all_equal"]], "array_equal() (ivy.container.general.containerwithgeneral method)": [[118, "ivy.container.general.ContainerWithGeneral.array_equal"], [119, "ivy.container.general.ContainerWithGeneral.array_equal"]], "assert_supports_inplace() (ivy.container.general.containerwithgeneral method)": [[118, "ivy.container.general.ContainerWithGeneral.assert_supports_inplace"], [119, "ivy.container.general.ContainerWithGeneral.assert_supports_inplace"]], "clip_matrix_norm() (ivy.container.general.containerwithgeneral method)": [[118, "ivy.container.general.ContainerWithGeneral.clip_matrix_norm"], [119, "ivy.container.general.ContainerWithGeneral.clip_matrix_norm"]], "clip_vector_norm() (ivy.container.general.containerwithgeneral method)": [[118, "ivy.container.general.ContainerWithGeneral.clip_vector_norm"], [119, "ivy.container.general.ContainerWithGeneral.clip_vector_norm"]], "einops_rearrange() (ivy.container.general.containerwithgeneral method)": [[118, "ivy.container.general.ContainerWithGeneral.einops_rearrange"], [119, "ivy.container.general.ContainerWithGeneral.einops_rearrange"]], "einops_reduce() (ivy.container.general.containerwithgeneral method)": [[118, "ivy.container.general.ContainerWithGeneral.einops_reduce"], [119, "ivy.container.general.ContainerWithGeneral.einops_reduce"]], "einops_repeat() (ivy.container.general.containerwithgeneral method)": [[118, "ivy.container.general.ContainerWithGeneral.einops_repeat"], [119, "ivy.container.general.ContainerWithGeneral.einops_repeat"]], "fourier_encode() (ivy.container.general.containerwithgeneral method)": [[118, "ivy.container.general.ContainerWithGeneral.fourier_encode"], [119, "ivy.container.general.ContainerWithGeneral.fourier_encode"]], "gather() (ivy.container.general.containerwithgeneral method)": [[118, "ivy.container.general.ContainerWithGeneral.gather"], [119, "ivy.container.general.ContainerWithGeneral.gather"]], "gather_nd() (ivy.container.general.containerwithgeneral method)": [[118, "ivy.container.general.ContainerWithGeneral.gather_nd"], [119, "ivy.container.general.ContainerWithGeneral.gather_nd"]], "get_num_dims() (ivy.container.general.containerwithgeneral method)": [[118, "ivy.container.general.ContainerWithGeneral.get_num_dims"], [119, "ivy.container.general.ContainerWithGeneral.get_num_dims"]], "has_nans() (ivy.container.general.containerwithgeneral method)": [[118, "ivy.container.general.ContainerWithGeneral.has_nans"], [119, "ivy.container.general.ContainerWithGeneral.has_nans"]], "inplace_decrement() (ivy.container.general.containerwithgeneral method)": [[118, "ivy.container.general.ContainerWithGeneral.inplace_decrement"], [119, "ivy.container.general.ContainerWithGeneral.inplace_decrement"]], "inplace_increment() (ivy.container.general.containerwithgeneral method)": [[118, "ivy.container.general.ContainerWithGeneral.inplace_increment"], [119, "ivy.container.general.ContainerWithGeneral.inplace_increment"]], "inplace_update() (ivy.container.general.containerwithgeneral method)": [[118, "ivy.container.general.ContainerWithGeneral.inplace_update"], [119, "ivy.container.general.ContainerWithGeneral.inplace_update"]], "is_array() (ivy.container.general.containerwithgeneral method)": [[118, "ivy.container.general.ContainerWithGeneral.is_array"], [119, "ivy.container.general.ContainerWithGeneral.is_array"]], "is_ivy_array() (ivy.container.general.containerwithgeneral method)": [[118, "ivy.container.general.ContainerWithGeneral.is_ivy_array"], [119, "ivy.container.general.ContainerWithGeneral.is_ivy_array"]], "is_native_array() (ivy.container.general.containerwithgeneral method)": [[118, "ivy.container.general.ContainerWithGeneral.is_native_array"], [119, "ivy.container.general.ContainerWithGeneral.is_native_array"]], "ivy.container.general": [[118, "module-ivy.container.general"]], "scatter_flat() (ivy.container.general.containerwithgeneral method)": [[118, "ivy.container.general.ContainerWithGeneral.scatter_flat"], [119, "ivy.container.general.ContainerWithGeneral.scatter_flat"]], "scatter_nd() (ivy.container.general.containerwithgeneral method)": [[118, "ivy.container.general.ContainerWithGeneral.scatter_nd"], [119, "ivy.container.general.ContainerWithGeneral.scatter_nd"]], "stable_divide() (ivy.container.general.containerwithgeneral method)": [[118, "ivy.container.general.ContainerWithGeneral.stable_divide"], [119, "ivy.container.general.ContainerWithGeneral.stable_divide"]], "stable_pow() (ivy.container.general.containerwithgeneral method)": [[118, "ivy.container.general.ContainerWithGeneral.stable_pow"], [119, "ivy.container.general.ContainerWithGeneral.stable_pow"]], "static_all_equal() (ivy.container.general.containerwithgeneral static method)": [[118, "ivy.container.general.ContainerWithGeneral.static_all_equal"], [119, "ivy.container.general.ContainerWithGeneral.static_all_equal"]], "static_array_equal() (ivy.container.general.containerwithgeneral static method)": [[118, "ivy.container.general.ContainerWithGeneral.static_array_equal"], [119, "ivy.container.general.ContainerWithGeneral.static_array_equal"]], "static_assert_supports_inplace() (ivy.container.general.containerwithgeneral static method)": [[118, "ivy.container.general.ContainerWithGeneral.static_assert_supports_inplace"], [119, "ivy.container.general.ContainerWithGeneral.static_assert_supports_inplace"]], "static_clip_matrix_norm() (ivy.container.general.containerwithgeneral static method)": [[118, "ivy.container.general.ContainerWithGeneral.static_clip_matrix_norm"], [119, "ivy.container.general.ContainerWithGeneral.static_clip_matrix_norm"]], "static_clip_vector_norm() (ivy.container.general.containerwithgeneral static method)": [[118, "ivy.container.general.ContainerWithGeneral.static_clip_vector_norm"], [119, "ivy.container.general.ContainerWithGeneral.static_clip_vector_norm"]], "static_einops_rearrange() (ivy.container.general.containerwithgeneral static method)": [[118, "ivy.container.general.ContainerWithGeneral.static_einops_rearrange"], [119, "ivy.container.general.ContainerWithGeneral.static_einops_rearrange"]], "static_einops_reduce() (ivy.container.general.containerwithgeneral static method)": [[118, "ivy.container.general.ContainerWithGeneral.static_einops_reduce"], [119, "ivy.container.general.ContainerWithGeneral.static_einops_reduce"]], "static_einops_repeat() (ivy.container.general.containerwithgeneral static method)": [[118, "ivy.container.general.ContainerWithGeneral.static_einops_repeat"], [119, "ivy.container.general.ContainerWithGeneral.static_einops_repeat"]], "static_fourier_encode() (ivy.container.general.containerwithgeneral static method)": [[118, "ivy.container.general.ContainerWithGeneral.static_fourier_encode"], [119, "ivy.container.general.ContainerWithGeneral.static_fourier_encode"]], "static_gather() (ivy.container.general.containerwithgeneral static method)": [[118, "ivy.container.general.ContainerWithGeneral.static_gather"], [119, "ivy.container.general.ContainerWithGeneral.static_gather"]], "static_gather_nd() (ivy.container.general.containerwithgeneral static method)": [[118, "ivy.container.general.ContainerWithGeneral.static_gather_nd"], [119, "ivy.container.general.ContainerWithGeneral.static_gather_nd"]], "static_get_num_dims() (ivy.container.general.containerwithgeneral static method)": [[118, "ivy.container.general.ContainerWithGeneral.static_get_num_dims"], [119, "ivy.container.general.ContainerWithGeneral.static_get_num_dims"]], "static_has_nans() (ivy.container.general.containerwithgeneral static method)": [[118, "ivy.container.general.ContainerWithGeneral.static_has_nans"], [119, "ivy.container.general.ContainerWithGeneral.static_has_nans"]], "static_inplace_decrement() (ivy.container.general.containerwithgeneral static method)": [[118, "ivy.container.general.ContainerWithGeneral.static_inplace_decrement"], [119, "ivy.container.general.ContainerWithGeneral.static_inplace_decrement"]], "static_inplace_increment() (ivy.container.general.containerwithgeneral static method)": [[118, "ivy.container.general.ContainerWithGeneral.static_inplace_increment"], [119, "ivy.container.general.ContainerWithGeneral.static_inplace_increment"]], "static_inplace_update() (ivy.container.general.containerwithgeneral static method)": [[118, "ivy.container.general.ContainerWithGeneral.static_inplace_update"], [119, "ivy.container.general.ContainerWithGeneral.static_inplace_update"]], "static_is_array() (ivy.container.general.containerwithgeneral static method)": [[118, "ivy.container.general.ContainerWithGeneral.static_is_array"], [119, "ivy.container.general.ContainerWithGeneral.static_is_array"]], "static_is_ivy_array() (ivy.container.general.containerwithgeneral static method)": [[118, "ivy.container.general.ContainerWithGeneral.static_is_ivy_array"], [119, "ivy.container.general.ContainerWithGeneral.static_is_ivy_array"]], "static_is_native_array() (ivy.container.general.containerwithgeneral static method)": [[118, "ivy.container.general.ContainerWithGeneral.static_is_native_array"], [119, "ivy.container.general.ContainerWithGeneral.static_is_native_array"]], "static_scatter_flat() (ivy.container.general.containerwithgeneral static method)": [[118, "ivy.container.general.ContainerWithGeneral.static_scatter_flat"], [119, "ivy.container.general.ContainerWithGeneral.static_scatter_flat"]], "static_scatter_nd() (ivy.container.general.containerwithgeneral static method)": [[118, "ivy.container.general.ContainerWithGeneral.static_scatter_nd"], [119, "ivy.container.general.ContainerWithGeneral.static_scatter_nd"]], "static_stable_divide() (ivy.container.general.containerwithgeneral static method)": [[118, "ivy.container.general.ContainerWithGeneral.static_stable_divide"], [119, "ivy.container.general.ContainerWithGeneral.static_stable_divide"]], "static_stable_pow() (ivy.container.general.containerwithgeneral static method)": [[118, "ivy.container.general.ContainerWithGeneral.static_stable_pow"], [119, "ivy.container.general.ContainerWithGeneral.static_stable_pow"]], "static_supports_inplace_updates() (ivy.container.general.containerwithgeneral static method)": [[118, "ivy.container.general.ContainerWithGeneral.static_supports_inplace_updates"], [119, "ivy.container.general.ContainerWithGeneral.static_supports_inplace_updates"]], "static_to_list() (ivy.container.general.containerwithgeneral static method)": [[118, "ivy.container.general.ContainerWithGeneral.static_to_list"], [119, "ivy.container.general.ContainerWithGeneral.static_to_list"]], "static_to_numpy() (ivy.container.general.containerwithgeneral static method)": [[118, "ivy.container.general.ContainerWithGeneral.static_to_numpy"], [119, "ivy.container.general.ContainerWithGeneral.static_to_numpy"]], "static_to_scalar() (ivy.container.general.containerwithgeneral static method)": [[118, "ivy.container.general.ContainerWithGeneral.static_to_scalar"], [119, "ivy.container.general.ContainerWithGeneral.static_to_scalar"]], "static_value_is_nan() (ivy.container.general.containerwithgeneral static method)": [[118, "ivy.container.general.ContainerWithGeneral.static_value_is_nan"], [119, "ivy.container.general.ContainerWithGeneral.static_value_is_nan"]], "supports_inplace_updates() (ivy.container.general.containerwithgeneral method)": [[118, "ivy.container.general.ContainerWithGeneral.supports_inplace_updates"], [119, "ivy.container.general.ContainerWithGeneral.supports_inplace_updates"]], "to_list() (ivy.container.general.containerwithgeneral method)": [[118, "ivy.container.general.ContainerWithGeneral.to_list"], [119, "ivy.container.general.ContainerWithGeneral.to_list"]], "to_numpy() (ivy.container.general.containerwithgeneral method)": [[118, "ivy.container.general.ContainerWithGeneral.to_numpy"], [119, "ivy.container.general.ContainerWithGeneral.to_numpy"]], "to_scalar() (ivy.container.general.containerwithgeneral method)": [[118, "ivy.container.general.ContainerWithGeneral.to_scalar"], [119, "ivy.container.general.ContainerWithGeneral.to_scalar"]], "value_is_nan() (ivy.container.general.containerwithgeneral method)": [[118, "ivy.container.general.ContainerWithGeneral.value_is_nan"], [119, "ivy.container.general.ContainerWithGeneral.value_is_nan"]], "containerwithgradients (class in ivy.container.gradients)": [[120, "ivy.container.gradients.ContainerWithGradients"], [121, "ivy.container.gradients.ContainerWithGradients"]], "adam_step() (ivy.container.gradients.containerwithgradients method)": [[120, "ivy.container.gradients.ContainerWithGradients.adam_step"], [121, "ivy.container.gradients.ContainerWithGradients.adam_step"]], "adam_update() (ivy.container.gradients.containerwithgradients method)": [[120, "ivy.container.gradients.ContainerWithGradients.adam_update"], [121, "ivy.container.gradients.ContainerWithGradients.adam_update"]], "gradient_descent_update() (ivy.container.gradients.containerwithgradients method)": [[120, "ivy.container.gradients.ContainerWithGradients.gradient_descent_update"], [121, "ivy.container.gradients.ContainerWithGradients.gradient_descent_update"]], "ivy.container.gradients": [[120, "module-ivy.container.gradients"]], "lamb_update() (ivy.container.gradients.containerwithgradients method)": [[120, "ivy.container.gradients.ContainerWithGradients.lamb_update"], [121, "ivy.container.gradients.ContainerWithGradients.lamb_update"]], "lars_update() (ivy.container.gradients.containerwithgradients method)": [[120, "ivy.container.gradients.ContainerWithGradients.lars_update"], [121, "ivy.container.gradients.ContainerWithGradients.lars_update"]], "optimizer_update() (ivy.container.gradients.containerwithgradients method)": [[120, "ivy.container.gradients.ContainerWithGradients.optimizer_update"], [121, "ivy.container.gradients.ContainerWithGradients.optimizer_update"]], "static_stop_gradient() (ivy.container.gradients.containerwithgradients static method)": [[120, "ivy.container.gradients.ContainerWithGradients.static_stop_gradient"], [121, "ivy.container.gradients.ContainerWithGradients.static_stop_gradient"]], "stop_gradient() (ivy.container.gradients.containerwithgradients method)": [[120, "ivy.container.gradients.ContainerWithGradients.stop_gradient"], [121, "ivy.container.gradients.ContainerWithGradients.stop_gradient"]], "containerwithimage (class in ivy.container.image)": [[122, "ivy.container.image.ContainerWithImage"], [123, "ivy.container.image.ContainerWithImage"]], "ivy.container.image": [[122, "module-ivy.container.image"]], "containerwithlayers (class in ivy.container.layers)": [[124, "ivy.container.layers.ContainerWithLayers"], [125, "ivy.container.layers.ContainerWithLayers"]], "conv1d() (ivy.container.layers.containerwithlayers method)": [[124, "ivy.container.layers.ContainerWithLayers.conv1d"], [125, "ivy.container.layers.ContainerWithLayers.conv1d"]], "conv1d_transpose() (ivy.container.layers.containerwithlayers method)": [[124, "ivy.container.layers.ContainerWithLayers.conv1d_transpose"], [125, "ivy.container.layers.ContainerWithLayers.conv1d_transpose"]], "conv2d() (ivy.container.layers.containerwithlayers method)": [[124, "ivy.container.layers.ContainerWithLayers.conv2d"], [125, "ivy.container.layers.ContainerWithLayers.conv2d"]], "conv2d_transpose() (ivy.container.layers.containerwithlayers method)": [[124, "ivy.container.layers.ContainerWithLayers.conv2d_transpose"], [125, "ivy.container.layers.ContainerWithLayers.conv2d_transpose"]], "conv3d() (ivy.container.layers.containerwithlayers method)": [[124, "ivy.container.layers.ContainerWithLayers.conv3d"], [125, "ivy.container.layers.ContainerWithLayers.conv3d"]], "conv3d_transpose() (ivy.container.layers.containerwithlayers method)": [[124, "ivy.container.layers.ContainerWithLayers.conv3d_transpose"], [125, "ivy.container.layers.ContainerWithLayers.conv3d_transpose"]], "depthwise_conv2d() (ivy.container.layers.containerwithlayers method)": [[124, "ivy.container.layers.ContainerWithLayers.depthwise_conv2d"], [125, "ivy.container.layers.ContainerWithLayers.depthwise_conv2d"]], "dropout() (ivy.container.layers.containerwithlayers method)": [[124, "ivy.container.layers.ContainerWithLayers.dropout"], [125, "ivy.container.layers.ContainerWithLayers.dropout"]], "dropout1d() (ivy.container.layers.containerwithlayers method)": [[124, "ivy.container.layers.ContainerWithLayers.dropout1d"], [125, "ivy.container.layers.ContainerWithLayers.dropout1d"]], "ivy.container.layers": [[124, "module-ivy.container.layers"]], "linear() (ivy.container.layers.containerwithlayers method)": [[124, "ivy.container.layers.ContainerWithLayers.linear"], [125, "ivy.container.layers.ContainerWithLayers.linear"]], "lstm_update() (ivy.container.layers.containerwithlayers method)": [[124, "ivy.container.layers.ContainerWithLayers.lstm_update"], [125, "ivy.container.layers.ContainerWithLayers.lstm_update"]], "multi_head_attention() (ivy.container.layers.containerwithlayers method)": [[124, "ivy.container.layers.ContainerWithLayers.multi_head_attention"], [125, "ivy.container.layers.ContainerWithLayers.multi_head_attention"]], "scaled_dot_product_attention() (ivy.container.layers.containerwithlayers method)": [[124, "ivy.container.layers.ContainerWithLayers.scaled_dot_product_attention"], [125, "ivy.container.layers.ContainerWithLayers.scaled_dot_product_attention"]], "static_conv1d() (ivy.container.layers.containerwithlayers static method)": [[124, "ivy.container.layers.ContainerWithLayers.static_conv1d"], [125, "ivy.container.layers.ContainerWithLayers.static_conv1d"]], "static_conv1d_transpose() (ivy.container.layers.containerwithlayers static method)": [[124, "ivy.container.layers.ContainerWithLayers.static_conv1d_transpose"], [125, "ivy.container.layers.ContainerWithLayers.static_conv1d_transpose"]], "static_conv2d() (ivy.container.layers.containerwithlayers static method)": [[124, "ivy.container.layers.ContainerWithLayers.static_conv2d"], [125, "ivy.container.layers.ContainerWithLayers.static_conv2d"]], "static_conv2d_transpose() (ivy.container.layers.containerwithlayers static method)": [[124, "ivy.container.layers.ContainerWithLayers.static_conv2d_transpose"], [125, "ivy.container.layers.ContainerWithLayers.static_conv2d_transpose"]], "static_conv3d() (ivy.container.layers.containerwithlayers static method)": [[124, "ivy.container.layers.ContainerWithLayers.static_conv3d"], [125, "ivy.container.layers.ContainerWithLayers.static_conv3d"]], "static_conv3d_transpose() (ivy.container.layers.containerwithlayers static method)": [[124, "ivy.container.layers.ContainerWithLayers.static_conv3d_transpose"], [125, "ivy.container.layers.ContainerWithLayers.static_conv3d_transpose"]], "static_depthwise_conv2d() (ivy.container.layers.containerwithlayers static method)": [[124, "ivy.container.layers.ContainerWithLayers.static_depthwise_conv2d"], [125, "ivy.container.layers.ContainerWithLayers.static_depthwise_conv2d"]], "static_dropout() (ivy.container.layers.containerwithlayers static method)": [[124, "ivy.container.layers.ContainerWithLayers.static_dropout"], [125, "ivy.container.layers.ContainerWithLayers.static_dropout"]], "static_dropout1d() (ivy.container.layers.containerwithlayers static method)": [[124, "ivy.container.layers.ContainerWithLayers.static_dropout1d"], [125, "ivy.container.layers.ContainerWithLayers.static_dropout1d"]], "static_linear() (ivy.container.layers.containerwithlayers static method)": [[124, "ivy.container.layers.ContainerWithLayers.static_linear"], [125, "ivy.container.layers.ContainerWithLayers.static_linear"]], "static_lstm_update() (ivy.container.layers.containerwithlayers static method)": [[124, "ivy.container.layers.ContainerWithLayers.static_lstm_update"], [125, "ivy.container.layers.ContainerWithLayers.static_lstm_update"]], "static_multi_head_attention() (ivy.container.layers.containerwithlayers static method)": [[124, "ivy.container.layers.ContainerWithLayers.static_multi_head_attention"], [125, "ivy.container.layers.ContainerWithLayers.static_multi_head_attention"]], "static_scaled_dot_product_attention() (ivy.container.layers.containerwithlayers static method)": [[124, "ivy.container.layers.ContainerWithLayers.static_scaled_dot_product_attention"], [125, "ivy.container.layers.ContainerWithLayers.static_scaled_dot_product_attention"]], "containerwithlinearalgebra (class in ivy.container.linear_algebra)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra"]], "cholesky() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.cholesky"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.cholesky"]], "cross() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.cross"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.cross"]], "det() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.det"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.det"]], "diag() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.diag"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.diag"]], "diagonal() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.diagonal"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.diagonal"]], "eigh() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.eigh"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.eigh"]], "eigvalsh() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.eigvalsh"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.eigvalsh"]], "inner() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.inner"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.inner"]], "inv() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.inv"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.inv"]], "ivy.container.linear_algebra": [[126, "module-ivy.container.linear_algebra"]], "matmul() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matmul"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matmul"]], "matrix_norm() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_norm"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_norm"]], "matrix_power() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_power"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_power"]], "matrix_rank() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_rank"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_rank"]], "matrix_transpose() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_transpose"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.matrix_transpose"]], "outer() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.outer"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.outer"]], "pinv() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.pinv"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.pinv"]], "qr() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.qr"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.qr"]], "slogdet() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.slogdet"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.slogdet"]], "solve() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.solve"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.solve"]], "static_cholesky() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_cholesky"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_cholesky"]], "static_cross() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_cross"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_cross"]], "static_det() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_det"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_det"]], "static_diag() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_diag"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_diag"]], "static_diagonal() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_diagonal"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_diagonal"]], "static_eigh() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_eigh"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_eigh"]], "static_eigvalsh() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_eigvalsh"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_eigvalsh"]], "static_inner() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_inner"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_inner"]], "static_inv() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_inv"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_inv"]], "static_matmul() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matmul"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matmul"]], "static_matrix_norm() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_norm"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_norm"]], "static_matrix_power() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_power"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_power"]], "static_matrix_rank() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_rank"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_rank"]], "static_matrix_transpose() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_transpose"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_matrix_transpose"]], "static_outer() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_outer"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_outer"]], "static_pinv() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_pinv"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_pinv"]], "static_qr() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_qr"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_qr"]], "static_slogdet() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_slogdet"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_slogdet"]], "static_solve() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_solve"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_solve"]], "static_svd() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_svd"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_svd"]], "static_svdvals() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_svdvals"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_svdvals"]], "static_tensordot() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_tensordot"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_tensordot"]], "static_trace() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_trace"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_trace"]], "static_vander() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vander"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vander"]], "static_vecdot() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vecdot"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vecdot"]], "static_vector_norm() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vector_norm"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vector_norm"]], "static_vector_to_skew_symmetric_matrix() (ivy.container.linear_algebra.containerwithlinearalgebra static method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vector_to_skew_symmetric_matrix"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.static_vector_to_skew_symmetric_matrix"]], "svd() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.svd"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.svd"]], "svdvals() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.svdvals"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.svdvals"]], "tensordot() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.tensordot"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.tensordot"]], "tensorsolve() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.tensorsolve"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.tensorsolve"]], "trace() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.trace"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.trace"]], "vander() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vander"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vander"]], "vecdot() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vecdot"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vecdot"]], "vector_norm() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vector_norm"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vector_norm"]], "vector_to_skew_symmetric_matrix() (ivy.container.linear_algebra.containerwithlinearalgebra method)": [[126, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vector_to_skew_symmetric_matrix"], [127, "ivy.container.linear_algebra.ContainerWithLinearAlgebra.vector_to_skew_symmetric_matrix"]], "containerwithlosses (class in ivy.container.losses)": [[128, "ivy.container.losses.ContainerWithLosses"], [129, "ivy.container.losses.ContainerWithLosses"]], "binary_cross_entropy() (ivy.container.losses.containerwithlosses method)": [[128, "ivy.container.losses.ContainerWithLosses.binary_cross_entropy"], [129, "ivy.container.losses.ContainerWithLosses.binary_cross_entropy"]], "cross_entropy() (ivy.container.losses.containerwithlosses method)": [[128, "ivy.container.losses.ContainerWithLosses.cross_entropy"], [129, "ivy.container.losses.ContainerWithLosses.cross_entropy"]], "ivy.container.losses": [[128, "module-ivy.container.losses"]], "sparse_cross_entropy() (ivy.container.losses.containerwithlosses method)": [[128, "ivy.container.losses.ContainerWithLosses.sparse_cross_entropy"], [129, "ivy.container.losses.ContainerWithLosses.sparse_cross_entropy"]], "static_binary_cross_entropy() (ivy.container.losses.containerwithlosses static method)": [[128, "ivy.container.losses.ContainerWithLosses.static_binary_cross_entropy"], [129, "ivy.container.losses.ContainerWithLosses.static_binary_cross_entropy"]], "static_cross_entropy() (ivy.container.losses.containerwithlosses static method)": [[128, "ivy.container.losses.ContainerWithLosses.static_cross_entropy"], [129, "ivy.container.losses.ContainerWithLosses.static_cross_entropy"]], "static_sparse_cross_entropy() (ivy.container.losses.containerwithlosses static method)": [[128, "ivy.container.losses.ContainerWithLosses.static_sparse_cross_entropy"], [129, "ivy.container.losses.ContainerWithLosses.static_sparse_cross_entropy"]], "containerwithmanipulation (class in ivy.container.manipulation)": [[130, "ivy.container.manipulation.ContainerWithManipulation"], [131, "ivy.container.manipulation.ContainerWithManipulation"]], "clip() (ivy.container.manipulation.containerwithmanipulation method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.clip"], [131, "ivy.container.manipulation.ContainerWithManipulation.clip"]], "concat() (ivy.container.manipulation.containerwithmanipulation method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.concat"], [131, "ivy.container.manipulation.ContainerWithManipulation.concat"]], "constant_pad() (ivy.container.manipulation.containerwithmanipulation method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.constant_pad"], [131, "ivy.container.manipulation.ContainerWithManipulation.constant_pad"]], "expand_dims() (ivy.container.manipulation.containerwithmanipulation method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.expand_dims"], [131, "ivy.container.manipulation.ContainerWithManipulation.expand_dims"]], "flip() (ivy.container.manipulation.containerwithmanipulation method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.flip"], [131, "ivy.container.manipulation.ContainerWithManipulation.flip"]], "ivy.container.manipulation": [[130, "module-ivy.container.manipulation"]], "permute_dims() (ivy.container.manipulation.containerwithmanipulation method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.permute_dims"], [131, "ivy.container.manipulation.ContainerWithManipulation.permute_dims"]], "repeat() (ivy.container.manipulation.containerwithmanipulation method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.repeat"], [131, "ivy.container.manipulation.ContainerWithManipulation.repeat"]], "reshape() (ivy.container.manipulation.containerwithmanipulation method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.reshape"], [131, "ivy.container.manipulation.ContainerWithManipulation.reshape"]], "roll() (ivy.container.manipulation.containerwithmanipulation method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.roll"], [131, "ivy.container.manipulation.ContainerWithManipulation.roll"]], "split() (ivy.container.manipulation.containerwithmanipulation method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.split"], [131, "ivy.container.manipulation.ContainerWithManipulation.split"]], "squeeze() (ivy.container.manipulation.containerwithmanipulation method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.squeeze"], [131, "ivy.container.manipulation.ContainerWithManipulation.squeeze"]], "stack() (ivy.container.manipulation.containerwithmanipulation method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.stack"], [131, "ivy.container.manipulation.ContainerWithManipulation.stack"]], "static_clip() (ivy.container.manipulation.containerwithmanipulation static method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.static_clip"], [131, "ivy.container.manipulation.ContainerWithManipulation.static_clip"]], "static_concat() (ivy.container.manipulation.containerwithmanipulation static method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.static_concat"], [131, "ivy.container.manipulation.ContainerWithManipulation.static_concat"]], "static_constant_pad() (ivy.container.manipulation.containerwithmanipulation static method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.static_constant_pad"], [131, "ivy.container.manipulation.ContainerWithManipulation.static_constant_pad"]], "static_expand_dims() (ivy.container.manipulation.containerwithmanipulation static method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.static_expand_dims"], [131, "ivy.container.manipulation.ContainerWithManipulation.static_expand_dims"]], "static_flip() (ivy.container.manipulation.containerwithmanipulation static method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.static_flip"], [131, "ivy.container.manipulation.ContainerWithManipulation.static_flip"]], "static_permute_dims() (ivy.container.manipulation.containerwithmanipulation static method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.static_permute_dims"], [131, "ivy.container.manipulation.ContainerWithManipulation.static_permute_dims"]], "static_repeat() (ivy.container.manipulation.containerwithmanipulation static method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.static_repeat"], [131, "ivy.container.manipulation.ContainerWithManipulation.static_repeat"]], "static_reshape() (ivy.container.manipulation.containerwithmanipulation static method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.static_reshape"], [131, "ivy.container.manipulation.ContainerWithManipulation.static_reshape"]], "static_roll() (ivy.container.manipulation.containerwithmanipulation static method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.static_roll"], [131, "ivy.container.manipulation.ContainerWithManipulation.static_roll"]], "static_split() (ivy.container.manipulation.containerwithmanipulation static method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.static_split"], [131, "ivy.container.manipulation.ContainerWithManipulation.static_split"]], "static_squeeze() (ivy.container.manipulation.containerwithmanipulation static method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.static_squeeze"], [131, "ivy.container.manipulation.ContainerWithManipulation.static_squeeze"]], "static_stack() (ivy.container.manipulation.containerwithmanipulation static method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.static_stack"], [131, "ivy.container.manipulation.ContainerWithManipulation.static_stack"]], "static_swapaxes() (ivy.container.manipulation.containerwithmanipulation static method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.static_swapaxes"], [131, "ivy.container.manipulation.ContainerWithManipulation.static_swapaxes"]], "static_tile() (ivy.container.manipulation.containerwithmanipulation static method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.static_tile"], [131, "ivy.container.manipulation.ContainerWithManipulation.static_tile"]], "static_unstack() (ivy.container.manipulation.containerwithmanipulation static method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.static_unstack"], [131, "ivy.container.manipulation.ContainerWithManipulation.static_unstack"]], "static_zero_pad() (ivy.container.manipulation.containerwithmanipulation static method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.static_zero_pad"], [131, "ivy.container.manipulation.ContainerWithManipulation.static_zero_pad"]], "swapaxes() (ivy.container.manipulation.containerwithmanipulation method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.swapaxes"], [131, "ivy.container.manipulation.ContainerWithManipulation.swapaxes"]], "tile() (ivy.container.manipulation.containerwithmanipulation method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.tile"], [131, "ivy.container.manipulation.ContainerWithManipulation.tile"]], "unstack() (ivy.container.manipulation.containerwithmanipulation method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.unstack"], [131, "ivy.container.manipulation.ContainerWithManipulation.unstack"]], "zero_pad() (ivy.container.manipulation.containerwithmanipulation method)": [[130, "ivy.container.manipulation.ContainerWithManipulation.zero_pad"], [131, "ivy.container.manipulation.ContainerWithManipulation.zero_pad"]], "containerwithnorms (class in ivy.container.norms)": [[132, "ivy.container.norms.ContainerWithNorms"], [133, "ivy.container.norms.ContainerWithNorms"]], "ivy.container.norms": [[132, "module-ivy.container.norms"]], "layer_norm() (ivy.container.norms.containerwithnorms method)": [[132, "ivy.container.norms.ContainerWithNorms.layer_norm"], [133, "ivy.container.norms.ContainerWithNorms.layer_norm"]], "containerwithrandom (class in ivy.container.random)": [[134, "ivy.container.random.ContainerWithRandom"], [135, "ivy.container.random.ContainerWithRandom"]], "ivy.container.random": [[134, "module-ivy.container.random"]], "multinomial() (ivy.container.random.containerwithrandom method)": [[134, "ivy.container.random.ContainerWithRandom.multinomial"], [135, "ivy.container.random.ContainerWithRandom.multinomial"]], "randint() (ivy.container.random.containerwithrandom method)": [[134, "ivy.container.random.ContainerWithRandom.randint"], [135, "ivy.container.random.ContainerWithRandom.randint"]], "random_normal() (ivy.container.random.containerwithrandom method)": [[134, "ivy.container.random.ContainerWithRandom.random_normal"], [135, "ivy.container.random.ContainerWithRandom.random_normal"]], "random_uniform() (ivy.container.random.containerwithrandom method)": [[134, "ivy.container.random.ContainerWithRandom.random_uniform"], [135, "ivy.container.random.ContainerWithRandom.random_uniform"]], "shuffle() (ivy.container.random.containerwithrandom method)": [[134, "ivy.container.random.ContainerWithRandom.shuffle"], [135, "ivy.container.random.ContainerWithRandom.shuffle"]], "static_multinomial() (ivy.container.random.containerwithrandom static method)": [[134, "ivy.container.random.ContainerWithRandom.static_multinomial"], [135, "ivy.container.random.ContainerWithRandom.static_multinomial"]], "static_randint() (ivy.container.random.containerwithrandom static method)": [[134, "ivy.container.random.ContainerWithRandom.static_randint"], [135, "ivy.container.random.ContainerWithRandom.static_randint"]], "static_random_normal() (ivy.container.random.containerwithrandom static method)": [[134, "ivy.container.random.ContainerWithRandom.static_random_normal"], [135, "ivy.container.random.ContainerWithRandom.static_random_normal"]], "static_random_uniform() (ivy.container.random.containerwithrandom static method)": [[134, "ivy.container.random.ContainerWithRandom.static_random_uniform"], [135, "ivy.container.random.ContainerWithRandom.static_random_uniform"]], "static_shuffle() (ivy.container.random.containerwithrandom static method)": [[134, "ivy.container.random.ContainerWithRandom.static_shuffle"], [135, "ivy.container.random.ContainerWithRandom.static_shuffle"]], "containerwithsearching (class in ivy.container.searching)": [[136, "ivy.container.searching.ContainerWithSearching"], [137, "ivy.container.searching.ContainerWithSearching"]], "argmax() (ivy.container.searching.containerwithsearching method)": [[136, "ivy.container.searching.ContainerWithSearching.argmax"], [137, "ivy.container.searching.ContainerWithSearching.argmax"]], "argmin() (ivy.container.searching.containerwithsearching method)": [[136, "ivy.container.searching.ContainerWithSearching.argmin"], [137, "ivy.container.searching.ContainerWithSearching.argmin"]], "argwhere() (ivy.container.searching.containerwithsearching method)": [[136, "ivy.container.searching.ContainerWithSearching.argwhere"], [137, "ivy.container.searching.ContainerWithSearching.argwhere"]], "ivy.container.searching": [[136, "module-ivy.container.searching"]], "nonzero() (ivy.container.searching.containerwithsearching method)": [[136, "ivy.container.searching.ContainerWithSearching.nonzero"], [137, "ivy.container.searching.ContainerWithSearching.nonzero"]], "static_argmax() (ivy.container.searching.containerwithsearching static method)": [[136, "ivy.container.searching.ContainerWithSearching.static_argmax"], [137, "ivy.container.searching.ContainerWithSearching.static_argmax"]], "static_argmin() (ivy.container.searching.containerwithsearching static method)": [[136, "ivy.container.searching.ContainerWithSearching.static_argmin"], [137, "ivy.container.searching.ContainerWithSearching.static_argmin"]], "static_argwhere() (ivy.container.searching.containerwithsearching static method)": [[136, "ivy.container.searching.ContainerWithSearching.static_argwhere"], [137, "ivy.container.searching.ContainerWithSearching.static_argwhere"]], "static_nonzero() (ivy.container.searching.containerwithsearching static method)": [[136, "ivy.container.searching.ContainerWithSearching.static_nonzero"], [137, "ivy.container.searching.ContainerWithSearching.static_nonzero"]], "static_where() (ivy.container.searching.containerwithsearching static method)": [[136, "ivy.container.searching.ContainerWithSearching.static_where"], [137, "ivy.container.searching.ContainerWithSearching.static_where"]], "where() (ivy.container.searching.containerwithsearching method)": [[136, "ivy.container.searching.ContainerWithSearching.where"], [137, "ivy.container.searching.ContainerWithSearching.where"]], "containerwithset (class in ivy.container.set)": [[138, "ivy.container.set.ContainerWithSet"], [139, "ivy.container.set.ContainerWithSet"]], "ivy.container.set": [[138, "module-ivy.container.set"]], "static_unique_all() (ivy.container.set.containerwithset static method)": [[138, "ivy.container.set.ContainerWithSet.static_unique_all"], [139, "ivy.container.set.ContainerWithSet.static_unique_all"]], "static_unique_counts() (ivy.container.set.containerwithset static method)": [[138, "ivy.container.set.ContainerWithSet.static_unique_counts"], [139, "ivy.container.set.ContainerWithSet.static_unique_counts"]], "static_unique_inverse() (ivy.container.set.containerwithset static method)": [[138, "ivy.container.set.ContainerWithSet.static_unique_inverse"], [139, "ivy.container.set.ContainerWithSet.static_unique_inverse"]], "static_unique_values() (ivy.container.set.containerwithset static method)": [[138, "ivy.container.set.ContainerWithSet.static_unique_values"], [139, "ivy.container.set.ContainerWithSet.static_unique_values"]], "unique_all() (ivy.container.set.containerwithset method)": [[138, "ivy.container.set.ContainerWithSet.unique_all"], [139, "ivy.container.set.ContainerWithSet.unique_all"]], "unique_counts() (ivy.container.set.containerwithset method)": [[138, "ivy.container.set.ContainerWithSet.unique_counts"], [139, "ivy.container.set.ContainerWithSet.unique_counts"]], "unique_inverse() (ivy.container.set.containerwithset method)": [[138, "ivy.container.set.ContainerWithSet.unique_inverse"], [139, "ivy.container.set.ContainerWithSet.unique_inverse"]], "unique_values() (ivy.container.set.containerwithset method)": [[138, "ivy.container.set.ContainerWithSet.unique_values"], [139, "ivy.container.set.ContainerWithSet.unique_values"]], "containerwithsorting (class in ivy.container.sorting)": [[140, "ivy.container.sorting.ContainerWithSorting"], [141, "ivy.container.sorting.ContainerWithSorting"]], "argsort() (ivy.container.sorting.containerwithsorting method)": [[140, "ivy.container.sorting.ContainerWithSorting.argsort"], [141, "ivy.container.sorting.ContainerWithSorting.argsort"]], "ivy.container.sorting": [[140, "module-ivy.container.sorting"]], "searchsorted() (ivy.container.sorting.containerwithsorting method)": [[140, "ivy.container.sorting.ContainerWithSorting.searchsorted"], [141, "ivy.container.sorting.ContainerWithSorting.searchsorted"]], "sort() (ivy.container.sorting.containerwithsorting method)": [[140, "ivy.container.sorting.ContainerWithSorting.sort"], [141, "ivy.container.sorting.ContainerWithSorting.sort"]], "static_argsort() (ivy.container.sorting.containerwithsorting static method)": [[140, "ivy.container.sorting.ContainerWithSorting.static_argsort"], [141, "ivy.container.sorting.ContainerWithSorting.static_argsort"]], "static_searchsorted() (ivy.container.sorting.containerwithsorting static method)": [[140, "ivy.container.sorting.ContainerWithSorting.static_searchsorted"], [141, "ivy.container.sorting.ContainerWithSorting.static_searchsorted"]], "static_sort() (ivy.container.sorting.containerwithsorting static method)": [[140, "ivy.container.sorting.ContainerWithSorting.static_sort"], [141, "ivy.container.sorting.ContainerWithSorting.static_sort"]], "containerwithstatistical (class in ivy.container.statistical)": [[142, "ivy.container.statistical.ContainerWithStatistical"], [143, "ivy.container.statistical.ContainerWithStatistical"]], "cumprod() (ivy.container.statistical.containerwithstatistical method)": [[142, "ivy.container.statistical.ContainerWithStatistical.cumprod"], [143, "ivy.container.statistical.ContainerWithStatistical.cumprod"]], "cumsum() (ivy.container.statistical.containerwithstatistical method)": [[142, "ivy.container.statistical.ContainerWithStatistical.cumsum"], [143, "ivy.container.statistical.ContainerWithStatistical.cumsum"]], "einsum() (ivy.container.statistical.containerwithstatistical method)": [[142, "ivy.container.statistical.ContainerWithStatistical.einsum"], [143, "ivy.container.statistical.ContainerWithStatistical.einsum"]], "ivy.container.statistical": [[142, "module-ivy.container.statistical"]], "max() (ivy.container.statistical.containerwithstatistical method)": [[142, "ivy.container.statistical.ContainerWithStatistical.max"], [143, "ivy.container.statistical.ContainerWithStatistical.max"]], "mean() (ivy.container.statistical.containerwithstatistical method)": [[142, "ivy.container.statistical.ContainerWithStatistical.mean"], [143, "ivy.container.statistical.ContainerWithStatistical.mean"]], "min() (ivy.container.statistical.containerwithstatistical method)": [[142, "ivy.container.statistical.ContainerWithStatistical.min"], [143, "ivy.container.statistical.ContainerWithStatistical.min"]], "prod() (ivy.container.statistical.containerwithstatistical method)": [[142, "ivy.container.statistical.ContainerWithStatistical.prod"], [143, "ivy.container.statistical.ContainerWithStatistical.prod"]], "static_cumprod() (ivy.container.statistical.containerwithstatistical static method)": [[142, "ivy.container.statistical.ContainerWithStatistical.static_cumprod"], [143, "ivy.container.statistical.ContainerWithStatistical.static_cumprod"]], "static_cumsum() (ivy.container.statistical.containerwithstatistical static method)": [[142, "ivy.container.statistical.ContainerWithStatistical.static_cumsum"], [143, "ivy.container.statistical.ContainerWithStatistical.static_cumsum"]], "static_prod() (ivy.container.statistical.containerwithstatistical static method)": [[142, "ivy.container.statistical.ContainerWithStatistical.static_prod"], [143, "ivy.container.statistical.ContainerWithStatistical.static_prod"]], "static_sum() (ivy.container.statistical.containerwithstatistical static method)": [[142, "ivy.container.statistical.ContainerWithStatistical.static_sum"], [143, "ivy.container.statistical.ContainerWithStatistical.static_sum"]], "static_var() (ivy.container.statistical.containerwithstatistical static method)": [[142, "ivy.container.statistical.ContainerWithStatistical.static_var"], [143, "ivy.container.statistical.ContainerWithStatistical.static_var"]], "std() (ivy.container.statistical.containerwithstatistical method)": [[142, "ivy.container.statistical.ContainerWithStatistical.std"], [143, "ivy.container.statistical.ContainerWithStatistical.std"]], "sum() (ivy.container.statistical.containerwithstatistical method)": [[142, "ivy.container.statistical.ContainerWithStatistical.sum"], [143, "ivy.container.statistical.ContainerWithStatistical.sum"]], "var() (ivy.container.statistical.containerwithstatistical method)": [[142, "ivy.container.statistical.ContainerWithStatistical.var"], [143, "ivy.container.statistical.ContainerWithStatistical.var"]], "containerwithutility (class in ivy.container.utility)": [[144, "ivy.container.utility.ContainerWithUtility"], [145, "ivy.container.utility.ContainerWithUtility"]], "all() (ivy.container.utility.containerwithutility method)": [[144, "ivy.container.utility.ContainerWithUtility.all"], [145, "ivy.container.utility.ContainerWithUtility.all"]], "any() (ivy.container.utility.containerwithutility method)": [[144, "ivy.container.utility.ContainerWithUtility.any"], [145, "ivy.container.utility.ContainerWithUtility.any"]], "ivy.container.utility": [[144, "module-ivy.container.utility"]], "static_all() (ivy.container.utility.containerwithutility static method)": [[144, "ivy.container.utility.ContainerWithUtility.static_all"], [145, "ivy.container.utility.ContainerWithUtility.static_all"]], "static_any() (ivy.container.utility.containerwithutility static method)": [[144, "ivy.container.utility.ContainerWithUtility.static_any"], [145, "ivy.container.utility.ContainerWithUtility.static_any"]], "add_ivy_container_instance_methods() (in module ivy.container.wrapping)": [[146, "ivy.container.wrapping.add_ivy_container_instance_methods"], [147, "ivy.container.wrapping.add_ivy_container_instance_methods"]], "ivy.container.wrapping": [[146, "module-ivy.container.wrapping"]], "handle_array_function() (in module ivy.func_wrapper)": [[188, "ivy.func_wrapper.handle_array_function"], [189, "ivy.func_wrapper.handle_array_function"]], "handle_array_like_without_promotion() (in module ivy.func_wrapper)": [[188, "ivy.func_wrapper.handle_array_like_without_promotion"], [190, "ivy.func_wrapper.handle_array_like_without_promotion"]], "handle_nans() (in module ivy.func_wrapper)": [[188, "ivy.func_wrapper.handle_nans"], [191, "ivy.func_wrapper.handle_nans"]], "handle_nestable() (in module ivy.func_wrapper)": [[188, "ivy.func_wrapper.handle_nestable"], [192, "ivy.func_wrapper.handle_nestable"]], "handle_out_argument() (in module ivy.func_wrapper)": [[188, "ivy.func_wrapper.handle_out_argument"], [193, "ivy.func_wrapper.handle_out_argument"]], "infer_device() (in module ivy.func_wrapper)": [[188, "ivy.func_wrapper.infer_device"], [194, "ivy.func_wrapper.infer_device"]], "infer_dtype() (in module ivy.func_wrapper)": [[188, "ivy.func_wrapper.infer_dtype"], [195, "ivy.func_wrapper.infer_dtype"]], "inputs_to_ivy_arrays() (in module ivy.func_wrapper)": [[188, "ivy.func_wrapper.inputs_to_ivy_arrays"], [196, "ivy.func_wrapper.inputs_to_ivy_arrays"]], "inputs_to_native_arrays() (in module ivy.func_wrapper)": [[188, "ivy.func_wrapper.inputs_to_native_arrays"], [197, "ivy.func_wrapper.inputs_to_native_arrays"]], "integer_arrays_to_float() (in module ivy.func_wrapper)": [[188, "ivy.func_wrapper.integer_arrays_to_float"], [198, "ivy.func_wrapper.integer_arrays_to_float"]], "ivy.func_wrapper": [[188, "module-ivy.func_wrapper"]], "output_to_native_arrays() (in module ivy.func_wrapper)": [[188, "ivy.func_wrapper.output_to_native_arrays"], [199, "ivy.func_wrapper.output_to_native_arrays"]], "outputs_to_ivy_arrays() (in module ivy.func_wrapper)": [[188, "ivy.func_wrapper.outputs_to_ivy_arrays"], [200, "ivy.func_wrapper.outputs_to_ivy_arrays"]], "to_ivy_arrays_and_back() (in module ivy.func_wrapper)": [[188, "ivy.func_wrapper.to_ivy_arrays_and_back"], [201, "ivy.func_wrapper.to_ivy_arrays_and_back"]], "to_native_arrays_and_back() (in module ivy.func_wrapper)": [[188, "ivy.func_wrapper.to_native_arrays_and_back"], [202, "ivy.func_wrapper.to_native_arrays_and_back"]], "try_array_function_override() (in module ivy.func_wrapper)": [[188, "ivy.func_wrapper.try_array_function_override"], [203, "ivy.func_wrapper.try_array_function_override"]], "with_supported_device_and_dtypes() (in module ivy.func_wrapper)": [[188, "ivy.func_wrapper.with_supported_device_and_dtypes"]], "with_supported_devices() (in module ivy.func_wrapper)": [[188, "ivy.func_wrapper.with_supported_devices"]], "with_supported_dtypes() (in module ivy.func_wrapper)": [[188, "ivy.func_wrapper.with_supported_dtypes"]], "with_unsupported_device_and_dtypes() (in module ivy.func_wrapper)": [[188, "ivy.func_wrapper.with_unsupported_device_and_dtypes"]], "with_unsupported_devices() (in module ivy.func_wrapper)": [[188, "ivy.func_wrapper.with_unsupported_devices"]], "with_unsupported_dtypes() (in module ivy.func_wrapper)": [[188, "ivy.func_wrapper.with_unsupported_dtypes"]], "deserialize() (in module ivy.functional.ivy.activations)": [[205, "ivy.functional.ivy.activations.deserialize"], [206, "ivy.functional.ivy.activations.deserialize"]], "gelu() (in module ivy.functional.ivy.activations)": [[205, "ivy.functional.ivy.activations.gelu"], [207, "ivy.functional.ivy.activations.gelu"], [210, "ivy.functional.ivy.activations.gelu"]], "get() (in module ivy.functional.ivy.activations)": [[205, "ivy.functional.ivy.activations.get"], [212, "ivy.functional.ivy.activations.get"]], "ivy.functional.ivy.activations": [[205, "module-ivy.functional.ivy.activations"]], "leaky_relu() (in module ivy.functional.ivy.activations)": [[205, "ivy.functional.ivy.activations.leaky_relu"], [213, "ivy.functional.ivy.activations.leaky_relu"], [216, "ivy.functional.ivy.activations.leaky_relu"]], "log_softmax() (in module ivy.functional.ivy.activations)": [[205, "ivy.functional.ivy.activations.log_softmax"], [218, "ivy.functional.ivy.activations.log_softmax"], [221, "ivy.functional.ivy.activations.log_softmax"]], "mish() (in module ivy.functional.ivy.activations)": [[205, "ivy.functional.ivy.activations.mish"], [223, "ivy.functional.ivy.activations.mish"], [226, "ivy.functional.ivy.activations.mish"]], "relu() (in module ivy.functional.ivy.activations)": [[205, "ivy.functional.ivy.activations.relu"], [228, "ivy.functional.ivy.activations.relu"], [231, "ivy.functional.ivy.activations.relu"]], "sigmoid() (in module ivy.functional.ivy.activations)": [[205, "ivy.functional.ivy.activations.sigmoid"], [233, "ivy.functional.ivy.activations.sigmoid"], [236, "ivy.functional.ivy.activations.sigmoid"]], "softmax() (in module ivy.functional.ivy.activations)": [[205, "ivy.functional.ivy.activations.softmax"], [238, "ivy.functional.ivy.activations.softmax"], [241, "ivy.functional.ivy.activations.softmax"]], "softplus() (in module ivy.functional.ivy.activations)": [[205, "ivy.functional.ivy.activations.softplus"], [243, "ivy.functional.ivy.activations.softplus"], [246, "ivy.functional.ivy.activations.softplus"]], "gelu() (in module ivy.array.array_methods)": [[207, "ivy.array.array_methods.gelu"], [208, "ivy.array.array_methods.gelu"]], "gelu() (in module ivy.container.container_methods)": [[207, "ivy.container.container_methods.gelu"], [209, "ivy.container.container_methods.gelu"]], "static_gelu() (in module ivy.container.container_methods)": [[207, "ivy.container.container_methods.static_gelu"], [211, "ivy.container.container_methods.static_gelu"]], "leaky_relu() (in module ivy.array.array_methods)": [[213, "ivy.array.array_methods.leaky_relu"], [214, "ivy.array.array_methods.leaky_relu"]], "leaky_relu() (in module ivy.container.container_methods)": [[213, "ivy.container.container_methods.leaky_relu"], [215, "ivy.container.container_methods.leaky_relu"]], "static_leaky_relu() (in module ivy.container.container_methods)": [[213, "ivy.container.container_methods.static_leaky_relu"], [217, "ivy.container.container_methods.static_leaky_relu"]], "log_softmax() (in module ivy.array.array_methods)": [[218, "ivy.array.array_methods.log_softmax"], [219, "ivy.array.array_methods.log_softmax"]], "log_softmax() (in module ivy.container.container_methods)": [[218, "ivy.container.container_methods.log_softmax"], [220, "ivy.container.container_methods.log_softmax"]], "static_log_softmax() (in module ivy.container.container_methods)": [[218, "ivy.container.container_methods.static_log_softmax"], [222, "ivy.container.container_methods.static_log_softmax"]], "mish() (in module ivy.array.array_methods)": [[223, "ivy.array.array_methods.mish"], [224, "ivy.array.array_methods.mish"]], "mish() (in module ivy.container.container_methods)": [[223, "ivy.container.container_methods.mish"], [225, "ivy.container.container_methods.mish"]], "static_mish() (in module ivy.container.container_methods)": [[223, "ivy.container.container_methods.static_mish"], [227, "ivy.container.container_methods.static_mish"]], "relu() (in module ivy.array.array_methods)": [[228, "ivy.array.array_methods.relu"], [229, "ivy.array.array_methods.relu"]], "relu() (in module ivy.container.container_methods)": [[228, "ivy.container.container_methods.relu"], [230, "ivy.container.container_methods.relu"]], "static_relu() (in module ivy.container.container_methods)": [[228, "ivy.container.container_methods.static_relu"], [232, "ivy.container.container_methods.static_relu"]], "sigmoid() (in module ivy.array.array_methods)": [[233, "ivy.array.array_methods.sigmoid"], [234, "ivy.array.array_methods.sigmoid"]], "sigmoid() (in module ivy.container.container_methods)": [[233, "ivy.container.container_methods.sigmoid"], [235, "ivy.container.container_methods.sigmoid"]], "static_sigmoid() (in module ivy.container.container_methods)": [[233, "ivy.container.container_methods.static_sigmoid"], [237, "ivy.container.container_methods.static_sigmoid"]], "softmax() (in module ivy.array.array_methods)": [[238, "ivy.array.array_methods.softmax"], [239, "ivy.array.array_methods.softmax"]], "softmax() (in module ivy.container.container_methods)": [[238, "ivy.container.container_methods.softmax"], [240, "ivy.container.container_methods.softmax"]], "static_softmax() (in module ivy.container.container_methods)": [[238, "ivy.container.container_methods.static_softmax"], [242, "ivy.container.container_methods.static_softmax"]], "softplus() (in module ivy.array.array_methods)": [[243, "ivy.array.array_methods.softplus"], [244, "ivy.array.array_methods.softplus"]], "softplus() (in module ivy.container.container_methods)": [[243, "ivy.container.container_methods.softplus"], [245, "ivy.container.container_methods.softplus"]], "static_softplus() (in module ivy.container.container_methods)": [[243, "ivy.container.container_methods.static_softplus"], [247, "ivy.container.container_methods.static_softplus"]], "e (in module ivy.functional.ivy.constants)": [[249, "ivy.functional.ivy.constants.e"]], "inf (in module ivy.functional.ivy.constants)": [[249, "ivy.functional.ivy.constants.inf"]], "ivy.functional.ivy.constants": [[249, "module-ivy.functional.ivy.constants"]], "nan (in module ivy.functional.ivy.constants)": [[249, "ivy.functional.ivy.constants.nan"]], "newaxis (in module ivy.functional.ivy.constants)": [[249, "ivy.functional.ivy.constants.newaxis"]], "pi (in module ivy.functional.ivy.constants)": [[249, "ivy.functional.ivy.constants.pi"]], "ifelse() (in module ivy.functional.ivy.control_flow_ops)": [[250, "ivy.functional.ivy.control_flow_ops.IfElse"], [251, "ivy.functional.ivy.control_flow_ops.IfElse"]], "whileloop() (in module ivy.functional.ivy.control_flow_ops)": [[250, "ivy.functional.ivy.control_flow_ops.WhileLoop"], [252, "ivy.functional.ivy.control_flow_ops.WhileLoop"]], "if_else() (in module ivy.functional.ivy.control_flow_ops)": [[250, "ivy.functional.ivy.control_flow_ops.if_else"], [253, "ivy.functional.ivy.control_flow_ops.if_else"]], "ivy.functional.ivy.control_flow_ops": [[250, "module-ivy.functional.ivy.control_flow_ops"]], "while_loop() (in module ivy.functional.ivy.control_flow_ops)": [[250, "ivy.functional.ivy.control_flow_ops.while_loop"], [254, "ivy.functional.ivy.control_flow_ops.while_loop"]], "nestedsequence (class in ivy.functional.ivy.creation)": [[255, "ivy.functional.ivy.creation.NestedSequence"], [256, "ivy.functional.ivy.creation.NestedSequence"]], "__init__() (ivy.functional.ivy.creation.nestedsequence method)": [[255, "ivy.functional.ivy.creation.NestedSequence.__init__"], [256, "ivy.functional.ivy.creation.NestedSequence.__init__"]], "arange() (in module ivy.functional.ivy.creation)": [[255, "ivy.functional.ivy.creation.arange"], [257, "ivy.functional.ivy.creation.arange"], [258, "ivy.functional.ivy.creation.arange"]], "array() (in module ivy.functional.ivy.creation)": [[255, "ivy.functional.ivy.creation.array"]], "asarray() (in module ivy.functional.ivy.creation)": [[255, "ivy.functional.ivy.creation.asarray"], [260, "ivy.functional.ivy.creation.asarray"], [262, "ivy.functional.ivy.creation.asarray"]], "asarray_handle_nestable() (in module ivy.functional.ivy.creation)": [[255, "ivy.functional.ivy.creation.asarray_handle_nestable"], [264, "ivy.functional.ivy.creation.asarray_handle_nestable"]], "asarray_infer_device() (in module ivy.functional.ivy.creation)": [[255, "ivy.functional.ivy.creation.asarray_infer_device"], [265, "ivy.functional.ivy.creation.asarray_infer_device"]], "asarray_to_native_arrays_and_back() (in module ivy.functional.ivy.creation)": [[255, "ivy.functional.ivy.creation.asarray_to_native_arrays_and_back"], [266, "ivy.functional.ivy.creation.asarray_to_native_arrays_and_back"]], "copy_array() (in module ivy.functional.ivy.creation)": [[255, "ivy.functional.ivy.creation.copy_array"], [267, "ivy.functional.ivy.creation.copy_array"], [269, "ivy.functional.ivy.creation.copy_array"]], "empty() (in module ivy.functional.ivy.creation)": [[255, "ivy.functional.ivy.creation.empty"], [270, "ivy.functional.ivy.creation.empty"]], "empty_like() (in module ivy.functional.ivy.creation)": [[255, "ivy.functional.ivy.creation.empty_like"], [271, "ivy.functional.ivy.creation.empty_like"], [274, "ivy.functional.ivy.creation.empty_like"]], "eye() (in module ivy.functional.ivy.creation)": [[255, "ivy.functional.ivy.creation.eye"], [276, "ivy.functional.ivy.creation.eye"], [277, "ivy.functional.ivy.creation.eye"]], "from_dlpack() (in module ivy.functional.ivy.creation)": [[255, "ivy.functional.ivy.creation.from_dlpack"], [279, "ivy.functional.ivy.creation.from_dlpack"], [282, "ivy.functional.ivy.creation.from_dlpack"]], "full() (in module ivy.functional.ivy.creation)": [[255, "ivy.functional.ivy.creation.full"], [284, "ivy.functional.ivy.creation.full"]], "full_like() (in module ivy.functional.ivy.creation)": [[255, "ivy.functional.ivy.creation.full_like"], [285, "ivy.functional.ivy.creation.full_like"], [288, "ivy.functional.ivy.creation.full_like"]], "ivy.functional.ivy.creation": [[255, "module-ivy.functional.ivy.creation"]], "linspace() (in module ivy.functional.ivy.creation)": [[255, "ivy.functional.ivy.creation.linspace"], [290, "ivy.functional.ivy.creation.linspace"], [293, "ivy.functional.ivy.creation.linspace"]], "logspace() (in module ivy.functional.ivy.creation)": [[255, "ivy.functional.ivy.creation.logspace"], [295, "ivy.functional.ivy.creation.logspace"], [298, "ivy.functional.ivy.creation.logspace"]], "meshgrid() (in module ivy.functional.ivy.creation)": [[255, "ivy.functional.ivy.creation.meshgrid"], [300, "ivy.functional.ivy.creation.meshgrid"], [303, "ivy.functional.ivy.creation.meshgrid"]], "native_array() (in module ivy.functional.ivy.creation)": [[255, "ivy.functional.ivy.creation.native_array"], [305, "ivy.functional.ivy.creation.native_array"], [308, "ivy.functional.ivy.creation.native_array"]], "one_hot() (in module ivy.functional.ivy.creation)": [[255, "ivy.functional.ivy.creation.one_hot"], [310, "ivy.functional.ivy.creation.one_hot"], [313, "ivy.functional.ivy.creation.one_hot"]], "ones() (in module ivy.functional.ivy.creation)": [[255, "ivy.functional.ivy.creation.ones"], [315, "ivy.functional.ivy.creation.ones"], [316, "ivy.functional.ivy.creation.ones"]], "ones_like() (in module ivy.functional.ivy.creation)": [[255, "ivy.functional.ivy.creation.ones_like"], [318, "ivy.functional.ivy.creation.ones_like"], [321, "ivy.functional.ivy.creation.ones_like"]], "tril() (in module ivy.functional.ivy.creation)": [[255, "ivy.functional.ivy.creation.tril"], [323, "ivy.functional.ivy.creation.tril"], [327, "ivy.functional.ivy.creation.tril"]], "triu() (in module ivy.functional.ivy.creation)": [[255, "ivy.functional.ivy.creation.triu"], [328, "ivy.functional.ivy.creation.triu"], [332, "ivy.functional.ivy.creation.triu"]], "zeros() (in module ivy.functional.ivy.creation)": [[255, "ivy.functional.ivy.creation.zeros"], [333, "ivy.functional.ivy.creation.zeros"], [335, "ivy.functional.ivy.creation.zeros"]], "zeros_like() (in module ivy.functional.ivy.creation)": [[255, "ivy.functional.ivy.creation.zeros_like"], [336, "ivy.functional.ivy.creation.zeros_like"], [340, "ivy.functional.ivy.creation.zeros_like"]], "static_arange() (in module ivy.container.container_methods)": [[257, "ivy.container.container_methods.static_arange"], [259, "ivy.container.container_methods.static_arange"]], "asarray() (in module ivy.array.array_methods)": [[260, "ivy.array.array_methods.asarray"], [261, "ivy.array.array_methods.asarray"]], "static_asarray() (in module ivy.container.container_methods)": [[260, "ivy.container.container_methods.static_asarray"], [263, "ivy.container.container_methods.static_asarray"]], "copy_array() (in module ivy.array.array_methods)": [[267, "ivy.array.array_methods.copy_array"], [268, "ivy.array.array_methods.copy_array"]], "empty_like() (in module ivy.array.array_methods)": [[271, "ivy.array.array_methods.empty_like"], [272, "ivy.array.array_methods.empty_like"]], "empty_like() (in module ivy.container.container_methods)": [[271, "ivy.container.container_methods.empty_like"], [273, "ivy.container.container_methods.empty_like"]], "static_empty_like() (in module ivy.container.container_methods)": [[271, "ivy.container.container_methods.static_empty_like"], [275, "ivy.container.container_methods.static_empty_like"]], "static_eye() (in module ivy.container.container_methods)": [[276, "ivy.container.container_methods.static_eye"], [278, "ivy.container.container_methods.static_eye"]], "from_dlpack() (in module ivy.array.array_methods)": [[279, "ivy.array.array_methods.from_dlpack"], [280, "ivy.array.array_methods.from_dlpack"]], "from_dlpack() (in module ivy.container.container_methods)": [[279, "ivy.container.container_methods.from_dlpack"], [281, "ivy.container.container_methods.from_dlpack"]], "static_from_dlpack() (in module ivy.container.container_methods)": [[279, "ivy.container.container_methods.static_from_dlpack"], [283, "ivy.container.container_methods.static_from_dlpack"]], "full_like() (in module ivy.array.array_methods)": [[285, "ivy.array.array_methods.full_like"], [286, "ivy.array.array_methods.full_like"]], "full_like() (in module ivy.container.container_methods)": [[285, "ivy.container.container_methods.full_like"], [287, "ivy.container.container_methods.full_like"]], "static_full_like() (in module ivy.container.container_methods)": [[285, "ivy.container.container_methods.static_full_like"], [289, "ivy.container.container_methods.static_full_like"]], "linspace() (in module ivy.array.array_methods)": [[290, "ivy.array.array_methods.linspace"], [291, "ivy.array.array_methods.linspace"]], "linspace() (in module ivy.container.container_methods)": [[290, "ivy.container.container_methods.linspace"], [292, "ivy.container.container_methods.linspace"]], "static_linspace() (in module ivy.container.container_methods)": [[290, "ivy.container.container_methods.static_linspace"], [294, "ivy.container.container_methods.static_linspace"]], "logspace() (in module ivy.array.array_methods)": [[295, "ivy.array.array_methods.logspace"], [296, "ivy.array.array_methods.logspace"]], "logspace() (in module ivy.container.container_methods)": [[295, "ivy.container.container_methods.logspace"], [297, "ivy.container.container_methods.logspace"]], "static_logspace() (in module ivy.container.container_methods)": [[295, "ivy.container.container_methods.static_logspace"], [299, "ivy.container.container_methods.static_logspace"]], "meshgrid() (in module ivy.array.array_methods)": [[300, "ivy.array.array_methods.meshgrid"], [301, "ivy.array.array_methods.meshgrid"]], "meshgrid() (in module ivy.container.container_methods)": [[300, "ivy.container.container_methods.meshgrid"], [302, "ivy.container.container_methods.meshgrid"]], "static_meshgrid() (in module ivy.container.container_methods)": [[300, "ivy.container.container_methods.static_meshgrid"], [304, "ivy.container.container_methods.static_meshgrid"]], "native_array() (in module ivy.array.array_methods)": [[305, "ivy.array.array_methods.native_array"], [306, "ivy.array.array_methods.native_array"]], "native_array() (in module ivy.container.container_methods)": [[305, "ivy.container.container_methods.native_array"], [307, "ivy.container.container_methods.native_array"]], "static_native_array() (in module ivy.container.container_methods)": [[305, "ivy.container.container_methods.static_native_array"], [309, "ivy.container.container_methods.static_native_array"]], "one_hot() (in module ivy.array.array_methods)": [[310, "ivy.array.array_methods.one_hot"], [311, "ivy.array.array_methods.one_hot"]], "one_hot() (in module ivy.container.container_methods)": [[310, "ivy.container.container_methods.one_hot"], [312, "ivy.container.container_methods.one_hot"]], "static_one_hot() (in module ivy.container.container_methods)": [[310, "ivy.container.container_methods.static_one_hot"], [314, "ivy.container.container_methods.static_one_hot"]], "static_ones() (in module ivy.container.container_methods)": [[315, "ivy.container.container_methods.static_ones"], [317, "ivy.container.container_methods.static_ones"]], "ones_like() (in module ivy.array.array_methods)": [[318, "ivy.array.array_methods.ones_like"], [319, "ivy.array.array_methods.ones_like"]], "ones_like() (in module ivy.container.container_methods)": [[318, "ivy.container.container_methods.ones_like"], [320, "ivy.container.container_methods.ones_like"]], "static_ones_like() (in module ivy.container.container_methods)": [[318, "ivy.container.container_methods.static_ones_like"], [322, "ivy.container.container_methods.static_ones_like"]], "static_tril() (in module ivy.container.container_methods)": [[323, "ivy.container.container_methods.static_tril"], [324, "ivy.container.container_methods.static_tril"]], "tril() (in module ivy.array.array_methods)": [[323, "ivy.array.array_methods.tril"], [325, "ivy.array.array_methods.tril"]], "tril() (in module ivy.container.container_methods)": [[323, "ivy.container.container_methods.tril"], [326, "ivy.container.container_methods.tril"]], "static_triu() (in module ivy.container.container_methods)": [[328, "ivy.container.container_methods.static_triu"], [329, "ivy.container.container_methods.static_triu"]], "triu() (in module ivy.array.array_methods)": [[328, "ivy.array.array_methods.triu"], [330, "ivy.array.array_methods.triu"]], "triu() (in module ivy.container.container_methods)": [[328, "ivy.container.container_methods.triu"], [331, "ivy.container.container_methods.triu"]], "static_zeros() (in module ivy.container.container_methods)": [[333, "ivy.container.container_methods.static_zeros"], [334, "ivy.container.container_methods.static_zeros"]], "static_zeros_like() (in module ivy.container.container_methods)": [[336, "ivy.container.container_methods.static_zeros_like"], [337, "ivy.container.container_methods.static_zeros_like"]], "zeros_like() (in module ivy.array.array_methods)": [[336, "ivy.array.array_methods.zeros_like"], [338, "ivy.array.array_methods.zeros_like"]], "zeros_like() (in module ivy.container.container_methods)": [[336, "ivy.container.container_methods.zeros_like"], [339, "ivy.container.container_methods.zeros_like"]], "defaultcomplexdtype (class in ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.DefaultComplexDtype"], [342, "ivy.functional.ivy.data_type.DefaultComplexDtype"]], "defaultdtype (class in ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.DefaultDtype"], [343, "ivy.functional.ivy.data_type.DefaultDtype"]], "defaultfloatdtype (class in ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.DefaultFloatDtype"], [344, "ivy.functional.ivy.data_type.DefaultFloatDtype"]], "defaultintdtype (class in ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.DefaultIntDtype"], [345, "ivy.functional.ivy.data_type.DefaultIntDtype"]], "defaultuintdtype (class in ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.DefaultUintDtype"], [346, "ivy.functional.ivy.data_type.DefaultUintDtype"]], "__init__() (ivy.functional.ivy.data_type.defaultcomplexdtype method)": [[341, "ivy.functional.ivy.data_type.DefaultComplexDtype.__init__"], [342, "ivy.functional.ivy.data_type.DefaultComplexDtype.__init__"]], "__init__() (ivy.functional.ivy.data_type.defaultdtype method)": [[341, "ivy.functional.ivy.data_type.DefaultDtype.__init__"], [343, "ivy.functional.ivy.data_type.DefaultDtype.__init__"]], "__init__() (ivy.functional.ivy.data_type.defaultfloatdtype method)": [[341, "ivy.functional.ivy.data_type.DefaultFloatDtype.__init__"], [344, "ivy.functional.ivy.data_type.DefaultFloatDtype.__init__"]], "__init__() (ivy.functional.ivy.data_type.defaultintdtype method)": [[341, "ivy.functional.ivy.data_type.DefaultIntDtype.__init__"], [345, "ivy.functional.ivy.data_type.DefaultIntDtype.__init__"]], "__init__() (ivy.functional.ivy.data_type.defaultuintdtype method)": [[341, "ivy.functional.ivy.data_type.DefaultUintDtype.__init__"], [346, "ivy.functional.ivy.data_type.DefaultUintDtype.__init__"]], "as_ivy_dtype() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.as_ivy_dtype"], [347, "ivy.functional.ivy.data_type.as_ivy_dtype"]], "as_native_dtype() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.as_native_dtype"], [348, "ivy.functional.ivy.data_type.as_native_dtype"]], "astype() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.astype"], [349, "ivy.functional.ivy.data_type.astype"], [352, "ivy.functional.ivy.data_type.astype"]], "broadcast_arrays() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.broadcast_arrays"], [354, "ivy.functional.ivy.data_type.broadcast_arrays"], [357, "ivy.functional.ivy.data_type.broadcast_arrays"]], "broadcast_to() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.broadcast_to"], [359, "ivy.functional.ivy.data_type.broadcast_to"], [362, "ivy.functional.ivy.data_type.broadcast_to"]], "can_cast() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.can_cast"], [364, "ivy.functional.ivy.data_type.can_cast"], [367, "ivy.functional.ivy.data_type.can_cast"]], "check_float() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.check_float"], [369, "ivy.functional.ivy.data_type.check_float"]], "closest_valid_dtype() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.closest_valid_dtype"], [370, "ivy.functional.ivy.data_type.closest_valid_dtype"]], "default_complex_dtype() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.default_complex_dtype"], [371, "ivy.functional.ivy.data_type.default_complex_dtype"], [372, "ivy.functional.ivy.data_type.default_complex_dtype"]], "default_dtype() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.default_dtype"], [374, "ivy.functional.ivy.data_type.default_dtype"]], "default_float_dtype() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.default_float_dtype"], [375, "ivy.functional.ivy.data_type.default_float_dtype"], [376, "ivy.functional.ivy.data_type.default_float_dtype"]], "default_int_dtype() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.default_int_dtype"], [378, "ivy.functional.ivy.data_type.default_int_dtype"]], "default_uint_dtype() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.default_uint_dtype"], [379, "ivy.functional.ivy.data_type.default_uint_dtype"]], "dtype() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.dtype"], [380, "ivy.functional.ivy.data_type.dtype"], [382, "ivy.functional.ivy.data_type.dtype"]], "dtype_bits() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.dtype_bits"], [384, "ivy.functional.ivy.data_type.dtype_bits"]], "finfo() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.finfo"], [385, "ivy.functional.ivy.data_type.finfo"], [388, "ivy.functional.ivy.data_type.finfo"]], "function_supported_dtypes() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.function_supported_dtypes"], [390, "ivy.functional.ivy.data_type.function_supported_dtypes"], [391, "ivy.functional.ivy.data_type.function_supported_dtypes"]], "function_unsupported_dtypes() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.function_unsupported_dtypes"], [393, "ivy.functional.ivy.data_type.function_unsupported_dtypes"], [394, "ivy.functional.ivy.data_type.function_unsupported_dtypes"]], "iinfo() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.iinfo"], [396, "ivy.functional.ivy.data_type.iinfo"], [399, "ivy.functional.ivy.data_type.iinfo"]], "infer_default_dtype() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.infer_default_dtype"], [401, "ivy.functional.ivy.data_type.infer_default_dtype"]], "invalid_dtype() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.invalid_dtype"], [402, "ivy.functional.ivy.data_type.invalid_dtype"]], "is_bool_dtype() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.is_bool_dtype"], [403, "ivy.functional.ivy.data_type.is_bool_dtype"], [406, "ivy.functional.ivy.data_type.is_bool_dtype"]], "is_complex_dtype() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.is_complex_dtype"], [408, "ivy.functional.ivy.data_type.is_complex_dtype"], [410, "ivy.functional.ivy.data_type.is_complex_dtype"]], "is_float_dtype() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.is_float_dtype"], [412, "ivy.functional.ivy.data_type.is_float_dtype"], [415, "ivy.functional.ivy.data_type.is_float_dtype"]], "is_int_dtype() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.is_int_dtype"], [417, "ivy.functional.ivy.data_type.is_int_dtype"], [420, "ivy.functional.ivy.data_type.is_int_dtype"]], "is_uint_dtype() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.is_uint_dtype"], [422, "ivy.functional.ivy.data_type.is_uint_dtype"], [425, "ivy.functional.ivy.data_type.is_uint_dtype"]], "ivy.functional.ivy.data_type": [[341, "module-ivy.functional.ivy.data_type"]], "promote_types() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.promote_types"], [427, "ivy.functional.ivy.data_type.promote_types"]], "promote_types_of_inputs() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.promote_types_of_inputs"], [428, "ivy.functional.ivy.data_type.promote_types_of_inputs"]], "result_type() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.result_type"], [429, "ivy.functional.ivy.data_type.result_type"], [432, "ivy.functional.ivy.data_type.result_type"]], "set_default_complex_dtype() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.set_default_complex_dtype"], [434, "ivy.functional.ivy.data_type.set_default_complex_dtype"]], "set_default_dtype() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.set_default_dtype"], [435, "ivy.functional.ivy.data_type.set_default_dtype"]], "set_default_float_dtype() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.set_default_float_dtype"], [436, "ivy.functional.ivy.data_type.set_default_float_dtype"]], "set_default_int_dtype() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.set_default_int_dtype"], [437, "ivy.functional.ivy.data_type.set_default_int_dtype"]], "set_default_uint_dtype() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.set_default_uint_dtype"], [438, "ivy.functional.ivy.data_type.set_default_uint_dtype"]], "type_promote_arrays() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.type_promote_arrays"], [439, "ivy.functional.ivy.data_type.type_promote_arrays"]], "unset_default_complex_dtype() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.unset_default_complex_dtype"], [440, "ivy.functional.ivy.data_type.unset_default_complex_dtype"]], "unset_default_dtype() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.unset_default_dtype"], [441, "ivy.functional.ivy.data_type.unset_default_dtype"]], "unset_default_float_dtype() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.unset_default_float_dtype"], [442, "ivy.functional.ivy.data_type.unset_default_float_dtype"]], "unset_default_int_dtype() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.unset_default_int_dtype"], [443, "ivy.functional.ivy.data_type.unset_default_int_dtype"]], "unset_default_uint_dtype() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.unset_default_uint_dtype"], [444, "ivy.functional.ivy.data_type.unset_default_uint_dtype"]], "valid_dtype() (in module ivy.functional.ivy.data_type)": [[341, "ivy.functional.ivy.data_type.valid_dtype"], [445, "ivy.functional.ivy.data_type.valid_dtype"]], "astype() (in module ivy.array.array_methods)": [[349, "ivy.array.array_methods.astype"], [350, "ivy.array.array_methods.astype"]], "astype() (in module ivy.container.container_methods)": [[349, "ivy.container.container_methods.astype"], [351, "ivy.container.container_methods.astype"]], "static_astype() (in module ivy.container.container_methods)": [[349, "ivy.container.container_methods.static_astype"], [353, "ivy.container.container_methods.static_astype"]], "broadcast_arrays() (in module ivy.array.array_methods)": [[354, "ivy.array.array_methods.broadcast_arrays"], [355, "ivy.array.array_methods.broadcast_arrays"]], "broadcast_arrays() (in module ivy.container.container_methods)": [[354, "ivy.container.container_methods.broadcast_arrays"], [356, "ivy.container.container_methods.broadcast_arrays"]], "static_broadcast_arrays() (in module ivy.container.container_methods)": [[354, "ivy.container.container_methods.static_broadcast_arrays"], [358, "ivy.container.container_methods.static_broadcast_arrays"]], "broadcast_to() (in module ivy.array.array_methods)": [[359, "ivy.array.array_methods.broadcast_to"], [360, "ivy.array.array_methods.broadcast_to"]], "broadcast_to() (in module ivy.container.container_methods)": [[359, "ivy.container.container_methods.broadcast_to"], [361, "ivy.container.container_methods.broadcast_to"]], "static_broadcast_to() (in module ivy.container.container_methods)": [[359, "ivy.container.container_methods.static_broadcast_to"], [363, "ivy.container.container_methods.static_broadcast_to"]], "can_cast() (in module ivy.array.array_methods)": [[364, "ivy.array.array_methods.can_cast"], [365, "ivy.array.array_methods.can_cast"]], "can_cast() (in module ivy.container.container_methods)": [[364, "ivy.container.container_methods.can_cast"], [366, "ivy.container.container_methods.can_cast"]], "static_can_cast() (in module ivy.container.container_methods)": [[364, "ivy.container.container_methods.static_can_cast"], [368, "ivy.container.container_methods.static_can_cast"]], "static_default_complex_dtype() (in module ivy.container.container_methods)": [[371, "ivy.container.container_methods.static_default_complex_dtype"], [373, "ivy.container.container_methods.static_default_complex_dtype"]], "static_default_float_dtype() (in module ivy.container.container_methods)": [[375, "ivy.container.container_methods.static_default_float_dtype"], [377, "ivy.container.container_methods.static_default_float_dtype"]], "dtype() (in module ivy.container.container_methods)": [[380, "ivy.container.container_methods.dtype"], [381, "ivy.container.container_methods.dtype"]], "static_dtype() (in module ivy.container.container_methods)": [[380, "ivy.container.container_methods.static_dtype"], [383, "ivy.container.container_methods.static_dtype"]], "finfo() (in module ivy.array.array_methods)": [[385, "ivy.array.array_methods.finfo"], [386, "ivy.array.array_methods.finfo"]], "finfo() (in module ivy.container.container_methods)": [[385, "ivy.container.container_methods.finfo"], [387, "ivy.container.container_methods.finfo"]], "static_finfo() (in module ivy.container.container_methods)": [[385, "ivy.container.container_methods.static_finfo"], [389, "ivy.container.container_methods.static_finfo"]], "static_function_supported_dtypes() (in module ivy.container.container_methods)": [[390, "ivy.container.container_methods.static_function_supported_dtypes"], [392, "ivy.container.container_methods.static_function_supported_dtypes"]], "static_function_unsupported_dtypes() (in module ivy.container.container_methods)": [[393, "ivy.container.container_methods.static_function_unsupported_dtypes"], [395, "ivy.container.container_methods.static_function_unsupported_dtypes"]], "iinfo() (in module ivy.array.array_methods)": [[396, "ivy.array.array_methods.iinfo"], [397, "ivy.array.array_methods.iinfo"]], "iinfo() (in module ivy.container.container_methods)": [[396, "ivy.container.container_methods.iinfo"], [398, "ivy.container.container_methods.iinfo"]], "static_iinfo() (in module ivy.container.container_methods)": [[396, "ivy.container.container_methods.static_iinfo"], [400, "ivy.container.container_methods.static_iinfo"]], "is_bool_dtype() (in module ivy.array.array_methods)": [[403, "ivy.array.array_methods.is_bool_dtype"], [404, "ivy.array.array_methods.is_bool_dtype"]], "is_bool_dtype() (in module ivy.container.container_methods)": [[403, "ivy.container.container_methods.is_bool_dtype"], [405, "ivy.container.container_methods.is_bool_dtype"]], "static_is_bool_dtype() (in module ivy.container.container_methods)": [[403, "ivy.container.container_methods.static_is_bool_dtype"], [407, "ivy.container.container_methods.static_is_bool_dtype"]], "is_complex_dtype() (in module ivy.container.container_methods)": [[408, "ivy.container.container_methods.is_complex_dtype"], [409, "ivy.container.container_methods.is_complex_dtype"]], "static_is_complex_dtype() (in module ivy.container.container_methods)": [[408, "ivy.container.container_methods.static_is_complex_dtype"], [411, "ivy.container.container_methods.static_is_complex_dtype"]], "is_float_dtype() (in module ivy.array.array_methods)": [[412, "ivy.array.array_methods.is_float_dtype"], [413, "ivy.array.array_methods.is_float_dtype"]], "is_float_dtype() (in module ivy.container.container_methods)": [[412, "ivy.container.container_methods.is_float_dtype"], [414, "ivy.container.container_methods.is_float_dtype"]], "static_is_float_dtype() (in module ivy.container.container_methods)": [[412, "ivy.container.container_methods.static_is_float_dtype"], [416, "ivy.container.container_methods.static_is_float_dtype"]], "is_int_dtype() (in module ivy.array.array_methods)": [[417, "ivy.array.array_methods.is_int_dtype"], [418, "ivy.array.array_methods.is_int_dtype"]], "is_int_dtype() (in module ivy.container.container_methods)": [[417, "ivy.container.container_methods.is_int_dtype"], [419, "ivy.container.container_methods.is_int_dtype"]], "static_is_int_dtype() (in module ivy.container.container_methods)": [[417, "ivy.container.container_methods.static_is_int_dtype"], [421, "ivy.container.container_methods.static_is_int_dtype"]], "is_uint_dtype() (in module ivy.array.array_methods)": [[422, "ivy.array.array_methods.is_uint_dtype"], [423, "ivy.array.array_methods.is_uint_dtype"]], "is_uint_dtype() (in module ivy.container.container_methods)": [[422, "ivy.container.container_methods.is_uint_dtype"], [424, "ivy.container.container_methods.is_uint_dtype"]], "static_is_uint_dtype() (in module ivy.container.container_methods)": [[422, "ivy.container.container_methods.static_is_uint_dtype"], [426, "ivy.container.container_methods.static_is_uint_dtype"]], "result_type() (in module ivy.array.array_methods)": [[429, "ivy.array.array_methods.result_type"], [430, "ivy.array.array_methods.result_type"]], "result_type() (in module ivy.container.container_methods)": [[429, "ivy.container.container_methods.result_type"], [431, "ivy.container.container_methods.result_type"]], "static_result_type() (in module ivy.container.container_methods)": [[429, "ivy.container.container_methods.static_result_type"], [433, "ivy.container.container_methods.static_result_type"]], "defaultdevice (class in ivy.functional.ivy.device)": [[446, "ivy.functional.ivy.device.DefaultDevice"], [447, "ivy.functional.ivy.device.DefaultDevice"]], "profiler (class in ivy.functional.ivy.device)": [[446, "ivy.functional.ivy.device.Profiler"], [448, "ivy.functional.ivy.device.Profiler"]], "__enter__() (ivy.functional.ivy.device.defaultdevice method)": [[446, "ivy.functional.ivy.device.DefaultDevice.__enter__"], [447, "ivy.functional.ivy.device.DefaultDevice.__enter__"]], "__exit__() (ivy.functional.ivy.device.defaultdevice method)": [[446, "ivy.functional.ivy.device.DefaultDevice.__exit__"], [447, "ivy.functional.ivy.device.DefaultDevice.__exit__"]], "__init__() (ivy.functional.ivy.device.defaultdevice method)": [[446, "ivy.functional.ivy.device.DefaultDevice.__init__"], [447, "ivy.functional.ivy.device.DefaultDevice.__init__"]], "__init__() (ivy.functional.ivy.device.profiler method)": [[446, "ivy.functional.ivy.device.Profiler.__init__"], [448, "ivy.functional.ivy.device.Profiler.__init__"]], "as_ivy_dev() (in module ivy.functional.ivy.device)": [[446, "ivy.functional.ivy.device.as_ivy_dev"], [449, "ivy.functional.ivy.device.as_ivy_dev"]], "as_native_dev() (in module ivy.functional.ivy.device)": [[446, "ivy.functional.ivy.device.as_native_dev"], [450, "ivy.functional.ivy.device.as_native_dev"]], "clear_mem_on_dev() (in module ivy.functional.ivy.device)": [[446, "ivy.functional.ivy.device.clear_mem_on_dev"], [451, "ivy.functional.ivy.device.clear_mem_on_dev"]], "default_device() (in module ivy.functional.ivy.device)": [[446, "ivy.functional.ivy.device.default_device"], [452, "ivy.functional.ivy.device.default_device"]], "dev() (in module ivy.functional.ivy.device)": [[446, "ivy.functional.ivy.device.dev"], [453, "ivy.functional.ivy.device.dev"], [456, "ivy.functional.ivy.device.dev"]], "dev_util() (in module ivy.functional.ivy.device)": [[446, "ivy.functional.ivy.device.dev_util"], [458, "ivy.functional.ivy.device.dev_util"]], "function_supported_devices() (in module ivy.functional.ivy.device)": [[446, "ivy.functional.ivy.device.function_supported_devices"], [459, "ivy.functional.ivy.device.function_supported_devices"]], "function_unsupported_devices() (in module ivy.functional.ivy.device)": [[446, "ivy.functional.ivy.device.function_unsupported_devices"], [460, "ivy.functional.ivy.device.function_unsupported_devices"]], "get_all_ivy_arrays_on_dev() (in module ivy.functional.ivy.device)": [[446, "ivy.functional.ivy.device.get_all_ivy_arrays_on_dev"], [461, "ivy.functional.ivy.device.get_all_ivy_arrays_on_dev"]], "gpu_is_available() (in module ivy.functional.ivy.device)": [[446, "ivy.functional.ivy.device.gpu_is_available"], [462, "ivy.functional.ivy.device.gpu_is_available"]], "ivy.functional.ivy.device": [[446, "module-ivy.functional.ivy.device"]], "num_cpu_cores() (in module ivy.functional.ivy.device)": [[446, "ivy.functional.ivy.device.num_cpu_cores"], [463, "ivy.functional.ivy.device.num_cpu_cores"]], "num_gpus() (in module ivy.functional.ivy.device)": [[446, "ivy.functional.ivy.device.num_gpus"], [464, "ivy.functional.ivy.device.num_gpus"]], "num_ivy_arrays_on_dev() (in module ivy.functional.ivy.device)": [[446, "ivy.functional.ivy.device.num_ivy_arrays_on_dev"], [465, "ivy.functional.ivy.device.num_ivy_arrays_on_dev"]], "percent_used_mem_on_dev() (in module ivy.functional.ivy.device)": [[446, "ivy.functional.ivy.device.percent_used_mem_on_dev"], [466, "ivy.functional.ivy.device.percent_used_mem_on_dev"]], "print_all_ivy_arrays_on_dev() (in module ivy.functional.ivy.device)": [[446, "ivy.functional.ivy.device.print_all_ivy_arrays_on_dev"], [467, "ivy.functional.ivy.device.print_all_ivy_arrays_on_dev"]], "set_default_device() (in module ivy.functional.ivy.device)": [[446, "ivy.functional.ivy.device.set_default_device"], [468, "ivy.functional.ivy.device.set_default_device"]], "set_split_factor() (in module ivy.functional.ivy.device)": [[446, "ivy.functional.ivy.device.set_split_factor"], [469, "ivy.functional.ivy.device.set_split_factor"]], "split_factor() (in module ivy.functional.ivy.device)": [[446, "ivy.functional.ivy.device.split_factor"], [470, "ivy.functional.ivy.device.split_factor"]], "split_func_call() (in module ivy.functional.ivy.device)": [[446, "ivy.functional.ivy.device.split_func_call"], [471, "ivy.functional.ivy.device.split_func_call"]], "start() (ivy.functional.ivy.device.profiler method)": [[446, "ivy.functional.ivy.device.Profiler.start"], [448, "ivy.functional.ivy.device.Profiler.start"]], "stop() (ivy.functional.ivy.device.profiler method)": [[446, "ivy.functional.ivy.device.Profiler.stop"], [448, "ivy.functional.ivy.device.Profiler.stop"]], "to_device() (in module ivy.functional.ivy.device)": [[446, "ivy.functional.ivy.device.to_device"], [472, "ivy.functional.ivy.device.to_device"], [476, "ivy.functional.ivy.device.to_device"]], "total_mem_on_dev() (in module ivy.functional.ivy.device)": [[446, "ivy.functional.ivy.device.total_mem_on_dev"], [477, "ivy.functional.ivy.device.total_mem_on_dev"]], "tpu_is_available() (in module ivy.functional.ivy.device)": [[446, "ivy.functional.ivy.device.tpu_is_available"], [478, "ivy.functional.ivy.device.tpu_is_available"]], "unset_default_device() (in module ivy.functional.ivy.device)": [[446, "ivy.functional.ivy.device.unset_default_device"], [479, "ivy.functional.ivy.device.unset_default_device"]], "used_mem_on_dev() (in module ivy.functional.ivy.device)": [[446, "ivy.functional.ivy.device.used_mem_on_dev"], [480, "ivy.functional.ivy.device.used_mem_on_dev"]], "dev() (in module ivy.array.array_methods)": [[453, "ivy.array.array_methods.dev"], [454, "ivy.array.array_methods.dev"]], "dev() (in module ivy.container.container_methods)": [[453, "ivy.container.container_methods.dev"], [455, "ivy.container.container_methods.dev"]], "static_dev() (in module ivy.container.container_methods)": [[453, "ivy.container.container_methods.static_dev"], [457, "ivy.container.container_methods.static_dev"]], "static_to_device() (in module ivy.container.container_methods)": [[472, "ivy.container.container_methods.static_to_device"], [473, "ivy.container.container_methods.static_to_device"]], "to_device() (in module ivy.array.array_methods)": [[472, "ivy.array.array_methods.to_device"], [474, "ivy.array.array_methods.to_device"]], "to_device() (in module ivy.container.container_methods)": [[472, "ivy.container.container_methods.to_device"], [475, "ivy.container.container_methods.to_device"]], "abs() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.abs"], [482, "ivy.functional.ivy.elementwise.abs"], [485, "ivy.functional.ivy.elementwise.abs"]], "acos() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.acos"], [487, "ivy.functional.ivy.elementwise.acos"], [490, "ivy.functional.ivy.elementwise.acos"]], "acosh() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.acosh"], [492, "ivy.functional.ivy.elementwise.acosh"], [495, "ivy.functional.ivy.elementwise.acosh"]], "add() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.add"], [497, "ivy.functional.ivy.elementwise.add"], [500, "ivy.functional.ivy.elementwise.add"]], "asin() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.asin"], [502, "ivy.functional.ivy.elementwise.asin"], [505, "ivy.functional.ivy.elementwise.asin"]], "asinh() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.asinh"], [507, "ivy.functional.ivy.elementwise.asinh"], [510, "ivy.functional.ivy.elementwise.asinh"]], "atan() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.atan"], [512, "ivy.functional.ivy.elementwise.atan"], [515, "ivy.functional.ivy.elementwise.atan"]], "atan2() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.atan2"], [517, "ivy.functional.ivy.elementwise.atan2"], [520, "ivy.functional.ivy.elementwise.atan2"]], "atanh() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.atanh"], [522, "ivy.functional.ivy.elementwise.atanh"], [525, "ivy.functional.ivy.elementwise.atanh"]], "bitwise_and() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.bitwise_and"], [527, "ivy.functional.ivy.elementwise.bitwise_and"], [530, "ivy.functional.ivy.elementwise.bitwise_and"]], "bitwise_invert() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.bitwise_invert"], [532, "ivy.functional.ivy.elementwise.bitwise_invert"], [535, "ivy.functional.ivy.elementwise.bitwise_invert"]], "bitwise_left_shift() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.bitwise_left_shift"], [537, "ivy.functional.ivy.elementwise.bitwise_left_shift"], [540, "ivy.functional.ivy.elementwise.bitwise_left_shift"]], "bitwise_or() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.bitwise_or"], [542, "ivy.functional.ivy.elementwise.bitwise_or"], [545, "ivy.functional.ivy.elementwise.bitwise_or"]], "bitwise_right_shift() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.bitwise_right_shift"], [547, "ivy.functional.ivy.elementwise.bitwise_right_shift"], [550, "ivy.functional.ivy.elementwise.bitwise_right_shift"]], "bitwise_xor() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.bitwise_xor"], [552, "ivy.functional.ivy.elementwise.bitwise_xor"], [555, "ivy.functional.ivy.elementwise.bitwise_xor"]], "ceil() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.ceil"], [557, "ivy.functional.ivy.elementwise.ceil"], [560, "ivy.functional.ivy.elementwise.ceil"]], "cos() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.cos"], [562, "ivy.functional.ivy.elementwise.cos"], [565, "ivy.functional.ivy.elementwise.cos"]], "cosh() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.cosh"], [567, "ivy.functional.ivy.elementwise.cosh"], [570, "ivy.functional.ivy.elementwise.cosh"]], "deg2rad() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.deg2rad"], [572, "ivy.functional.ivy.elementwise.deg2rad"], [575, "ivy.functional.ivy.elementwise.deg2rad"]], "divide() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.divide"], [577, "ivy.functional.ivy.elementwise.divide"], [580, "ivy.functional.ivy.elementwise.divide"]], "equal() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.equal"], [582, "ivy.functional.ivy.elementwise.equal"], [585, "ivy.functional.ivy.elementwise.equal"]], "erf() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.erf"], [587, "ivy.functional.ivy.elementwise.erf"], [590, "ivy.functional.ivy.elementwise.erf"]], "exp() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.exp"], [592, "ivy.functional.ivy.elementwise.exp"], [595, "ivy.functional.ivy.elementwise.exp"]], "expm1() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.expm1"], [597, "ivy.functional.ivy.elementwise.expm1"], [600, "ivy.functional.ivy.elementwise.expm1"]], "floor() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.floor"], [602, "ivy.functional.ivy.elementwise.floor"], [605, "ivy.functional.ivy.elementwise.floor"]], "floor_divide() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.floor_divide"], [607, "ivy.functional.ivy.elementwise.floor_divide"], [610, "ivy.functional.ivy.elementwise.floor_divide"]], "greater() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.greater"], [612, "ivy.functional.ivy.elementwise.greater"], [615, "ivy.functional.ivy.elementwise.greater"]], "greater_equal() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.greater_equal"], [617, "ivy.functional.ivy.elementwise.greater_equal"], [620, "ivy.functional.ivy.elementwise.greater_equal"]], "isfinite() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.isfinite"], [622, "ivy.functional.ivy.elementwise.isfinite"], [625, "ivy.functional.ivy.elementwise.isfinite"]], "isinf() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.isinf"], [627, "ivy.functional.ivy.elementwise.isinf"], [630, "ivy.functional.ivy.elementwise.isinf"]], "isnan() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.isnan"], [632, "ivy.functional.ivy.elementwise.isnan"], [635, "ivy.functional.ivy.elementwise.isnan"]], "isreal() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.isreal"], [637, "ivy.functional.ivy.elementwise.isreal"], [640, "ivy.functional.ivy.elementwise.isreal"]], "ivy.functional.ivy.elementwise": [[481, "module-ivy.functional.ivy.elementwise"]], "less() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.less"], [642, "ivy.functional.ivy.elementwise.less"], [645, "ivy.functional.ivy.elementwise.less"]], "less_equal() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.less_equal"], [647, "ivy.functional.ivy.elementwise.less_equal"], [650, "ivy.functional.ivy.elementwise.less_equal"]], "log() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.log"], [652, "ivy.functional.ivy.elementwise.log"], [655, "ivy.functional.ivy.elementwise.log"]], "log10() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.log10"], [657, "ivy.functional.ivy.elementwise.log10"], [660, "ivy.functional.ivy.elementwise.log10"]], "log1p() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.log1p"], [662, "ivy.functional.ivy.elementwise.log1p"], [665, "ivy.functional.ivy.elementwise.log1p"]], "log2() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.log2"], [667, "ivy.functional.ivy.elementwise.log2"], [670, "ivy.functional.ivy.elementwise.log2"]], "logaddexp() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.logaddexp"], [672, "ivy.functional.ivy.elementwise.logaddexp"], [675, "ivy.functional.ivy.elementwise.logaddexp"]], "logical_and() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.logical_and"], [677, "ivy.functional.ivy.elementwise.logical_and"], [680, "ivy.functional.ivy.elementwise.logical_and"]], "logical_not() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.logical_not"], [682, "ivy.functional.ivy.elementwise.logical_not"], [685, "ivy.functional.ivy.elementwise.logical_not"]], "logical_or() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.logical_or"], [687, "ivy.functional.ivy.elementwise.logical_or"], [690, "ivy.functional.ivy.elementwise.logical_or"]], "logical_xor() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.logical_xor"], [692, "ivy.functional.ivy.elementwise.logical_xor"], [695, "ivy.functional.ivy.elementwise.logical_xor"]], "maximum() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.maximum"], [697, "ivy.functional.ivy.elementwise.maximum"], [700, "ivy.functional.ivy.elementwise.maximum"]], "minimum() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.minimum"], [702, "ivy.functional.ivy.elementwise.minimum"], [705, "ivy.functional.ivy.elementwise.minimum"]], "multiply() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.multiply"], [707, "ivy.functional.ivy.elementwise.multiply"], [710, "ivy.functional.ivy.elementwise.multiply"]], "negative() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.negative"], [712, "ivy.functional.ivy.elementwise.negative"], [715, "ivy.functional.ivy.elementwise.negative"]], "not_equal() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.not_equal"], [717, "ivy.functional.ivy.elementwise.not_equal"], [720, "ivy.functional.ivy.elementwise.not_equal"]], "positive() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.positive"], [722, "ivy.functional.ivy.elementwise.positive"], [725, "ivy.functional.ivy.elementwise.positive"]], "pow() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.pow"], [727, "ivy.functional.ivy.elementwise.pow"], [730, "ivy.functional.ivy.elementwise.pow"]], "rad2deg() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.rad2deg"], [732, "ivy.functional.ivy.elementwise.rad2deg"], [735, "ivy.functional.ivy.elementwise.rad2deg"]], "reciprocal() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.reciprocal"], [737, "ivy.functional.ivy.elementwise.reciprocal"], [740, "ivy.functional.ivy.elementwise.reciprocal"]], "remainder() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.remainder"], [742, "ivy.functional.ivy.elementwise.remainder"], [745, "ivy.functional.ivy.elementwise.remainder"]], "round() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.round"], [747, "ivy.functional.ivy.elementwise.round"], [750, "ivy.functional.ivy.elementwise.round"]], "sign() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.sign"], [752, "ivy.functional.ivy.elementwise.sign"], [755, "ivy.functional.ivy.elementwise.sign"]], "sin() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.sin"], [757, "ivy.functional.ivy.elementwise.sin"], [760, "ivy.functional.ivy.elementwise.sin"]], "sinh() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.sinh"], [762, "ivy.functional.ivy.elementwise.sinh"], [765, "ivy.functional.ivy.elementwise.sinh"]], "sqrt() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.sqrt"], [767, "ivy.functional.ivy.elementwise.sqrt"], [770, "ivy.functional.ivy.elementwise.sqrt"]], "square() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.square"], [772, "ivy.functional.ivy.elementwise.square"], [775, "ivy.functional.ivy.elementwise.square"]], "subtract() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.subtract"], [777, "ivy.functional.ivy.elementwise.subtract"], [781, "ivy.functional.ivy.elementwise.subtract"]], "tan() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.tan"], [782, "ivy.functional.ivy.elementwise.tan"], [786, "ivy.functional.ivy.elementwise.tan"]], "tanh() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.tanh"], [787, "ivy.functional.ivy.elementwise.tanh"], [791, "ivy.functional.ivy.elementwise.tanh"]], "trunc() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.trunc"], [792, "ivy.functional.ivy.elementwise.trunc"], [796, "ivy.functional.ivy.elementwise.trunc"]], "trunc_divide() (in module ivy.functional.ivy.elementwise)": [[481, "ivy.functional.ivy.elementwise.trunc_divide"], [797, "ivy.functional.ivy.elementwise.trunc_divide"], [801, "ivy.functional.ivy.elementwise.trunc_divide"]], "abs() (in module ivy.array.array_methods)": [[482, "ivy.array.array_methods.abs"], [483, "ivy.array.array_methods.abs"]], "abs() (in module ivy.container.container_methods)": [[482, "ivy.container.container_methods.abs"], [484, "ivy.container.container_methods.abs"]], "static_abs() (in module ivy.container.container_methods)": [[482, "ivy.container.container_methods.static_abs"], [486, "ivy.container.container_methods.static_abs"]], "acos() (in module ivy.array.array_methods)": [[487, "ivy.array.array_methods.acos"], [488, "ivy.array.array_methods.acos"]], "acos() (in module ivy.container.container_methods)": [[487, "ivy.container.container_methods.acos"], [489, "ivy.container.container_methods.acos"]], "static_acos() (in module ivy.container.container_methods)": [[487, "ivy.container.container_methods.static_acos"], [491, "ivy.container.container_methods.static_acos"]], "acosh() (in module ivy.array.array_methods)": [[492, "ivy.array.array_methods.acosh"], [493, "ivy.array.array_methods.acosh"]], "acosh() (in module ivy.container.container_methods)": [[492, "ivy.container.container_methods.acosh"], [494, "ivy.container.container_methods.acosh"]], "static_acosh() (in module ivy.container.container_methods)": [[492, "ivy.container.container_methods.static_acosh"], [496, "ivy.container.container_methods.static_acosh"]], "add() (in module ivy.array.array_methods)": [[497, "ivy.array.array_methods.add"], [498, "ivy.array.array_methods.add"]], "add() (in module ivy.container.container_methods)": [[497, "ivy.container.container_methods.add"], [499, "ivy.container.container_methods.add"]], "static_add() (in module ivy.container.container_methods)": [[497, "ivy.container.container_methods.static_add"], [501, "ivy.container.container_methods.static_add"]], "asin() (in module ivy.array.array_methods)": [[502, "ivy.array.array_methods.asin"], [503, "ivy.array.array_methods.asin"]], "asin() (in module ivy.container.container_methods)": [[502, "ivy.container.container_methods.asin"], [504, "ivy.container.container_methods.asin"]], "static_asin() (in module ivy.container.container_methods)": [[502, "ivy.container.container_methods.static_asin"], [506, "ivy.container.container_methods.static_asin"]], "asinh() (in module ivy.array.array_methods)": [[507, "ivy.array.array_methods.asinh"], [508, "ivy.array.array_methods.asinh"]], "asinh() (in module ivy.container.container_methods)": [[507, "ivy.container.container_methods.asinh"], [509, "ivy.container.container_methods.asinh"]], "static_asinh() (in module ivy.container.container_methods)": [[507, "ivy.container.container_methods.static_asinh"], [511, "ivy.container.container_methods.static_asinh"]], "atan() (in module ivy.array.array_methods)": [[512, "ivy.array.array_methods.atan"], [513, "ivy.array.array_methods.atan"]], "atan() (in module ivy.container.container_methods)": [[512, "ivy.container.container_methods.atan"], [514, "ivy.container.container_methods.atan"]], "static_atan() (in module ivy.container.container_methods)": [[512, "ivy.container.container_methods.static_atan"], [516, "ivy.container.container_methods.static_atan"]], "atan2() (in module ivy.array.array_methods)": [[517, "ivy.array.array_methods.atan2"], [518, "ivy.array.array_methods.atan2"]], "atan2() (in module ivy.container.container_methods)": [[517, "ivy.container.container_methods.atan2"], [519, "ivy.container.container_methods.atan2"]], "static_atan2() (in module ivy.container.container_methods)": [[517, "ivy.container.container_methods.static_atan2"], [521, "ivy.container.container_methods.static_atan2"]], "atanh() (in module ivy.array.array_methods)": [[522, "ivy.array.array_methods.atanh"], [523, "ivy.array.array_methods.atanh"]], "atanh() (in module ivy.container.container_methods)": [[522, "ivy.container.container_methods.atanh"], [524, "ivy.container.container_methods.atanh"]], "static_atanh() (in module ivy.container.container_methods)": [[522, "ivy.container.container_methods.static_atanh"], [526, "ivy.container.container_methods.static_atanh"]], "bitwise_and() (in module ivy.array.array_methods)": [[527, "ivy.array.array_methods.bitwise_and"], [528, "ivy.array.array_methods.bitwise_and"]], "bitwise_and() (in module ivy.container.container_methods)": [[527, "ivy.container.container_methods.bitwise_and"], [529, "ivy.container.container_methods.bitwise_and"]], "static_bitwise_and() (in module ivy.container.container_methods)": [[527, "ivy.container.container_methods.static_bitwise_and"], [531, "ivy.container.container_methods.static_bitwise_and"]], "bitwise_invert() (in module ivy.array.array_methods)": [[532, "ivy.array.array_methods.bitwise_invert"], [533, "ivy.array.array_methods.bitwise_invert"]], "bitwise_invert() (in module ivy.container.container_methods)": [[532, "ivy.container.container_methods.bitwise_invert"], [534, "ivy.container.container_methods.bitwise_invert"]], "static_bitwise_invert() (in module ivy.container.container_methods)": [[532, "ivy.container.container_methods.static_bitwise_invert"], [536, "ivy.container.container_methods.static_bitwise_invert"]], "bitwise_left_shift() (in module ivy.array.array_methods)": [[537, "ivy.array.array_methods.bitwise_left_shift"], [538, "ivy.array.array_methods.bitwise_left_shift"]], "bitwise_left_shift() (in module ivy.container.container_methods)": [[537, "ivy.container.container_methods.bitwise_left_shift"], [539, "ivy.container.container_methods.bitwise_left_shift"]], "static_bitwise_left_shift() (in module ivy.container.container_methods)": [[537, "ivy.container.container_methods.static_bitwise_left_shift"], [541, "ivy.container.container_methods.static_bitwise_left_shift"]], "bitwise_or() (in module ivy.array.array_methods)": [[542, "ivy.array.array_methods.bitwise_or"], [543, "ivy.array.array_methods.bitwise_or"]], "bitwise_or() (in module ivy.container.container_methods)": [[542, "ivy.container.container_methods.bitwise_or"], [544, "ivy.container.container_methods.bitwise_or"]], "static_bitwise_or() (in module ivy.container.container_methods)": [[542, "ivy.container.container_methods.static_bitwise_or"], [546, "ivy.container.container_methods.static_bitwise_or"]], "bitwise_right_shift() (in module ivy.array.array_methods)": [[547, "ivy.array.array_methods.bitwise_right_shift"], [548, "ivy.array.array_methods.bitwise_right_shift"]], "bitwise_right_shift() (in module ivy.container.container_methods)": [[547, "ivy.container.container_methods.bitwise_right_shift"], [549, "ivy.container.container_methods.bitwise_right_shift"]], "static_bitwise_right_shift() (in module ivy.container.container_methods)": [[547, "ivy.container.container_methods.static_bitwise_right_shift"], [551, "ivy.container.container_methods.static_bitwise_right_shift"]], "bitwise_xor() (in module ivy.array.array_methods)": [[552, "ivy.array.array_methods.bitwise_xor"], [553, "ivy.array.array_methods.bitwise_xor"]], "bitwise_xor() (in module ivy.container.container_methods)": [[552, "ivy.container.container_methods.bitwise_xor"], [554, "ivy.container.container_methods.bitwise_xor"]], "static_bitwise_xor() (in module ivy.container.container_methods)": [[552, "ivy.container.container_methods.static_bitwise_xor"], [556, "ivy.container.container_methods.static_bitwise_xor"]], "ceil() (in module ivy.array.array_methods)": [[557, "ivy.array.array_methods.ceil"], [558, "ivy.array.array_methods.ceil"]], "ceil() (in module ivy.container.container_methods)": [[557, "ivy.container.container_methods.ceil"], [559, "ivy.container.container_methods.ceil"]], "static_ceil() (in module ivy.container.container_methods)": [[557, "ivy.container.container_methods.static_ceil"], [561, "ivy.container.container_methods.static_ceil"]], "cos() (in module ivy.array.array_methods)": [[562, "ivy.array.array_methods.cos"], [563, "ivy.array.array_methods.cos"]], "cos() (in module ivy.container.container_methods)": [[562, "ivy.container.container_methods.cos"], [564, "ivy.container.container_methods.cos"]], "static_cos() (in module ivy.container.container_methods)": [[562, "ivy.container.container_methods.static_cos"], [566, "ivy.container.container_methods.static_cos"]], "cosh() (in module ivy.array.array_methods)": [[567, "ivy.array.array_methods.cosh"], [568, "ivy.array.array_methods.cosh"]], "cosh() (in module ivy.container.container_methods)": [[567, "ivy.container.container_methods.cosh"], [569, "ivy.container.container_methods.cosh"]], "static_cosh() (in module ivy.container.container_methods)": [[567, "ivy.container.container_methods.static_cosh"], [571, "ivy.container.container_methods.static_cosh"]], "deg2rad() (in module ivy.array.array_methods)": [[572, "ivy.array.array_methods.deg2rad"], [573, "ivy.array.array_methods.deg2rad"]], "deg2rad() (in module ivy.container.container_methods)": [[572, "ivy.container.container_methods.deg2rad"], [574, "ivy.container.container_methods.deg2rad"]], "static_deg2rad() (in module ivy.container.container_methods)": [[572, "ivy.container.container_methods.static_deg2rad"], [576, "ivy.container.container_methods.static_deg2rad"]], "divide() (in module ivy.array.array_methods)": [[577, "ivy.array.array_methods.divide"], [578, "ivy.array.array_methods.divide"]], "divide() (in module ivy.container.container_methods)": [[577, "ivy.container.container_methods.divide"], [579, "ivy.container.container_methods.divide"]], "static_divide() (in module ivy.container.container_methods)": [[577, "ivy.container.container_methods.static_divide"], [581, "ivy.container.container_methods.static_divide"]], "equal() (in module ivy.array.array_methods)": [[582, "ivy.array.array_methods.equal"], [583, "ivy.array.array_methods.equal"]], "equal() (in module ivy.container.container_methods)": [[582, "ivy.container.container_methods.equal"], [584, "ivy.container.container_methods.equal"]], "static_equal() (in module ivy.container.container_methods)": [[582, "ivy.container.container_methods.static_equal"], [586, "ivy.container.container_methods.static_equal"]], "erf() (in module ivy.array.array_methods)": [[587, "ivy.array.array_methods.erf"], [588, "ivy.array.array_methods.erf"]], "erf() (in module ivy.container.container_methods)": [[587, "ivy.container.container_methods.erf"], [589, "ivy.container.container_methods.erf"]], "static_erf() (in module ivy.container.container_methods)": [[587, "ivy.container.container_methods.static_erf"], [591, "ivy.container.container_methods.static_erf"]], "exp() (in module ivy.array.array_methods)": [[592, "ivy.array.array_methods.exp"], [593, "ivy.array.array_methods.exp"]], "exp() (in module ivy.container.container_methods)": [[592, "ivy.container.container_methods.exp"], [594, "ivy.container.container_methods.exp"]], "static_exp() (in module ivy.container.container_methods)": [[592, "ivy.container.container_methods.static_exp"], [596, "ivy.container.container_methods.static_exp"]], "expm1() (in module ivy.array.array_methods)": [[597, "ivy.array.array_methods.expm1"], [598, "ivy.array.array_methods.expm1"]], "expm1() (in module ivy.container.container_methods)": [[597, "ivy.container.container_methods.expm1"], [599, "ivy.container.container_methods.expm1"]], "static_expm1() (in module ivy.container.container_methods)": [[597, "ivy.container.container_methods.static_expm1"], [601, "ivy.container.container_methods.static_expm1"]], "floor() (in module ivy.array.array_methods)": [[602, "ivy.array.array_methods.floor"], [603, "ivy.array.array_methods.floor"]], "floor() (in module ivy.container.container_methods)": [[602, "ivy.container.container_methods.floor"], [604, "ivy.container.container_methods.floor"]], "static_floor() (in module ivy.container.container_methods)": [[602, "ivy.container.container_methods.static_floor"], [606, "ivy.container.container_methods.static_floor"]], "floor_divide() (in module ivy.array.array_methods)": [[607, "ivy.array.array_methods.floor_divide"], [608, "ivy.array.array_methods.floor_divide"]], "floor_divide() (in module ivy.container.container_methods)": [[607, "ivy.container.container_methods.floor_divide"], [609, "ivy.container.container_methods.floor_divide"]], "static_floor_divide() (in module ivy.container.container_methods)": [[607, "ivy.container.container_methods.static_floor_divide"], [611, "ivy.container.container_methods.static_floor_divide"]], "greater() (in module ivy.array.array_methods)": [[612, "ivy.array.array_methods.greater"], [613, "ivy.array.array_methods.greater"]], "greater() (in module ivy.container.container_methods)": [[612, "ivy.container.container_methods.greater"], [614, "ivy.container.container_methods.greater"]], "static_greater() (in module ivy.container.container_methods)": [[612, "ivy.container.container_methods.static_greater"], [616, "ivy.container.container_methods.static_greater"]], "greater_equal() (in module ivy.array.array_methods)": [[617, "ivy.array.array_methods.greater_equal"], [618, "ivy.array.array_methods.greater_equal"]], "greater_equal() (in module ivy.container.container_methods)": [[617, "ivy.container.container_methods.greater_equal"], [619, "ivy.container.container_methods.greater_equal"]], "static_greater_equal() (in module ivy.container.container_methods)": [[617, "ivy.container.container_methods.static_greater_equal"], [621, "ivy.container.container_methods.static_greater_equal"]], "isfinite() (in module ivy.array.array_methods)": [[622, "ivy.array.array_methods.isfinite"], [623, "ivy.array.array_methods.isfinite"]], "isfinite() (in module ivy.container.container_methods)": [[622, "ivy.container.container_methods.isfinite"], [624, "ivy.container.container_methods.isfinite"]], "static_isfinite() (in module ivy.container.container_methods)": [[622, "ivy.container.container_methods.static_isfinite"], [626, "ivy.container.container_methods.static_isfinite"]], "isinf() (in module ivy.array.array_methods)": [[627, "ivy.array.array_methods.isinf"], [628, "ivy.array.array_methods.isinf"]], "isinf() (in module ivy.container.container_methods)": [[627, "ivy.container.container_methods.isinf"], [629, "ivy.container.container_methods.isinf"]], "static_isinf() (in module ivy.container.container_methods)": [[627, "ivy.container.container_methods.static_isinf"], [631, "ivy.container.container_methods.static_isinf"]], "isnan() (in module ivy.array.array_methods)": [[632, "ivy.array.array_methods.isnan"], [633, "ivy.array.array_methods.isnan"]], "isnan() (in module ivy.container.container_methods)": [[632, "ivy.container.container_methods.isnan"], [634, "ivy.container.container_methods.isnan"]], "static_isnan() (in module ivy.container.container_methods)": [[632, "ivy.container.container_methods.static_isnan"], [636, "ivy.container.container_methods.static_isnan"]], "isreal() (in module ivy.array.array_methods)": [[637, "ivy.array.array_methods.isreal"], [638, "ivy.array.array_methods.isreal"]], "isreal() (in module ivy.container.container_methods)": [[637, "ivy.container.container_methods.isreal"], [639, "ivy.container.container_methods.isreal"]], "static_isreal() (in module ivy.container.container_methods)": [[637, "ivy.container.container_methods.static_isreal"], [641, "ivy.container.container_methods.static_isreal"]], "less() (in module ivy.array.array_methods)": [[642, "ivy.array.array_methods.less"], [643, "ivy.array.array_methods.less"]], "less() (in module ivy.container.container_methods)": [[642, "ivy.container.container_methods.less"], [644, "ivy.container.container_methods.less"]], "static_less() (in module ivy.container.container_methods)": [[642, "ivy.container.container_methods.static_less"], [646, "ivy.container.container_methods.static_less"]], "less_equal() (in module ivy.array.array_methods)": [[647, "ivy.array.array_methods.less_equal"], [648, "ivy.array.array_methods.less_equal"]], "less_equal() (in module ivy.container.container_methods)": [[647, "ivy.container.container_methods.less_equal"], [649, "ivy.container.container_methods.less_equal"]], "static_less_equal() (in module ivy.container.container_methods)": [[647, "ivy.container.container_methods.static_less_equal"], [651, "ivy.container.container_methods.static_less_equal"]], "log() (in module ivy.array.array_methods)": [[652, "ivy.array.array_methods.log"], [653, "ivy.array.array_methods.log"]], "log() (in module ivy.container.container_methods)": [[652, "ivy.container.container_methods.log"], [654, "ivy.container.container_methods.log"]], "static_log() (in module ivy.container.container_methods)": [[652, "ivy.container.container_methods.static_log"], [656, "ivy.container.container_methods.static_log"]], "log10() (in module ivy.array.array_methods)": [[657, "ivy.array.array_methods.log10"], [658, "ivy.array.array_methods.log10"]], "log10() (in module ivy.container.container_methods)": [[657, "ivy.container.container_methods.log10"], [659, "ivy.container.container_methods.log10"]], "static_log10() (in module ivy.container.container_methods)": [[657, "ivy.container.container_methods.static_log10"], [661, "ivy.container.container_methods.static_log10"]], "log1p() (in module ivy.array.array_methods)": [[662, "ivy.array.array_methods.log1p"], [663, "ivy.array.array_methods.log1p"]], "log1p() (in module ivy.container.container_methods)": [[662, "ivy.container.container_methods.log1p"], [664, "ivy.container.container_methods.log1p"]], "static_log1p() (in module ivy.container.container_methods)": [[662, "ivy.container.container_methods.static_log1p"], [666, "ivy.container.container_methods.static_log1p"]], "log2() (in module ivy.array.array_methods)": [[667, "ivy.array.array_methods.log2"], [668, "ivy.array.array_methods.log2"]], "log2() (in module ivy.container.container_methods)": [[667, "ivy.container.container_methods.log2"], [669, "ivy.container.container_methods.log2"]], "static_log2() (in module ivy.container.container_methods)": [[667, "ivy.container.container_methods.static_log2"], [671, "ivy.container.container_methods.static_log2"]], "logaddexp() (in module ivy.array.array_methods)": [[672, "ivy.array.array_methods.logaddexp"], [673, "ivy.array.array_methods.logaddexp"]], "logaddexp() (in module ivy.container.container_methods)": [[672, "ivy.container.container_methods.logaddexp"], [674, "ivy.container.container_methods.logaddexp"]], "static_logaddexp() (in module ivy.container.container_methods)": [[672, "ivy.container.container_methods.static_logaddexp"], [676, "ivy.container.container_methods.static_logaddexp"]], "logical_and() (in module ivy.array.array_methods)": [[677, "ivy.array.array_methods.logical_and"], [678, "ivy.array.array_methods.logical_and"]], "logical_and() (in module ivy.container.container_methods)": [[677, "ivy.container.container_methods.logical_and"], [679, "ivy.container.container_methods.logical_and"]], "static_logical_and() (in module ivy.container.container_methods)": [[677, "ivy.container.container_methods.static_logical_and"], [681, "ivy.container.container_methods.static_logical_and"]], "logical_not() (in module ivy.array.array_methods)": [[682, "ivy.array.array_methods.logical_not"], [683, "ivy.array.array_methods.logical_not"]], "logical_not() (in module ivy.container.container_methods)": [[682, "ivy.container.container_methods.logical_not"], [684, "ivy.container.container_methods.logical_not"]], "static_logical_not() (in module ivy.container.container_methods)": [[682, "ivy.container.container_methods.static_logical_not"], [686, "ivy.container.container_methods.static_logical_not"]], "logical_or() (in module ivy.array.array_methods)": [[687, "ivy.array.array_methods.logical_or"], [688, "ivy.array.array_methods.logical_or"]], "logical_or() (in module ivy.container.container_methods)": [[687, "ivy.container.container_methods.logical_or"], [689, "ivy.container.container_methods.logical_or"]], "static_logical_or() (in module ivy.container.container_methods)": [[687, "ivy.container.container_methods.static_logical_or"], [691, "ivy.container.container_methods.static_logical_or"]], "logical_xor() (in module ivy.array.array_methods)": [[692, "ivy.array.array_methods.logical_xor"], [693, "ivy.array.array_methods.logical_xor"]], "logical_xor() (in module ivy.container.container_methods)": [[692, "ivy.container.container_methods.logical_xor"], [694, "ivy.container.container_methods.logical_xor"]], "static_logical_xor() (in module ivy.container.container_methods)": [[692, "ivy.container.container_methods.static_logical_xor"], [696, "ivy.container.container_methods.static_logical_xor"]], "maximum() (in module ivy.array.array_methods)": [[697, "ivy.array.array_methods.maximum"], [698, "ivy.array.array_methods.maximum"]], "maximum() (in module ivy.container.container_methods)": [[697, "ivy.container.container_methods.maximum"], [699, "ivy.container.container_methods.maximum"]], "static_maximum() (in module ivy.container.container_methods)": [[697, "ivy.container.container_methods.static_maximum"], [701, "ivy.container.container_methods.static_maximum"]], "minimum() (in module ivy.array.array_methods)": [[702, "ivy.array.array_methods.minimum"], [703, "ivy.array.array_methods.minimum"]], "minimum() (in module ivy.container.container_methods)": [[702, "ivy.container.container_methods.minimum"], [704, "ivy.container.container_methods.minimum"]], "static_minimum() (in module ivy.container.container_methods)": [[702, "ivy.container.container_methods.static_minimum"], [706, "ivy.container.container_methods.static_minimum"]], "multiply() (in module ivy.array.array_methods)": [[707, "ivy.array.array_methods.multiply"], [708, "ivy.array.array_methods.multiply"]], "multiply() (in module ivy.container.container_methods)": [[707, "ivy.container.container_methods.multiply"], [709, "ivy.container.container_methods.multiply"]], "static_multiply() (in module ivy.container.container_methods)": [[707, "ivy.container.container_methods.static_multiply"], [711, "ivy.container.container_methods.static_multiply"]], "negative() (in module ivy.array.array_methods)": [[712, "ivy.array.array_methods.negative"], [713, "ivy.array.array_methods.negative"]], "negative() (in module ivy.container.container_methods)": [[712, "ivy.container.container_methods.negative"], [714, "ivy.container.container_methods.negative"]], "static_negative() (in module ivy.container.container_methods)": [[712, "ivy.container.container_methods.static_negative"], [716, "ivy.container.container_methods.static_negative"]], "not_equal() (in module ivy.array.array_methods)": [[717, "ivy.array.array_methods.not_equal"], [718, "ivy.array.array_methods.not_equal"]], "not_equal() (in module ivy.container.container_methods)": [[717, "ivy.container.container_methods.not_equal"], [719, "ivy.container.container_methods.not_equal"]], "static_not_equal() (in module ivy.container.container_methods)": [[717, "ivy.container.container_methods.static_not_equal"], [721, "ivy.container.container_methods.static_not_equal"]], "positive() (in module ivy.array.array_methods)": [[722, "ivy.array.array_methods.positive"], [723, "ivy.array.array_methods.positive"]], "positive() (in module ivy.container.container_methods)": [[722, "ivy.container.container_methods.positive"], [724, "ivy.container.container_methods.positive"]], "static_positive() (in module ivy.container.container_methods)": [[722, "ivy.container.container_methods.static_positive"], [726, "ivy.container.container_methods.static_positive"]], "pow() (in module ivy.array.array_methods)": [[727, "ivy.array.array_methods.pow"], [728, "ivy.array.array_methods.pow"]], "pow() (in module ivy.container.container_methods)": [[727, "ivy.container.container_methods.pow"], [729, "ivy.container.container_methods.pow"]], "static_pow() (in module ivy.container.container_methods)": [[727, "ivy.container.container_methods.static_pow"], [731, "ivy.container.container_methods.static_pow"]], "rad2deg() (in module ivy.array.array_methods)": [[732, "ivy.array.array_methods.rad2deg"], [733, "ivy.array.array_methods.rad2deg"]], "rad2deg() (in module ivy.container.container_methods)": [[732, "ivy.container.container_methods.rad2deg"], [734, "ivy.container.container_methods.rad2deg"]], "static_rad2deg() (in module ivy.container.container_methods)": [[732, "ivy.container.container_methods.static_rad2deg"], [736, "ivy.container.container_methods.static_rad2deg"]], "reciprocal() (in module ivy.array.array_methods)": [[737, "ivy.array.array_methods.reciprocal"], [738, "ivy.array.array_methods.reciprocal"]], "reciprocal() (in module ivy.container.container_methods)": [[737, "ivy.container.container_methods.reciprocal"], [739, "ivy.container.container_methods.reciprocal"]], "static_reciprocal() (in module ivy.container.container_methods)": [[737, "ivy.container.container_methods.static_reciprocal"], [741, "ivy.container.container_methods.static_reciprocal"]], "remainder() (in module ivy.array.array_methods)": [[742, "ivy.array.array_methods.remainder"], [743, "ivy.array.array_methods.remainder"]], "remainder() (in module ivy.container.container_methods)": [[742, "ivy.container.container_methods.remainder"], [744, "ivy.container.container_methods.remainder"]], "static_remainder() (in module ivy.container.container_methods)": [[742, "ivy.container.container_methods.static_remainder"], [746, "ivy.container.container_methods.static_remainder"]], "round() (in module ivy.array.array_methods)": [[747, "ivy.array.array_methods.round"], [748, "ivy.array.array_methods.round"]], "round() (in module ivy.container.container_methods)": [[747, "ivy.container.container_methods.round"], [749, "ivy.container.container_methods.round"]], "static_round() (in module ivy.container.container_methods)": [[747, "ivy.container.container_methods.static_round"], [751, "ivy.container.container_methods.static_round"]], "sign() (in module ivy.array.array_methods)": [[752, "ivy.array.array_methods.sign"], [753, "ivy.array.array_methods.sign"]], "sign() (in module ivy.container.container_methods)": [[752, "ivy.container.container_methods.sign"], [754, "ivy.container.container_methods.sign"]], "static_sign() (in module ivy.container.container_methods)": [[752, "ivy.container.container_methods.static_sign"], [756, "ivy.container.container_methods.static_sign"]], "sin() (in module ivy.array.array_methods)": [[757, "ivy.array.array_methods.sin"], [758, "ivy.array.array_methods.sin"]], "sin() (in module ivy.container.container_methods)": [[757, "ivy.container.container_methods.sin"], [759, "ivy.container.container_methods.sin"]], "static_sin() (in module ivy.container.container_methods)": [[757, "ivy.container.container_methods.static_sin"], [761, "ivy.container.container_methods.static_sin"]], "sinh() (in module ivy.array.array_methods)": [[762, "ivy.array.array_methods.sinh"], [763, "ivy.array.array_methods.sinh"]], "sinh() (in module ivy.container.container_methods)": [[762, "ivy.container.container_methods.sinh"], [764, "ivy.container.container_methods.sinh"]], "static_sinh() (in module ivy.container.container_methods)": [[762, "ivy.container.container_methods.static_sinh"], [766, "ivy.container.container_methods.static_sinh"]], "sqrt() (in module ivy.array.array_methods)": [[767, "ivy.array.array_methods.sqrt"], [768, "ivy.array.array_methods.sqrt"]], "sqrt() (in module ivy.container.container_methods)": [[767, "ivy.container.container_methods.sqrt"], [769, "ivy.container.container_methods.sqrt"]], "static_sqrt() (in module ivy.container.container_methods)": [[767, "ivy.container.container_methods.static_sqrt"], [771, "ivy.container.container_methods.static_sqrt"]], "square() (in module ivy.array.array_methods)": [[772, "ivy.array.array_methods.square"], [773, "ivy.array.array_methods.square"]], "square() (in module ivy.container.container_methods)": [[772, "ivy.container.container_methods.square"], [774, "ivy.container.container_methods.square"]], "static_square() (in module ivy.container.container_methods)": [[772, "ivy.container.container_methods.static_square"], [776, "ivy.container.container_methods.static_square"]], "static_subtract() (in module ivy.container.container_methods)": [[777, "ivy.container.container_methods.static_subtract"], [778, "ivy.container.container_methods.static_subtract"]], "subtract() (in module ivy.array.array_methods)": [[777, "ivy.array.array_methods.subtract"], [779, "ivy.array.array_methods.subtract"]], "subtract() (in module ivy.container.container_methods)": [[777, "ivy.container.container_methods.subtract"], [780, "ivy.container.container_methods.subtract"]], "static_tan() (in module ivy.container.container_methods)": [[782, "ivy.container.container_methods.static_tan"], [783, "ivy.container.container_methods.static_tan"]], "tan() (in module ivy.array.array_methods)": [[782, "ivy.array.array_methods.tan"], [784, "ivy.array.array_methods.tan"]], "tan() (in module ivy.container.container_methods)": [[782, "ivy.container.container_methods.tan"], [785, "ivy.container.container_methods.tan"]], "static_tanh() (in module ivy.container.container_methods)": [[787, "ivy.container.container_methods.static_tanh"], [788, "ivy.container.container_methods.static_tanh"]], "tanh() (in module ivy.array.array_methods)": [[787, "ivy.array.array_methods.tanh"], [789, "ivy.array.array_methods.tanh"]], "tanh() (in module ivy.container.container_methods)": [[787, "ivy.container.container_methods.tanh"], [790, "ivy.container.container_methods.tanh"]], "static_trunc() (in module ivy.container.container_methods)": [[792, "ivy.container.container_methods.static_trunc"], [793, "ivy.container.container_methods.static_trunc"]], "trunc() (in module ivy.array.array_methods)": [[792, "ivy.array.array_methods.trunc"], [794, "ivy.array.array_methods.trunc"]], "trunc() (in module ivy.container.container_methods)": [[792, "ivy.container.container_methods.trunc"], [795, "ivy.container.container_methods.trunc"]], "static_trunc_divide() (in module ivy.container.container_methods)": [[797, "ivy.container.container_methods.static_trunc_divide"], [798, "ivy.container.container_methods.static_trunc_divide"]], "trunc_divide() (in module ivy.array.array_methods)": [[797, "ivy.array.array_methods.trunc_divide"], [799, "ivy.array.array_methods.trunc_divide"]], "trunc_divide() (in module ivy.container.container_methods)": [[797, "ivy.container.container_methods.trunc_divide"], [800, "ivy.container.container_methods.trunc_divide"]], "ivy.functional.ivy.experimental": [[802, "module-ivy.functional.ivy.experimental"]], "nativesparsearray (class in ivy.functional.ivy.experimental)": [[803, "ivy.functional.ivy.experimental.NativeSparseArray"]], "sparsearray (class in ivy.functional.ivy.experimental)": [[804, "ivy.functional.ivy.experimental.SparseArray"]], "__init__() (ivy.functional.ivy.experimental.sparsearray method)": [[804, "ivy.functional.ivy.experimental.SparseArray.__init__"]], "ccol_indices (ivy.functional.ivy.experimental.sparsearray property)": [[804, "ivy.functional.ivy.experimental.SparseArray.ccol_indices"]], "col_indices (ivy.functional.ivy.experimental.sparsearray property)": [[804, "ivy.functional.ivy.experimental.SparseArray.col_indices"]], "coo_indices (ivy.functional.ivy.experimental.sparsearray property)": [[804, "ivy.functional.ivy.experimental.SparseArray.coo_indices"]], "crow_indices (ivy.functional.ivy.experimental.sparsearray property)": [[804, "ivy.functional.ivy.experimental.SparseArray.crow_indices"]], "data (ivy.functional.ivy.experimental.sparsearray property)": [[804, "ivy.functional.ivy.experimental.SparseArray.data"]], "dense_shape (ivy.functional.ivy.experimental.sparsearray property)": [[804, "ivy.functional.ivy.experimental.SparseArray.dense_shape"]], "row_indices (ivy.functional.ivy.experimental.sparsearray property)": [[804, "ivy.functional.ivy.experimental.SparseArray.row_indices"]], "to_dense_array() (ivy.functional.ivy.experimental.sparsearray method)": [[804, "ivy.functional.ivy.experimental.SparseArray.to_dense_array"]], "values (ivy.functional.ivy.experimental.sparsearray property)": [[804, "ivy.functional.ivy.experimental.SparseArray.values"]], "ivy.functional.ivy.experimental.activations": [[805, "module-ivy.functional.ivy.experimental.activations"]], "logit() (in module ivy.functional.ivy.experimental.activations)": [[805, "ivy.functional.ivy.experimental.activations.logit"], [806, "ivy.functional.ivy.experimental.activations.logit"]], "prelu() (in module ivy.functional.ivy.experimental.activations)": [[805, "ivy.functional.ivy.experimental.activations.prelu"], [807, "ivy.functional.ivy.experimental.activations.prelu"]], "thresholded_relu() (in module ivy.functional.ivy.experimental.activations)": [[805, "ivy.functional.ivy.experimental.activations.thresholded_relu"], [808, "ivy.functional.ivy.experimental.activations.thresholded_relu"]], "adjoint() (in module ivy.array.array_methods)": [[809, "ivy.array.array_methods.adjoint"], [810, "ivy.array.array_methods.adjoint"]], "adjoint() (in module ivy.container.container_methods)": [[809, "ivy.container.container_methods.adjoint"], [811, "ivy.container.container_methods.adjoint"]], "adjoint() (in module ivy.functional.ivy.experimental)": [[809, "ivy.functional.ivy.experimental.adjoint"], [812, "ivy.functional.ivy.experimental.adjoint"]], "static_adjoint() (in module ivy.container.container_methods)": [[809, "ivy.container.container_methods.static_adjoint"], [813, "ivy.container.container_methods.static_adjoint"]], "allclose() (in module ivy.array.array_methods)": [[814, "ivy.array.array_methods.allclose"], [815, "ivy.array.array_methods.allclose"]], "allclose() (in module ivy.container.container_methods)": [[814, "ivy.container.container_methods.allclose"], [816, "ivy.container.container_methods.allclose"]], "allclose() (in module ivy.functional.ivy.experimental)": [[814, "ivy.functional.ivy.experimental.allclose"], [817, "ivy.functional.ivy.experimental.allclose"]], "static_allclose() (in module ivy.container.container_methods)": [[814, "ivy.container.container_methods.static_allclose"], [818, "ivy.container.container_methods.static_allclose"]], "angle() (in module ivy.array.array_methods)": [[819, "ivy.array.array_methods.angle"], [820, "ivy.array.array_methods.angle"]], "angle() (in module ivy.container.container_methods)": [[819, "ivy.container.container_methods.angle"], [821, "ivy.container.container_methods.angle"]], "angle() (in module ivy.functional.ivy.experimental)": [[819, "ivy.functional.ivy.experimental.angle"], [822, "ivy.functional.ivy.experimental.angle"]], "static_angle() (in module ivy.container.container_methods)": [[819, "ivy.container.container_methods.static_angle"], [823, "ivy.container.container_methods.static_angle"]], "atleast_1d() (in module ivy.array.array_methods)": [[824, "ivy.array.array_methods.atleast_1d"], [825, "ivy.array.array_methods.atleast_1d"]], "atleast_1d() (in module ivy.container.container_methods)": [[824, "ivy.container.container_methods.atleast_1d"], [826, "ivy.container.container_methods.atleast_1d"]], "atleast_1d() (in module ivy.functional.ivy.experimental)": [[824, "ivy.functional.ivy.experimental.atleast_1d"], [827, "ivy.functional.ivy.experimental.atleast_1d"]], "static_atleast_1d() (in module ivy.container.container_methods)": [[824, "ivy.container.container_methods.static_atleast_1d"], [828, "ivy.container.container_methods.static_atleast_1d"]], "atleast_2d() (in module ivy.array.array_methods)": [[829, "ivy.array.array_methods.atleast_2d"], [830, "ivy.array.array_methods.atleast_2d"]], "atleast_2d() (in module ivy.container.container_methods)": [[829, "ivy.container.container_methods.atleast_2d"], [831, "ivy.container.container_methods.atleast_2d"]], "atleast_2d() (in module ivy.functional.ivy.experimental)": [[829, "ivy.functional.ivy.experimental.atleast_2d"], [832, "ivy.functional.ivy.experimental.atleast_2d"]], "static_atleast_2d() (in module ivy.container.container_methods)": [[829, "ivy.container.container_methods.static_atleast_2d"], [833, "ivy.container.container_methods.static_atleast_2d"]], "atleast_3d() (in module ivy.array.array_methods)": [[834, "ivy.array.array_methods.atleast_3d"], [835, "ivy.array.array_methods.atleast_3d"]], "atleast_3d() (in module ivy.container.container_methods)": [[834, "ivy.container.container_methods.atleast_3d"], [836, "ivy.container.container_methods.atleast_3d"]], "atleast_3d() (in module ivy.functional.ivy.experimental)": [[834, "ivy.functional.ivy.experimental.atleast_3d"], [837, "ivy.functional.ivy.experimental.atleast_3d"]], "static_atleast_3d() (in module ivy.container.container_methods)": [[834, "ivy.container.container_methods.static_atleast_3d"], [838, "ivy.container.container_methods.static_atleast_3d"]], "avg_pool1d() (in module ivy.array.array_methods)": [[839, "ivy.array.array_methods.avg_pool1d"], [840, "ivy.array.array_methods.avg_pool1d"]], "avg_pool1d() (in module ivy.container.container_methods)": [[839, "ivy.container.container_methods.avg_pool1d"], [841, "ivy.container.container_methods.avg_pool1d"]], "avg_pool1d() (in module ivy.functional.ivy.experimental)": [[839, "ivy.functional.ivy.experimental.avg_pool1d"], [842, "ivy.functional.ivy.experimental.avg_pool1d"]], "static_avg_pool1d() (in module ivy.container.container_methods)": [[839, "ivy.container.container_methods.static_avg_pool1d"], [843, "ivy.container.container_methods.static_avg_pool1d"]], "avg_pool2d() (in module ivy.array.array_methods)": [[844, "ivy.array.array_methods.avg_pool2d"], [845, "ivy.array.array_methods.avg_pool2d"]], "avg_pool2d() (in module ivy.container.container_methods)": [[844, "ivy.container.container_methods.avg_pool2d"], [846, "ivy.container.container_methods.avg_pool2d"]], "avg_pool2d() (in module ivy.functional.ivy.experimental)": [[844, "ivy.functional.ivy.experimental.avg_pool2d"], [847, "ivy.functional.ivy.experimental.avg_pool2d"]], "static_avg_pool2d() (in module ivy.container.container_methods)": [[844, "ivy.container.container_methods.static_avg_pool2d"], [848, "ivy.container.container_methods.static_avg_pool2d"]], "avg_pool3d() (in module ivy.array.array_methods)": [[849, "ivy.array.array_methods.avg_pool3d"], [850, "ivy.array.array_methods.avg_pool3d"]], "avg_pool3d() (in module ivy.container.container_methods)": [[849, "ivy.container.container_methods.avg_pool3d"], [851, "ivy.container.container_methods.avg_pool3d"]], "avg_pool3d() (in module ivy.functional.ivy.experimental)": [[849, "ivy.functional.ivy.experimental.avg_pool3d"], [852, "ivy.functional.ivy.experimental.avg_pool3d"]], "static_avg_pool3d() (in module ivy.container.container_methods)": [[849, "ivy.container.container_methods.static_avg_pool3d"], [853, "ivy.container.container_methods.static_avg_pool3d"]], "bernoulli() (in module ivy.array.array_methods)": [[854, "ivy.array.array_methods.bernoulli"], [855, "ivy.array.array_methods.bernoulli"]], "bernoulli() (in module ivy.container.container_methods)": [[854, "ivy.container.container_methods.bernoulli"], [856, "ivy.container.container_methods.bernoulli"]], "bernoulli() (in module ivy.functional.ivy.experimental)": [[854, "ivy.functional.ivy.experimental.bernoulli"], [857, "ivy.functional.ivy.experimental.bernoulli"]], "static_bernoulli() (in module ivy.container.container_methods)": [[854, "ivy.container.container_methods.static_bernoulli"], [858, "ivy.container.container_methods.static_bernoulli"]], "beta() (in module ivy.array.array_methods)": [[859, "ivy.array.array_methods.beta"], [860, "ivy.array.array_methods.beta"]], "beta() (in module ivy.container.container_methods)": [[859, "ivy.container.container_methods.beta"], [861, "ivy.container.container_methods.beta"]], "beta() (in module ivy.functional.ivy.experimental)": [[859, "ivy.functional.ivy.experimental.beta"], [862, "ivy.functional.ivy.experimental.beta"]], "static_beta() (in module ivy.container.container_methods)": [[859, "ivy.container.container_methods.static_beta"], [863, "ivy.container.container_methods.static_beta"]], "binarizer() (in module ivy.array.array_methods)": [[864, "ivy.array.array_methods.binarizer"], [865, "ivy.array.array_methods.binarizer"]], "binarizer() (in module ivy.container.container_methods)": [[864, "ivy.container.container_methods.binarizer"], [866, "ivy.container.container_methods.binarizer"]], "binarizer() (in module ivy.functional.ivy.experimental)": [[864, "ivy.functional.ivy.experimental.binarizer"], [867, "ivy.functional.ivy.experimental.binarizer"]], "static_binarizer() (in module ivy.container.container_methods)": [[864, "ivy.container.container_methods.static_binarizer"], [868, "ivy.container.container_methods.static_binarizer"]], "binary_cross_entropy_with_logits() (in module ivy.container.container_methods)": [[869, "ivy.container.container_methods.binary_cross_entropy_with_logits"], [870, "ivy.container.container_methods.binary_cross_entropy_with_logits"]], "binary_cross_entropy_with_logits() (in module ivy.functional.ivy.experimental)": [[869, "ivy.functional.ivy.experimental.binary_cross_entropy_with_logits"], [871, "ivy.functional.ivy.experimental.binary_cross_entropy_with_logits"]], "static_binary_cross_entropy_with_logits() (in module ivy.container.container_methods)": [[869, "ivy.container.container_methods.static_binary_cross_entropy_with_logits"], [872, "ivy.container.container_methods.static_binary_cross_entropy_with_logits"]], "bind_custom_gradient_function() (in module ivy.functional.ivy.experimental)": [[873, "ivy.functional.ivy.experimental.bind_custom_gradient_function"]], "broadcast_shapes() (in module ivy.container.container_methods)": [[874, "ivy.container.container_methods.broadcast_shapes"], [875, "ivy.container.container_methods.broadcast_shapes"]], "broadcast_shapes() (in module ivy.functional.ivy.experimental)": [[874, "ivy.functional.ivy.experimental.broadcast_shapes"], [876, "ivy.functional.ivy.experimental.broadcast_shapes"]], "static_broadcast_shapes() (in module ivy.container.container_methods)": [[874, "ivy.container.container_methods.static_broadcast_shapes"], [877, "ivy.container.container_methods.static_broadcast_shapes"]], "ivy.functional.ivy.experimental.compilation": [[878, "module-ivy.functional.ivy.experimental.compilation"]], "compute_weight_mat() (in module ivy.functional.ivy.experimental)": [[879, "ivy.functional.ivy.experimental.compute_weight_mat"]], "ivy.functional.ivy.experimental.constants": [[880, "module-ivy.functional.ivy.experimental.constants"]], "copysign() (in module ivy.array.array_methods)": [[881, "ivy.array.array_methods.copysign"], [882, "ivy.array.array_methods.copysign"]], "copysign() (in module ivy.container.container_methods)": [[881, "ivy.container.container_methods.copysign"], [883, "ivy.container.container_methods.copysign"]], "copysign() (in module ivy.functional.ivy.experimental)": [[881, "ivy.functional.ivy.experimental.copysign"], [884, "ivy.functional.ivy.experimental.copysign"]], "static_copysign() (in module ivy.container.container_methods)": [[881, "ivy.container.container_methods.static_copysign"], [885, "ivy.container.container_methods.static_copysign"]], "corrcoef() (in module ivy.array.array_methods)": [[886, "ivy.array.array_methods.corrcoef"], [887, "ivy.array.array_methods.corrcoef"]], "corrcoef() (in module ivy.container.container_methods)": [[886, "ivy.container.container_methods.corrcoef"], [888, "ivy.container.container_methods.corrcoef"]], "corrcoef() (in module ivy.functional.ivy.experimental)": [[886, "ivy.functional.ivy.experimental.corrcoef"], [889, "ivy.functional.ivy.experimental.corrcoef"]], "static_corrcoef() (in module ivy.container.container_methods)": [[886, "ivy.container.container_methods.static_corrcoef"], [890, "ivy.container.container_methods.static_corrcoef"]], "count_nonzero() (in module ivy.array.array_methods)": [[891, "ivy.array.array_methods.count_nonzero"], [892, "ivy.array.array_methods.count_nonzero"]], "count_nonzero() (in module ivy.container.container_methods)": [[891, "ivy.container.container_methods.count_nonzero"], [893, "ivy.container.container_methods.count_nonzero"]], "count_nonzero() (in module ivy.functional.ivy.experimental)": [[891, "ivy.functional.ivy.experimental.count_nonzero"], [894, "ivy.functional.ivy.experimental.count_nonzero"]], "static_count_nonzero() (in module ivy.container.container_methods)": [[891, "ivy.container.container_methods.static_count_nonzero"], [895, "ivy.container.container_methods.static_count_nonzero"]], "eye_like() (in module ivy.functional.ivy.experimental.creation)": [[896, "ivy.functional.ivy.experimental.creation.eye_like"], [897, "ivy.functional.ivy.experimental.creation.eye_like"]], "hamming_window() (in module ivy.functional.ivy.experimental.creation)": [[896, "ivy.functional.ivy.experimental.creation.hamming_window"], [898, "ivy.functional.ivy.experimental.creation.hamming_window"]], "hann_window() (in module ivy.functional.ivy.experimental.creation)": [[896, "ivy.functional.ivy.experimental.creation.hann_window"], [899, "ivy.functional.ivy.experimental.creation.hann_window"]], "ivy.functional.ivy.experimental.creation": [[896, "module-ivy.functional.ivy.experimental.creation"]], "kaiser_bessel_derived_window() (in module ivy.functional.ivy.experimental.creation)": [[896, "ivy.functional.ivy.experimental.creation.kaiser_bessel_derived_window"], [900, "ivy.functional.ivy.experimental.creation.kaiser_bessel_derived_window"]], "kaiser_window() (in module ivy.functional.ivy.experimental.creation)": [[896, "ivy.functional.ivy.experimental.creation.kaiser_window"], [901, "ivy.functional.ivy.experimental.creation.kaiser_window"]], "tril_indices() (in module ivy.functional.ivy.experimental.creation)": [[896, "ivy.functional.ivy.experimental.creation.tril_indices"], [902, "ivy.functional.ivy.experimental.creation.tril_indices"]], "triu_indices() (in module ivy.functional.ivy.experimental.creation)": [[896, "ivy.functional.ivy.experimental.creation.triu_indices"], [903, "ivy.functional.ivy.experimental.creation.triu_indices"]], "vorbis_window() (in module ivy.functional.ivy.experimental.creation)": [[896, "ivy.functional.ivy.experimental.creation.vorbis_window"], [904, "ivy.functional.ivy.experimental.creation.vorbis_window"]], "is_native_dtype() (in module ivy.functional.ivy.experimental.data_type)": [[905, "ivy.functional.ivy.experimental.data_type.is_native_dtype"], [906, "ivy.functional.ivy.experimental.data_type.is_native_dtype"]], "ivy.functional.ivy.experimental.data_type": [[905, "module-ivy.functional.ivy.experimental.data_type"]], "dct() (in module ivy.array.array_methods)": [[907, "ivy.array.array_methods.dct"], [908, "ivy.array.array_methods.dct"]], "dct() (in module ivy.container.container_methods)": [[907, "ivy.container.container_methods.dct"], [909, "ivy.container.container_methods.dct"]], "dct() (in module ivy.functional.ivy.experimental)": [[907, "ivy.functional.ivy.experimental.dct"], [910, "ivy.functional.ivy.experimental.dct"]], "static_dct() (in module ivy.container.container_methods)": [[907, "ivy.container.container_methods.static_dct"], [911, "ivy.container.container_methods.static_dct"]], "ivy.functional.ivy.experimental.device": [[912, "module-ivy.functional.ivy.experimental.device"]], "dft() (in module ivy.container.container_methods)": [[913, "ivy.container.container_methods.dft"], [914, "ivy.container.container_methods.dft"]], "dft() (in module ivy.functional.ivy.experimental)": [[913, "ivy.functional.ivy.experimental.dft"], [915, "ivy.functional.ivy.experimental.dft"]], "static_dft() (in module ivy.container.container_methods)": [[913, "ivy.container.container_methods.static_dft"], [916, "ivy.container.container_methods.static_dft"]], "diagflat() (in module ivy.array.array_methods)": [[917, "ivy.array.array_methods.diagflat"], [918, "ivy.array.array_methods.diagflat"]], "diagflat() (in module ivy.container.container_methods)": [[917, "ivy.container.container_methods.diagflat"], [919, "ivy.container.container_methods.diagflat"]], "diagflat() (in module ivy.functional.ivy.experimental)": [[917, "ivy.functional.ivy.experimental.diagflat"], [920, "ivy.functional.ivy.experimental.diagflat"]], "static_diagflat() (in module ivy.container.container_methods)": [[917, "ivy.container.container_methods.static_diagflat"], [921, "ivy.container.container_methods.static_diagflat"]], "diff() (in module ivy.array.array_methods)": [[922, "ivy.array.array_methods.diff"], [923, "ivy.array.array_methods.diff"]], "diff() (in module ivy.container.container_methods)": [[922, "ivy.container.container_methods.diff"], [924, "ivy.container.container_methods.diff"]], "diff() (in module ivy.functional.ivy.experimental)": [[922, "ivy.functional.ivy.experimental.diff"], [925, "ivy.functional.ivy.experimental.diff"]], "static_diff() (in module ivy.container.container_methods)": [[922, "ivy.container.container_methods.static_diff"], [926, "ivy.container.container_methods.static_diff"]], "dirichlet() (in module ivy.array.array_methods)": [[927, "ivy.array.array_methods.dirichlet"], [928, "ivy.array.array_methods.dirichlet"]], "dirichlet() (in module ivy.container.container_methods)": [[927, "ivy.container.container_methods.dirichlet"], [929, "ivy.container.container_methods.dirichlet"]], "dirichlet() (in module ivy.functional.ivy.experimental)": [[927, "ivy.functional.ivy.experimental.dirichlet"], [930, "ivy.functional.ivy.experimental.dirichlet"]], "static_dirichlet() (in module ivy.container.container_methods)": [[927, "ivy.container.container_methods.static_dirichlet"], [931, "ivy.container.container_methods.static_dirichlet"]], "dropout1d() (in module ivy.functional.ivy.experimental)": [[932, "ivy.functional.ivy.experimental.dropout1d"]], "dsplit() (in module ivy.array.array_methods)": [[933, "ivy.array.array_methods.dsplit"], [934, "ivy.array.array_methods.dsplit"]], "dsplit() (in module ivy.container.container_methods)": [[933, "ivy.container.container_methods.dsplit"], [935, "ivy.container.container_methods.dsplit"]], "dsplit() (in module ivy.functional.ivy.experimental)": [[933, "ivy.functional.ivy.experimental.dsplit"], [936, "ivy.functional.ivy.experimental.dsplit"]], "static_dsplit() (in module ivy.container.container_methods)": [[933, "ivy.container.container_methods.static_dsplit"], [937, "ivy.container.container_methods.static_dsplit"]], "dstack() (in module ivy.array.array_methods)": [[938, "ivy.array.array_methods.dstack"], [939, "ivy.array.array_methods.dstack"]], "dstack() (in module ivy.container.container_methods)": [[938, "ivy.container.container_methods.dstack"], [940, "ivy.container.container_methods.dstack"]], "dstack() (in module ivy.functional.ivy.experimental)": [[938, "ivy.functional.ivy.experimental.dstack"], [941, "ivy.functional.ivy.experimental.dstack"]], "static_dstack() (in module ivy.container.container_methods)": [[938, "ivy.container.container_methods.static_dstack"], [942, "ivy.container.container_methods.static_dstack"]], "eig() (in module ivy.array.array_methods)": [[943, "ivy.array.array_methods.eig"], [944, "ivy.array.array_methods.eig"]], "eig() (in module ivy.container.container_methods)": [[943, "ivy.container.container_methods.eig"], [945, "ivy.container.container_methods.eig"]], "eig() (in module ivy.functional.ivy.experimental)": [[943, "ivy.functional.ivy.experimental.eig"], [946, "ivy.functional.ivy.experimental.eig"]], "static_eig() (in module ivy.container.container_methods)": [[943, "ivy.container.container_methods.static_eig"], [947, "ivy.container.container_methods.static_eig"]], "eigvals() (in module ivy.array.array_methods)": [[948, "ivy.array.array_methods.eigvals"], [949, "ivy.array.array_methods.eigvals"]], "eigvals() (in module ivy.container.container_methods)": [[948, "ivy.container.container_methods.eigvals"], [950, "ivy.container.container_methods.eigvals"]], "eigvals() (in module ivy.functional.ivy.experimental)": [[948, "ivy.functional.ivy.experimental.eigvals"], [951, "ivy.functional.ivy.experimental.eigvals"]], "static_eigvals() (in module ivy.container.container_methods)": [[948, "ivy.container.container_methods.static_eigvals"], [952, "ivy.container.container_methods.static_eigvals"]], "allclose() (in module ivy.functional.ivy.experimental.elementwise)": [[953, "ivy.functional.ivy.experimental.elementwise.allclose"], [954, "ivy.functional.ivy.experimental.elementwise.allclose"]], "angle() (in module ivy.functional.ivy.experimental.elementwise)": [[953, "ivy.functional.ivy.experimental.elementwise.angle"], [955, "ivy.functional.ivy.experimental.elementwise.angle"]], "binarizer() (in module ivy.functional.ivy.experimental.elementwise)": [[953, "ivy.functional.ivy.experimental.elementwise.binarizer"], [956, "ivy.functional.ivy.experimental.elementwise.binarizer"]], "copysign() (in module ivy.functional.ivy.experimental.elementwise)": [[953, "ivy.functional.ivy.experimental.elementwise.copysign"], [957, "ivy.functional.ivy.experimental.elementwise.copysign"]], "count_nonzero() (in module ivy.functional.ivy.experimental.elementwise)": [[953, "ivy.functional.ivy.experimental.elementwise.count_nonzero"], [958, "ivy.functional.ivy.experimental.elementwise.count_nonzero"]], "diff() (in module ivy.functional.ivy.experimental.elementwise)": [[953, "ivy.functional.ivy.experimental.elementwise.diff"], [959, "ivy.functional.ivy.experimental.elementwise.diff"]], "exp2() (in module ivy.functional.ivy.experimental.elementwise)": [[953, "ivy.functional.ivy.experimental.elementwise.exp2"], [960, "ivy.functional.ivy.experimental.elementwise.exp2"]], "fix() (in module ivy.functional.ivy.experimental.elementwise)": [[953, "ivy.functional.ivy.experimental.elementwise.fix"], [961, "ivy.functional.ivy.experimental.elementwise.fix"]], "float_power() (in module ivy.functional.ivy.experimental.elementwise)": [[953, "ivy.functional.ivy.experimental.elementwise.float_power"], [962, "ivy.functional.ivy.experimental.elementwise.float_power"]], "fmax() (in module ivy.functional.ivy.experimental.elementwise)": [[953, "ivy.functional.ivy.experimental.elementwise.fmax"], [963, "ivy.functional.ivy.experimental.elementwise.fmax"]], "fmin() (in module ivy.functional.ivy.experimental.elementwise)": [[953, "ivy.functional.ivy.experimental.elementwise.fmin"], [964, "ivy.functional.ivy.experimental.elementwise.fmin"]], "fmod() (in module ivy.functional.ivy.experimental.elementwise)": [[953, "ivy.functional.ivy.experimental.elementwise.fmod"], [965, "ivy.functional.ivy.experimental.elementwise.fmod"]], "gcd() (in module ivy.functional.ivy.experimental.elementwise)": [[953, "ivy.functional.ivy.experimental.elementwise.gcd"], [966, "ivy.functional.ivy.experimental.elementwise.gcd"]], "gradient() (in module ivy.functional.ivy.experimental.elementwise)": [[953, "ivy.functional.ivy.experimental.elementwise.gradient"], [967, "ivy.functional.ivy.experimental.elementwise.gradient"]], "hypot() (in module ivy.functional.ivy.experimental.elementwise)": [[953, "ivy.functional.ivy.experimental.elementwise.hypot"], [968, "ivy.functional.ivy.experimental.elementwise.hypot"]], "imag() (in module ivy.functional.ivy.experimental.elementwise)": [[953, "ivy.functional.ivy.experimental.elementwise.imag"], [969, "ivy.functional.ivy.experimental.elementwise.imag"]], "isclose() (in module ivy.functional.ivy.experimental.elementwise)": [[953, "ivy.functional.ivy.experimental.elementwise.isclose"], [970, "ivy.functional.ivy.experimental.elementwise.isclose"]], "ivy.functional.ivy.experimental.elementwise": [[953, "module-ivy.functional.ivy.experimental.elementwise"]], "lcm() (in module ivy.functional.ivy.experimental.elementwise)": [[953, "ivy.functional.ivy.experimental.elementwise.lcm"], [971, "ivy.functional.ivy.experimental.elementwise.lcm"]], "logaddexp2() (in module ivy.functional.ivy.experimental.elementwise)": [[953, "ivy.functional.ivy.experimental.elementwise.logaddexp2"], [972, "ivy.functional.ivy.experimental.elementwise.logaddexp2"]], "nan_to_num() (in module ivy.functional.ivy.experimental.elementwise)": [[953, "ivy.functional.ivy.experimental.elementwise.nan_to_num"], [973, "ivy.functional.ivy.experimental.elementwise.nan_to_num"]], "nansum() (in module ivy.functional.ivy.experimental.elementwise)": [[953, "ivy.functional.ivy.experimental.elementwise.nansum"], [974, "ivy.functional.ivy.experimental.elementwise.nansum"]], "nextafter() (in module ivy.functional.ivy.experimental.elementwise)": [[953, "ivy.functional.ivy.experimental.elementwise.nextafter"], [975, "ivy.functional.ivy.experimental.elementwise.nextafter"]], "real() (in module ivy.functional.ivy.experimental.elementwise)": [[953, "ivy.functional.ivy.experimental.elementwise.real"], [976, "ivy.functional.ivy.experimental.elementwise.real"]], "signbit() (in module ivy.functional.ivy.experimental.elementwise)": [[953, "ivy.functional.ivy.experimental.elementwise.signbit"], [977, "ivy.functional.ivy.experimental.elementwise.signbit"]], "sinc() (in module ivy.functional.ivy.experimental.elementwise)": [[953, "ivy.functional.ivy.experimental.elementwise.sinc"], [978, "ivy.functional.ivy.experimental.elementwise.sinc"]], "trapz() (in module ivy.functional.ivy.experimental.elementwise)": [[953, "ivy.functional.ivy.experimental.elementwise.trapz"], [979, "ivy.functional.ivy.experimental.elementwise.trapz"]], "xlogy() (in module ivy.functional.ivy.experimental.elementwise)": [[953, "ivy.functional.ivy.experimental.elementwise.xlogy"], [980, "ivy.functional.ivy.experimental.elementwise.xlogy"]], "zeta() (in module ivy.functional.ivy.experimental.elementwise)": [[953, "ivy.functional.ivy.experimental.elementwise.zeta"], [981, "ivy.functional.ivy.experimental.elementwise.zeta"]], "embedding() (in module ivy.array.array_methods)": [[982, "ivy.array.array_methods.embedding"], [983, "ivy.array.array_methods.embedding"]], "embedding() (in module ivy.container.container_methods)": [[982, "ivy.container.container_methods.embedding"], [984, "ivy.container.container_methods.embedding"]], "embedding() (in module ivy.functional.ivy.experimental)": [[982, "ivy.functional.ivy.experimental.embedding"], [985, "ivy.functional.ivy.experimental.embedding"]], "static_embedding() (in module ivy.container.container_methods)": [[982, "ivy.container.container_methods.static_embedding"], [986, "ivy.container.container_methods.static_embedding"]], "exp2() (in module ivy.array.array_methods)": [[987, "ivy.array.array_methods.exp2"], [988, "ivy.array.array_methods.exp2"]], "exp2() (in module ivy.container.container_methods)": [[987, "ivy.container.container_methods.exp2"], [989, "ivy.container.container_methods.exp2"]], "exp2() (in module ivy.functional.ivy.experimental)": [[987, "ivy.functional.ivy.experimental.exp2"], [990, "ivy.functional.ivy.experimental.exp2"]], "static_exp2() (in module ivy.container.container_methods)": [[987, "ivy.container.container_methods.static_exp2"], [991, "ivy.container.container_methods.static_exp2"]], "expand() (in module ivy.array.array_methods)": [[992, "ivy.array.array_methods.expand"], [993, "ivy.array.array_methods.expand"]], "expand() (in module ivy.container.container_methods)": [[992, "ivy.container.container_methods.expand"], [994, "ivy.container.container_methods.expand"]], "expand() (in module ivy.functional.ivy.experimental)": [[992, "ivy.functional.ivy.experimental.expand"], [995, "ivy.functional.ivy.experimental.expand"]], "static_expand() (in module ivy.container.container_methods)": [[992, "ivy.container.container_methods.static_expand"], [996, "ivy.container.container_methods.static_expand"]], "eye_like() (in module ivy.array.array_methods)": [[997, "ivy.array.array_methods.eye_like"], [998, "ivy.array.array_methods.eye_like"]], "eye_like() (in module ivy.container.container_methods)": [[997, "ivy.container.container_methods.eye_like"], [999, "ivy.container.container_methods.eye_like"]], "eye_like() (in module ivy.functional.ivy.experimental)": [[997, "ivy.functional.ivy.experimental.eye_like"], [1000, "ivy.functional.ivy.experimental.eye_like"]], "static_eye_like() (in module ivy.container.container_methods)": [[997, "ivy.container.container_methods.static_eye_like"], [1001, "ivy.container.container_methods.static_eye_like"]], "fft() (in module ivy.array.array_methods)": [[1002, "ivy.array.array_methods.fft"], [1003, "ivy.array.array_methods.fft"]], "fft() (in module ivy.container.container_methods)": [[1002, "ivy.container.container_methods.fft"], [1004, "ivy.container.container_methods.fft"]], "fft() (in module ivy.functional.ivy.experimental)": [[1002, "ivy.functional.ivy.experimental.fft"], [1005, "ivy.functional.ivy.experimental.fft"]], "static_fft() (in module ivy.container.container_methods)": [[1002, "ivy.container.container_methods.static_fft"], [1006, "ivy.container.container_methods.static_fft"]], "fix() (in module ivy.array.array_methods)": [[1007, "ivy.array.array_methods.fix"], [1008, "ivy.array.array_methods.fix"]], "fix() (in module ivy.container.container_methods)": [[1007, "ivy.container.container_methods.fix"], [1009, "ivy.container.container_methods.fix"]], "fix() (in module ivy.functional.ivy.experimental)": [[1007, "ivy.functional.ivy.experimental.fix"], [1010, "ivy.functional.ivy.experimental.fix"]], "static_fix() (in module ivy.container.container_methods)": [[1007, "ivy.container.container_methods.static_fix"], [1011, "ivy.container.container_methods.static_fix"]], "flatten() (in module ivy.array.array_methods)": [[1012, "ivy.array.array_methods.flatten"], [1013, "ivy.array.array_methods.flatten"]], "flatten() (in module ivy.container.container_methods)": [[1012, "ivy.container.container_methods.flatten"], [1014, "ivy.container.container_methods.flatten"]], "flatten() (in module ivy.functional.ivy.experimental)": [[1012, "ivy.functional.ivy.experimental.flatten"], [1015, "ivy.functional.ivy.experimental.flatten"]], "static_flatten() (in module ivy.container.container_methods)": [[1012, "ivy.container.container_methods.static_flatten"], [1016, "ivy.container.container_methods.static_flatten"]], "fliplr() (in module ivy.array.array_methods)": [[1017, "ivy.array.array_methods.fliplr"], [1018, "ivy.array.array_methods.fliplr"]], "fliplr() (in module ivy.container.container_methods)": [[1017, "ivy.container.container_methods.fliplr"], [1019, "ivy.container.container_methods.fliplr"]], "fliplr() (in module ivy.functional.ivy.experimental)": [[1017, "ivy.functional.ivy.experimental.fliplr"], [1020, "ivy.functional.ivy.experimental.fliplr"]], "static_fliplr() (in module ivy.container.container_methods)": [[1017, "ivy.container.container_methods.static_fliplr"], [1021, "ivy.container.container_methods.static_fliplr"]], "flipud() (in module ivy.array.array_methods)": [[1022, "ivy.array.array_methods.flipud"], [1023, "ivy.array.array_methods.flipud"]], "flipud() (in module ivy.container.container_methods)": [[1022, "ivy.container.container_methods.flipud"], [1024, "ivy.container.container_methods.flipud"]], "flipud() (in module ivy.functional.ivy.experimental)": [[1022, "ivy.functional.ivy.experimental.flipud"], [1025, "ivy.functional.ivy.experimental.flipud"]], "static_flipud() (in module ivy.container.container_methods)": [[1022, "ivy.container.container_methods.static_flipud"], [1026, "ivy.container.container_methods.static_flipud"]], "float_power() (in module ivy.array.array_methods)": [[1027, "ivy.array.array_methods.float_power"], [1028, "ivy.array.array_methods.float_power"]], "float_power() (in module ivy.container.container_methods)": [[1027, "ivy.container.container_methods.float_power"], [1029, "ivy.container.container_methods.float_power"]], "float_power() (in module ivy.functional.ivy.experimental)": [[1027, "ivy.functional.ivy.experimental.float_power"], [1030, "ivy.functional.ivy.experimental.float_power"]], "static_float_power() (in module ivy.container.container_methods)": [[1027, "ivy.container.container_methods.static_float_power"], [1031, "ivy.container.container_methods.static_float_power"]], "fmax() (in module ivy.array.array_methods)": [[1032, "ivy.array.array_methods.fmax"], [1033, "ivy.array.array_methods.fmax"]], "fmax() (in module ivy.container.container_methods)": [[1032, "ivy.container.container_methods.fmax"], [1034, "ivy.container.container_methods.fmax"]], "fmax() (in module ivy.functional.ivy.experimental)": [[1032, "ivy.functional.ivy.experimental.fmax"], [1035, "ivy.functional.ivy.experimental.fmax"]], "static_fmax() (in module ivy.container.container_methods)": [[1032, "ivy.container.container_methods.static_fmax"], [1036, "ivy.container.container_methods.static_fmax"]], "fmin() (in module ivy.array.array_methods)": [[1037, "ivy.array.array_methods.fmin"], [1038, "ivy.array.array_methods.fmin"]], "fmin() (in module ivy.container.container_methods)": [[1037, "ivy.container.container_methods.fmin"], [1039, "ivy.container.container_methods.fmin"]], "fmin() (in module ivy.functional.ivy.experimental)": [[1037, "ivy.functional.ivy.experimental.fmin"], [1040, "ivy.functional.ivy.experimental.fmin"]], "static_fmin() (in module ivy.container.container_methods)": [[1037, "ivy.container.container_methods.static_fmin"], [1041, "ivy.container.container_methods.static_fmin"]], "fmod() (in module ivy.array.array_methods)": [[1042, "ivy.array.array_methods.fmod"], [1043, "ivy.array.array_methods.fmod"]], "fmod() (in module ivy.container.container_methods)": [[1042, "ivy.container.container_methods.fmod"], [1044, "ivy.container.container_methods.fmod"]], "fmod() (in module ivy.functional.ivy.experimental)": [[1042, "ivy.functional.ivy.experimental.fmod"], [1045, "ivy.functional.ivy.experimental.fmod"]], "static_fmod() (in module ivy.container.container_methods)": [[1042, "ivy.container.container_methods.static_fmod"], [1046, "ivy.container.container_methods.static_fmod"]], "gamma() (in module ivy.array.array_methods)": [[1047, "ivy.array.array_methods.gamma"], [1048, "ivy.array.array_methods.gamma"]], "gamma() (in module ivy.functional.ivy.experimental)": [[1047, "ivy.functional.ivy.experimental.gamma"], [1049, "ivy.functional.ivy.experimental.gamma"]], "gcd() (in module ivy.array.array_methods)": [[1050, "ivy.array.array_methods.gcd"], [1051, "ivy.array.array_methods.gcd"]], "gcd() (in module ivy.container.container_methods)": [[1050, "ivy.container.container_methods.gcd"], [1052, "ivy.container.container_methods.gcd"]], "gcd() (in module ivy.functional.ivy.experimental)": [[1050, "ivy.functional.ivy.experimental.gcd"], [1053, "ivy.functional.ivy.experimental.gcd"]], "static_gcd() (in module ivy.container.container_methods)": [[1050, "ivy.container.container_methods.static_gcd"], [1054, "ivy.container.container_methods.static_gcd"]], "isin() (in module ivy.functional.ivy.experimental.general)": [[1055, "ivy.functional.ivy.experimental.general.isin"], [1056, "ivy.functional.ivy.experimental.general.isin"]], "ivy.functional.ivy.experimental.general": [[1055, "module-ivy.functional.ivy.experimental.general"]], "gradient() (in module ivy.array.array_methods)": [[1057, "ivy.array.array_methods.gradient"], [1058, "ivy.array.array_methods.gradient"]], "gradient() (in module ivy.container.container_methods)": [[1057, "ivy.container.container_methods.gradient"], [1059, "ivy.container.container_methods.gradient"]], "gradient() (in module ivy.functional.ivy.experimental)": [[1057, "ivy.functional.ivy.experimental.gradient"], [1060, "ivy.functional.ivy.experimental.gradient"]], "static_gradient() (in module ivy.container.container_methods)": [[1057, "ivy.container.container_methods.static_gradient"], [1061, "ivy.container.container_methods.static_gradient"]], "bind_custom_gradient_function() (in module ivy.functional.ivy.experimental.gradients)": [[1062, "ivy.functional.ivy.experimental.gradients.bind_custom_gradient_function"], [1063, "ivy.functional.ivy.experimental.gradients.bind_custom_gradient_function"]], "ivy.functional.ivy.experimental.gradients": [[1062, "module-ivy.functional.ivy.experimental.gradients"]], "hamming_window() (in module ivy.container.container_methods)": [[1064, "ivy.container.container_methods.hamming_window"], [1065, "ivy.container.container_methods.hamming_window"]], "hamming_window() (in module ivy.functional.ivy.experimental)": [[1064, "ivy.functional.ivy.experimental.hamming_window"], [1066, "ivy.functional.ivy.experimental.hamming_window"]], "static_hamming_window() (in module ivy.container.container_methods)": [[1064, "ivy.container.container_methods.static_hamming_window"], [1067, "ivy.container.container_methods.static_hamming_window"]], "hann_window() (in module ivy.container.container_methods)": [[1068, "ivy.container.container_methods.hann_window"], [1069, "ivy.container.container_methods.hann_window"]], "hann_window() (in module ivy.functional.ivy.experimental)": [[1068, "ivy.functional.ivy.experimental.hann_window"], [1070, "ivy.functional.ivy.experimental.hann_window"]], "static_hann_window() (in module ivy.container.container_methods)": [[1068, "ivy.container.container_methods.static_hann_window"], [1071, "ivy.container.container_methods.static_hann_window"]], "heaviside() (in module ivy.array.array_methods)": [[1072, "ivy.array.array_methods.heaviside"], [1073, "ivy.array.array_methods.heaviside"]], "heaviside() (in module ivy.container.container_methods)": [[1072, "ivy.container.container_methods.heaviside"], [1074, "ivy.container.container_methods.heaviside"]], "heaviside() (in module ivy.functional.ivy.experimental)": [[1072, "ivy.functional.ivy.experimental.heaviside"], [1075, "ivy.functional.ivy.experimental.heaviside"]], "static_heaviside() (in module ivy.container.container_methods)": [[1072, "ivy.container.container_methods.static_heaviside"], [1076, "ivy.container.container_methods.static_heaviside"]], "hsplit() (in module ivy.array.array_methods)": [[1077, "ivy.array.array_methods.hsplit"], [1078, "ivy.array.array_methods.hsplit"]], "hsplit() (in module ivy.container.container_methods)": [[1077, "ivy.container.container_methods.hsplit"], [1079, "ivy.container.container_methods.hsplit"]], "hsplit() (in module ivy.functional.ivy.experimental)": [[1077, "ivy.functional.ivy.experimental.hsplit"], [1080, "ivy.functional.ivy.experimental.hsplit"]], "static_hsplit() (in module ivy.container.container_methods)": [[1077, "ivy.container.container_methods.static_hsplit"], [1081, "ivy.container.container_methods.static_hsplit"]], "hstack() (in module ivy.array.array_methods)": [[1082, "ivy.array.array_methods.hstack"], [1083, "ivy.array.array_methods.hstack"]], "hstack() (in module ivy.container.container_methods)": [[1082, "ivy.container.container_methods.hstack"], [1084, "ivy.container.container_methods.hstack"]], "hstack() (in module ivy.functional.ivy.experimental)": [[1082, "ivy.functional.ivy.experimental.hstack"], [1085, "ivy.functional.ivy.experimental.hstack"]], "static_hstack() (in module ivy.container.container_methods)": [[1082, "ivy.container.container_methods.static_hstack"], [1086, "ivy.container.container_methods.static_hstack"]], "hypot() (in module ivy.array.array_methods)": [[1087, "ivy.array.array_methods.hypot"], [1088, "ivy.array.array_methods.hypot"]], "hypot() (in module ivy.container.container_methods)": [[1087, "ivy.container.container_methods.hypot"], [1089, "ivy.container.container_methods.hypot"]], "hypot() (in module ivy.functional.ivy.experimental)": [[1087, "ivy.functional.ivy.experimental.hypot"], [1090, "ivy.functional.ivy.experimental.hypot"]], "static_hypot() (in module ivy.container.container_methods)": [[1087, "ivy.container.container_methods.static_hypot"], [1091, "ivy.container.container_methods.static_hypot"]], "i0() (in module ivy.array.array_methods)": [[1092, "ivy.array.array_methods.i0"], [1093, "ivy.array.array_methods.i0"]], "i0() (in module ivy.container.container_methods)": [[1092, "ivy.container.container_methods.i0"], [1094, "ivy.container.container_methods.i0"]], "i0() (in module ivy.functional.ivy.experimental)": [[1092, "ivy.functional.ivy.experimental.i0"], [1095, "ivy.functional.ivy.experimental.i0"]], "static_i0() (in module ivy.container.container_methods)": [[1092, "ivy.container.container_methods.static_i0"], [1096, "ivy.container.container_methods.static_i0"]], "ifft() (in module ivy.array.array_methods)": [[1097, "ivy.array.array_methods.ifft"], [1098, "ivy.array.array_methods.ifft"]], "ifft() (in module ivy.container.container_methods)": [[1097, "ivy.container.container_methods.ifft"], [1099, "ivy.container.container_methods.ifft"]], "ifft() (in module ivy.functional.ivy.experimental)": [[1097, "ivy.functional.ivy.experimental.ifft"], [1100, "ivy.functional.ivy.experimental.ifft"]], "static_ifft() (in module ivy.container.container_methods)": [[1097, "ivy.container.container_methods.static_ifft"], [1101, "ivy.container.container_methods.static_ifft"]], "imag() (in module ivy.array.array_methods)": [[1102, "ivy.array.array_methods.imag"], [1103, "ivy.array.array_methods.imag"]], "imag() (in module ivy.container.container_methods)": [[1102, "ivy.container.container_methods.imag"], [1104, "ivy.container.container_methods.imag"]], "imag() (in module ivy.functional.ivy.experimental)": [[1102, "ivy.functional.ivy.experimental.imag"], [1105, "ivy.functional.ivy.experimental.imag"]], "static_imag() (in module ivy.container.container_methods)": [[1102, "ivy.container.container_methods.static_imag"], [1106, "ivy.container.container_methods.static_imag"]], "instance_norm() (in module ivy.array.array_methods)": [[1107, "ivy.array.array_methods.instance_norm"], [1108, "ivy.array.array_methods.instance_norm"]], "instance_norm() (in module ivy.container.container_methods)": [[1107, "ivy.container.container_methods.instance_norm"], [1109, "ivy.container.container_methods.instance_norm"]], "instance_norm() (in module ivy.functional.ivy.experimental)": [[1107, "ivy.functional.ivy.experimental.instance_norm"], [1110, "ivy.functional.ivy.experimental.instance_norm"]], "static_instance_norm() (in module ivy.container.container_methods)": [[1107, "ivy.container.container_methods.static_instance_norm"], [1111, "ivy.container.container_methods.static_instance_norm"]], "interp() (in module ivy.functional.ivy.experimental)": [[1112, "ivy.functional.ivy.experimental.interp"]], "interpolate() (in module ivy.array.array_methods)": [[1113, "ivy.array.array_methods.interpolate"], [1114, "ivy.array.array_methods.interpolate"]], "interpolate() (in module ivy.container.container_methods)": [[1113, "ivy.container.container_methods.interpolate"], [1115, "ivy.container.container_methods.interpolate"]], "interpolate() (in module ivy.functional.ivy.experimental)": [[1113, "ivy.functional.ivy.experimental.interpolate"], [1116, "ivy.functional.ivy.experimental.interpolate"]], "static_interpolate() (in module ivy.container.container_methods)": [[1113, "ivy.container.container_methods.static_interpolate"], [1117, "ivy.container.container_methods.static_interpolate"]], "is_ivy_sparse_array() (in module ivy.functional.ivy.experimental)": [[1118, "ivy.functional.ivy.experimental.is_ivy_sparse_array"]], "is_native_dtype() (in module ivy.functional.ivy.experimental)": [[1119, "ivy.functional.ivy.experimental.is_native_dtype"]], "is_native_sparse_array() (in module ivy.functional.ivy.experimental)": [[1120, "ivy.functional.ivy.experimental.is_native_sparse_array"]], "isclose() (in module ivy.array.array_methods)": [[1121, "ivy.array.array_methods.isclose"], [1122, "ivy.array.array_methods.isclose"]], "isclose() (in module ivy.container.container_methods)": [[1121, "ivy.container.container_methods.isclose"], [1123, "ivy.container.container_methods.isclose"]], "isclose() (in module ivy.functional.ivy.experimental)": [[1121, "ivy.functional.ivy.experimental.isclose"], [1124, "ivy.functional.ivy.experimental.isclose"]], "static_isclose() (in module ivy.container.container_methods)": [[1121, "ivy.container.container_methods.static_isclose"], [1125, "ivy.container.container_methods.static_isclose"]], "isin() (in module ivy.array.array_methods)": [[1126, "ivy.array.array_methods.isin"], [1127, "ivy.array.array_methods.isin"]], "isin() (in module ivy.container.container_methods)": [[1126, "ivy.container.container_methods.isin"], [1128, "ivy.container.container_methods.isin"]], "isin() (in module ivy.functional.ivy.experimental)": [[1126, "ivy.functional.ivy.experimental.isin"], [1129, "ivy.functional.ivy.experimental.isin"]], "static_isin() (in module ivy.container.container_methods)": [[1126, "ivy.container.container_methods.static_isin"], [1130, "ivy.container.container_methods.static_isin"]], "kaiser_bessel_derived_window() (in module ivy.container.container_methods)": [[1131, "ivy.container.container_methods.kaiser_bessel_derived_window"], [1132, "ivy.container.container_methods.kaiser_bessel_derived_window"]], "kaiser_bessel_derived_window() (in module ivy.functional.ivy.experimental)": [[1131, "ivy.functional.ivy.experimental.kaiser_bessel_derived_window"], [1133, "ivy.functional.ivy.experimental.kaiser_bessel_derived_window"]], "static_kaiser_bessel_derived_window() (in module ivy.container.container_methods)": [[1131, "ivy.container.container_methods.static_kaiser_bessel_derived_window"], [1134, "ivy.container.container_methods.static_kaiser_bessel_derived_window"]], "kaiser_window() (in module ivy.container.container_methods)": [[1135, "ivy.container.container_methods.kaiser_window"], [1136, "ivy.container.container_methods.kaiser_window"]], "kaiser_window() (in module ivy.functional.ivy.experimental)": [[1135, "ivy.functional.ivy.experimental.kaiser_window"], [1137, "ivy.functional.ivy.experimental.kaiser_window"]], "static_kaiser_window() (in module ivy.container.container_methods)": [[1135, "ivy.container.container_methods.static_kaiser_window"], [1138, "ivy.container.container_methods.static_kaiser_window"]], "kron() (in module ivy.array.array_methods)": [[1139, "ivy.array.array_methods.kron"], [1140, "ivy.array.array_methods.kron"]], "kron() (in module ivy.container.container_methods)": [[1139, "ivy.container.container_methods.kron"], [1141, "ivy.container.container_methods.kron"]], "kron() (in module ivy.functional.ivy.experimental)": [[1139, "ivy.functional.ivy.experimental.kron"], [1142, "ivy.functional.ivy.experimental.kron"]], "static_kron() (in module ivy.container.container_methods)": [[1139, "ivy.container.container_methods.static_kron"], [1143, "ivy.container.container_methods.static_kron"]], "l2_normalize() (in module ivy.array.array_methods)": [[1144, "ivy.array.array_methods.l2_normalize"], [1145, "ivy.array.array_methods.l2_normalize"]], "l2_normalize() (in module ivy.container.container_methods)": [[1144, "ivy.container.container_methods.l2_normalize"], [1146, "ivy.container.container_methods.l2_normalize"]], "l2_normalize() (in module ivy.functional.ivy.experimental)": [[1144, "ivy.functional.ivy.experimental.l2_normalize"], [1147, "ivy.functional.ivy.experimental.l2_normalize"]], "static_l2_normalize() (in module ivy.container.container_methods)": [[1144, "ivy.container.container_methods.static_l2_normalize"], [1148, "ivy.container.container_methods.static_l2_normalize"]], "avg_pool1d() (in module ivy.functional.ivy.experimental.layers)": [[1149, "ivy.functional.ivy.experimental.layers.avg_pool1d"], [1150, "ivy.functional.ivy.experimental.layers.avg_pool1d"]], "avg_pool2d() (in module ivy.functional.ivy.experimental.layers)": [[1149, "ivy.functional.ivy.experimental.layers.avg_pool2d"], [1151, "ivy.functional.ivy.experimental.layers.avg_pool2d"]], "avg_pool3d() (in module ivy.functional.ivy.experimental.layers)": [[1149, "ivy.functional.ivy.experimental.layers.avg_pool3d"], [1152, "ivy.functional.ivy.experimental.layers.avg_pool3d"]], "compute_weight_mat() (in module ivy.functional.ivy.experimental.layers)": [[1149, "ivy.functional.ivy.experimental.layers.compute_weight_mat"], [1153, "ivy.functional.ivy.experimental.layers.compute_weight_mat"]], "dct() (in module ivy.functional.ivy.experimental.layers)": [[1149, "ivy.functional.ivy.experimental.layers.dct"], [1154, "ivy.functional.ivy.experimental.layers.dct"]], "dft() (in module ivy.functional.ivy.experimental.layers)": [[1149, "ivy.functional.ivy.experimental.layers.dft"], [1155, "ivy.functional.ivy.experimental.layers.dft"]], "dropout1d() (in module ivy.functional.ivy.experimental.layers)": [[1149, "ivy.functional.ivy.experimental.layers.dropout1d"], [1156, "ivy.functional.ivy.experimental.layers.dropout1d"]], "embedding() (in module ivy.functional.ivy.experimental.layers)": [[1149, "ivy.functional.ivy.experimental.layers.embedding"], [1157, "ivy.functional.ivy.experimental.layers.embedding"]], "fft() (in module ivy.functional.ivy.experimental.layers)": [[1149, "ivy.functional.ivy.experimental.layers.fft"], [1158, "ivy.functional.ivy.experimental.layers.fft"]], "ifft() (in module ivy.functional.ivy.experimental.layers)": [[1149, "ivy.functional.ivy.experimental.layers.ifft"], [1159, "ivy.functional.ivy.experimental.layers.ifft"]], "interp() (in module ivy.functional.ivy.experimental.layers)": [[1149, "ivy.functional.ivy.experimental.layers.interp"], [1160, "ivy.functional.ivy.experimental.layers.interp"]], "interpolate() (in module ivy.functional.ivy.experimental.layers)": [[1149, "ivy.functional.ivy.experimental.layers.interpolate"], [1161, "ivy.functional.ivy.experimental.layers.interpolate"]], "ivy.functional.ivy.experimental.layers": [[1149, "module-ivy.functional.ivy.experimental.layers"]], "max_pool1d() (in module ivy.functional.ivy.experimental.layers)": [[1149, "ivy.functional.ivy.experimental.layers.max_pool1d"], [1162, "ivy.functional.ivy.experimental.layers.max_pool1d"]], "max_pool2d() (in module ivy.functional.ivy.experimental.layers)": [[1149, "ivy.functional.ivy.experimental.layers.max_pool2d"], [1163, "ivy.functional.ivy.experimental.layers.max_pool2d"]], "max_pool3d() (in module ivy.functional.ivy.experimental.layers)": [[1149, "ivy.functional.ivy.experimental.layers.max_pool3d"], [1164, "ivy.functional.ivy.experimental.layers.max_pool3d"]], "padding_ceil_mode() (in module ivy.functional.ivy.experimental.layers)": [[1149, "ivy.functional.ivy.experimental.layers.padding_ceil_mode"], [1165, "ivy.functional.ivy.experimental.layers.padding_ceil_mode"]], "lcm() (in module ivy.array.array_methods)": [[1166, "ivy.array.array_methods.lcm"], [1167, "ivy.array.array_methods.lcm"]], "lcm() (in module ivy.container.container_methods)": [[1166, "ivy.container.container_methods.lcm"], [1168, "ivy.container.container_methods.lcm"]], "lcm() (in module ivy.functional.ivy.experimental)": [[1166, "ivy.functional.ivy.experimental.lcm"], [1169, "ivy.functional.ivy.experimental.lcm"]], "static_lcm() (in module ivy.container.container_methods)": [[1166, "ivy.container.container_methods.static_lcm"], [1170, "ivy.container.container_methods.static_lcm"]], "lexsort() (in module ivy.array.array_methods)": [[1171, "ivy.array.array_methods.lexsort"], [1172, "ivy.array.array_methods.lexsort"]], "lexsort() (in module ivy.container.container_methods)": [[1171, "ivy.container.container_methods.lexsort"], [1173, "ivy.container.container_methods.lexsort"]], "lexsort() (in module ivy.functional.ivy.experimental)": [[1171, "ivy.functional.ivy.experimental.lexsort"], [1174, "ivy.functional.ivy.experimental.lexsort"]], "static_lexsort() (in module ivy.container.container_methods)": [[1171, "ivy.container.container_methods.static_lexsort"], [1175, "ivy.container.container_methods.static_lexsort"]], "adjoint() (in module ivy.functional.ivy.experimental.linear_algebra)": [[1176, "ivy.functional.ivy.experimental.linear_algebra.adjoint"], [1177, "ivy.functional.ivy.experimental.linear_algebra.adjoint"]], "diagflat() (in module ivy.functional.ivy.experimental.linear_algebra)": [[1176, "ivy.functional.ivy.experimental.linear_algebra.diagflat"], [1178, "ivy.functional.ivy.experimental.linear_algebra.diagflat"]], "eig() (in module ivy.functional.ivy.experimental.linear_algebra)": [[1176, "ivy.functional.ivy.experimental.linear_algebra.eig"], [1179, "ivy.functional.ivy.experimental.linear_algebra.eig"]], "eigvals() (in module ivy.functional.ivy.experimental.linear_algebra)": [[1176, "ivy.functional.ivy.experimental.linear_algebra.eigvals"], [1180, "ivy.functional.ivy.experimental.linear_algebra.eigvals"]], "ivy.functional.ivy.experimental.linear_algebra": [[1176, "module-ivy.functional.ivy.experimental.linear_algebra"]], "kron() (in module ivy.functional.ivy.experimental.linear_algebra)": [[1176, "ivy.functional.ivy.experimental.linear_algebra.kron"], [1181, "ivy.functional.ivy.experimental.linear_algebra.kron"]], "matrix_exp() (in module ivy.functional.ivy.experimental.linear_algebra)": [[1176, "ivy.functional.ivy.experimental.linear_algebra.matrix_exp"], [1182, "ivy.functional.ivy.experimental.linear_algebra.matrix_exp"]], "logaddexp2() (in module ivy.array.array_methods)": [[1183, "ivy.array.array_methods.logaddexp2"], [1184, "ivy.array.array_methods.logaddexp2"]], "logaddexp2() (in module ivy.container.container_methods)": [[1183, "ivy.container.container_methods.logaddexp2"], [1185, "ivy.container.container_methods.logaddexp2"]], "logaddexp2() (in module ivy.functional.ivy.experimental)": [[1183, "ivy.functional.ivy.experimental.logaddexp2"], [1186, "ivy.functional.ivy.experimental.logaddexp2"]], "static_logaddexp2() (in module ivy.container.container_methods)": [[1183, "ivy.container.container_methods.static_logaddexp2"], [1187, "ivy.container.container_methods.static_logaddexp2"]], "logit() (in module ivy.array.array_methods)": [[1188, "ivy.array.array_methods.logit"], [1189, "ivy.array.array_methods.logit"]], "logit() (in module ivy.container.container_methods)": [[1188, "ivy.container.container_methods.logit"], [1190, "ivy.container.container_methods.logit"]], "logit() (in module ivy.functional.ivy.experimental)": [[1188, "ivy.functional.ivy.experimental.logit"], [1191, "ivy.functional.ivy.experimental.logit"]], "static_logit() (in module ivy.container.container_methods)": [[1188, "ivy.container.container_methods.static_logit"], [1192, "ivy.container.container_methods.static_logit"]], "binary_cross_entropy_with_logits() (in module ivy.functional.ivy.experimental.losses)": [[1193, "ivy.functional.ivy.experimental.losses.binary_cross_entropy_with_logits"], [1194, "ivy.functional.ivy.experimental.losses.binary_cross_entropy_with_logits"]], "ivy.functional.ivy.experimental.losses": [[1193, "module-ivy.functional.ivy.experimental.losses"]], "lp_normalize() (in module ivy.array.array_methods)": [[1195, "ivy.array.array_methods.lp_normalize"], [1196, "ivy.array.array_methods.lp_normalize"]], "lp_normalize() (in module ivy.container.container_methods)": [[1195, "ivy.container.container_methods.lp_normalize"], [1197, "ivy.container.container_methods.lp_normalize"]], "lp_normalize() (in module ivy.functional.ivy.experimental)": [[1195, "ivy.functional.ivy.experimental.lp_normalize"], [1198, "ivy.functional.ivy.experimental.lp_normalize"]], "static_lp_normalize() (in module ivy.container.container_methods)": [[1195, "ivy.container.container_methods.static_lp_normalize"], [1199, "ivy.container.container_methods.static_lp_normalize"]], "atleast_1d() (in module ivy.functional.ivy.experimental.manipulation)": [[1200, "ivy.functional.ivy.experimental.manipulation.atleast_1d"], [1201, "ivy.functional.ivy.experimental.manipulation.atleast_1d"]], "atleast_2d() (in module ivy.functional.ivy.experimental.manipulation)": [[1200, "ivy.functional.ivy.experimental.manipulation.atleast_2d"], [1202, "ivy.functional.ivy.experimental.manipulation.atleast_2d"]], "atleast_3d() (in module ivy.functional.ivy.experimental.manipulation)": [[1200, "ivy.functional.ivy.experimental.manipulation.atleast_3d"], [1203, "ivy.functional.ivy.experimental.manipulation.atleast_3d"]], "broadcast_shapes() (in module ivy.functional.ivy.experimental.manipulation)": [[1200, "ivy.functional.ivy.experimental.manipulation.broadcast_shapes"], [1204, "ivy.functional.ivy.experimental.manipulation.broadcast_shapes"]], "dsplit() (in module ivy.functional.ivy.experimental.manipulation)": [[1200, "ivy.functional.ivy.experimental.manipulation.dsplit"], [1205, "ivy.functional.ivy.experimental.manipulation.dsplit"]], "dstack() (in module ivy.functional.ivy.experimental.manipulation)": [[1200, "ivy.functional.ivy.experimental.manipulation.dstack"], [1206, "ivy.functional.ivy.experimental.manipulation.dstack"]], "expand() (in module ivy.functional.ivy.experimental.manipulation)": [[1200, "ivy.functional.ivy.experimental.manipulation.expand"], [1207, "ivy.functional.ivy.experimental.manipulation.expand"]], "flatten() (in module ivy.functional.ivy.experimental.manipulation)": [[1200, "ivy.functional.ivy.experimental.manipulation.flatten"], [1208, "ivy.functional.ivy.experimental.manipulation.flatten"]], "fliplr() (in module ivy.functional.ivy.experimental.manipulation)": [[1200, "ivy.functional.ivy.experimental.manipulation.fliplr"], [1209, "ivy.functional.ivy.experimental.manipulation.fliplr"]], "flipud() (in module ivy.functional.ivy.experimental.manipulation)": [[1200, "ivy.functional.ivy.experimental.manipulation.flipud"], [1210, "ivy.functional.ivy.experimental.manipulation.flipud"]], "heaviside() (in module ivy.functional.ivy.experimental.manipulation)": [[1200, "ivy.functional.ivy.experimental.manipulation.heaviside"], [1211, "ivy.functional.ivy.experimental.manipulation.heaviside"]], "hsplit() (in module ivy.functional.ivy.experimental.manipulation)": [[1200, "ivy.functional.ivy.experimental.manipulation.hsplit"], [1212, "ivy.functional.ivy.experimental.manipulation.hsplit"]], "hstack() (in module ivy.functional.ivy.experimental.manipulation)": [[1200, "ivy.functional.ivy.experimental.manipulation.hstack"], [1213, "ivy.functional.ivy.experimental.manipulation.hstack"]], "i0() (in module ivy.functional.ivy.experimental.manipulation)": [[1200, "ivy.functional.ivy.experimental.manipulation.i0"], [1214, "ivy.functional.ivy.experimental.manipulation.i0"]], "ivy.functional.ivy.experimental.manipulation": [[1200, "module-ivy.functional.ivy.experimental.manipulation"]], "moveaxis() (in module ivy.functional.ivy.experimental.manipulation)": [[1200, "ivy.functional.ivy.experimental.manipulation.moveaxis"], [1215, "ivy.functional.ivy.experimental.manipulation.moveaxis"]], "ndenumerate() (in module ivy.functional.ivy.experimental.manipulation)": [[1200, "ivy.functional.ivy.experimental.manipulation.ndenumerate"], [1216, "ivy.functional.ivy.experimental.manipulation.ndenumerate"]], "ndindex() (in module ivy.functional.ivy.experimental.manipulation)": [[1200, "ivy.functional.ivy.experimental.manipulation.ndindex"], [1217, "ivy.functional.ivy.experimental.manipulation.ndindex"]], "pad() (in module ivy.functional.ivy.experimental.manipulation)": [[1200, "ivy.functional.ivy.experimental.manipulation.pad"], [1218, "ivy.functional.ivy.experimental.manipulation.pad"]], "rot90() (in module ivy.functional.ivy.experimental.manipulation)": [[1200, "ivy.functional.ivy.experimental.manipulation.rot90"], [1219, "ivy.functional.ivy.experimental.manipulation.rot90"]], "take_along_axis() (in module ivy.functional.ivy.experimental.manipulation)": [[1200, "ivy.functional.ivy.experimental.manipulation.take_along_axis"], [1220, "ivy.functional.ivy.experimental.manipulation.take_along_axis"]], "top_k() (in module ivy.functional.ivy.experimental.manipulation)": [[1200, "ivy.functional.ivy.experimental.manipulation.top_k"], [1221, "ivy.functional.ivy.experimental.manipulation.top_k"]], "vsplit() (in module ivy.functional.ivy.experimental.manipulation)": [[1200, "ivy.functional.ivy.experimental.manipulation.vsplit"], [1222, "ivy.functional.ivy.experimental.manipulation.vsplit"]], "vstack() (in module ivy.functional.ivy.experimental.manipulation)": [[1200, "ivy.functional.ivy.experimental.manipulation.vstack"], [1223, "ivy.functional.ivy.experimental.manipulation.vstack"]], "matrix_exp() (in module ivy.array.array_methods)": [[1224, "ivy.array.array_methods.matrix_exp"], [1225, "ivy.array.array_methods.matrix_exp"]], "matrix_exp() (in module ivy.container.container_methods)": [[1224, "ivy.container.container_methods.matrix_exp"], [1226, "ivy.container.container_methods.matrix_exp"]], "matrix_exp() (in module ivy.functional.ivy.experimental)": [[1224, "ivy.functional.ivy.experimental.matrix_exp"], [1227, "ivy.functional.ivy.experimental.matrix_exp"]], "static_matrix_exp() (in module ivy.container.container_methods)": [[1224, "ivy.container.container_methods.static_matrix_exp"], [1228, "ivy.container.container_methods.static_matrix_exp"]], "max_pool1d() (in module ivy.array.array_methods)": [[1229, "ivy.array.array_methods.max_pool1d"], [1230, "ivy.array.array_methods.max_pool1d"]], "max_pool1d() (in module ivy.container.container_methods)": [[1229, "ivy.container.container_methods.max_pool1d"], [1231, "ivy.container.container_methods.max_pool1d"]], "max_pool1d() (in module ivy.functional.ivy.experimental)": [[1229, "ivy.functional.ivy.experimental.max_pool1d"], [1232, "ivy.functional.ivy.experimental.max_pool1d"]], "static_max_pool1d() (in module ivy.container.container_methods)": [[1229, "ivy.container.container_methods.static_max_pool1d"], [1233, "ivy.container.container_methods.static_max_pool1d"]], "max_pool2d() (in module ivy.array.array_methods)": [[1234, "ivy.array.array_methods.max_pool2d"], [1235, "ivy.array.array_methods.max_pool2d"]], "max_pool2d() (in module ivy.container.container_methods)": [[1234, "ivy.container.container_methods.max_pool2d"], [1236, "ivy.container.container_methods.max_pool2d"]], "max_pool2d() (in module ivy.functional.ivy.experimental)": [[1234, "ivy.functional.ivy.experimental.max_pool2d"], [1237, "ivy.functional.ivy.experimental.max_pool2d"]], "static_max_pool2d() (in module ivy.container.container_methods)": [[1234, "ivy.container.container_methods.static_max_pool2d"], [1238, "ivy.container.container_methods.static_max_pool2d"]], "max_pool3d() (in module ivy.array.array_methods)": [[1239, "ivy.array.array_methods.max_pool3d"], [1240, "ivy.array.array_methods.max_pool3d"]], "max_pool3d() (in module ivy.container.container_methods)": [[1239, "ivy.container.container_methods.max_pool3d"], [1241, "ivy.container.container_methods.max_pool3d"]], "max_pool3d() (in module ivy.functional.ivy.experimental)": [[1239, "ivy.functional.ivy.experimental.max_pool3d"], [1242, "ivy.functional.ivy.experimental.max_pool3d"]], "static_max_pool3d() (in module ivy.container.container_methods)": [[1239, "ivy.container.container_methods.static_max_pool3d"], [1243, "ivy.container.container_methods.static_max_pool3d"]], "median() (in module ivy.array.array_methods)": [[1244, "ivy.array.array_methods.median"], [1245, "ivy.array.array_methods.median"]], "median() (in module ivy.container.container_methods)": [[1244, "ivy.container.container_methods.median"], [1246, "ivy.container.container_methods.median"]], "median() (in module ivy.functional.ivy.experimental)": [[1244, "ivy.functional.ivy.experimental.median"], [1247, "ivy.functional.ivy.experimental.median"]], "static_median() (in module ivy.container.container_methods)": [[1244, "ivy.container.container_methods.static_median"], [1248, "ivy.container.container_methods.static_median"]], "ivy.functional.ivy.experimental.meta": [[1249, "module-ivy.functional.ivy.experimental.meta"]], "moveaxis() (in module ivy.array.array_methods)": [[1250, "ivy.array.array_methods.moveaxis"], [1251, "ivy.array.array_methods.moveaxis"]], "moveaxis() (in module ivy.container.container_methods)": [[1250, "ivy.container.container_methods.moveaxis"], [1252, "ivy.container.container_methods.moveaxis"]], "moveaxis() (in module ivy.functional.ivy.experimental)": [[1250, "ivy.functional.ivy.experimental.moveaxis"], [1253, "ivy.functional.ivy.experimental.moveaxis"]], "static_moveaxis() (in module ivy.container.container_methods)": [[1250, "ivy.container.container_methods.static_moveaxis"], [1254, "ivy.container.container_methods.static_moveaxis"]], "msort() (in module ivy.array.array_methods)": [[1255, "ivy.array.array_methods.msort"], [1256, "ivy.array.array_methods.msort"]], "msort() (in module ivy.container.container_methods)": [[1255, "ivy.container.container_methods.msort"], [1257, "ivy.container.container_methods.msort"]], "msort() (in module ivy.functional.ivy.experimental)": [[1255, "ivy.functional.ivy.experimental.msort"], [1258, "ivy.functional.ivy.experimental.msort"]], "static_msort() (in module ivy.container.container_methods)": [[1255, "ivy.container.container_methods.static_msort"], [1259, "ivy.container.container_methods.static_msort"]], "nan_to_num() (in module ivy.array.array_methods)": [[1260, "ivy.array.array_methods.nan_to_num"], [1261, "ivy.array.array_methods.nan_to_num"]], "nan_to_num() (in module ivy.container.container_methods)": [[1260, "ivy.container.container_methods.nan_to_num"], [1262, "ivy.container.container_methods.nan_to_num"]], "nan_to_num() (in module ivy.functional.ivy.experimental)": [[1260, "ivy.functional.ivy.experimental.nan_to_num"], [1263, "ivy.functional.ivy.experimental.nan_to_num"]], "static_nan_to_num() (in module ivy.container.container_methods)": [[1260, "ivy.container.container_methods.static_nan_to_num"], [1264, "ivy.container.container_methods.static_nan_to_num"]], "nanmean() (in module ivy.array.array_methods)": [[1265, "ivy.array.array_methods.nanmean"], [1266, "ivy.array.array_methods.nanmean"]], "nanmean() (in module ivy.container.container_methods)": [[1265, "ivy.container.container_methods.nanmean"], [1267, "ivy.container.container_methods.nanmean"]], "nanmean() (in module ivy.functional.ivy.experimental)": [[1265, "ivy.functional.ivy.experimental.nanmean"], [1268, "ivy.functional.ivy.experimental.nanmean"]], "static_nanmean() (in module ivy.container.container_methods)": [[1265, "ivy.container.container_methods.static_nanmean"], [1269, "ivy.container.container_methods.static_nanmean"]], "nanmedian() (in module ivy.array.array_methods)": [[1270, "ivy.array.array_methods.nanmedian"], [1271, "ivy.array.array_methods.nanmedian"]], "nanmedian() (in module ivy.container.container_methods)": [[1270, "ivy.container.container_methods.nanmedian"], [1272, "ivy.container.container_methods.nanmedian"]], "nanmedian() (in module ivy.functional.ivy.experimental)": [[1270, "ivy.functional.ivy.experimental.nanmedian"], [1273, "ivy.functional.ivy.experimental.nanmedian"]], "static_nanmedian() (in module ivy.container.container_methods)": [[1270, "ivy.container.container_methods.static_nanmedian"], [1274, "ivy.container.container_methods.static_nanmedian"]], "nansum() (in module ivy.array.array_methods)": [[1275, "ivy.array.array_methods.nansum"], [1276, "ivy.array.array_methods.nansum"]], "nansum() (in module ivy.container.container_methods)": [[1275, "ivy.container.container_methods.nansum"], [1277, "ivy.container.container_methods.nansum"]], "nansum() (in module ivy.functional.ivy.experimental)": [[1275, "ivy.functional.ivy.experimental.nansum"], [1278, "ivy.functional.ivy.experimental.nansum"]], "static_nansum() (in module ivy.container.container_methods)": [[1275, "ivy.container.container_methods.static_nansum"], [1279, "ivy.container.container_methods.static_nansum"]], "native_sparse_array() (in module ivy.functional.ivy.experimental)": [[1280, "ivy.functional.ivy.experimental.native_sparse_array"]], "native_sparse_array_to_indices_values_and_shape() (in module ivy.functional.ivy.experimental)": [[1281, "ivy.functional.ivy.experimental.native_sparse_array_to_indices_values_and_shape"]], "ndenumerate() (in module ivy.functional.ivy.experimental)": [[1282, "ivy.functional.ivy.experimental.ndenumerate"]], "ndindex() (in module ivy.functional.ivy.experimental)": [[1283, "ivy.functional.ivy.experimental.ndindex"]], "ivy.functional.ivy.experimental.nest": [[1284, "module-ivy.functional.ivy.experimental.nest"]], "nextafter() (in module ivy.array.array_methods)": [[1285, "ivy.array.array_methods.nextafter"], [1286, "ivy.array.array_methods.nextafter"]], "nextafter() (in module ivy.container.container_methods)": [[1285, "ivy.container.container_methods.nextafter"], [1287, "ivy.container.container_methods.nextafter"]], "nextafter() (in module ivy.functional.ivy.experimental)": [[1285, "ivy.functional.ivy.experimental.nextafter"], [1288, "ivy.functional.ivy.experimental.nextafter"]], "static_nextafter() (in module ivy.container.container_methods)": [[1285, "ivy.container.container_methods.static_nextafter"], [1289, "ivy.container.container_methods.static_nextafter"]], "instance_norm() (in module ivy.functional.ivy.experimental.norms)": [[1290, "ivy.functional.ivy.experimental.norms.instance_norm"], [1291, "ivy.functional.ivy.experimental.norms.instance_norm"]], "ivy.functional.ivy.experimental.norms": [[1290, "module-ivy.functional.ivy.experimental.norms"]], "l2_normalize() (in module ivy.functional.ivy.experimental.norms)": [[1290, "ivy.functional.ivy.experimental.norms.l2_normalize"], [1292, "ivy.functional.ivy.experimental.norms.l2_normalize"]], "lp_normalize() (in module ivy.functional.ivy.experimental.norms)": [[1290, "ivy.functional.ivy.experimental.norms.lp_normalize"], [1293, "ivy.functional.ivy.experimental.norms.lp_normalize"]], "pad() (in module ivy.array.array_methods)": [[1294, "ivy.array.array_methods.pad"], [1295, "ivy.array.array_methods.pad"]], "pad() (in module ivy.container.container_methods)": [[1294, "ivy.container.container_methods.pad"], [1296, "ivy.container.container_methods.pad"]], "pad() (in module ivy.functional.ivy.experimental)": [[1294, "ivy.functional.ivy.experimental.pad"], [1297, "ivy.functional.ivy.experimental.pad"]], "static_pad() (in module ivy.container.container_methods)": [[1294, "ivy.container.container_methods.static_pad"], [1298, "ivy.container.container_methods.static_pad"]], "padding_ceil_mode() (in module ivy.functional.ivy.experimental)": [[1299, "ivy.functional.ivy.experimental.padding_ceil_mode"]], "poisson() (in module ivy.array.array_methods)": [[1300, "ivy.array.array_methods.poisson"], [1301, "ivy.array.array_methods.poisson"]], "poisson() (in module ivy.container.container_methods)": [[1300, "ivy.container.container_methods.poisson"], [1302, "ivy.container.container_methods.poisson"]], "poisson() (in module ivy.functional.ivy.experimental)": [[1300, "ivy.functional.ivy.experimental.poisson"], [1303, "ivy.functional.ivy.experimental.poisson"]], "static_poisson() (in module ivy.container.container_methods)": [[1300, "ivy.container.container_methods.static_poisson"], [1304, "ivy.container.container_methods.static_poisson"]], "prelu() (in module ivy.array.array_methods)": [[1305, "ivy.array.array_methods.prelu"], [1306, "ivy.array.array_methods.prelu"]], "prelu() (in module ivy.container.container_methods)": [[1305, "ivy.container.container_methods.prelu"], [1307, "ivy.container.container_methods.prelu"]], "prelu() (in module ivy.functional.ivy.experimental)": [[1305, "ivy.functional.ivy.experimental.prelu"], [1308, "ivy.functional.ivy.experimental.prelu"]], "static_prelu() (in module ivy.container.container_methods)": [[1305, "ivy.container.container_methods.static_prelu"], [1309, "ivy.container.container_methods.static_prelu"]], "quantile() (in module ivy.array.array_methods)": [[1310, "ivy.array.array_methods.quantile"], [1311, "ivy.array.array_methods.quantile"]], "quantile() (in module ivy.container.container_methods)": [[1310, "ivy.container.container_methods.quantile"], [1312, "ivy.container.container_methods.quantile"]], "quantile() (in module ivy.functional.ivy.experimental)": [[1310, "ivy.functional.ivy.experimental.quantile"], [1313, "ivy.functional.ivy.experimental.quantile"]], "static_quantile() (in module ivy.container.container_methods)": [[1310, "ivy.container.container_methods.static_quantile"], [1314, "ivy.container.container_methods.static_quantile"]], "bernoulli() (in module ivy.functional.ivy.experimental.random)": [[1315, "ivy.functional.ivy.experimental.random.bernoulli"], [1316, "ivy.functional.ivy.experimental.random.bernoulli"]], "beta() (in module ivy.functional.ivy.experimental.random)": [[1315, "ivy.functional.ivy.experimental.random.beta"], [1317, "ivy.functional.ivy.experimental.random.beta"]], "dirichlet() (in module ivy.functional.ivy.experimental.random)": [[1315, "ivy.functional.ivy.experimental.random.dirichlet"], [1318, "ivy.functional.ivy.experimental.random.dirichlet"]], "gamma() (in module ivy.functional.ivy.experimental.random)": [[1315, "ivy.functional.ivy.experimental.random.gamma"], [1319, "ivy.functional.ivy.experimental.random.gamma"]], "ivy.functional.ivy.experimental.random": [[1315, "module-ivy.functional.ivy.experimental.random"]], "poisson() (in module ivy.functional.ivy.experimental.random)": [[1315, "ivy.functional.ivy.experimental.random.poisson"], [1320, "ivy.functional.ivy.experimental.random.poisson"]], "real() (in module ivy.array.array_methods)": [[1321, "ivy.array.array_methods.real"], [1322, "ivy.array.array_methods.real"]], "real() (in module ivy.container.container_methods)": [[1321, "ivy.container.container_methods.real"], [1323, "ivy.container.container_methods.real"]], "real() (in module ivy.functional.ivy.experimental)": [[1321, "ivy.functional.ivy.experimental.real"], [1324, "ivy.functional.ivy.experimental.real"]], "static_real() (in module ivy.container.container_methods)": [[1321, "ivy.container.container_methods.static_real"], [1325, "ivy.container.container_methods.static_real"]], "rot90() (in module ivy.array.array_methods)": [[1326, "ivy.array.array_methods.rot90"], [1327, "ivy.array.array_methods.rot90"]], "rot90() (in module ivy.container.container_methods)": [[1326, "ivy.container.container_methods.rot90"], [1328, "ivy.container.container_methods.rot90"]], "rot90() (in module ivy.functional.ivy.experimental)": [[1326, "ivy.functional.ivy.experimental.rot90"], [1329, "ivy.functional.ivy.experimental.rot90"]], "static_rot90() (in module ivy.container.container_methods)": [[1326, "ivy.container.container_methods.static_rot90"], [1330, "ivy.container.container_methods.static_rot90"]], "ivy.functional.ivy.experimental.searching": [[1331, "module-ivy.functional.ivy.experimental.searching"]], "ivy.functional.ivy.experimental.set": [[1332, "module-ivy.functional.ivy.experimental.set"]], "signbit() (in module ivy.array.array_methods)": [[1333, "ivy.array.array_methods.signbit"], [1334, "ivy.array.array_methods.signbit"]], "signbit() (in module ivy.container.container_methods)": [[1333, "ivy.container.container_methods.signbit"], [1335, "ivy.container.container_methods.signbit"]], "signbit() (in module ivy.functional.ivy.experimental)": [[1333, "ivy.functional.ivy.experimental.signbit"], [1336, "ivy.functional.ivy.experimental.signbit"]], "static_signbit() (in module ivy.container.container_methods)": [[1333, "ivy.container.container_methods.static_signbit"], [1337, "ivy.container.container_methods.static_signbit"]], "sinc() (in module ivy.array.array_methods)": [[1338, "ivy.array.array_methods.sinc"], [1339, "ivy.array.array_methods.sinc"]], "sinc() (in module ivy.container.container_methods)": [[1338, "ivy.container.container_methods.sinc"], [1340, "ivy.container.container_methods.sinc"]], "sinc() (in module ivy.functional.ivy.experimental)": [[1338, "ivy.functional.ivy.experimental.sinc"], [1341, "ivy.functional.ivy.experimental.sinc"]], "static_sinc() (in module ivy.container.container_methods)": [[1338, "ivy.container.container_methods.static_sinc"], [1342, "ivy.container.container_methods.static_sinc"]], "ivy.functional.ivy.experimental.sorting": [[1343, "module-ivy.functional.ivy.experimental.sorting"]], "lexsort() (in module ivy.functional.ivy.experimental.sorting)": [[1343, "ivy.functional.ivy.experimental.sorting.lexsort"], [1344, "ivy.functional.ivy.experimental.sorting.lexsort"]], "msort() (in module ivy.functional.ivy.experimental.sorting)": [[1343, "ivy.functional.ivy.experimental.sorting.msort"], [1345, "ivy.functional.ivy.experimental.sorting.msort"]], "nativesparsearray (class in ivy.functional.ivy.experimental.sparse_array)": [[1346, "ivy.functional.ivy.experimental.sparse_array.NativeSparseArray"], [1347, "ivy.functional.ivy.experimental.sparse_array.NativeSparseArray"]], "sparsearray (class in ivy.functional.ivy.experimental.sparse_array)": [[1346, "ivy.functional.ivy.experimental.sparse_array.SparseArray"], [1348, "ivy.functional.ivy.experimental.sparse_array.SparseArray"]], "__init__() (ivy.functional.ivy.experimental.sparse_array.sparsearray method)": [[1346, "ivy.functional.ivy.experimental.sparse_array.SparseArray.__init__"], [1348, "ivy.functional.ivy.experimental.sparse_array.SparseArray.__init__"]], "ccol_indices (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1346, "ivy.functional.ivy.experimental.sparse_array.SparseArray.ccol_indices"], [1348, "ivy.functional.ivy.experimental.sparse_array.SparseArray.ccol_indices"]], "col_indices (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1346, "ivy.functional.ivy.experimental.sparse_array.SparseArray.col_indices"], [1348, "ivy.functional.ivy.experimental.sparse_array.SparseArray.col_indices"]], "coo_indices (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1346, "ivy.functional.ivy.experimental.sparse_array.SparseArray.coo_indices"], [1348, "ivy.functional.ivy.experimental.sparse_array.SparseArray.coo_indices"]], "crow_indices (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1346, "ivy.functional.ivy.experimental.sparse_array.SparseArray.crow_indices"], [1348, "ivy.functional.ivy.experimental.sparse_array.SparseArray.crow_indices"]], "data (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1346, "ivy.functional.ivy.experimental.sparse_array.SparseArray.data"], [1348, "ivy.functional.ivy.experimental.sparse_array.SparseArray.data"]], "dense_shape (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1346, "ivy.functional.ivy.experimental.sparse_array.SparseArray.dense_shape"], [1348, "ivy.functional.ivy.experimental.sparse_array.SparseArray.dense_shape"]], "is_ivy_sparse_array() (in module ivy.functional.ivy.experimental.sparse_array)": [[1346, "ivy.functional.ivy.experimental.sparse_array.is_ivy_sparse_array"], [1349, "ivy.functional.ivy.experimental.sparse_array.is_ivy_sparse_array"]], "is_native_sparse_array() (in module ivy.functional.ivy.experimental.sparse_array)": [[1346, "ivy.functional.ivy.experimental.sparse_array.is_native_sparse_array"], [1350, "ivy.functional.ivy.experimental.sparse_array.is_native_sparse_array"]], "ivy.functional.ivy.experimental.sparse_array": [[1346, "module-ivy.functional.ivy.experimental.sparse_array"]], "native_sparse_array() (in module ivy.functional.ivy.experimental.sparse_array)": [[1346, "ivy.functional.ivy.experimental.sparse_array.native_sparse_array"], [1351, "ivy.functional.ivy.experimental.sparse_array.native_sparse_array"]], "native_sparse_array_to_indices_values_and_shape() (in module ivy.functional.ivy.experimental.sparse_array)": [[1346, "ivy.functional.ivy.experimental.sparse_array.native_sparse_array_to_indices_values_and_shape"], [1352, "ivy.functional.ivy.experimental.sparse_array.native_sparse_array_to_indices_values_and_shape"]], "row_indices (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1346, "ivy.functional.ivy.experimental.sparse_array.SparseArray.row_indices"], [1348, "ivy.functional.ivy.experimental.sparse_array.SparseArray.row_indices"]], "to_dense_array() (ivy.functional.ivy.experimental.sparse_array.sparsearray method)": [[1346, "ivy.functional.ivy.experimental.sparse_array.SparseArray.to_dense_array"], [1348, "ivy.functional.ivy.experimental.sparse_array.SparseArray.to_dense_array"]], "values (ivy.functional.ivy.experimental.sparse_array.sparsearray property)": [[1346, "ivy.functional.ivy.experimental.sparse_array.SparseArray.values"], [1348, "ivy.functional.ivy.experimental.sparse_array.SparseArray.values"]], "corrcoef() (in module ivy.functional.ivy.experimental.statistical)": [[1353, "ivy.functional.ivy.experimental.statistical.corrcoef"], [1354, "ivy.functional.ivy.experimental.statistical.corrcoef"]], "ivy.functional.ivy.experimental.statistical": [[1353, "module-ivy.functional.ivy.experimental.statistical"]], "median() (in module ivy.functional.ivy.experimental.statistical)": [[1353, "ivy.functional.ivy.experimental.statistical.median"], [1355, "ivy.functional.ivy.experimental.statistical.median"]], "nanmean() (in module ivy.functional.ivy.experimental.statistical)": [[1353, "ivy.functional.ivy.experimental.statistical.nanmean"], [1356, "ivy.functional.ivy.experimental.statistical.nanmean"]], "nanmedian() (in module ivy.functional.ivy.experimental.statistical)": [[1353, "ivy.functional.ivy.experimental.statistical.nanmedian"], [1357, "ivy.functional.ivy.experimental.statistical.nanmedian"]], "quantile() (in module ivy.functional.ivy.experimental.statistical)": [[1353, "ivy.functional.ivy.experimental.statistical.quantile"], [1358, "ivy.functional.ivy.experimental.statistical.quantile"]], "unravel_index() (in module ivy.functional.ivy.experimental.statistical)": [[1353, "ivy.functional.ivy.experimental.statistical.unravel_index"], [1359, "ivy.functional.ivy.experimental.statistical.unravel_index"]], "static_take_along_axis() (in module ivy.container.container_methods)": [[1360, "ivy.container.container_methods.static_take_along_axis"], [1361, "ivy.container.container_methods.static_take_along_axis"]], "take_along_axis() (in module ivy.array.array_methods)": [[1360, "ivy.array.array_methods.take_along_axis"], [1362, "ivy.array.array_methods.take_along_axis"]], "take_along_axis() (in module ivy.container.container_methods)": [[1360, "ivy.container.container_methods.take_along_axis"], [1363, "ivy.container.container_methods.take_along_axis"]], "take_along_axis() (in module ivy.functional.ivy.experimental)": [[1360, "ivy.functional.ivy.experimental.take_along_axis"], [1364, "ivy.functional.ivy.experimental.take_along_axis"]], "static_thresholded_relu() (in module ivy.container.container_methods)": [[1365, "ivy.container.container_methods.static_thresholded_relu"], [1366, "ivy.container.container_methods.static_thresholded_relu"]], "thresholded_relu() (in module ivy.array.array_methods)": [[1365, "ivy.array.array_methods.thresholded_relu"], [1367, "ivy.array.array_methods.thresholded_relu"]], "thresholded_relu() (in module ivy.container.container_methods)": [[1365, "ivy.container.container_methods.thresholded_relu"], [1368, "ivy.container.container_methods.thresholded_relu"]], "thresholded_relu() (in module ivy.functional.ivy.experimental)": [[1365, "ivy.functional.ivy.experimental.thresholded_relu"], [1369, "ivy.functional.ivy.experimental.thresholded_relu"]], "static_top_k() (in module ivy.container.container_methods)": [[1370, "ivy.container.container_methods.static_top_k"], [1371, "ivy.container.container_methods.static_top_k"]], "top_k() (in module ivy.array.array_methods)": [[1370, "ivy.array.array_methods.top_k"], [1372, "ivy.array.array_methods.top_k"]], "top_k() (in module ivy.container.container_methods)": [[1370, "ivy.container.container_methods.top_k"], [1373, "ivy.container.container_methods.top_k"]], "top_k() (in module ivy.functional.ivy.experimental)": [[1370, "ivy.functional.ivy.experimental.top_k"], [1374, "ivy.functional.ivy.experimental.top_k"]], "trapz() (in module ivy.array.array_methods)": [[1375, "ivy.array.array_methods.trapz"], [1376, "ivy.array.array_methods.trapz"]], "trapz() (in module ivy.functional.ivy.experimental)": [[1375, "ivy.functional.ivy.experimental.trapz"], [1377, "ivy.functional.ivy.experimental.trapz"]], "static_tril_indices() (in module ivy.container.container_methods)": [[1378, "ivy.container.container_methods.static_tril_indices"], [1379, "ivy.container.container_methods.static_tril_indices"]], "tril_indices() (in module ivy.container.container_methods)": [[1378, "ivy.container.container_methods.tril_indices"], [1380, "ivy.container.container_methods.tril_indices"]], "tril_indices() (in module ivy.functional.ivy.experimental)": [[1378, "ivy.functional.ivy.experimental.tril_indices"], [1381, "ivy.functional.ivy.experimental.tril_indices"]], "static_triu_indices() (in module ivy.container.container_methods)": [[1382, "ivy.container.container_methods.static_triu_indices"], [1383, "ivy.container.container_methods.static_triu_indices"]], "triu_indices() (in module ivy.container.container_methods)": [[1382, "ivy.container.container_methods.triu_indices"], [1384, "ivy.container.container_methods.triu_indices"]], "triu_indices() (in module ivy.functional.ivy.experimental)": [[1382, "ivy.functional.ivy.experimental.triu_indices"], [1385, "ivy.functional.ivy.experimental.triu_indices"]], "static_unravel_index() (in module ivy.container.container_methods)": [[1386, "ivy.container.container_methods.static_unravel_index"], [1387, "ivy.container.container_methods.static_unravel_index"]], "unravel_index() (in module ivy.array.array_methods)": [[1386, "ivy.array.array_methods.unravel_index"], [1388, "ivy.array.array_methods.unravel_index"]], "unravel_index() (in module ivy.container.container_methods)": [[1386, "ivy.container.container_methods.unravel_index"], [1389, "ivy.container.container_methods.unravel_index"]], "unravel_index() (in module ivy.functional.ivy.experimental)": [[1386, "ivy.functional.ivy.experimental.unravel_index"], [1390, "ivy.functional.ivy.experimental.unravel_index"]], "ivy.functional.ivy.experimental.utility": [[1391, "module-ivy.functional.ivy.experimental.utility"]], "static_vorbis_window() (in module ivy.container.container_methods)": [[1392, "ivy.container.container_methods.static_vorbis_window"], [1393, "ivy.container.container_methods.static_vorbis_window"]], "vorbis_window() (in module ivy.container.container_methods)": [[1392, "ivy.container.container_methods.vorbis_window"], [1394, "ivy.container.container_methods.vorbis_window"]], "vorbis_window() (in module ivy.functional.ivy.experimental)": [[1392, "ivy.functional.ivy.experimental.vorbis_window"], [1395, "ivy.functional.ivy.experimental.vorbis_window"]], "static_vsplit() (in module ivy.container.container_methods)": [[1396, "ivy.container.container_methods.static_vsplit"], [1397, "ivy.container.container_methods.static_vsplit"]], "vsplit() (in module ivy.array.array_methods)": [[1396, "ivy.array.array_methods.vsplit"], [1398, "ivy.array.array_methods.vsplit"]], "vsplit() (in module ivy.container.container_methods)": [[1396, "ivy.container.container_methods.vsplit"], [1399, "ivy.container.container_methods.vsplit"]], "vsplit() (in module ivy.functional.ivy.experimental)": [[1396, "ivy.functional.ivy.experimental.vsplit"], [1400, "ivy.functional.ivy.experimental.vsplit"]], "static_vstack() (in module ivy.container.container_methods)": [[1401, "ivy.container.container_methods.static_vstack"], [1402, "ivy.container.container_methods.static_vstack"]], "vstack() (in module ivy.array.array_methods)": [[1401, "ivy.array.array_methods.vstack"], [1403, "ivy.array.array_methods.vstack"]], "vstack() (in module ivy.container.container_methods)": [[1401, "ivy.container.container_methods.vstack"], [1404, "ivy.container.container_methods.vstack"]], "vstack() (in module ivy.functional.ivy.experimental)": [[1401, "ivy.functional.ivy.experimental.vstack"], [1405, "ivy.functional.ivy.experimental.vstack"]], "static_xlogy() (in module ivy.container.container_methods)": [[1406, "ivy.container.container_methods.static_xlogy"], [1407, "ivy.container.container_methods.static_xlogy"]], "xlogy() (in module ivy.array.array_methods)": [[1406, "ivy.array.array_methods.xlogy"], [1408, "ivy.array.array_methods.xlogy"]], "xlogy() (in module ivy.container.container_methods)": [[1406, "ivy.container.container_methods.xlogy"], [1409, "ivy.container.container_methods.xlogy"]], "xlogy() (in module ivy.functional.ivy.experimental)": [[1406, "ivy.functional.ivy.experimental.xlogy"], [1410, "ivy.functional.ivy.experimental.xlogy"]], "static_zeta() (in module ivy.container.container_methods)": [[1411, "ivy.container.container_methods.static_zeta"], [1412, "ivy.container.container_methods.static_zeta"]], "zeta() (in module ivy.array.array_methods)": [[1411, "ivy.array.array_methods.zeta"], [1413, "ivy.array.array_methods.zeta"]], "zeta() (in module ivy.container.container_methods)": [[1411, "ivy.container.container_methods.zeta"], [1414, "ivy.container.container_methods.zeta"]], "zeta() (in module ivy.functional.ivy.experimental)": [[1411, "ivy.functional.ivy.experimental.zeta"], [1415, "ivy.functional.ivy.experimental.zeta"]], "all_equal() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.all_equal"], [1418, "ivy.functional.ivy.general.all_equal"], [1421, "ivy.functional.ivy.general.all_equal"]], "arg_info() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.arg_info"], [1423, "ivy.functional.ivy.general.arg_info"]], "arg_names() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.arg_names"], [1424, "ivy.functional.ivy.general.arg_names"]], "array_equal() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.array_equal"], [1425, "ivy.functional.ivy.general.array_equal"], [1428, "ivy.functional.ivy.general.array_equal"]], "assert_supports_inplace() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.assert_supports_inplace"], [1430, "ivy.functional.ivy.general.assert_supports_inplace"], [1433, "ivy.functional.ivy.general.assert_supports_inplace"]], "cache_fn() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.cache_fn"], [1435, "ivy.functional.ivy.general.cache_fn"]], "clip_matrix_norm() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.clip_matrix_norm"], [1436, "ivy.functional.ivy.general.clip_matrix_norm"], [1439, "ivy.functional.ivy.general.clip_matrix_norm"]], "clip_vector_norm() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.clip_vector_norm"], [1441, "ivy.functional.ivy.general.clip_vector_norm"], [1444, "ivy.functional.ivy.general.clip_vector_norm"]], "container_types() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.container_types"], [1446, "ivy.functional.ivy.general.container_types"]], "current_backend_str() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.current_backend_str"], [1447, "ivy.functional.ivy.general.current_backend_str"]], "default() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.default"], [1448, "ivy.functional.ivy.general.default"], [1450, "ivy.functional.ivy.general.default"]], "einops_rearrange() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.einops_rearrange"], [1451, "ivy.functional.ivy.general.einops_rearrange"], [1454, "ivy.functional.ivy.general.einops_rearrange"]], "einops_reduce() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.einops_reduce"], [1456, "ivy.functional.ivy.general.einops_reduce"], [1459, "ivy.functional.ivy.general.einops_reduce"]], "einops_repeat() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.einops_repeat"], [1461, "ivy.functional.ivy.general.einops_repeat"], [1464, "ivy.functional.ivy.general.einops_repeat"]], "exists() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.exists"], [1466, "ivy.functional.ivy.general.exists"], [1468, "ivy.functional.ivy.general.exists"]], "fourier_encode() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.fourier_encode"], [1469, "ivy.functional.ivy.general.fourier_encode"], [1472, "ivy.functional.ivy.general.fourier_encode"]], "function_supported_devices_and_dtypes() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.function_supported_devices_and_dtypes"], [1474, "ivy.functional.ivy.general.function_supported_devices_and_dtypes"]], "function_unsupported_devices_and_dtypes() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.function_unsupported_devices_and_dtypes"], [1475, "ivy.functional.ivy.general.function_unsupported_devices_and_dtypes"]], "gather() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.gather"], [1476, "ivy.functional.ivy.general.gather"], [1479, "ivy.functional.ivy.general.gather"]], "gather_nd() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.gather_nd"], [1481, "ivy.functional.ivy.general.gather_nd"], [1484, "ivy.functional.ivy.general.gather_nd"]], "get_all_arrays_in_memory() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.get_all_arrays_in_memory"], [1486, "ivy.functional.ivy.general.get_all_arrays_in_memory"]], "get_array_mode() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.get_array_mode"], [1487, "ivy.functional.ivy.general.get_array_mode"]], "get_exception_trace_mode() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.get_exception_trace_mode"], [1488, "ivy.functional.ivy.general.get_exception_trace_mode"]], "get_item() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.get_item"], [1489, "ivy.functional.ivy.general.get_item"]], "get_min_base() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.get_min_base"], [1490, "ivy.functional.ivy.general.get_min_base"]], "get_min_denominator() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.get_min_denominator"], [1491, "ivy.functional.ivy.general.get_min_denominator"]], "get_nestable_mode() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.get_nestable_mode"], [1492, "ivy.functional.ivy.general.get_nestable_mode"]], "get_num_dims() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.get_num_dims"], [1493, "ivy.functional.ivy.general.get_num_dims"], [1496, "ivy.functional.ivy.general.get_num_dims"]], "get_queue_timeout() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.get_queue_timeout"], [1498, "ivy.functional.ivy.general.get_queue_timeout"]], "get_referrers_recursive() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.get_referrers_recursive"], [1499, "ivy.functional.ivy.general.get_referrers_recursive"]], "get_show_func_wrapper_trace_mode() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.get_show_func_wrapper_trace_mode"], [1500, "ivy.functional.ivy.general.get_show_func_wrapper_trace_mode"]], "get_tmp_dir() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.get_tmp_dir"], [1501, "ivy.functional.ivy.general.get_tmp_dir"]], "has_nans() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.has_nans"], [1502, "ivy.functional.ivy.general.has_nans"], [1505, "ivy.functional.ivy.general.has_nans"]], "inplace_arrays_supported() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.inplace_arrays_supported"], [1507, "ivy.functional.ivy.general.inplace_arrays_supported"]], "inplace_decrement() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.inplace_decrement"], [1508, "ivy.functional.ivy.general.inplace_decrement"], [1511, "ivy.functional.ivy.general.inplace_decrement"]], "inplace_increment() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.inplace_increment"], [1513, "ivy.functional.ivy.general.inplace_increment"], [1516, "ivy.functional.ivy.general.inplace_increment"]], "inplace_update() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.inplace_update"], [1518, "ivy.functional.ivy.general.inplace_update"], [1521, "ivy.functional.ivy.general.inplace_update"]], "inplace_variables_supported() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.inplace_variables_supported"], [1523, "ivy.functional.ivy.general.inplace_variables_supported"]], "is_array() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.is_array"], [1524, "ivy.functional.ivy.general.is_array"], [1527, "ivy.functional.ivy.general.is_array"]], "is_ivy_array() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.is_ivy_array"], [1529, "ivy.functional.ivy.general.is_ivy_array"], [1532, "ivy.functional.ivy.general.is_ivy_array"]], "is_ivy_container() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.is_ivy_container"], [1534, "ivy.functional.ivy.general.is_ivy_container"], [1536, "ivy.functional.ivy.general.is_ivy_container"]], "is_native_array() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.is_native_array"], [1537, "ivy.functional.ivy.general.is_native_array"], [1540, "ivy.functional.ivy.general.is_native_array"]], "isscalar() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.isscalar"], [1542, "ivy.functional.ivy.general.isscalar"]], "ivy.functional.ivy.general": [[1417, "module-ivy.functional.ivy.general"]], "match_kwargs() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.match_kwargs"], [1543, "ivy.functional.ivy.general.match_kwargs"]], "multiprocessing() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.multiprocessing"], [1544, "ivy.functional.ivy.general.multiprocessing"]], "num_arrays_in_memory() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.num_arrays_in_memory"], [1545, "ivy.functional.ivy.general.num_arrays_in_memory"]], "print_all_arrays_in_memory() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.print_all_arrays_in_memory"], [1546, "ivy.functional.ivy.general.print_all_arrays_in_memory"]], "scatter_flat() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.scatter_flat"], [1547, "ivy.functional.ivy.general.scatter_flat"], [1550, "ivy.functional.ivy.general.scatter_flat"]], "scatter_nd() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.scatter_nd"], [1552, "ivy.functional.ivy.general.scatter_nd"], [1555, "ivy.functional.ivy.general.scatter_nd"]], "set_array_mode() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.set_array_mode"], [1557, "ivy.functional.ivy.general.set_array_mode"]], "set_exception_trace_mode() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.set_exception_trace_mode"], [1558, "ivy.functional.ivy.general.set_exception_trace_mode"]], "set_min_base() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.set_min_base"], [1559, "ivy.functional.ivy.general.set_min_base"]], "set_min_denominator() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.set_min_denominator"], [1560, "ivy.functional.ivy.general.set_min_denominator"]], "set_nestable_mode() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.set_nestable_mode"], [1561, "ivy.functional.ivy.general.set_nestable_mode"]], "set_queue_timeout() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.set_queue_timeout"], [1562, "ivy.functional.ivy.general.set_queue_timeout"]], "set_shape_array_mode() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.set_shape_array_mode"], [1563, "ivy.functional.ivy.general.set_shape_array_mode"]], "set_show_func_wrapper_trace_mode() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.set_show_func_wrapper_trace_mode"], [1564, "ivy.functional.ivy.general.set_show_func_wrapper_trace_mode"]], "set_tmp_dir() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.set_tmp_dir"], [1565, "ivy.functional.ivy.general.set_tmp_dir"]], "shape() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.shape"], [1566, "ivy.functional.ivy.general.shape"]], "shape_array_mode() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.shape_array_mode"], [1567, "ivy.functional.ivy.general.shape_array_mode"]], "stable_divide() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.stable_divide"], [1568, "ivy.functional.ivy.general.stable_divide"], [1571, "ivy.functional.ivy.general.stable_divide"]], "stable_pow() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.stable_pow"], [1573, "ivy.functional.ivy.general.stable_pow"], [1576, "ivy.functional.ivy.general.stable_pow"]], "supports_inplace_updates() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.supports_inplace_updates"], [1578, "ivy.functional.ivy.general.supports_inplace_updates"], [1582, "ivy.functional.ivy.general.supports_inplace_updates"]], "to_ivy_shape() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.to_ivy_shape"], [1583, "ivy.functional.ivy.general.to_ivy_shape"]], "to_list() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.to_list"], [1584, "ivy.functional.ivy.general.to_list"], [1587, "ivy.functional.ivy.general.to_list"]], "to_native_shape() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.to_native_shape"], [1588, "ivy.functional.ivy.general.to_native_shape"]], "to_numpy() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.to_numpy"], [1589, "ivy.functional.ivy.general.to_numpy"], [1593, "ivy.functional.ivy.general.to_numpy"]], "to_scalar() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.to_scalar"], [1594, "ivy.functional.ivy.general.to_scalar"], [1598, "ivy.functional.ivy.general.to_scalar"]], "try_else_none() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.try_else_none"], [1599, "ivy.functional.ivy.general.try_else_none"]], "unset_array_mode() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.unset_array_mode"], [1600, "ivy.functional.ivy.general.unset_array_mode"]], "unset_exception_trace_mode() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.unset_exception_trace_mode"], [1601, "ivy.functional.ivy.general.unset_exception_trace_mode"]], "unset_nestable_mode() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.unset_nestable_mode"], [1602, "ivy.functional.ivy.general.unset_nestable_mode"]], "unset_queue_timeout() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.unset_queue_timeout"], [1603, "ivy.functional.ivy.general.unset_queue_timeout"]], "unset_shape_array_mode() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.unset_shape_array_mode"], [1604, "ivy.functional.ivy.general.unset_shape_array_mode"]], "unset_show_func_wrapper_trace_mode() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.unset_show_func_wrapper_trace_mode"], [1605, "ivy.functional.ivy.general.unset_show_func_wrapper_trace_mode"]], "value_is_nan() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.value_is_nan"], [1606, "ivy.functional.ivy.general.value_is_nan"], [1610, "ivy.functional.ivy.general.value_is_nan"]], "vmap() (in module ivy.functional.ivy.general)": [[1417, "ivy.functional.ivy.general.vmap"], [1611, "ivy.functional.ivy.general.vmap"]], "all_equal() (in module ivy.array.array_methods)": [[1418, "ivy.array.array_methods.all_equal"], [1419, "ivy.array.array_methods.all_equal"]], "all_equal() (in module ivy.container.container_methods)": [[1418, "ivy.container.container_methods.all_equal"], [1420, "ivy.container.container_methods.all_equal"]], "static_all_equal() (in module ivy.container.container_methods)": [[1418, "ivy.container.container_methods.static_all_equal"], [1422, "ivy.container.container_methods.static_all_equal"]], "array_equal() (in module ivy.array.array_methods)": [[1425, "ivy.array.array_methods.array_equal"], [1426, "ivy.array.array_methods.array_equal"]], "array_equal() (in module ivy.container.container_methods)": [[1425, "ivy.container.container_methods.array_equal"], [1427, "ivy.container.container_methods.array_equal"]], "static_array_equal() (in module ivy.container.container_methods)": [[1425, "ivy.container.container_methods.static_array_equal"], [1429, "ivy.container.container_methods.static_array_equal"]], "assert_supports_inplace() (in module ivy.array.array_methods)": [[1430, "ivy.array.array_methods.assert_supports_inplace"], [1431, "ivy.array.array_methods.assert_supports_inplace"]], "assert_supports_inplace() (in module ivy.container.container_methods)": [[1430, "ivy.container.container_methods.assert_supports_inplace"], [1432, "ivy.container.container_methods.assert_supports_inplace"]], "static_assert_supports_inplace() (in module ivy.container.container_methods)": [[1430, "ivy.container.container_methods.static_assert_supports_inplace"], [1434, "ivy.container.container_methods.static_assert_supports_inplace"]], "clip_matrix_norm() (in module ivy.array.array_methods)": [[1436, "ivy.array.array_methods.clip_matrix_norm"], [1437, "ivy.array.array_methods.clip_matrix_norm"]], "clip_matrix_norm() (in module ivy.container.container_methods)": [[1436, "ivy.container.container_methods.clip_matrix_norm"], [1438, "ivy.container.container_methods.clip_matrix_norm"]], "static_clip_matrix_norm() (in module ivy.container.container_methods)": [[1436, "ivy.container.container_methods.static_clip_matrix_norm"], [1440, "ivy.container.container_methods.static_clip_matrix_norm"]], "clip_vector_norm() (in module ivy.array.array_methods)": [[1441, "ivy.array.array_methods.clip_vector_norm"], [1442, "ivy.array.array_methods.clip_vector_norm"]], "clip_vector_norm() (in module ivy.container.container_methods)": [[1441, "ivy.container.container_methods.clip_vector_norm"], [1443, "ivy.container.container_methods.clip_vector_norm"]], "static_clip_vector_norm() (in module ivy.container.container_methods)": [[1441, "ivy.container.container_methods.static_clip_vector_norm"], [1445, "ivy.container.container_methods.static_clip_vector_norm"]], "default() (in module ivy.array.array_methods)": [[1448, "ivy.array.array_methods.default"], [1449, "ivy.array.array_methods.default"]], "einops_rearrange() (in module ivy.array.array_methods)": [[1451, "ivy.array.array_methods.einops_rearrange"], [1452, "ivy.array.array_methods.einops_rearrange"]], "einops_rearrange() (in module ivy.container.container_methods)": [[1451, "ivy.container.container_methods.einops_rearrange"], [1453, "ivy.container.container_methods.einops_rearrange"]], "static_einops_rearrange() (in module ivy.container.container_methods)": [[1451, "ivy.container.container_methods.static_einops_rearrange"], [1455, "ivy.container.container_methods.static_einops_rearrange"]], "einops_reduce() (in module ivy.array.array_methods)": [[1456, "ivy.array.array_methods.einops_reduce"], [1457, "ivy.array.array_methods.einops_reduce"]], "einops_reduce() (in module ivy.container.container_methods)": [[1456, "ivy.container.container_methods.einops_reduce"], [1458, "ivy.container.container_methods.einops_reduce"]], "static_einops_reduce() (in module ivy.container.container_methods)": [[1456, "ivy.container.container_methods.static_einops_reduce"], [1460, "ivy.container.container_methods.static_einops_reduce"]], "einops_repeat() (in module ivy.array.array_methods)": [[1461, "ivy.array.array_methods.einops_repeat"], [1462, "ivy.array.array_methods.einops_repeat"]], "einops_repeat() (in module ivy.container.container_methods)": [[1461, "ivy.container.container_methods.einops_repeat"], [1463, "ivy.container.container_methods.einops_repeat"]], "static_einops_repeat() (in module ivy.container.container_methods)": [[1461, "ivy.container.container_methods.static_einops_repeat"], [1465, "ivy.container.container_methods.static_einops_repeat"]], "exists() (in module ivy.array.array_methods)": [[1466, "ivy.array.array_methods.exists"], [1467, "ivy.array.array_methods.exists"]], "fourier_encode() (in module ivy.array.array_methods)": [[1469, "ivy.array.array_methods.fourier_encode"], [1470, "ivy.array.array_methods.fourier_encode"]], "fourier_encode() (in module ivy.container.container_methods)": [[1469, "ivy.container.container_methods.fourier_encode"], [1471, "ivy.container.container_methods.fourier_encode"]], "static_fourier_encode() (in module ivy.container.container_methods)": [[1469, "ivy.container.container_methods.static_fourier_encode"], [1473, "ivy.container.container_methods.static_fourier_encode"]], "gather() (in module ivy.array.array_methods)": [[1476, "ivy.array.array_methods.gather"], [1477, "ivy.array.array_methods.gather"]], "gather() (in module ivy.container.container_methods)": [[1476, "ivy.container.container_methods.gather"], [1478, "ivy.container.container_methods.gather"]], "static_gather() (in module ivy.container.container_methods)": [[1476, "ivy.container.container_methods.static_gather"], [1480, "ivy.container.container_methods.static_gather"]], "gather_nd() (in module ivy.array.array_methods)": [[1481, "ivy.array.array_methods.gather_nd"], [1482, "ivy.array.array_methods.gather_nd"]], "gather_nd() (in module ivy.container.container_methods)": [[1481, "ivy.container.container_methods.gather_nd"], [1483, "ivy.container.container_methods.gather_nd"]], "static_gather_nd() (in module ivy.container.container_methods)": [[1481, "ivy.container.container_methods.static_gather_nd"], [1485, "ivy.container.container_methods.static_gather_nd"]], "get_num_dims() (in module ivy.array.array_methods)": [[1493, "ivy.array.array_methods.get_num_dims"], [1494, "ivy.array.array_methods.get_num_dims"]], "get_num_dims() (in module ivy.container.container_methods)": [[1493, "ivy.container.container_methods.get_num_dims"], [1495, "ivy.container.container_methods.get_num_dims"]], "static_get_num_dims() (in module ivy.container.container_methods)": [[1493, "ivy.container.container_methods.static_get_num_dims"], [1497, "ivy.container.container_methods.static_get_num_dims"]], "has_nans() (in module ivy.array.array_methods)": [[1502, "ivy.array.array_methods.has_nans"], [1503, "ivy.array.array_methods.has_nans"]], "has_nans() (in module ivy.container.container_methods)": [[1502, "ivy.container.container_methods.has_nans"], [1504, "ivy.container.container_methods.has_nans"]], "static_has_nans() (in module ivy.container.container_methods)": [[1502, "ivy.container.container_methods.static_has_nans"], [1506, "ivy.container.container_methods.static_has_nans"]], "inplace_decrement() (in module ivy.array.array_methods)": [[1508, "ivy.array.array_methods.inplace_decrement"], [1509, "ivy.array.array_methods.inplace_decrement"]], "inplace_decrement() (in module ivy.container.container_methods)": [[1508, "ivy.container.container_methods.inplace_decrement"], [1510, "ivy.container.container_methods.inplace_decrement"]], "static_inplace_decrement() (in module ivy.container.container_methods)": [[1508, "ivy.container.container_methods.static_inplace_decrement"], [1512, "ivy.container.container_methods.static_inplace_decrement"]], "inplace_increment() (in module ivy.array.array_methods)": [[1513, "ivy.array.array_methods.inplace_increment"], [1514, "ivy.array.array_methods.inplace_increment"]], "inplace_increment() (in module ivy.container.container_methods)": [[1513, "ivy.container.container_methods.inplace_increment"], [1515, "ivy.container.container_methods.inplace_increment"]], "static_inplace_increment() (in module ivy.container.container_methods)": [[1513, "ivy.container.container_methods.static_inplace_increment"], [1517, "ivy.container.container_methods.static_inplace_increment"]], "inplace_update() (in module ivy.array.array_methods)": [[1518, "ivy.array.array_methods.inplace_update"], [1519, "ivy.array.array_methods.inplace_update"]], "inplace_update() (in module ivy.container.container_methods)": [[1518, "ivy.container.container_methods.inplace_update"], [1520, "ivy.container.container_methods.inplace_update"]], "static_inplace_update() (in module ivy.container.container_methods)": [[1518, "ivy.container.container_methods.static_inplace_update"], [1522, "ivy.container.container_methods.static_inplace_update"]], "is_array() (in module ivy.array.array_methods)": [[1524, "ivy.array.array_methods.is_array"], [1525, "ivy.array.array_methods.is_array"]], "is_array() (in module ivy.container.container_methods)": [[1524, "ivy.container.container_methods.is_array"], [1526, "ivy.container.container_methods.is_array"]], "static_is_array() (in module ivy.container.container_methods)": [[1524, "ivy.container.container_methods.static_is_array"], [1528, "ivy.container.container_methods.static_is_array"]], "is_ivy_array() (in module ivy.array.array_methods)": [[1529, "ivy.array.array_methods.is_ivy_array"], [1530, "ivy.array.array_methods.is_ivy_array"]], "is_ivy_array() (in module ivy.container.container_methods)": [[1529, "ivy.container.container_methods.is_ivy_array"], [1531, "ivy.container.container_methods.is_ivy_array"]], "static_is_ivy_array() (in module ivy.container.container_methods)": [[1529, "ivy.container.container_methods.static_is_ivy_array"], [1533, "ivy.container.container_methods.static_is_ivy_array"]], "is_ivy_container() (in module ivy.array.array_methods)": [[1534, "ivy.array.array_methods.is_ivy_container"], [1535, "ivy.array.array_methods.is_ivy_container"]], "is_native_array() (in module ivy.array.array_methods)": [[1537, "ivy.array.array_methods.is_native_array"], [1538, "ivy.array.array_methods.is_native_array"]], "is_native_array() (in module ivy.container.container_methods)": [[1537, "ivy.container.container_methods.is_native_array"], [1539, "ivy.container.container_methods.is_native_array"]], "static_is_native_array() (in module ivy.container.container_methods)": [[1537, "ivy.container.container_methods.static_is_native_array"], [1541, "ivy.container.container_methods.static_is_native_array"]], "scatter_flat() (in module ivy.array.array_methods)": [[1547, "ivy.array.array_methods.scatter_flat"], [1548, "ivy.array.array_methods.scatter_flat"]], "scatter_flat() (in module ivy.container.container_methods)": [[1547, "ivy.container.container_methods.scatter_flat"], [1549, "ivy.container.container_methods.scatter_flat"]], "static_scatter_flat() (in module ivy.container.container_methods)": [[1547, "ivy.container.container_methods.static_scatter_flat"], [1551, "ivy.container.container_methods.static_scatter_flat"]], "scatter_nd() (in module ivy.array.array_methods)": [[1552, "ivy.array.array_methods.scatter_nd"], [1553, "ivy.array.array_methods.scatter_nd"]], "scatter_nd() (in module ivy.container.container_methods)": [[1552, "ivy.container.container_methods.scatter_nd"], [1554, "ivy.container.container_methods.scatter_nd"]], "static_scatter_nd() (in module ivy.container.container_methods)": [[1552, "ivy.container.container_methods.static_scatter_nd"], [1556, "ivy.container.container_methods.static_scatter_nd"]], "stable_divide() (in module ivy.array.array_methods)": [[1568, "ivy.array.array_methods.stable_divide"], [1569, "ivy.array.array_methods.stable_divide"]], "stable_divide() (in module ivy.container.container_methods)": [[1568, "ivy.container.container_methods.stable_divide"], [1570, "ivy.container.container_methods.stable_divide"]], "static_stable_divide() (in module ivy.container.container_methods)": [[1568, "ivy.container.container_methods.static_stable_divide"], [1572, "ivy.container.container_methods.static_stable_divide"]], "stable_pow() (in module ivy.array.array_methods)": [[1573, "ivy.array.array_methods.stable_pow"], [1574, "ivy.array.array_methods.stable_pow"]], "stable_pow() (in module ivy.container.container_methods)": [[1573, "ivy.container.container_methods.stable_pow"], [1575, "ivy.container.container_methods.stable_pow"]], "static_stable_pow() (in module ivy.container.container_methods)": [[1573, "ivy.container.container_methods.static_stable_pow"], [1577, "ivy.container.container_methods.static_stable_pow"]], "static_supports_inplace_updates() (in module ivy.container.container_methods)": [[1578, "ivy.container.container_methods.static_supports_inplace_updates"], [1579, "ivy.container.container_methods.static_supports_inplace_updates"]], "supports_inplace_updates() (in module ivy.array.array_methods)": [[1578, "ivy.array.array_methods.supports_inplace_updates"], [1580, "ivy.array.array_methods.supports_inplace_updates"]], "supports_inplace_updates() (in module ivy.container.container_methods)": [[1578, "ivy.container.container_methods.supports_inplace_updates"], [1581, "ivy.container.container_methods.supports_inplace_updates"]], "static_to_list() (in module ivy.container.container_methods)": [[1584, "ivy.container.container_methods.static_to_list"], [1585, "ivy.container.container_methods.static_to_list"]], "to_list() (in module ivy.array.array_methods)": [[1584, "ivy.array.array_methods.to_list"], [1586, "ivy.array.array_methods.to_list"]], "static_to_numpy() (in module ivy.container.container_methods)": [[1589, "ivy.container.container_methods.static_to_numpy"], [1590, "ivy.container.container_methods.static_to_numpy"]], "to_numpy() (in module ivy.array.array_methods)": [[1589, "ivy.array.array_methods.to_numpy"], [1591, "ivy.array.array_methods.to_numpy"]], "to_numpy() (in module ivy.container.container_methods)": [[1589, "ivy.container.container_methods.to_numpy"], [1592, "ivy.container.container_methods.to_numpy"]], "static_to_scalar() (in module ivy.container.container_methods)": [[1594, "ivy.container.container_methods.static_to_scalar"], [1595, "ivy.container.container_methods.static_to_scalar"]], "to_scalar() (in module ivy.array.array_methods)": [[1594, "ivy.array.array_methods.to_scalar"], [1596, "ivy.array.array_methods.to_scalar"]], "to_scalar() (in module ivy.container.container_methods)": [[1594, "ivy.container.container_methods.to_scalar"], [1597, "ivy.container.container_methods.to_scalar"]], "static_value_is_nan() (in module ivy.container.container_methods)": [[1606, "ivy.container.container_methods.static_value_is_nan"], [1607, "ivy.container.container_methods.static_value_is_nan"]], "value_is_nan() (in module ivy.array.array_methods)": [[1606, "ivy.array.array_methods.value_is_nan"], [1608, "ivy.array.array_methods.value_is_nan"]], "value_is_nan() (in module ivy.container.container_methods)": [[1606, "ivy.container.container_methods.value_is_nan"], [1609, "ivy.container.container_methods.value_is_nan"]], "gradienttracking (class in ivy.functional.ivy.gradients)": [[1612, "ivy.functional.ivy.gradients.GradientTracking"], [1613, "ivy.functional.ivy.gradients.GradientTracking"]], "__init__() (ivy.functional.ivy.gradients.gradienttracking method)": [[1612, "ivy.functional.ivy.gradients.GradientTracking.__init__"], [1613, "ivy.functional.ivy.gradients.GradientTracking.__init__"]], "adam_step() (in module ivy.functional.ivy.gradients)": [[1612, "ivy.functional.ivy.gradients.adam_step"], [1614, "ivy.functional.ivy.gradients.adam_step"], [1617, "ivy.functional.ivy.gradients.adam_step"]], "adam_update() (in module ivy.functional.ivy.gradients)": [[1612, "ivy.functional.ivy.gradients.adam_update"], [1618, "ivy.functional.ivy.gradients.adam_update"], [1621, "ivy.functional.ivy.gradients.adam_update"]], "execute_with_gradients() (in module ivy.functional.ivy.gradients)": [[1612, "ivy.functional.ivy.gradients.execute_with_gradients"], [1622, "ivy.functional.ivy.gradients.execute_with_gradients"]], "grad() (in module ivy.functional.ivy.gradients)": [[1612, "ivy.functional.ivy.gradients.grad"], [1623, "ivy.functional.ivy.gradients.grad"]], "gradient_descent_update() (in module ivy.functional.ivy.gradients)": [[1612, "ivy.functional.ivy.gradients.gradient_descent_update"], [1624, "ivy.functional.ivy.gradients.gradient_descent_update"], [1627, "ivy.functional.ivy.gradients.gradient_descent_update"]], "ivy.functional.ivy.gradients": [[1612, "module-ivy.functional.ivy.gradients"]], "jac() (in module ivy.functional.ivy.gradients)": [[1612, "ivy.functional.ivy.gradients.jac"], [1628, "ivy.functional.ivy.gradients.jac"]], "lamb_update() (in module ivy.functional.ivy.gradients)": [[1612, "ivy.functional.ivy.gradients.lamb_update"], [1629, "ivy.functional.ivy.gradients.lamb_update"], [1632, "ivy.functional.ivy.gradients.lamb_update"]], "lars_update() (in module ivy.functional.ivy.gradients)": [[1612, "ivy.functional.ivy.gradients.lars_update"], [1633, "ivy.functional.ivy.gradients.lars_update"], [1636, "ivy.functional.ivy.gradients.lars_update"]], "optimizer_update() (in module ivy.functional.ivy.gradients)": [[1612, "ivy.functional.ivy.gradients.optimizer_update"], [1637, "ivy.functional.ivy.gradients.optimizer_update"], [1640, "ivy.functional.ivy.gradients.optimizer_update"]], "set_with_grads() (in module ivy.functional.ivy.gradients)": [[1612, "ivy.functional.ivy.gradients.set_with_grads"], [1641, "ivy.functional.ivy.gradients.set_with_grads"]], "stop_gradient() (in module ivy.functional.ivy.gradients)": [[1612, "ivy.functional.ivy.gradients.stop_gradient"], [1642, "ivy.functional.ivy.gradients.stop_gradient"], [1646, "ivy.functional.ivy.gradients.stop_gradient"]], "unset_with_grads() (in module ivy.functional.ivy.gradients)": [[1612, "ivy.functional.ivy.gradients.unset_with_grads"], [1647, "ivy.functional.ivy.gradients.unset_with_grads"]], "value_and_grad() (in module ivy.functional.ivy.gradients)": [[1612, "ivy.functional.ivy.gradients.value_and_grad"], [1648, "ivy.functional.ivy.gradients.value_and_grad"]], "with_grads() (in module ivy.functional.ivy.gradients)": [[1612, "ivy.functional.ivy.gradients.with_grads"], [1649, "ivy.functional.ivy.gradients.with_grads"]], "adam_step() (in module ivy.array.array_methods)": [[1614, "ivy.array.array_methods.adam_step"], [1615, "ivy.array.array_methods.adam_step"]], "adam_step() (in module ivy.container.container_methods)": [[1614, "ivy.container.container_methods.adam_step"], [1616, "ivy.container.container_methods.adam_step"]], "adam_update() (in module ivy.array.array_methods)": [[1618, "ivy.array.array_methods.adam_update"], [1619, "ivy.array.array_methods.adam_update"]], "adam_update() (in module ivy.container.container_methods)": [[1618, "ivy.container.container_methods.adam_update"], [1620, "ivy.container.container_methods.adam_update"]], "gradient_descent_update() (in module ivy.array.array_methods)": [[1624, "ivy.array.array_methods.gradient_descent_update"], [1625, "ivy.array.array_methods.gradient_descent_update"]], "gradient_descent_update() (in module ivy.container.container_methods)": [[1624, "ivy.container.container_methods.gradient_descent_update"], [1626, "ivy.container.container_methods.gradient_descent_update"]], "lamb_update() (in module ivy.array.array_methods)": [[1629, "ivy.array.array_methods.lamb_update"], [1630, "ivy.array.array_methods.lamb_update"]], "lamb_update() (in module ivy.container.container_methods)": [[1629, "ivy.container.container_methods.lamb_update"], [1631, "ivy.container.container_methods.lamb_update"]], "lars_update() (in module ivy.array.array_methods)": [[1633, "ivy.array.array_methods.lars_update"], [1634, "ivy.array.array_methods.lars_update"]], "lars_update() (in module ivy.container.container_methods)": [[1633, "ivy.container.container_methods.lars_update"], [1635, "ivy.container.container_methods.lars_update"]], "optimizer_update() (in module ivy.array.array_methods)": [[1637, "ivy.array.array_methods.optimizer_update"], [1638, "ivy.array.array_methods.optimizer_update"]], "optimizer_update() (in module ivy.container.container_methods)": [[1637, "ivy.container.container_methods.optimizer_update"], [1639, "ivy.container.container_methods.optimizer_update"]], "static_stop_gradient() (in module ivy.container.container_methods)": [[1642, "ivy.container.container_methods.static_stop_gradient"], [1643, "ivy.container.container_methods.static_stop_gradient"]], "stop_gradient() (in module ivy.array.array_methods)": [[1642, "ivy.array.array_methods.stop_gradient"], [1644, "ivy.array.array_methods.stop_gradient"]], "stop_gradient() (in module ivy.container.container_methods)": [[1642, "ivy.container.container_methods.stop_gradient"], [1645, "ivy.container.container_methods.stop_gradient"]], "conv() (in module ivy.functional.ivy.layers)": [[1650, "ivy.functional.ivy.layers.conv"], [1651, "ivy.functional.ivy.layers.conv"]], "conv1d() (in module ivy.functional.ivy.layers)": [[1650, "ivy.functional.ivy.layers.conv1d"], [1652, "ivy.functional.ivy.layers.conv1d"], [1655, "ivy.functional.ivy.layers.conv1d"]], "conv1d_transpose() (in module ivy.functional.ivy.layers)": [[1650, "ivy.functional.ivy.layers.conv1d_transpose"], [1657, "ivy.functional.ivy.layers.conv1d_transpose"], [1660, "ivy.functional.ivy.layers.conv1d_transpose"]], "conv2d() (in module ivy.functional.ivy.layers)": [[1650, "ivy.functional.ivy.layers.conv2d"], [1662, "ivy.functional.ivy.layers.conv2d"], [1665, "ivy.functional.ivy.layers.conv2d"]], "conv2d_transpose() (in module ivy.functional.ivy.layers)": [[1650, "ivy.functional.ivy.layers.conv2d_transpose"], [1667, "ivy.functional.ivy.layers.conv2d_transpose"], [1670, "ivy.functional.ivy.layers.conv2d_transpose"]], "conv3d() (in module ivy.functional.ivy.layers)": [[1650, "ivy.functional.ivy.layers.conv3d"], [1672, "ivy.functional.ivy.layers.conv3d"], [1675, "ivy.functional.ivy.layers.conv3d"]], "conv3d_transpose() (in module ivy.functional.ivy.layers)": [[1650, "ivy.functional.ivy.layers.conv3d_transpose"], [1677, "ivy.functional.ivy.layers.conv3d_transpose"], [1680, "ivy.functional.ivy.layers.conv3d_transpose"]], "conv_general_dilated() (in module ivy.functional.ivy.layers)": [[1650, "ivy.functional.ivy.layers.conv_general_dilated"], [1682, "ivy.functional.ivy.layers.conv_general_dilated"]], "conv_general_transpose() (in module ivy.functional.ivy.layers)": [[1650, "ivy.functional.ivy.layers.conv_general_transpose"], [1683, "ivy.functional.ivy.layers.conv_general_transpose"]], "depthwise_conv2d() (in module ivy.functional.ivy.layers)": [[1650, "ivy.functional.ivy.layers.depthwise_conv2d"], [1684, "ivy.functional.ivy.layers.depthwise_conv2d"], [1687, "ivy.functional.ivy.layers.depthwise_conv2d"]], "dropout() (in module ivy.functional.ivy.layers)": [[1650, "ivy.functional.ivy.layers.dropout"], [1689, "ivy.functional.ivy.layers.dropout"], [1692, "ivy.functional.ivy.layers.dropout"]], "ivy.functional.ivy.layers": [[1650, "module-ivy.functional.ivy.layers"]], "linear() (in module ivy.functional.ivy.layers)": [[1650, "ivy.functional.ivy.layers.linear"], [1694, "ivy.functional.ivy.layers.linear"], [1697, "ivy.functional.ivy.layers.linear"]], "lstm_update() (in module ivy.functional.ivy.layers)": [[1650, "ivy.functional.ivy.layers.lstm_update"], [1699, "ivy.functional.ivy.layers.lstm_update"], [1702, "ivy.functional.ivy.layers.lstm_update"]], "multi_head_attention() (in module ivy.functional.ivy.layers)": [[1650, "ivy.functional.ivy.layers.multi_head_attention"], [1704, "ivy.functional.ivy.layers.multi_head_attention"], [1707, "ivy.functional.ivy.layers.multi_head_attention"]], "scaled_dot_product_attention() (in module ivy.functional.ivy.layers)": [[1650, "ivy.functional.ivy.layers.scaled_dot_product_attention"], [1709, "ivy.functional.ivy.layers.scaled_dot_product_attention"], [1712, "ivy.functional.ivy.layers.scaled_dot_product_attention"]], "conv1d() (in module ivy.array.array_methods)": [[1652, "ivy.array.array_methods.conv1d"], [1653, "ivy.array.array_methods.conv1d"]], "conv1d() (in module ivy.container.container_methods)": [[1652, "ivy.container.container_methods.conv1d"], [1654, "ivy.container.container_methods.conv1d"]], "static_conv1d() (in module ivy.container.container_methods)": [[1652, "ivy.container.container_methods.static_conv1d"], [1656, "ivy.container.container_methods.static_conv1d"]], "conv1d_transpose() (in module ivy.array.array_methods)": [[1657, "ivy.array.array_methods.conv1d_transpose"], [1658, "ivy.array.array_methods.conv1d_transpose"]], "conv1d_transpose() (in module ivy.container.container_methods)": [[1657, "ivy.container.container_methods.conv1d_transpose"], [1659, "ivy.container.container_methods.conv1d_transpose"]], "static_conv1d_transpose() (in module ivy.container.container_methods)": [[1657, "ivy.container.container_methods.static_conv1d_transpose"], [1661, "ivy.container.container_methods.static_conv1d_transpose"]], "conv2d() (in module ivy.array.array_methods)": [[1662, "ivy.array.array_methods.conv2d"], [1663, "ivy.array.array_methods.conv2d"]], "conv2d() (in module ivy.container.container_methods)": [[1662, "ivy.container.container_methods.conv2d"], [1664, "ivy.container.container_methods.conv2d"]], "static_conv2d() (in module ivy.container.container_methods)": [[1662, "ivy.container.container_methods.static_conv2d"], [1666, "ivy.container.container_methods.static_conv2d"]], "conv2d_transpose() (in module ivy.array.array_methods)": [[1667, "ivy.array.array_methods.conv2d_transpose"], [1668, "ivy.array.array_methods.conv2d_transpose"]], "conv2d_transpose() (in module ivy.container.container_methods)": [[1667, "ivy.container.container_methods.conv2d_transpose"], [1669, "ivy.container.container_methods.conv2d_transpose"]], "static_conv2d_transpose() (in module ivy.container.container_methods)": [[1667, "ivy.container.container_methods.static_conv2d_transpose"], [1671, "ivy.container.container_methods.static_conv2d_transpose"]], "conv3d() (in module ivy.array.array_methods)": [[1672, "ivy.array.array_methods.conv3d"], [1673, "ivy.array.array_methods.conv3d"]], "conv3d() (in module ivy.container.container_methods)": [[1672, "ivy.container.container_methods.conv3d"], [1674, "ivy.container.container_methods.conv3d"]], "static_conv3d() (in module ivy.container.container_methods)": [[1672, "ivy.container.container_methods.static_conv3d"], [1676, "ivy.container.container_methods.static_conv3d"]], "conv3d_transpose() (in module ivy.array.array_methods)": [[1677, "ivy.array.array_methods.conv3d_transpose"], [1678, "ivy.array.array_methods.conv3d_transpose"]], "conv3d_transpose() (in module ivy.container.container_methods)": [[1677, "ivy.container.container_methods.conv3d_transpose"], [1679, "ivy.container.container_methods.conv3d_transpose"]], "static_conv3d_transpose() (in module ivy.container.container_methods)": [[1677, "ivy.container.container_methods.static_conv3d_transpose"], [1681, "ivy.container.container_methods.static_conv3d_transpose"]], "depthwise_conv2d() (in module ivy.array.array_methods)": [[1684, "ivy.array.array_methods.depthwise_conv2d"], [1685, "ivy.array.array_methods.depthwise_conv2d"]], "depthwise_conv2d() (in module ivy.container.container_methods)": [[1684, "ivy.container.container_methods.depthwise_conv2d"], [1686, "ivy.container.container_methods.depthwise_conv2d"]], "static_depthwise_conv2d() (in module ivy.container.container_methods)": [[1684, "ivy.container.container_methods.static_depthwise_conv2d"], [1688, "ivy.container.container_methods.static_depthwise_conv2d"]], "dropout() (in module ivy.array.array_methods)": [[1689, "ivy.array.array_methods.dropout"], [1690, "ivy.array.array_methods.dropout"]], "dropout() (in module ivy.container.container_methods)": [[1689, "ivy.container.container_methods.dropout"], [1691, "ivy.container.container_methods.dropout"]], "static_dropout() (in module ivy.container.container_methods)": [[1689, "ivy.container.container_methods.static_dropout"], [1693, "ivy.container.container_methods.static_dropout"]], "linear() (in module ivy.array.array_methods)": [[1694, "ivy.array.array_methods.linear"], [1695, "ivy.array.array_methods.linear"]], "linear() (in module ivy.container.container_methods)": [[1694, "ivy.container.container_methods.linear"], [1696, "ivy.container.container_methods.linear"]], "static_linear() (in module ivy.container.container_methods)": [[1694, "ivy.container.container_methods.static_linear"], [1698, "ivy.container.container_methods.static_linear"]], "lstm_update() (in module ivy.array.array_methods)": [[1699, "ivy.array.array_methods.lstm_update"], [1700, "ivy.array.array_methods.lstm_update"]], "lstm_update() (in module ivy.container.container_methods)": [[1699, "ivy.container.container_methods.lstm_update"], [1701, "ivy.container.container_methods.lstm_update"]], "static_lstm_update() (in module ivy.container.container_methods)": [[1699, "ivy.container.container_methods.static_lstm_update"], [1703, "ivy.container.container_methods.static_lstm_update"]], "multi_head_attention() (in module ivy.array.array_methods)": [[1704, "ivy.array.array_methods.multi_head_attention"], [1705, "ivy.array.array_methods.multi_head_attention"]], "multi_head_attention() (in module ivy.container.container_methods)": [[1704, "ivy.container.container_methods.multi_head_attention"], [1706, "ivy.container.container_methods.multi_head_attention"]], "static_multi_head_attention() (in module ivy.container.container_methods)": [[1704, "ivy.container.container_methods.static_multi_head_attention"], [1708, "ivy.container.container_methods.static_multi_head_attention"]], "scaled_dot_product_attention() (in module ivy.array.array_methods)": [[1709, "ivy.array.array_methods.scaled_dot_product_attention"], [1710, "ivy.array.array_methods.scaled_dot_product_attention"]], "scaled_dot_product_attention() (in module ivy.container.container_methods)": [[1709, "ivy.container.container_methods.scaled_dot_product_attention"], [1711, "ivy.container.container_methods.scaled_dot_product_attention"]], "static_scaled_dot_product_attention() (in module ivy.container.container_methods)": [[1709, "ivy.container.container_methods.static_scaled_dot_product_attention"], [1713, "ivy.container.container_methods.static_scaled_dot_product_attention"]], "cholesky() (in module ivy.functional.ivy.linear_algebra)": [[1714, "ivy.functional.ivy.linear_algebra.cholesky"], [1715, "ivy.functional.ivy.linear_algebra.cholesky"], [1718, "ivy.functional.ivy.linear_algebra.cholesky"]], "cross() (in module ivy.functional.ivy.linear_algebra)": [[1714, "ivy.functional.ivy.linear_algebra.cross"], [1720, "ivy.functional.ivy.linear_algebra.cross"], [1723, "ivy.functional.ivy.linear_algebra.cross"]], "det() (in module ivy.functional.ivy.linear_algebra)": [[1714, "ivy.functional.ivy.linear_algebra.det"], [1725, "ivy.functional.ivy.linear_algebra.det"], [1728, "ivy.functional.ivy.linear_algebra.det"]], "diag() (in module ivy.functional.ivy.linear_algebra)": [[1714, "ivy.functional.ivy.linear_algebra.diag"], [1730, "ivy.functional.ivy.linear_algebra.diag"], [1733, "ivy.functional.ivy.linear_algebra.diag"]], "diagonal() (in module ivy.functional.ivy.linear_algebra)": [[1714, "ivy.functional.ivy.linear_algebra.diagonal"], [1735, "ivy.functional.ivy.linear_algebra.diagonal"], [1738, "ivy.functional.ivy.linear_algebra.diagonal"]], "eig() (in module ivy.functional.ivy.linear_algebra)": [[1714, "ivy.functional.ivy.linear_algebra.eig"], [1740, "ivy.functional.ivy.linear_algebra.eig"]], "eigh() (in module ivy.functional.ivy.linear_algebra)": [[1714, "ivy.functional.ivy.linear_algebra.eigh"], [1741, "ivy.functional.ivy.linear_algebra.eigh"], [1744, "ivy.functional.ivy.linear_algebra.eigh"]], "eigvalsh() (in module ivy.functional.ivy.linear_algebra)": [[1714, "ivy.functional.ivy.linear_algebra.eigvalsh"], [1746, "ivy.functional.ivy.linear_algebra.eigvalsh"], [1749, "ivy.functional.ivy.linear_algebra.eigvalsh"]], "inner() (in module ivy.functional.ivy.linear_algebra)": [[1714, "ivy.functional.ivy.linear_algebra.inner"], [1751, "ivy.functional.ivy.linear_algebra.inner"], [1754, "ivy.functional.ivy.linear_algebra.inner"]], "inv() (in module ivy.functional.ivy.linear_algebra)": [[1714, "ivy.functional.ivy.linear_algebra.inv"], [1756, "ivy.functional.ivy.linear_algebra.inv"], [1759, "ivy.functional.ivy.linear_algebra.inv"]], "ivy.functional.ivy.linear_algebra": [[1714, "module-ivy.functional.ivy.linear_algebra"]], "matmul() (in module ivy.functional.ivy.linear_algebra)": [[1714, "ivy.functional.ivy.linear_algebra.matmul"], [1761, "ivy.functional.ivy.linear_algebra.matmul"], [1764, "ivy.functional.ivy.linear_algebra.matmul"]], "matrix_norm() (in module ivy.functional.ivy.linear_algebra)": [[1714, "ivy.functional.ivy.linear_algebra.matrix_norm"], [1766, "ivy.functional.ivy.linear_algebra.matrix_norm"], [1769, "ivy.functional.ivy.linear_algebra.matrix_norm"]], "matrix_power() (in module ivy.functional.ivy.linear_algebra)": [[1714, "ivy.functional.ivy.linear_algebra.matrix_power"], [1771, "ivy.functional.ivy.linear_algebra.matrix_power"], [1774, "ivy.functional.ivy.linear_algebra.matrix_power"]], "matrix_rank() (in module ivy.functional.ivy.linear_algebra)": [[1714, "ivy.functional.ivy.linear_algebra.matrix_rank"], [1776, "ivy.functional.ivy.linear_algebra.matrix_rank"], [1779, "ivy.functional.ivy.linear_algebra.matrix_rank"]], "matrix_transpose() (in module ivy.functional.ivy.linear_algebra)": [[1714, "ivy.functional.ivy.linear_algebra.matrix_transpose"], [1781, "ivy.functional.ivy.linear_algebra.matrix_transpose"], [1784, "ivy.functional.ivy.linear_algebra.matrix_transpose"]], "outer() (in module ivy.functional.ivy.linear_algebra)": [[1714, "ivy.functional.ivy.linear_algebra.outer"], [1786, "ivy.functional.ivy.linear_algebra.outer"], [1789, "ivy.functional.ivy.linear_algebra.outer"]], "pinv() (in module ivy.functional.ivy.linear_algebra)": [[1714, "ivy.functional.ivy.linear_algebra.pinv"], [1791, "ivy.functional.ivy.linear_algebra.pinv"], [1794, "ivy.functional.ivy.linear_algebra.pinv"]], "qr() (in module ivy.functional.ivy.linear_algebra)": [[1714, "ivy.functional.ivy.linear_algebra.qr"], [1796, "ivy.functional.ivy.linear_algebra.qr"], [1799, "ivy.functional.ivy.linear_algebra.qr"]], "slogdet() (in module ivy.functional.ivy.linear_algebra)": [[1714, "ivy.functional.ivy.linear_algebra.slogdet"], [1801, "ivy.functional.ivy.linear_algebra.slogdet"], [1804, "ivy.functional.ivy.linear_algebra.slogdet"]], "solve() (in module ivy.functional.ivy.linear_algebra)": [[1714, "ivy.functional.ivy.linear_algebra.solve"], [1806, "ivy.functional.ivy.linear_algebra.solve"], [1809, "ivy.functional.ivy.linear_algebra.solve"]], "svd() (in module ivy.functional.ivy.linear_algebra)": [[1714, "ivy.functional.ivy.linear_algebra.svd"], [1811, "ivy.functional.ivy.linear_algebra.svd"], [1815, "ivy.functional.ivy.linear_algebra.svd"]], "svdvals() (in module ivy.functional.ivy.linear_algebra)": [[1714, "ivy.functional.ivy.linear_algebra.svdvals"], [1816, "ivy.functional.ivy.linear_algebra.svdvals"], [1820, "ivy.functional.ivy.linear_algebra.svdvals"]], "tensordot() (in module ivy.functional.ivy.linear_algebra)": [[1714, "ivy.functional.ivy.linear_algebra.tensordot"], [1821, "ivy.functional.ivy.linear_algebra.tensordot"], [1824, "ivy.functional.ivy.linear_algebra.tensordot"]], "tensorsolve() (in module ivy.functional.ivy.linear_algebra)": [[1714, "ivy.functional.ivy.linear_algebra.tensorsolve"], [1825, "ivy.functional.ivy.linear_algebra.tensorsolve"], [1828, "ivy.functional.ivy.linear_algebra.tensorsolve"]], "trace() (in module ivy.functional.ivy.linear_algebra)": [[1714, "ivy.functional.ivy.linear_algebra.trace"], [1829, "ivy.functional.ivy.linear_algebra.trace"], [1833, "ivy.functional.ivy.linear_algebra.trace"]], "vander() (in module ivy.functional.ivy.linear_algebra)": [[1714, "ivy.functional.ivy.linear_algebra.vander"], [1834, "ivy.functional.ivy.linear_algebra.vander"], [1838, "ivy.functional.ivy.linear_algebra.vander"]], "vecdot() (in module ivy.functional.ivy.linear_algebra)": [[1714, "ivy.functional.ivy.linear_algebra.vecdot"], [1839, "ivy.functional.ivy.linear_algebra.vecdot"], [1843, "ivy.functional.ivy.linear_algebra.vecdot"]], "vector_norm() (in module ivy.functional.ivy.linear_algebra)": [[1714, "ivy.functional.ivy.linear_algebra.vector_norm"], [1844, "ivy.functional.ivy.linear_algebra.vector_norm"], [1848, "ivy.functional.ivy.linear_algebra.vector_norm"]], "vector_to_skew_symmetric_matrix() (in module ivy.functional.ivy.linear_algebra)": [[1714, "ivy.functional.ivy.linear_algebra.vector_to_skew_symmetric_matrix"], [1849, "ivy.functional.ivy.linear_algebra.vector_to_skew_symmetric_matrix"], [1853, "ivy.functional.ivy.linear_algebra.vector_to_skew_symmetric_matrix"]], "cholesky() (in module ivy.array.array_methods)": [[1715, "ivy.array.array_methods.cholesky"], [1716, "ivy.array.array_methods.cholesky"]], "cholesky() (in module ivy.container.container_methods)": [[1715, "ivy.container.container_methods.cholesky"], [1717, "ivy.container.container_methods.cholesky"]], "static_cholesky() (in module ivy.container.container_methods)": [[1715, "ivy.container.container_methods.static_cholesky"], [1719, "ivy.container.container_methods.static_cholesky"]], "cross() (in module ivy.array.array_methods)": [[1720, "ivy.array.array_methods.cross"], [1721, "ivy.array.array_methods.cross"]], "cross() (in module ivy.container.container_methods)": [[1720, "ivy.container.container_methods.cross"], [1722, "ivy.container.container_methods.cross"]], "static_cross() (in module ivy.container.container_methods)": [[1720, "ivy.container.container_methods.static_cross"], [1724, "ivy.container.container_methods.static_cross"]], "det() (in module ivy.array.array_methods)": [[1725, "ivy.array.array_methods.det"], [1726, "ivy.array.array_methods.det"]], "det() (in module ivy.container.container_methods)": [[1725, "ivy.container.container_methods.det"], [1727, "ivy.container.container_methods.det"]], "static_det() (in module ivy.container.container_methods)": [[1725, "ivy.container.container_methods.static_det"], [1729, "ivy.container.container_methods.static_det"]], "diag() (in module ivy.array.array_methods)": [[1730, "ivy.array.array_methods.diag"], [1731, "ivy.array.array_methods.diag"]], "diag() (in module ivy.container.container_methods)": [[1730, "ivy.container.container_methods.diag"], [1732, "ivy.container.container_methods.diag"]], "static_diag() (in module ivy.container.container_methods)": [[1730, "ivy.container.container_methods.static_diag"], [1734, "ivy.container.container_methods.static_diag"]], "diagonal() (in module ivy.array.array_methods)": [[1735, "ivy.array.array_methods.diagonal"], [1736, "ivy.array.array_methods.diagonal"]], "diagonal() (in module ivy.container.container_methods)": [[1735, "ivy.container.container_methods.diagonal"], [1737, "ivy.container.container_methods.diagonal"]], "static_diagonal() (in module ivy.container.container_methods)": [[1735, "ivy.container.container_methods.static_diagonal"], [1739, "ivy.container.container_methods.static_diagonal"]], "eigh() (in module ivy.array.array_methods)": [[1741, "ivy.array.array_methods.eigh"], [1742, "ivy.array.array_methods.eigh"]], "eigh() (in module ivy.container.container_methods)": [[1741, "ivy.container.container_methods.eigh"], [1743, "ivy.container.container_methods.eigh"]], "static_eigh() (in module ivy.container.container_methods)": [[1741, "ivy.container.container_methods.static_eigh"], [1745, "ivy.container.container_methods.static_eigh"]], "eigvalsh() (in module ivy.array.array_methods)": [[1746, "ivy.array.array_methods.eigvalsh"], [1747, "ivy.array.array_methods.eigvalsh"]], "eigvalsh() (in module ivy.container.container_methods)": [[1746, "ivy.container.container_methods.eigvalsh"], [1748, "ivy.container.container_methods.eigvalsh"]], "static_eigvalsh() (in module ivy.container.container_methods)": [[1746, "ivy.container.container_methods.static_eigvalsh"], [1750, "ivy.container.container_methods.static_eigvalsh"]], "inner() (in module ivy.array.array_methods)": [[1751, "ivy.array.array_methods.inner"], [1752, "ivy.array.array_methods.inner"]], "inner() (in module ivy.container.container_methods)": [[1751, "ivy.container.container_methods.inner"], [1753, "ivy.container.container_methods.inner"]], "static_inner() (in module ivy.container.container_methods)": [[1751, "ivy.container.container_methods.static_inner"], [1755, "ivy.container.container_methods.static_inner"]], "inv() (in module ivy.array.array_methods)": [[1756, "ivy.array.array_methods.inv"], [1757, "ivy.array.array_methods.inv"]], "inv() (in module ivy.container.container_methods)": [[1756, "ivy.container.container_methods.inv"], [1758, "ivy.container.container_methods.inv"]], "static_inv() (in module ivy.container.container_methods)": [[1756, "ivy.container.container_methods.static_inv"], [1760, "ivy.container.container_methods.static_inv"]], "matmul() (in module ivy.array.array_methods)": [[1761, "ivy.array.array_methods.matmul"], [1762, "ivy.array.array_methods.matmul"]], "matmul() (in module ivy.container.container_methods)": [[1761, "ivy.container.container_methods.matmul"], [1763, "ivy.container.container_methods.matmul"]], "static_matmul() (in module ivy.container.container_methods)": [[1761, "ivy.container.container_methods.static_matmul"], [1765, "ivy.container.container_methods.static_matmul"]], "matrix_norm() (in module ivy.array.array_methods)": [[1766, "ivy.array.array_methods.matrix_norm"], [1767, "ivy.array.array_methods.matrix_norm"]], "matrix_norm() (in module ivy.container.container_methods)": [[1766, "ivy.container.container_methods.matrix_norm"], [1768, "ivy.container.container_methods.matrix_norm"]], "static_matrix_norm() (in module ivy.container.container_methods)": [[1766, "ivy.container.container_methods.static_matrix_norm"], [1770, "ivy.container.container_methods.static_matrix_norm"]], "matrix_power() (in module ivy.array.array_methods)": [[1771, "ivy.array.array_methods.matrix_power"], [1772, "ivy.array.array_methods.matrix_power"]], "matrix_power() (in module ivy.container.container_methods)": [[1771, "ivy.container.container_methods.matrix_power"], [1773, "ivy.container.container_methods.matrix_power"]], "static_matrix_power() (in module ivy.container.container_methods)": [[1771, "ivy.container.container_methods.static_matrix_power"], [1775, "ivy.container.container_methods.static_matrix_power"]], "matrix_rank() (in module ivy.array.array_methods)": [[1776, "ivy.array.array_methods.matrix_rank"], [1777, "ivy.array.array_methods.matrix_rank"]], "matrix_rank() (in module ivy.container.container_methods)": [[1776, "ivy.container.container_methods.matrix_rank"], [1778, "ivy.container.container_methods.matrix_rank"]], "static_matrix_rank() (in module ivy.container.container_methods)": [[1776, "ivy.container.container_methods.static_matrix_rank"], [1780, "ivy.container.container_methods.static_matrix_rank"]], "matrix_transpose() (in module ivy.array.array_methods)": [[1781, "ivy.array.array_methods.matrix_transpose"], [1782, "ivy.array.array_methods.matrix_transpose"]], "matrix_transpose() (in module ivy.container.container_methods)": [[1781, "ivy.container.container_methods.matrix_transpose"], [1783, "ivy.container.container_methods.matrix_transpose"]], "static_matrix_transpose() (in module ivy.container.container_methods)": [[1781, "ivy.container.container_methods.static_matrix_transpose"], [1785, "ivy.container.container_methods.static_matrix_transpose"]], "outer() (in module ivy.array.array_methods)": [[1786, "ivy.array.array_methods.outer"], [1787, "ivy.array.array_methods.outer"]], "outer() (in module ivy.container.container_methods)": [[1786, "ivy.container.container_methods.outer"], [1788, "ivy.container.container_methods.outer"]], "static_outer() (in module ivy.container.container_methods)": [[1786, "ivy.container.container_methods.static_outer"], [1790, "ivy.container.container_methods.static_outer"]], "pinv() (in module ivy.array.array_methods)": [[1791, "ivy.array.array_methods.pinv"], [1792, "ivy.array.array_methods.pinv"]], "pinv() (in module ivy.container.container_methods)": [[1791, "ivy.container.container_methods.pinv"], [1793, "ivy.container.container_methods.pinv"]], "static_pinv() (in module ivy.container.container_methods)": [[1791, "ivy.container.container_methods.static_pinv"], [1795, "ivy.container.container_methods.static_pinv"]], "qr() (in module ivy.array.array_methods)": [[1796, "ivy.array.array_methods.qr"], [1797, "ivy.array.array_methods.qr"]], "qr() (in module ivy.container.container_methods)": [[1796, "ivy.container.container_methods.qr"], [1798, "ivy.container.container_methods.qr"]], "static_qr() (in module ivy.container.container_methods)": [[1796, "ivy.container.container_methods.static_qr"], [1800, "ivy.container.container_methods.static_qr"]], "slogdet() (in module ivy.array.array_methods)": [[1801, "ivy.array.array_methods.slogdet"], [1802, "ivy.array.array_methods.slogdet"]], "slogdet() (in module ivy.container.container_methods)": [[1801, "ivy.container.container_methods.slogdet"], [1803, "ivy.container.container_methods.slogdet"]], "static_slogdet() (in module ivy.container.container_methods)": [[1801, "ivy.container.container_methods.static_slogdet"], [1805, "ivy.container.container_methods.static_slogdet"]], "solve() (in module ivy.array.array_methods)": [[1806, "ivy.array.array_methods.solve"], [1807, "ivy.array.array_methods.solve"]], "solve() (in module ivy.container.container_methods)": [[1806, "ivy.container.container_methods.solve"], [1808, "ivy.container.container_methods.solve"]], "static_solve() (in module ivy.container.container_methods)": [[1806, "ivy.container.container_methods.static_solve"], [1810, "ivy.container.container_methods.static_solve"]], "static_svd() (in module ivy.container.container_methods)": [[1811, "ivy.container.container_methods.static_svd"], [1812, "ivy.container.container_methods.static_svd"]], "svd() (in module ivy.array.array_methods)": [[1811, "ivy.array.array_methods.svd"], [1813, "ivy.array.array_methods.svd"]], "svd() (in module ivy.container.container_methods)": [[1811, "ivy.container.container_methods.svd"], [1814, "ivy.container.container_methods.svd"]], "static_svdvals() (in module ivy.container.container_methods)": [[1816, "ivy.container.container_methods.static_svdvals"], [1817, "ivy.container.container_methods.static_svdvals"]], "svdvals() (in module ivy.array.array_methods)": [[1816, "ivy.array.array_methods.svdvals"], [1818, "ivy.array.array_methods.svdvals"]], "svdvals() (in module ivy.container.container_methods)": [[1816, "ivy.container.container_methods.svdvals"], [1819, "ivy.container.container_methods.svdvals"]], "static_tensordot() (in module ivy.container.container_methods)": [[1821, "ivy.container.container_methods.static_tensordot"], [1822, "ivy.container.container_methods.static_tensordot"]], "tensordot() (in module ivy.container.container_methods)": [[1821, "ivy.container.container_methods.tensordot"], [1823, "ivy.container.container_methods.tensordot"]], "tensorsolve() (in module ivy.array.array_methods)": [[1825, "ivy.array.array_methods.tensorsolve"], [1826, "ivy.array.array_methods.tensorsolve"]], "tensorsolve() (in module ivy.container.container_methods)": [[1825, "ivy.container.container_methods.tensorsolve"], [1827, "ivy.container.container_methods.tensorsolve"]], "static_trace() (in module ivy.container.container_methods)": [[1829, "ivy.container.container_methods.static_trace"], [1830, "ivy.container.container_methods.static_trace"]], "trace() (in module ivy.array.array_methods)": [[1829, "ivy.array.array_methods.trace"], [1831, "ivy.array.array_methods.trace"]], "trace() (in module ivy.container.container_methods)": [[1829, "ivy.container.container_methods.trace"], [1832, "ivy.container.container_methods.trace"]], "static_vander() (in module ivy.container.container_methods)": [[1834, "ivy.container.container_methods.static_vander"], [1835, "ivy.container.container_methods.static_vander"]], "vander() (in module ivy.array.array_methods)": [[1834, "ivy.array.array_methods.vander"], [1836, "ivy.array.array_methods.vander"]], "vander() (in module ivy.container.container_methods)": [[1834, "ivy.container.container_methods.vander"], [1837, "ivy.container.container_methods.vander"]], "static_vecdot() (in module ivy.container.container_methods)": [[1839, "ivy.container.container_methods.static_vecdot"], [1840, "ivy.container.container_methods.static_vecdot"]], "vecdot() (in module ivy.array.array_methods)": [[1839, "ivy.array.array_methods.vecdot"], [1841, "ivy.array.array_methods.vecdot"]], "vecdot() (in module ivy.container.container_methods)": [[1839, "ivy.container.container_methods.vecdot"], [1842, "ivy.container.container_methods.vecdot"]], "static_vector_norm() (in module ivy.container.container_methods)": [[1844, "ivy.container.container_methods.static_vector_norm"], [1845, "ivy.container.container_methods.static_vector_norm"]], "vector_norm() (in module ivy.array.array_methods)": [[1844, "ivy.array.array_methods.vector_norm"], [1846, "ivy.array.array_methods.vector_norm"]], "vector_norm() (in module ivy.container.container_methods)": [[1844, "ivy.container.container_methods.vector_norm"], [1847, "ivy.container.container_methods.vector_norm"]], "static_vector_to_skew_symmetric_matrix() (in module ivy.container.container_methods)": [[1849, "ivy.container.container_methods.static_vector_to_skew_symmetric_matrix"], [1850, "ivy.container.container_methods.static_vector_to_skew_symmetric_matrix"]], "vector_to_skew_symmetric_matrix() (in module ivy.array.array_methods)": [[1849, "ivy.array.array_methods.vector_to_skew_symmetric_matrix"], [1851, "ivy.array.array_methods.vector_to_skew_symmetric_matrix"]], "vector_to_skew_symmetric_matrix() (in module ivy.container.container_methods)": [[1849, "ivy.container.container_methods.vector_to_skew_symmetric_matrix"], [1852, "ivy.container.container_methods.vector_to_skew_symmetric_matrix"]], "binary_cross_entropy() (in module ivy.functional.ivy.losses)": [[1854, "ivy.functional.ivy.losses.binary_cross_entropy"], [1855, "ivy.functional.ivy.losses.binary_cross_entropy"], [1858, "ivy.functional.ivy.losses.binary_cross_entropy"]], "cross_entropy() (in module ivy.functional.ivy.losses)": [[1854, "ivy.functional.ivy.losses.cross_entropy"], [1860, "ivy.functional.ivy.losses.cross_entropy"], [1863, "ivy.functional.ivy.losses.cross_entropy"]], "ivy.functional.ivy.losses": [[1854, "module-ivy.functional.ivy.losses"]], "sparse_cross_entropy() (in module ivy.functional.ivy.losses)": [[1854, "ivy.functional.ivy.losses.sparse_cross_entropy"], [1865, "ivy.functional.ivy.losses.sparse_cross_entropy"], [1868, "ivy.functional.ivy.losses.sparse_cross_entropy"]], "binary_cross_entropy() (in module ivy.array.array_methods)": [[1855, "ivy.array.array_methods.binary_cross_entropy"], [1856, "ivy.array.array_methods.binary_cross_entropy"]], "binary_cross_entropy() (in module ivy.container.container_methods)": [[1855, "ivy.container.container_methods.binary_cross_entropy"], [1857, "ivy.container.container_methods.binary_cross_entropy"]], "static_binary_cross_entropy() (in module ivy.container.container_methods)": [[1855, "ivy.container.container_methods.static_binary_cross_entropy"], [1859, "ivy.container.container_methods.static_binary_cross_entropy"]], "cross_entropy() (in module ivy.array.array_methods)": [[1860, "ivy.array.array_methods.cross_entropy"], [1861, "ivy.array.array_methods.cross_entropy"]], "cross_entropy() (in module ivy.container.container_methods)": [[1860, "ivy.container.container_methods.cross_entropy"], [1862, "ivy.container.container_methods.cross_entropy"]], "static_cross_entropy() (in module ivy.container.container_methods)": [[1860, "ivy.container.container_methods.static_cross_entropy"], [1864, "ivy.container.container_methods.static_cross_entropy"]], "sparse_cross_entropy() (in module ivy.array.array_methods)": [[1865, "ivy.array.array_methods.sparse_cross_entropy"], [1866, "ivy.array.array_methods.sparse_cross_entropy"]], "sparse_cross_entropy() (in module ivy.container.container_methods)": [[1865, "ivy.container.container_methods.sparse_cross_entropy"], [1867, "ivy.container.container_methods.sparse_cross_entropy"]], "static_sparse_cross_entropy() (in module ivy.container.container_methods)": [[1865, "ivy.container.container_methods.static_sparse_cross_entropy"], [1869, "ivy.container.container_methods.static_sparse_cross_entropy"]], "clip() (in module ivy.functional.ivy.manipulation)": [[1870, "ivy.functional.ivy.manipulation.clip"], [1871, "ivy.functional.ivy.manipulation.clip"], [1874, "ivy.functional.ivy.manipulation.clip"]], "concat() (in module ivy.functional.ivy.manipulation)": [[1870, "ivy.functional.ivy.manipulation.concat"], [1876, "ivy.functional.ivy.manipulation.concat"], [1879, "ivy.functional.ivy.manipulation.concat"]], "constant_pad() (in module ivy.functional.ivy.manipulation)": [[1870, "ivy.functional.ivy.manipulation.constant_pad"], [1881, "ivy.functional.ivy.manipulation.constant_pad"], [1884, "ivy.functional.ivy.manipulation.constant_pad"]], "expand_dims() (in module ivy.functional.ivy.manipulation)": [[1870, "ivy.functional.ivy.manipulation.expand_dims"], [1886, "ivy.functional.ivy.manipulation.expand_dims"], [1889, "ivy.functional.ivy.manipulation.expand_dims"]], "flip() (in module ivy.functional.ivy.manipulation)": [[1870, "ivy.functional.ivy.manipulation.flip"], [1891, "ivy.functional.ivy.manipulation.flip"], [1894, "ivy.functional.ivy.manipulation.flip"]], "ivy.functional.ivy.manipulation": [[1870, "module-ivy.functional.ivy.manipulation"]], "permute_dims() (in module ivy.functional.ivy.manipulation)": [[1870, "ivy.functional.ivy.manipulation.permute_dims"], [1896, "ivy.functional.ivy.manipulation.permute_dims"], [1899, "ivy.functional.ivy.manipulation.permute_dims"]], "repeat() (in module ivy.functional.ivy.manipulation)": [[1870, "ivy.functional.ivy.manipulation.repeat"], [1901, "ivy.functional.ivy.manipulation.repeat"], [1904, "ivy.functional.ivy.manipulation.repeat"]], "reshape() (in module ivy.functional.ivy.manipulation)": [[1870, "ivy.functional.ivy.manipulation.reshape"], [1906, "ivy.functional.ivy.manipulation.reshape"], [1909, "ivy.functional.ivy.manipulation.reshape"]], "roll() (in module ivy.functional.ivy.manipulation)": [[1870, "ivy.functional.ivy.manipulation.roll"], [1911, "ivy.functional.ivy.manipulation.roll"], [1914, "ivy.functional.ivy.manipulation.roll"]], "split() (in module ivy.functional.ivy.manipulation)": [[1870, "ivy.functional.ivy.manipulation.split"], [1916, "ivy.functional.ivy.manipulation.split"], [1919, "ivy.functional.ivy.manipulation.split"]], "squeeze() (in module ivy.functional.ivy.manipulation)": [[1870, "ivy.functional.ivy.manipulation.squeeze"], [1921, "ivy.functional.ivy.manipulation.squeeze"], [1924, "ivy.functional.ivy.manipulation.squeeze"]], "stack() (in module ivy.functional.ivy.manipulation)": [[1870, "ivy.functional.ivy.manipulation.stack"], [1926, "ivy.functional.ivy.manipulation.stack"], [1929, "ivy.functional.ivy.manipulation.stack"]], "swapaxes() (in module ivy.functional.ivy.manipulation)": [[1870, "ivy.functional.ivy.manipulation.swapaxes"], [1931, "ivy.functional.ivy.manipulation.swapaxes"], [1935, "ivy.functional.ivy.manipulation.swapaxes"]], "tile() (in module ivy.functional.ivy.manipulation)": [[1870, "ivy.functional.ivy.manipulation.tile"], [1936, "ivy.functional.ivy.manipulation.tile"], [1940, "ivy.functional.ivy.manipulation.tile"]], "unstack() (in module ivy.functional.ivy.manipulation)": [[1870, "ivy.functional.ivy.manipulation.unstack"], [1941, "ivy.functional.ivy.manipulation.unstack"], [1945, "ivy.functional.ivy.manipulation.unstack"]], "zero_pad() (in module ivy.functional.ivy.manipulation)": [[1870, "ivy.functional.ivy.manipulation.zero_pad"], [1946, "ivy.functional.ivy.manipulation.zero_pad"], [1950, "ivy.functional.ivy.manipulation.zero_pad"]], "clip() (in module ivy.array.array_methods)": [[1871, "ivy.array.array_methods.clip"], [1872, "ivy.array.array_methods.clip"]], "clip() (in module ivy.container.container_methods)": [[1871, "ivy.container.container_methods.clip"], [1873, "ivy.container.container_methods.clip"]], "static_clip() (in module ivy.container.container_methods)": [[1871, "ivy.container.container_methods.static_clip"], [1875, "ivy.container.container_methods.static_clip"]], "concat() (in module ivy.array.array_methods)": [[1876, "ivy.array.array_methods.concat"], [1877, "ivy.array.array_methods.concat"]], "concat() (in module ivy.container.container_methods)": [[1876, "ivy.container.container_methods.concat"], [1878, "ivy.container.container_methods.concat"]], "static_concat() (in module ivy.container.container_methods)": [[1876, "ivy.container.container_methods.static_concat"], [1880, "ivy.container.container_methods.static_concat"]], "constant_pad() (in module ivy.array.array_methods)": [[1881, "ivy.array.array_methods.constant_pad"], [1882, "ivy.array.array_methods.constant_pad"]], "constant_pad() (in module ivy.container.container_methods)": [[1881, "ivy.container.container_methods.constant_pad"], [1883, "ivy.container.container_methods.constant_pad"]], "static_constant_pad() (in module ivy.container.container_methods)": [[1881, "ivy.container.container_methods.static_constant_pad"], [1885, "ivy.container.container_methods.static_constant_pad"]], "expand_dims() (in module ivy.array.array_methods)": [[1886, "ivy.array.array_methods.expand_dims"], [1887, "ivy.array.array_methods.expand_dims"]], "expand_dims() (in module ivy.container.container_methods)": [[1886, "ivy.container.container_methods.expand_dims"], [1888, "ivy.container.container_methods.expand_dims"]], "static_expand_dims() (in module ivy.container.container_methods)": [[1886, "ivy.container.container_methods.static_expand_dims"], [1890, "ivy.container.container_methods.static_expand_dims"]], "flip() (in module ivy.array.array_methods)": [[1891, "ivy.array.array_methods.flip"], [1892, "ivy.array.array_methods.flip"]], "flip() (in module ivy.container.container_methods)": [[1891, "ivy.container.container_methods.flip"], [1893, "ivy.container.container_methods.flip"]], "static_flip() (in module ivy.container.container_methods)": [[1891, "ivy.container.container_methods.static_flip"], [1895, "ivy.container.container_methods.static_flip"]], "permute_dims() (in module ivy.array.array_methods)": [[1896, "ivy.array.array_methods.permute_dims"], [1897, "ivy.array.array_methods.permute_dims"]], "permute_dims() (in module ivy.container.container_methods)": [[1896, "ivy.container.container_methods.permute_dims"], [1898, "ivy.container.container_methods.permute_dims"]], "static_permute_dims() (in module ivy.container.container_methods)": [[1896, "ivy.container.container_methods.static_permute_dims"], [1900, "ivy.container.container_methods.static_permute_dims"]], "repeat() (in module ivy.array.array_methods)": [[1901, "ivy.array.array_methods.repeat"], [1902, "ivy.array.array_methods.repeat"]], "repeat() (in module ivy.container.container_methods)": [[1901, "ivy.container.container_methods.repeat"], [1903, "ivy.container.container_methods.repeat"]], "static_repeat() (in module ivy.container.container_methods)": [[1901, "ivy.container.container_methods.static_repeat"], [1905, "ivy.container.container_methods.static_repeat"]], "reshape() (in module ivy.array.array_methods)": [[1906, "ivy.array.array_methods.reshape"], [1907, "ivy.array.array_methods.reshape"]], "reshape() (in module ivy.container.container_methods)": [[1906, "ivy.container.container_methods.reshape"], [1908, "ivy.container.container_methods.reshape"]], "static_reshape() (in module ivy.container.container_methods)": [[1906, "ivy.container.container_methods.static_reshape"], [1910, "ivy.container.container_methods.static_reshape"]], "roll() (in module ivy.array.array_methods)": [[1911, "ivy.array.array_methods.roll"], [1912, "ivy.array.array_methods.roll"]], "roll() (in module ivy.container.container_methods)": [[1911, "ivy.container.container_methods.roll"], [1913, "ivy.container.container_methods.roll"]], "static_roll() (in module ivy.container.container_methods)": [[1911, "ivy.container.container_methods.static_roll"], [1915, "ivy.container.container_methods.static_roll"]], "split() (in module ivy.array.array_methods)": [[1916, "ivy.array.array_methods.split"], [1917, "ivy.array.array_methods.split"]], "split() (in module ivy.container.container_methods)": [[1916, "ivy.container.container_methods.split"], [1918, "ivy.container.container_methods.split"]], "static_split() (in module ivy.container.container_methods)": [[1916, "ivy.container.container_methods.static_split"], [1920, "ivy.container.container_methods.static_split"]], "squeeze() (in module ivy.array.array_methods)": [[1921, "ivy.array.array_methods.squeeze"], [1922, "ivy.array.array_methods.squeeze"]], "squeeze() (in module ivy.container.container_methods)": [[1921, "ivy.container.container_methods.squeeze"], [1923, "ivy.container.container_methods.squeeze"]], "static_squeeze() (in module ivy.container.container_methods)": [[1921, "ivy.container.container_methods.static_squeeze"], [1925, "ivy.container.container_methods.static_squeeze"]], "stack() (in module ivy.array.array_methods)": [[1926, "ivy.array.array_methods.stack"], [1927, "ivy.array.array_methods.stack"]], "stack() (in module ivy.container.container_methods)": [[1926, "ivy.container.container_methods.stack"], [1928, "ivy.container.container_methods.stack"]], "static_stack() (in module ivy.container.container_methods)": [[1926, "ivy.container.container_methods.static_stack"], [1930, "ivy.container.container_methods.static_stack"]], "static_swapaxes() (in module ivy.container.container_methods)": [[1931, "ivy.container.container_methods.static_swapaxes"], [1932, "ivy.container.container_methods.static_swapaxes"]], "swapaxes() (in module ivy.array.array_methods)": [[1931, "ivy.array.array_methods.swapaxes"], [1933, "ivy.array.array_methods.swapaxes"]], "swapaxes() (in module ivy.container.container_methods)": [[1931, "ivy.container.container_methods.swapaxes"], [1934, "ivy.container.container_methods.swapaxes"]], "static_tile() (in module ivy.container.container_methods)": [[1936, "ivy.container.container_methods.static_tile"], [1937, "ivy.container.container_methods.static_tile"]], "tile() (in module ivy.array.array_methods)": [[1936, "ivy.array.array_methods.tile"], [1938, "ivy.array.array_methods.tile"]], "tile() (in module ivy.container.container_methods)": [[1936, "ivy.container.container_methods.tile"], [1939, "ivy.container.container_methods.tile"]], "static_unstack() (in module ivy.container.container_methods)": [[1941, "ivy.container.container_methods.static_unstack"], [1942, "ivy.container.container_methods.static_unstack"]], "unstack() (in module ivy.array.array_methods)": [[1941, "ivy.array.array_methods.unstack"], [1943, "ivy.array.array_methods.unstack"]], "unstack() (in module ivy.container.container_methods)": [[1941, "ivy.container.container_methods.unstack"], [1944, "ivy.container.container_methods.unstack"]], "static_zero_pad() (in module ivy.container.container_methods)": [[1946, "ivy.container.container_methods.static_zero_pad"], [1947, "ivy.container.container_methods.static_zero_pad"]], "zero_pad() (in module ivy.array.array_methods)": [[1946, "ivy.array.array_methods.zero_pad"], [1948, "ivy.array.array_methods.zero_pad"]], "zero_pad() (in module ivy.container.container_methods)": [[1946, "ivy.container.container_methods.zero_pad"], [1949, "ivy.container.container_methods.zero_pad"]], "fomaml_step() (in module ivy.functional.ivy.meta)": [[1951, "ivy.functional.ivy.meta.fomaml_step"], [1952, "ivy.functional.ivy.meta.fomaml_step"]], "ivy.functional.ivy.meta": [[1951, "module-ivy.functional.ivy.meta"]], "maml_step() (in module ivy.functional.ivy.meta)": [[1951, "ivy.functional.ivy.meta.maml_step"], [1953, "ivy.functional.ivy.meta.maml_step"]], "reptile_step() (in module ivy.functional.ivy.meta)": [[1951, "ivy.functional.ivy.meta.reptile_step"], [1954, "ivy.functional.ivy.meta.reptile_step"]], "all_nested_indices() (in module ivy.functional.ivy.nest)": [[1955, "ivy.functional.ivy.nest.all_nested_indices"], [1956, "ivy.functional.ivy.nest.all_nested_indices"]], "copy_nest() (in module ivy.functional.ivy.nest)": [[1955, "ivy.functional.ivy.nest.copy_nest"], [1957, "ivy.functional.ivy.nest.copy_nest"]], "duplicate_array_index_chains() (in module ivy.functional.ivy.nest)": [[1955, "ivy.functional.ivy.nest.duplicate_array_index_chains"], [1958, "ivy.functional.ivy.nest.duplicate_array_index_chains"]], "index_nest() (in module ivy.functional.ivy.nest)": [[1955, "ivy.functional.ivy.nest.index_nest"], [1959, "ivy.functional.ivy.nest.index_nest"]], "insert_into_nest_at_index() (in module ivy.functional.ivy.nest)": [[1955, "ivy.functional.ivy.nest.insert_into_nest_at_index"], [1960, "ivy.functional.ivy.nest.insert_into_nest_at_index"]], "insert_into_nest_at_indices() (in module ivy.functional.ivy.nest)": [[1955, "ivy.functional.ivy.nest.insert_into_nest_at_indices"], [1961, "ivy.functional.ivy.nest.insert_into_nest_at_indices"]], "ivy.functional.ivy.nest": [[1955, "module-ivy.functional.ivy.nest"]], "map() (in module ivy.functional.ivy.nest)": [[1955, "ivy.functional.ivy.nest.map"], [1962, "ivy.functional.ivy.nest.map"]], "map_nest_at_index() (in module ivy.functional.ivy.nest)": [[1955, "ivy.functional.ivy.nest.map_nest_at_index"], [1963, "ivy.functional.ivy.nest.map_nest_at_index"]], "map_nest_at_indices() (in module ivy.functional.ivy.nest)": [[1955, "ivy.functional.ivy.nest.map_nest_at_indices"], [1964, "ivy.functional.ivy.nest.map_nest_at_indices"]], "multi_index_nest() (in module ivy.functional.ivy.nest)": [[1955, "ivy.functional.ivy.nest.multi_index_nest"], [1965, "ivy.functional.ivy.nest.multi_index_nest"]], "nested_any() (in module ivy.functional.ivy.nest)": [[1955, "ivy.functional.ivy.nest.nested_any"], [1966, "ivy.functional.ivy.nest.nested_any"]], "nested_argwhere() (in module ivy.functional.ivy.nest)": [[1955, "ivy.functional.ivy.nest.nested_argwhere"], [1967, "ivy.functional.ivy.nest.nested_argwhere"]], "nested_map() (in module ivy.functional.ivy.nest)": [[1955, "ivy.functional.ivy.nest.nested_map"], [1968, "ivy.functional.ivy.nest.nested_map"]], "nested_multi_map() (in module ivy.functional.ivy.nest)": [[1955, "ivy.functional.ivy.nest.nested_multi_map"], [1969, "ivy.functional.ivy.nest.nested_multi_map"]], "prune_empty() (in module ivy.functional.ivy.nest)": [[1955, "ivy.functional.ivy.nest.prune_empty"], [1970, "ivy.functional.ivy.nest.prune_empty"]], "prune_nest_at_index() (in module ivy.functional.ivy.nest)": [[1955, "ivy.functional.ivy.nest.prune_nest_at_index"], [1971, "ivy.functional.ivy.nest.prune_nest_at_index"]], "prune_nest_at_indices() (in module ivy.functional.ivy.nest)": [[1955, "ivy.functional.ivy.nest.prune_nest_at_indices"], [1972, "ivy.functional.ivy.nest.prune_nest_at_indices"]], "set_nest_at_index() (in module ivy.functional.ivy.nest)": [[1955, "ivy.functional.ivy.nest.set_nest_at_index"], [1973, "ivy.functional.ivy.nest.set_nest_at_index"]], "set_nest_at_indices() (in module ivy.functional.ivy.nest)": [[1955, "ivy.functional.ivy.nest.set_nest_at_indices"], [1974, "ivy.functional.ivy.nest.set_nest_at_indices"]], "ivy.functional.ivy.norms": [[1975, "module-ivy.functional.ivy.norms"]], "layer_norm() (in module ivy.functional.ivy.norms)": [[1975, "ivy.functional.ivy.norms.layer_norm"], [1976, "ivy.functional.ivy.norms.layer_norm"], [1979, "ivy.functional.ivy.norms.layer_norm"]], "layer_norm() (in module ivy.array.array_methods)": [[1976, "ivy.array.array_methods.layer_norm"], [1977, "ivy.array.array_methods.layer_norm"]], "layer_norm() (in module ivy.container.container_methods)": [[1976, "ivy.container.container_methods.layer_norm"], [1978, "ivy.container.container_methods.layer_norm"]], "ivy.functional.ivy.random": [[1980, "module-ivy.functional.ivy.random"]], "multinomial() (in module ivy.functional.ivy.random)": [[1980, "ivy.functional.ivy.random.multinomial"], [1981, "ivy.functional.ivy.random.multinomial"], [1984, "ivy.functional.ivy.random.multinomial"]], "randint() (in module ivy.functional.ivy.random)": [[1980, "ivy.functional.ivy.random.randint"], [1986, "ivy.functional.ivy.random.randint"], [1989, "ivy.functional.ivy.random.randint"]], "random_normal() (in module ivy.functional.ivy.random)": [[1980, "ivy.functional.ivy.random.random_normal"], [1991, "ivy.functional.ivy.random.random_normal"], [1994, "ivy.functional.ivy.random.random_normal"]], "random_uniform() (in module ivy.functional.ivy.random)": [[1980, "ivy.functional.ivy.random.random_uniform"], [1996, "ivy.functional.ivy.random.random_uniform"], [1999, "ivy.functional.ivy.random.random_uniform"]], "seed() (in module ivy.functional.ivy.random)": [[1980, "ivy.functional.ivy.random.seed"], [2001, "ivy.functional.ivy.random.seed"]], "shuffle() (in module ivy.functional.ivy.random)": [[1980, "ivy.functional.ivy.random.shuffle"], [2002, "ivy.functional.ivy.random.shuffle"], [2005, "ivy.functional.ivy.random.shuffle"]], "multinomial() (in module ivy.array.array_methods)": [[1981, "ivy.array.array_methods.multinomial"], [1982, "ivy.array.array_methods.multinomial"]], "multinomial() (in module ivy.container.container_methods)": [[1981, "ivy.container.container_methods.multinomial"], [1983, "ivy.container.container_methods.multinomial"]], "static_multinomial() (in module ivy.container.container_methods)": [[1981, "ivy.container.container_methods.static_multinomial"], [1985, "ivy.container.container_methods.static_multinomial"]], "randint() (in module ivy.array.array_methods)": [[1986, "ivy.array.array_methods.randint"], [1987, "ivy.array.array_methods.randint"]], "randint() (in module ivy.container.container_methods)": [[1986, "ivy.container.container_methods.randint"], [1988, "ivy.container.container_methods.randint"]], "static_randint() (in module ivy.container.container_methods)": [[1986, "ivy.container.container_methods.static_randint"], [1990, "ivy.container.container_methods.static_randint"]], "random_normal() (in module ivy.array.array_methods)": [[1991, "ivy.array.array_methods.random_normal"], [1992, "ivy.array.array_methods.random_normal"]], "random_normal() (in module ivy.container.container_methods)": [[1991, "ivy.container.container_methods.random_normal"], [1993, "ivy.container.container_methods.random_normal"]], "static_random_normal() (in module ivy.container.container_methods)": [[1991, "ivy.container.container_methods.static_random_normal"], [1995, "ivy.container.container_methods.static_random_normal"]], "random_uniform() (in module ivy.array.array_methods)": [[1996, "ivy.array.array_methods.random_uniform"], [1997, "ivy.array.array_methods.random_uniform"]], "random_uniform() (in module ivy.container.container_methods)": [[1996, "ivy.container.container_methods.random_uniform"], [1998, "ivy.container.container_methods.random_uniform"]], "static_random_uniform() (in module ivy.container.container_methods)": [[1996, "ivy.container.container_methods.static_random_uniform"], [2000, "ivy.container.container_methods.static_random_uniform"]], "shuffle() (in module ivy.array.array_methods)": [[2002, "ivy.array.array_methods.shuffle"], [2003, "ivy.array.array_methods.shuffle"]], "shuffle() (in module ivy.container.container_methods)": [[2002, "ivy.container.container_methods.shuffle"], [2004, "ivy.container.container_methods.shuffle"]], "static_shuffle() (in module ivy.container.container_methods)": [[2002, "ivy.container.container_methods.static_shuffle"], [2006, "ivy.container.container_methods.static_shuffle"]], "argmax() (in module ivy.functional.ivy.searching)": [[2007, "ivy.functional.ivy.searching.argmax"], [2008, "ivy.functional.ivy.searching.argmax"], [2011, "ivy.functional.ivy.searching.argmax"]], "argmin() (in module ivy.functional.ivy.searching)": [[2007, "ivy.functional.ivy.searching.argmin"], [2013, "ivy.functional.ivy.searching.argmin"], [2016, "ivy.functional.ivy.searching.argmin"]], "argwhere() (in module ivy.functional.ivy.searching)": [[2007, "ivy.functional.ivy.searching.argwhere"], [2018, "ivy.functional.ivy.searching.argwhere"], [2021, "ivy.functional.ivy.searching.argwhere"]], "ivy.functional.ivy.searching": [[2007, "module-ivy.functional.ivy.searching"]], "nonzero() (in module ivy.functional.ivy.searching)": [[2007, "ivy.functional.ivy.searching.nonzero"], [2023, "ivy.functional.ivy.searching.nonzero"], [2026, "ivy.functional.ivy.searching.nonzero"]], "where() (in module ivy.functional.ivy.searching)": [[2007, "ivy.functional.ivy.searching.where"], [2028, "ivy.functional.ivy.searching.where"], [2032, "ivy.functional.ivy.searching.where"]], "argmax() (in module ivy.array.array_methods)": [[2008, "ivy.array.array_methods.argmax"], [2009, "ivy.array.array_methods.argmax"]], "argmax() (in module ivy.container.container_methods)": [[2008, "ivy.container.container_methods.argmax"], [2010, "ivy.container.container_methods.argmax"]], "static_argmax() (in module ivy.container.container_methods)": [[2008, "ivy.container.container_methods.static_argmax"], [2012, "ivy.container.container_methods.static_argmax"]], "argmin() (in module ivy.array.array_methods)": [[2013, "ivy.array.array_methods.argmin"], [2014, "ivy.array.array_methods.argmin"]], "argmin() (in module ivy.container.container_methods)": [[2013, "ivy.container.container_methods.argmin"], [2015, "ivy.container.container_methods.argmin"]], "static_argmin() (in module ivy.container.container_methods)": [[2013, "ivy.container.container_methods.static_argmin"], [2017, "ivy.container.container_methods.static_argmin"]], "argwhere() (in module ivy.array.array_methods)": [[2018, "ivy.array.array_methods.argwhere"], [2019, "ivy.array.array_methods.argwhere"]], "argwhere() (in module ivy.container.container_methods)": [[2018, "ivy.container.container_methods.argwhere"], [2020, "ivy.container.container_methods.argwhere"]], "static_argwhere() (in module ivy.container.container_methods)": [[2018, "ivy.container.container_methods.static_argwhere"], [2022, "ivy.container.container_methods.static_argwhere"]], "nonzero() (in module ivy.array.array_methods)": [[2023, "ivy.array.array_methods.nonzero"], [2024, "ivy.array.array_methods.nonzero"]], "nonzero() (in module ivy.container.container_methods)": [[2023, "ivy.container.container_methods.nonzero"], [2025, "ivy.container.container_methods.nonzero"]], "static_nonzero() (in module ivy.container.container_methods)": [[2023, "ivy.container.container_methods.static_nonzero"], [2027, "ivy.container.container_methods.static_nonzero"]], "static_where() (in module ivy.container.container_methods)": [[2028, "ivy.container.container_methods.static_where"], [2029, "ivy.container.container_methods.static_where"]], "where() (in module ivy.array.array_methods)": [[2028, "ivy.array.array_methods.where"], [2030, "ivy.array.array_methods.where"]], "where() (in module ivy.container.container_methods)": [[2028, "ivy.container.container_methods.where"], [2031, "ivy.container.container_methods.where"]], "ivy.functional.ivy.set": [[2033, "module-ivy.functional.ivy.set"]], "unique_all() (in module ivy.functional.ivy.set)": [[2033, "ivy.functional.ivy.set.unique_all"], [2034, "ivy.functional.ivy.set.unique_all"], [2038, "ivy.functional.ivy.set.unique_all"]], "unique_counts() (in module ivy.functional.ivy.set)": [[2033, "ivy.functional.ivy.set.unique_counts"], [2039, "ivy.functional.ivy.set.unique_counts"], [2043, "ivy.functional.ivy.set.unique_counts"]], "unique_inverse() (in module ivy.functional.ivy.set)": [[2033, "ivy.functional.ivy.set.unique_inverse"], [2044, "ivy.functional.ivy.set.unique_inverse"], [2048, "ivy.functional.ivy.set.unique_inverse"]], "unique_values() (in module ivy.functional.ivy.set)": [[2033, "ivy.functional.ivy.set.unique_values"], [2049, "ivy.functional.ivy.set.unique_values"], [2053, "ivy.functional.ivy.set.unique_values"]], "static_unique_all() (in module ivy.container.container_methods)": [[2034, "ivy.container.container_methods.static_unique_all"], [2035, "ivy.container.container_methods.static_unique_all"]], "unique_all() (in module ivy.array.array_methods)": [[2034, "ivy.array.array_methods.unique_all"], [2036, "ivy.array.array_methods.unique_all"]], "unique_all() (in module ivy.container.container_methods)": [[2034, "ivy.container.container_methods.unique_all"], [2037, "ivy.container.container_methods.unique_all"]], "static_unique_counts() (in module ivy.container.container_methods)": [[2039, "ivy.container.container_methods.static_unique_counts"], [2040, "ivy.container.container_methods.static_unique_counts"]], "unique_counts() (in module ivy.array.array_methods)": [[2039, "ivy.array.array_methods.unique_counts"], [2041, "ivy.array.array_methods.unique_counts"]], "unique_counts() (in module ivy.container.container_methods)": [[2039, "ivy.container.container_methods.unique_counts"], [2042, "ivy.container.container_methods.unique_counts"]], "static_unique_inverse() (in module ivy.container.container_methods)": [[2044, "ivy.container.container_methods.static_unique_inverse"], [2045, "ivy.container.container_methods.static_unique_inverse"]], "unique_inverse() (in module ivy.array.array_methods)": [[2044, "ivy.array.array_methods.unique_inverse"], [2046, "ivy.array.array_methods.unique_inverse"]], "unique_inverse() (in module ivy.container.container_methods)": [[2044, "ivy.container.container_methods.unique_inverse"], [2047, "ivy.container.container_methods.unique_inverse"]], "static_unique_values() (in module ivy.container.container_methods)": [[2049, "ivy.container.container_methods.static_unique_values"], [2050, "ivy.container.container_methods.static_unique_values"]], "unique_values() (in module ivy.array.array_methods)": [[2049, "ivy.array.array_methods.unique_values"], [2051, "ivy.array.array_methods.unique_values"]], "unique_values() (in module ivy.container.container_methods)": [[2049, "ivy.container.container_methods.unique_values"], [2052, "ivy.container.container_methods.unique_values"]], "argsort() (in module ivy.functional.ivy.sorting)": [[2054, "ivy.functional.ivy.sorting.argsort"], [2055, "ivy.functional.ivy.sorting.argsort"], [2058, "ivy.functional.ivy.sorting.argsort"]], "ivy.functional.ivy.sorting": [[2054, "module-ivy.functional.ivy.sorting"]], "searchsorted() (in module ivy.functional.ivy.sorting)": [[2054, "ivy.functional.ivy.sorting.searchsorted"], [2060, "ivy.functional.ivy.sorting.searchsorted"], [2063, "ivy.functional.ivy.sorting.searchsorted"]], "sort() (in module ivy.functional.ivy.sorting)": [[2054, "ivy.functional.ivy.sorting.sort"], [2065, "ivy.functional.ivy.sorting.sort"], [2068, "ivy.functional.ivy.sorting.sort"]], "argsort() (in module ivy.array.array_methods)": [[2055, "ivy.array.array_methods.argsort"], [2056, "ivy.array.array_methods.argsort"]], "argsort() (in module ivy.container.container_methods)": [[2055, "ivy.container.container_methods.argsort"], [2057, "ivy.container.container_methods.argsort"]], "static_argsort() (in module ivy.container.container_methods)": [[2055, "ivy.container.container_methods.static_argsort"], [2059, "ivy.container.container_methods.static_argsort"]], "searchsorted() (in module ivy.array.array_methods)": [[2060, "ivy.array.array_methods.searchsorted"], [2061, "ivy.array.array_methods.searchsorted"]], "searchsorted() (in module ivy.container.container_methods)": [[2060, "ivy.container.container_methods.searchsorted"], [2062, "ivy.container.container_methods.searchsorted"]], "static_searchsorted() (in module ivy.container.container_methods)": [[2060, "ivy.container.container_methods.static_searchsorted"], [2064, "ivy.container.container_methods.static_searchsorted"]], "sort() (in module ivy.array.array_methods)": [[2065, "ivy.array.array_methods.sort"], [2066, "ivy.array.array_methods.sort"]], "sort() (in module ivy.container.container_methods)": [[2065, "ivy.container.container_methods.sort"], [2067, "ivy.container.container_methods.sort"]], "static_sort() (in module ivy.container.container_methods)": [[2065, "ivy.container.container_methods.static_sort"], [2069, "ivy.container.container_methods.static_sort"]], "cumprod() (in module ivy.functional.ivy.statistical)": [[2070, "ivy.functional.ivy.statistical.cumprod"], [2071, "ivy.functional.ivy.statistical.cumprod"], [2074, "ivy.functional.ivy.statistical.cumprod"]], "cumsum() (in module ivy.functional.ivy.statistical)": [[2070, "ivy.functional.ivy.statistical.cumsum"], [2076, "ivy.functional.ivy.statistical.cumsum"], [2079, "ivy.functional.ivy.statistical.cumsum"]], "einsum() (in module ivy.functional.ivy.statistical)": [[2070, "ivy.functional.ivy.statistical.einsum"], [2081, "ivy.functional.ivy.statistical.einsum"], [2084, "ivy.functional.ivy.statistical.einsum"]], "ivy.functional.ivy.statistical": [[2070, "module-ivy.functional.ivy.statistical"]], "max() (in module ivy.functional.ivy.statistical)": [[2070, "ivy.functional.ivy.statistical.max"], [2085, "ivy.functional.ivy.statistical.max"], [2088, "ivy.functional.ivy.statistical.max"]], "mean() (in module ivy.functional.ivy.statistical)": [[2070, "ivy.functional.ivy.statistical.mean"], [2089, "ivy.functional.ivy.statistical.mean"], [2092, "ivy.functional.ivy.statistical.mean"]], "min() (in module ivy.functional.ivy.statistical)": [[2070, "ivy.functional.ivy.statistical.min"], [2093, "ivy.functional.ivy.statistical.min"], [2096, "ivy.functional.ivy.statistical.min"]], "prod() (in module ivy.functional.ivy.statistical)": [[2070, "ivy.functional.ivy.statistical.prod"], [2097, "ivy.functional.ivy.statistical.prod"], [2100, "ivy.functional.ivy.statistical.prod"]], "std() (in module ivy.functional.ivy.statistical)": [[2070, "ivy.functional.ivy.statistical.std"], [2102, "ivy.functional.ivy.statistical.std"], [2105, "ivy.functional.ivy.statistical.std"]], "sum() (in module ivy.functional.ivy.statistical)": [[2070, "ivy.functional.ivy.statistical.sum"], [2106, "ivy.functional.ivy.statistical.sum"], [2110, "ivy.functional.ivy.statistical.sum"]], "var() (in module ivy.functional.ivy.statistical)": [[2070, "ivy.functional.ivy.statistical.var"], [2111, "ivy.functional.ivy.statistical.var"], [2115, "ivy.functional.ivy.statistical.var"]], "cumprod() (in module ivy.array.array_methods)": [[2071, "ivy.array.array_methods.cumprod"], [2072, "ivy.array.array_methods.cumprod"]], "cumprod() (in module ivy.container.container_methods)": [[2071, "ivy.container.container_methods.cumprod"], [2073, "ivy.container.container_methods.cumprod"]], "static_cumprod() (in module ivy.container.container_methods)": [[2071, "ivy.container.container_methods.static_cumprod"], [2075, "ivy.container.container_methods.static_cumprod"]], "cumsum() (in module ivy.array.array_methods)": [[2076, "ivy.array.array_methods.cumsum"], [2077, "ivy.array.array_methods.cumsum"]], "cumsum() (in module ivy.container.container_methods)": [[2076, "ivy.container.container_methods.cumsum"], [2078, "ivy.container.container_methods.cumsum"]], "static_cumsum() (in module ivy.container.container_methods)": [[2076, "ivy.container.container_methods.static_cumsum"], [2080, "ivy.container.container_methods.static_cumsum"]], "einsum() (in module ivy.array.array_methods)": [[2081, "ivy.array.array_methods.einsum"], [2082, "ivy.array.array_methods.einsum"]], "einsum() (in module ivy.container.container_methods)": [[2081, "ivy.container.container_methods.einsum"], [2083, "ivy.container.container_methods.einsum"]], "max() (in module ivy.array.array_methods)": [[2085, "ivy.array.array_methods.max"], [2086, "ivy.array.array_methods.max"]], "max() (in module ivy.container.container_methods)": [[2085, "ivy.container.container_methods.max"], [2087, "ivy.container.container_methods.max"]], "mean() (in module ivy.array.array_methods)": [[2089, "ivy.array.array_methods.mean"], [2090, "ivy.array.array_methods.mean"]], "mean() (in module ivy.container.container_methods)": [[2089, "ivy.container.container_methods.mean"], [2091, "ivy.container.container_methods.mean"]], "min() (in module ivy.array.array_methods)": [[2093, "ivy.array.array_methods.min"], [2094, "ivy.array.array_methods.min"]], "min() (in module ivy.container.container_methods)": [[2093, "ivy.container.container_methods.min"], [2095, "ivy.container.container_methods.min"]], "prod() (in module ivy.array.array_methods)": [[2097, "ivy.array.array_methods.prod"], [2098, "ivy.array.array_methods.prod"]], "prod() (in module ivy.container.container_methods)": [[2097, "ivy.container.container_methods.prod"], [2099, "ivy.container.container_methods.prod"]], "static_prod() (in module ivy.container.container_methods)": [[2097, "ivy.container.container_methods.static_prod"], [2101, "ivy.container.container_methods.static_prod"]], "std() (in module ivy.array.array_methods)": [[2102, "ivy.array.array_methods.std"], [2103, "ivy.array.array_methods.std"]], "std() (in module ivy.container.container_methods)": [[2102, "ivy.container.container_methods.std"], [2104, "ivy.container.container_methods.std"]], "static_sum() (in module ivy.container.container_methods)": [[2106, "ivy.container.container_methods.static_sum"], [2107, "ivy.container.container_methods.static_sum"]], "sum() (in module ivy.array.array_methods)": [[2106, "ivy.array.array_methods.sum"], [2108, "ivy.array.array_methods.sum"]], "sum() (in module ivy.container.container_methods)": [[2106, "ivy.container.container_methods.sum"], [2109, "ivy.container.container_methods.sum"]], "static_var() (in module ivy.container.container_methods)": [[2111, "ivy.container.container_methods.static_var"], [2112, "ivy.container.container_methods.static_var"]], "var() (in module ivy.array.array_methods)": [[2111, "ivy.array.array_methods.var"], [2113, "ivy.array.array_methods.var"]], "var() (in module ivy.container.container_methods)": [[2111, "ivy.container.container_methods.var"], [2114, "ivy.container.container_methods.var"]], "all() (in module ivy.functional.ivy.utility)": [[2116, "ivy.functional.ivy.utility.all"], [2117, "ivy.functional.ivy.utility.all"], [2120, "ivy.functional.ivy.utility.all"]], "any() (in module ivy.functional.ivy.utility)": [[2116, "ivy.functional.ivy.utility.any"], [2122, "ivy.functional.ivy.utility.any"], [2125, "ivy.functional.ivy.utility.any"]], "ivy.functional.ivy.utility": [[2116, "module-ivy.functional.ivy.utility"]], "all() (in module ivy.array.array_methods)": [[2117, "ivy.array.array_methods.all"], [2118, "ivy.array.array_methods.all"]], "all() (in module ivy.container.container_methods)": [[2117, "ivy.container.container_methods.all"], [2119, "ivy.container.container_methods.all"]], "static_all() (in module ivy.container.container_methods)": [[2117, "ivy.container.container_methods.static_all"], [2121, "ivy.container.container_methods.static_all"]], "any() (in module ivy.array.array_methods)": [[2122, "ivy.array.array_methods.any"], [2123, "ivy.array.array_methods.any"]], "any() (in module ivy.container.container_methods)": [[2122, "ivy.container.container_methods.any"], [2124, "ivy.container.container_methods.any"]], "static_any() (in module ivy.container.container_methods)": [[2122, "ivy.container.container_methods.static_any"], [2126, "ivy.container.container_methods.static_any"]], "applied libraries": [[2127, "term-Applied-Libraries"]], "automatic code conversions": [[2127, "term-Automatic-Code-Conversions"]], "backend handler": [[2127, "term-Backend-Handler"]], "compositional functions": [[2127, "term-Compositional-Functions"]], "convenience functions": [[2127, "term-Convenience-Functions"]], "framework": [[2127, "term-Framework"]], "framework handler": [[2127, "term-Framework-Handler"]], "graph compiler": [[2127, "term-Graph-Compiler"]], "ivy array": [[2127, "term-Ivy-Array"]], "ivy backends": [[2127, "term-Ivy-Backends"]], "ivy builder": [[2127, "term-Ivy-Builder"]], "ivy compiler": [[2127, "term-Ivy-Compiler"]], "ivy container": [[2127, "term-Ivy-Container"]], "ivy frontends": [[2127, "term-Ivy-Frontends"]], "ivy functional api": [[2127, "term-Ivy-Functional-API"]], "ivy graph compiler": [[2127, "term-Ivy-Graph-Compiler"]], "ivy transpiler": [[2127, "term-Ivy-Transpiler"]], "mixed functions": [[2127, "term-Mixed-Functions"]], "native array": [[2127, "term-Native-Array"]], "nestable functions": [[2127, "term-Nestable-Functions"]], "pipeline": [[2127, "term-Pipeline"]], "primary functions": [[2127, "term-Primary-Functions"]], "standalone functions": [[2127, "term-Standalone-Functions"]], "submodule helper functions": [[2127, "term-Submodule-Helper-Functions"]], "add_array_specs() (in module ivy.inspection)": [[2131, "ivy.inspection.add_array_specs"], [2132, "ivy.inspection.add_array_specs"]], "fn_array_spec() (in module ivy.inspection)": [[2131, "ivy.inspection.fn_array_spec"], [2133, "ivy.inspection.fn_array_spec"]], "ivy.inspection": [[2131, "module-ivy.inspection"]], "nestedarray (class in ivy.nested_array.nested_array)": [[2134, "ivy.nested_array.nested_array.NestedArray"], [2135, "ivy.nested_array.nested_array.NestedArray"]], "__init__() (ivy.nested_array.nested_array.nestedarray method)": [[2134, "ivy.nested_array.nested_array.NestedArray.__init__"], [2135, "ivy.nested_array.nested_array.NestedArray.__init__"]], "data (ivy.nested_array.nested_array.nestedarray property)": [[2134, "ivy.nested_array.nested_array.NestedArray.data"], [2135, "ivy.nested_array.nested_array.NestedArray.data"]], "device (ivy.nested_array.nested_array.nestedarray property)": [[2134, "ivy.nested_array.nested_array.NestedArray.device"], [2135, "ivy.nested_array.nested_array.NestedArray.device"]], "dtype (ivy.nested_array.nested_array.nestedarray property)": [[2134, "ivy.nested_array.nested_array.NestedArray.dtype"], [2135, "ivy.nested_array.nested_array.NestedArray.dtype"]], "from_row_lengths() (ivy.nested_array.nested_array.nestedarray class method)": [[2134, "ivy.nested_array.nested_array.NestedArray.from_row_lengths"], [2135, "ivy.nested_array.nested_array.NestedArray.from_row_lengths"]], "from_row_split() (ivy.nested_array.nested_array.nestedarray class method)": [[2134, "ivy.nested_array.nested_array.NestedArray.from_row_split"], [2135, "ivy.nested_array.nested_array.NestedArray.from_row_split"]], "ivy.nested_array.nested_array": [[2134, "module-ivy.nested_array.nested_array"]], "ndim (ivy.nested_array.nested_array.nestedarray property)": [[2134, "ivy.nested_array.nested_array.NestedArray.ndim"], [2135, "ivy.nested_array.nested_array.NestedArray.ndim"]], "nested_array() (ivy.nested_array.nested_array.nestedarray class method)": [[2134, "ivy.nested_array.nested_array.NestedArray.nested_array"], [2135, "ivy.nested_array.nested_array.NestedArray.nested_array"]], "reshape() (ivy.nested_array.nested_array.nestedarray method)": [[2134, "ivy.nested_array.nested_array.NestedArray.reshape"], [2135, "ivy.nested_array.nested_array.NestedArray.reshape"]], "shape (ivy.nested_array.nested_array.nestedarray property)": [[2134, "ivy.nested_array.nested_array.NestedArray.shape"], [2135, "ivy.nested_array.nested_array.NestedArray.shape"]], "unbind() (ivy.nested_array.nested_array.nestedarray method)": [[2134, "ivy.nested_array.nested_array.NestedArray.unbind"], [2135, "ivy.nested_array.nested_array.NestedArray.unbind"]], "ivy.stateful": [[2148, "module-ivy.stateful"]], "geglu (class in ivy.stateful.activations)": [[2149, "ivy.stateful.activations.GEGLU"], [2150, "ivy.stateful.activations.GEGLU"]], "gelu (class in ivy.stateful.activations)": [[2149, "ivy.stateful.activations.GELU"], [2151, "ivy.stateful.activations.GELU"]], "__init__() (ivy.stateful.activations.geglu method)": [[2149, "ivy.stateful.activations.GEGLU.__init__"], [2150, "ivy.stateful.activations.GEGLU.__init__"]], "__init__() (ivy.stateful.activations.gelu method)": [[2149, "ivy.stateful.activations.GELU.__init__"], [2151, "ivy.stateful.activations.GELU.__init__"]], "ivy.stateful.activations": [[2149, "module-ivy.stateful.activations"]], "moduleconverters (class in ivy.stateful.converters)": [[2152, "ivy.stateful.converters.ModuleConverters"], [2153, "ivy.stateful.converters.ModuleConverters"]], "mytfmodule (class in ivy.stateful.converters)": [[2152, "ivy.stateful.converters.MyTFModule"], [2154, "ivy.stateful.converters.MyTFModule"]], "mytorchmodule (class in ivy.stateful.converters)": [[2152, "ivy.stateful.converters.MyTorchModule"], [2155, "ivy.stateful.converters.MyTorchModule"]], "__init__() (ivy.stateful.converters.mytfmodule method)": [[2152, "ivy.stateful.converters.MyTFModule.__init__"], [2154, "ivy.stateful.converters.MyTFModule.__init__"]], "__init__() (ivy.stateful.converters.mytorchmodule method)": [[2152, "ivy.stateful.converters.MyTorchModule.__init__"], [2155, "ivy.stateful.converters.MyTorchModule.__init__"]], "call() (ivy.stateful.converters.mytfmodule method)": [[2152, "ivy.stateful.converters.MyTFModule.call"], [2154, "ivy.stateful.converters.MyTFModule.call"]], "forward() (ivy.stateful.converters.mytorchmodule method)": [[2152, "ivy.stateful.converters.MyTorchModule.forward"], [2155, "ivy.stateful.converters.MyTorchModule.forward"]], "from_haiku_module() (ivy.stateful.converters.moduleconverters static method)": [[2152, "ivy.stateful.converters.ModuleConverters.from_haiku_module"], [2153, "ivy.stateful.converters.ModuleConverters.from_haiku_module"]], "from_keras_module() (ivy.stateful.converters.moduleconverters static method)": [[2152, "ivy.stateful.converters.ModuleConverters.from_keras_module"], [2153, "ivy.stateful.converters.ModuleConverters.from_keras_module"]], "from_torch_module() (ivy.stateful.converters.moduleconverters static method)": [[2152, "ivy.stateful.converters.ModuleConverters.from_torch_module"], [2153, "ivy.stateful.converters.ModuleConverters.from_torch_module"]], "ivy.stateful.converters": [[2152, "module-ivy.stateful.converters"]], "to_haiku_module() (ivy.stateful.converters.moduleconverters method)": [[2152, "ivy.stateful.converters.ModuleConverters.to_haiku_module"], [2153, "ivy.stateful.converters.ModuleConverters.to_haiku_module"]], "to_ivy_module() (in module ivy.stateful.converters)": [[2152, "ivy.stateful.converters.to_ivy_module"], [2156, "ivy.stateful.converters.to_ivy_module"]], "to_keras_module() (ivy.stateful.converters.moduleconverters method)": [[2152, "ivy.stateful.converters.ModuleConverters.to_keras_module"], [2153, "ivy.stateful.converters.ModuleConverters.to_keras_module"]], "to_torch_module() (ivy.stateful.converters.moduleconverters method)": [[2152, "ivy.stateful.converters.ModuleConverters.to_torch_module"], [2153, "ivy.stateful.converters.ModuleConverters.to_torch_module"]], "training (ivy.stateful.converters.mytorchmodule attribute)": [[2152, "ivy.stateful.converters.MyTorchModule.training"], [2155, "ivy.stateful.converters.MyTorchModule.training"]], "modulehelpers (class in ivy.stateful.helpers)": [[2157, "ivy.stateful.helpers.ModuleHelpers"], [2158, "ivy.stateful.helpers.ModuleHelpers"]], "check_submod_rets() (ivy.stateful.helpers.modulehelpers method)": [[2157, "ivy.stateful.helpers.ModuleHelpers.check_submod_rets"], [2158, "ivy.stateful.helpers.ModuleHelpers.check_submod_rets"]], "get_mod_key() (ivy.stateful.helpers.modulehelpers method)": [[2157, "ivy.stateful.helpers.ModuleHelpers.get_mod_key"], [2158, "ivy.stateful.helpers.ModuleHelpers.get_mod_key"]], "ivy.stateful.helpers": [[2157, "module-ivy.stateful.helpers"]], "mod_depth() (ivy.stateful.helpers.modulehelpers method)": [[2157, "ivy.stateful.helpers.ModuleHelpers.mod_depth"], [2158, "ivy.stateful.helpers.ModuleHelpers.mod_depth"]], "mod_height() (ivy.stateful.helpers.modulehelpers method)": [[2157, "ivy.stateful.helpers.ModuleHelpers.mod_height"], [2158, "ivy.stateful.helpers.ModuleHelpers.mod_height"]], "mod_with_top_mod_key_chain() (ivy.stateful.helpers.modulehelpers method)": [[2157, "ivy.stateful.helpers.ModuleHelpers.mod_with_top_mod_key_chain"], [2158, "ivy.stateful.helpers.ModuleHelpers.mod_with_top_mod_key_chain"]], "show_mod_in_top_mod() (ivy.stateful.helpers.modulehelpers method)": [[2157, "ivy.stateful.helpers.ModuleHelpers.show_mod_in_top_mod"], [2158, "ivy.stateful.helpers.ModuleHelpers.show_mod_in_top_mod"]], "show_structure() (ivy.stateful.helpers.modulehelpers method)": [[2157, "ivy.stateful.helpers.ModuleHelpers.show_structure"], [2158, "ivy.stateful.helpers.ModuleHelpers.show_structure"]], "show_v_in_top_v() (ivy.stateful.helpers.modulehelpers method)": [[2157, "ivy.stateful.helpers.ModuleHelpers.show_v_in_top_v"], [2158, "ivy.stateful.helpers.ModuleHelpers.show_v_in_top_v"]], "sub_mods() (ivy.stateful.helpers.modulehelpers method)": [[2157, "ivy.stateful.helpers.ModuleHelpers.sub_mods"], [2158, "ivy.stateful.helpers.ModuleHelpers.sub_mods"]], "track_submod_call_order() (ivy.stateful.helpers.modulehelpers method)": [[2157, "ivy.stateful.helpers.ModuleHelpers.track_submod_call_order"], [2158, "ivy.stateful.helpers.ModuleHelpers.track_submod_call_order"]], "track_submod_rets() (ivy.stateful.helpers.modulehelpers method)": [[2157, "ivy.stateful.helpers.ModuleHelpers.track_submod_rets"], [2158, "ivy.stateful.helpers.ModuleHelpers.track_submod_rets"]], "v_with_top_v_key_chains() (ivy.stateful.helpers.modulehelpers method)": [[2157, "ivy.stateful.helpers.ModuleHelpers.v_with_top_v_key_chains"], [2158, "ivy.stateful.helpers.ModuleHelpers.v_with_top_v_key_chains"]], "constant (class in ivy.stateful.initializers)": [[2159, "ivy.stateful.initializers.Constant"], [2160, "ivy.stateful.initializers.Constant"]], "firstlayersiren (class in ivy.stateful.initializers)": [[2159, "ivy.stateful.initializers.FirstLayerSiren"], [2161, "ivy.stateful.initializers.FirstLayerSiren"]], "glorotuniform (class in ivy.stateful.initializers)": [[2159, "ivy.stateful.initializers.GlorotUniform"], [2162, "ivy.stateful.initializers.GlorotUniform"]], "initializer (class in ivy.stateful.initializers)": [[2159, "ivy.stateful.initializers.Initializer"], [2163, "ivy.stateful.initializers.Initializer"]], "kaimingnormal (class in ivy.stateful.initializers)": [[2159, "ivy.stateful.initializers.KaimingNormal"], [2164, "ivy.stateful.initializers.KaimingNormal"]], "ones (class in ivy.stateful.initializers)": [[2159, "ivy.stateful.initializers.Ones"], [2165, "ivy.stateful.initializers.Ones"]], "siren (class in ivy.stateful.initializers)": [[2159, "ivy.stateful.initializers.Siren"], [2166, "ivy.stateful.initializers.Siren"]], "uniform (class in ivy.stateful.initializers)": [[2159, "ivy.stateful.initializers.Uniform"], [2167, "ivy.stateful.initializers.Uniform"]], "zeros (class in ivy.stateful.initializers)": [[2159, "ivy.stateful.initializers.Zeros"], [2168, "ivy.stateful.initializers.Zeros"]], "__init__() (ivy.stateful.initializers.constant method)": [[2159, "ivy.stateful.initializers.Constant.__init__"], [2160, "ivy.stateful.initializers.Constant.__init__"]], "__init__() (ivy.stateful.initializers.firstlayersiren method)": [[2159, "ivy.stateful.initializers.FirstLayerSiren.__init__"], [2161, "ivy.stateful.initializers.FirstLayerSiren.__init__"]], "__init__() (ivy.stateful.initializers.glorotuniform method)": [[2159, "ivy.stateful.initializers.GlorotUniform.__init__"], [2162, "ivy.stateful.initializers.GlorotUniform.__init__"]], "__init__() (ivy.stateful.initializers.kaimingnormal method)": [[2159, "ivy.stateful.initializers.KaimingNormal.__init__"], [2164, "ivy.stateful.initializers.KaimingNormal.__init__"]], "__init__() (ivy.stateful.initializers.ones method)": [[2159, "ivy.stateful.initializers.Ones.__init__"], [2165, "ivy.stateful.initializers.Ones.__init__"]], "__init__() (ivy.stateful.initializers.siren method)": [[2159, "ivy.stateful.initializers.Siren.__init__"], [2166, "ivy.stateful.initializers.Siren.__init__"]], "__init__() (ivy.stateful.initializers.uniform method)": [[2159, "ivy.stateful.initializers.Uniform.__init__"], [2167, "ivy.stateful.initializers.Uniform.__init__"]], "__init__() (ivy.stateful.initializers.zeros method)": [[2159, "ivy.stateful.initializers.Zeros.__init__"], [2168, "ivy.stateful.initializers.Zeros.__init__"]], "create_variables() (ivy.stateful.initializers.constant method)": [[2159, "ivy.stateful.initializers.Constant.create_variables"], [2160, "ivy.stateful.initializers.Constant.create_variables"]], "create_variables() (ivy.stateful.initializers.initializer method)": [[2159, "ivy.stateful.initializers.Initializer.create_variables"], [2163, "ivy.stateful.initializers.Initializer.create_variables"]], "create_variables() (ivy.stateful.initializers.kaimingnormal method)": [[2159, "ivy.stateful.initializers.KaimingNormal.create_variables"], [2164, "ivy.stateful.initializers.KaimingNormal.create_variables"]], "create_variables() (ivy.stateful.initializers.uniform method)": [[2159, "ivy.stateful.initializers.Uniform.create_variables"], [2167, "ivy.stateful.initializers.Uniform.create_variables"]], "ivy.stateful.initializers": [[2159, "module-ivy.stateful.initializers"]], "conv1d (class in ivy.stateful.layers)": [[2169, "ivy.stateful.layers.Conv1D"], [2170, "ivy.stateful.layers.Conv1D"]], "conv1dtranspose (class in ivy.stateful.layers)": [[2169, "ivy.stateful.layers.Conv1DTranspose"], [2171, "ivy.stateful.layers.Conv1DTranspose"]], "conv2d (class in ivy.stateful.layers)": [[2169, "ivy.stateful.layers.Conv2D"], [2172, "ivy.stateful.layers.Conv2D"]], "conv2dtranspose (class in ivy.stateful.layers)": [[2169, "ivy.stateful.layers.Conv2DTranspose"], [2173, "ivy.stateful.layers.Conv2DTranspose"]], "conv3d (class in ivy.stateful.layers)": [[2169, "ivy.stateful.layers.Conv3D"], [2174, "ivy.stateful.layers.Conv3D"]], "conv3dtranspose (class in ivy.stateful.layers)": [[2169, "ivy.stateful.layers.Conv3DTranspose"], [2175, "ivy.stateful.layers.Conv3DTranspose"]], "depthwiseconv2d (class in ivy.stateful.layers)": [[2169, "ivy.stateful.layers.DepthwiseConv2D"], [2176, "ivy.stateful.layers.DepthwiseConv2D"]], "dropout (class in ivy.stateful.layers)": [[2169, "ivy.stateful.layers.Dropout"], [2177, "ivy.stateful.layers.Dropout"]], "lstm (class in ivy.stateful.layers)": [[2169, "ivy.stateful.layers.LSTM"], [2178, "ivy.stateful.layers.LSTM"]], "linear (class in ivy.stateful.layers)": [[2169, "ivy.stateful.layers.Linear"], [2179, "ivy.stateful.layers.Linear"]], "multiheadattention (class in ivy.stateful.layers)": [[2169, "ivy.stateful.layers.MultiHeadAttention"], [2180, "ivy.stateful.layers.MultiHeadAttention"]], "__init__() (ivy.stateful.layers.conv1d method)": [[2169, "ivy.stateful.layers.Conv1D.__init__"], [2170, "ivy.stateful.layers.Conv1D.__init__"]], "__init__() (ivy.stateful.layers.conv1dtranspose method)": [[2169, "ivy.stateful.layers.Conv1DTranspose.__init__"], [2171, "ivy.stateful.layers.Conv1DTranspose.__init__"]], "__init__() (ivy.stateful.layers.conv2d method)": [[2169, "ivy.stateful.layers.Conv2D.__init__"], [2172, "ivy.stateful.layers.Conv2D.__init__"]], "__init__() (ivy.stateful.layers.conv2dtranspose method)": [[2169, "ivy.stateful.layers.Conv2DTranspose.__init__"], [2173, "ivy.stateful.layers.Conv2DTranspose.__init__"]], "__init__() (ivy.stateful.layers.conv3d method)": [[2169, "ivy.stateful.layers.Conv3D.__init__"], [2174, "ivy.stateful.layers.Conv3D.__init__"]], "__init__() (ivy.stateful.layers.conv3dtranspose method)": [[2169, "ivy.stateful.layers.Conv3DTranspose.__init__"], [2175, "ivy.stateful.layers.Conv3DTranspose.__init__"]], "__init__() (ivy.stateful.layers.depthwiseconv2d method)": [[2169, "ivy.stateful.layers.DepthwiseConv2D.__init__"], [2176, "ivy.stateful.layers.DepthwiseConv2D.__init__"]], "__init__() (ivy.stateful.layers.dropout method)": [[2169, "ivy.stateful.layers.Dropout.__init__"], [2177, "ivy.stateful.layers.Dropout.__init__"]], "__init__() (ivy.stateful.layers.lstm method)": [[2169, "ivy.stateful.layers.LSTM.__init__"], [2178, "ivy.stateful.layers.LSTM.__init__"]], "__init__() (ivy.stateful.layers.linear method)": [[2169, "ivy.stateful.layers.Linear.__init__"], [2179, "ivy.stateful.layers.Linear.__init__"]], "__init__() (ivy.stateful.layers.multiheadattention method)": [[2169, "ivy.stateful.layers.MultiHeadAttention.__init__"], [2180, "ivy.stateful.layers.MultiHeadAttention.__init__"]], "get_initial_state() (ivy.stateful.layers.lstm method)": [[2169, "ivy.stateful.layers.LSTM.get_initial_state"], [2178, "ivy.stateful.layers.LSTM.get_initial_state"]], "ivy.stateful.layers": [[2169, "module-ivy.stateful.layers"]], "module (class in ivy.stateful.module)": [[2181, "ivy.stateful.module.Module"], [2182, "ivy.stateful.module.Module"]], "__call__() (ivy.stateful.module.module method)": [[2181, "ivy.stateful.module.Module.__call__"], [2182, "ivy.stateful.module.Module.__call__"]], "__init__() (ivy.stateful.module.module method)": [[2181, "ivy.stateful.module.Module.__init__"], [2182, "ivy.stateful.module.Module.__init__"]], "build() (ivy.stateful.module.module method)": [[2181, "ivy.stateful.module.Module.build"], [2182, "ivy.stateful.module.Module.build"]], "build_mode (ivy.stateful.module.module property)": [[2181, "ivy.stateful.module.Module.build_mode"], [2182, "ivy.stateful.module.Module.build_mode"]], "built_ (ivy.stateful.module.module property)": [[2181, "ivy.stateful.module.Module.built_"], [2182, "ivy.stateful.module.Module.built_"]], "ivy.stateful.module": [[2181, "module-ivy.stateful.module"]], "save_weights() (ivy.stateful.module.module method)": [[2181, "ivy.stateful.module.Module.save_weights"], [2182, "ivy.stateful.module.Module.save_weights"]], "layernorm (class in ivy.stateful.norms)": [[2183, "ivy.stateful.norms.LayerNorm"], [2184, "ivy.stateful.norms.LayerNorm"]], "__init__() (ivy.stateful.norms.layernorm method)": [[2183, "ivy.stateful.norms.LayerNorm.__init__"], [2184, "ivy.stateful.norms.LayerNorm.__init__"]], "ivy.stateful.norms": [[2183, "module-ivy.stateful.norms"]], "adam (class in ivy.stateful.optimizers)": [[2185, "ivy.stateful.optimizers.Adam"], [2186, "ivy.stateful.optimizers.Adam"]], "lamb (class in ivy.stateful.optimizers)": [[2185, "ivy.stateful.optimizers.LAMB"], [2187, "ivy.stateful.optimizers.LAMB"]], "lars (class in ivy.stateful.optimizers)": [[2185, "ivy.stateful.optimizers.LARS"], [2188, "ivy.stateful.optimizers.LARS"]], "optimizer (class in ivy.stateful.optimizers)": [[2185, "ivy.stateful.optimizers.Optimizer"], [2189, "ivy.stateful.optimizers.Optimizer"]], "sgd (class in ivy.stateful.optimizers)": [[2185, "ivy.stateful.optimizers.SGD"], [2190, "ivy.stateful.optimizers.SGD"]], "__init__() (ivy.stateful.optimizers.adam method)": [[2185, "ivy.stateful.optimizers.Adam.__init__"], [2186, "ivy.stateful.optimizers.Adam.__init__"]], "__init__() (ivy.stateful.optimizers.lamb method)": [[2185, "ivy.stateful.optimizers.LAMB.__init__"], [2187, "ivy.stateful.optimizers.LAMB.__init__"]], "__init__() (ivy.stateful.optimizers.lars method)": [[2185, "ivy.stateful.optimizers.LARS.__init__"], [2188, "ivy.stateful.optimizers.LARS.__init__"]], "__init__() (ivy.stateful.optimizers.optimizer method)": [[2185, "ivy.stateful.optimizers.Optimizer.__init__"], [2189, "ivy.stateful.optimizers.Optimizer.__init__"]], "__init__() (ivy.stateful.optimizers.sgd method)": [[2185, "ivy.stateful.optimizers.SGD.__init__"], [2190, "ivy.stateful.optimizers.SGD.__init__"]], "ivy.stateful.optimizers": [[2185, "module-ivy.stateful.optimizers"]], "set_state() (ivy.stateful.optimizers.adam method)": [[2185, "ivy.stateful.optimizers.Adam.set_state"], [2186, "ivy.stateful.optimizers.Adam.set_state"]], "set_state() (ivy.stateful.optimizers.lamb method)": [[2185, "ivy.stateful.optimizers.LAMB.set_state"], [2187, "ivy.stateful.optimizers.LAMB.set_state"]], "set_state() (ivy.stateful.optimizers.lars method)": [[2185, "ivy.stateful.optimizers.LARS.set_state"], [2188, "ivy.stateful.optimizers.LARS.set_state"]], "set_state() (ivy.stateful.optimizers.optimizer method)": [[2185, "ivy.stateful.optimizers.Optimizer.set_state"], [2189, "ivy.stateful.optimizers.Optimizer.set_state"]], "set_state() (ivy.stateful.optimizers.sgd method)": [[2185, "ivy.stateful.optimizers.SGD.set_state"], [2190, "ivy.stateful.optimizers.SGD.set_state"]], "state (ivy.stateful.optimizers.adam property)": [[2185, "ivy.stateful.optimizers.Adam.state"], [2186, "ivy.stateful.optimizers.Adam.state"]], "state (ivy.stateful.optimizers.lamb property)": [[2185, "ivy.stateful.optimizers.LAMB.state"], [2187, "ivy.stateful.optimizers.LAMB.state"]], "state (ivy.stateful.optimizers.lars property)": [[2185, "ivy.stateful.optimizers.LARS.state"], [2188, "ivy.stateful.optimizers.LARS.state"]], "state (ivy.stateful.optimizers.sgd property)": [[2185, "ivy.stateful.optimizers.SGD.state"], [2190, "ivy.stateful.optimizers.SGD.state"]], "step() (ivy.stateful.optimizers.optimizer method)": [[2185, "ivy.stateful.optimizers.Optimizer.step"], [2189, "ivy.stateful.optimizers.Optimizer.step"]], "sequential (class in ivy.stateful.sequential)": [[2191, "ivy.stateful.sequential.Sequential"], [2192, "ivy.stateful.sequential.Sequential"]], "__init__() (ivy.stateful.sequential.sequential method)": [[2191, "ivy.stateful.sequential.Sequential.__init__"], [2192, "ivy.stateful.sequential.Sequential.__init__"]], "ivy.stateful.sequential": [[2191, "module-ivy.stateful.sequential"]], "assert_all_close() (in module ivy_tests.test_ivy.helpers.assertions)": [[2194, "ivy_tests.test_ivy.helpers.assertions.assert_all_close"], [2195, "ivy_tests.test_ivy.helpers.assertions.assert_all_close"]], "assert_same_type_and_shape() (in module ivy_tests.test_ivy.helpers.assertions)": [[2194, "ivy_tests.test_ivy.helpers.assertions.assert_same_type_and_shape"], [2196, "ivy_tests.test_ivy.helpers.assertions.assert_same_type_and_shape"]], "check_unsupported_device() (in module ivy_tests.test_ivy.helpers.assertions)": [[2194, "ivy_tests.test_ivy.helpers.assertions.check_unsupported_device"], [2197, "ivy_tests.test_ivy.helpers.assertions.check_unsupported_device"]], "check_unsupported_device_and_dtype() (in module ivy_tests.test_ivy.helpers.assertions)": [[2194, "ivy_tests.test_ivy.helpers.assertions.check_unsupported_device_and_dtype"], [2198, "ivy_tests.test_ivy.helpers.assertions.check_unsupported_device_and_dtype"]], "check_unsupported_dtype() (in module ivy_tests.test_ivy.helpers.assertions)": [[2194, "ivy_tests.test_ivy.helpers.assertions.check_unsupported_dtype"], [2199, "ivy_tests.test_ivy.helpers.assertions.check_unsupported_dtype"]], "ivy_tests.test_ivy.helpers.assertions": [[2194, "module-ivy_tests.test_ivy.helpers.assertions"]], "test_unsupported_function() (in module ivy_tests.test_ivy.helpers.assertions)": [[2194, "ivy_tests.test_ivy.helpers.assertions.test_unsupported_function"], [2200, "ivy_tests.test_ivy.helpers.assertions.test_unsupported_function"]], "value_test() (in module ivy_tests.test_ivy.helpers.assertions)": [[2194, "ivy_tests.test_ivy.helpers.assertions.value_test"], [2201, "ivy_tests.test_ivy.helpers.assertions.value_test"]], "available_frameworks() (in module ivy_tests.test_ivy.helpers.available_frameworks)": [[2202, "ivy_tests.test_ivy.helpers.available_frameworks.available_frameworks"], [2203, "ivy_tests.test_ivy.helpers.available_frameworks.available_frameworks"]], "ground_truth() (in module ivy_tests.test_ivy.helpers.available_frameworks)": [[2202, "ivy_tests.test_ivy.helpers.available_frameworks.ground_truth"], [2204, "ivy_tests.test_ivy.helpers.available_frameworks.ground_truth"]], "ivy_tests.test_ivy.helpers.available_frameworks": [[2202, "module-ivy_tests.test_ivy.helpers.available_frameworks"]], "args_to_container() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2205, "ivy_tests.test_ivy.helpers.function_testing.args_to_container"], [2206, "ivy_tests.test_ivy.helpers.function_testing.args_to_container"]], "as_cont() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2205, "ivy_tests.test_ivy.helpers.function_testing.as_cont"], [2207, "ivy_tests.test_ivy.helpers.function_testing.as_cont"]], "as_lists() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2205, "ivy_tests.test_ivy.helpers.function_testing.as_lists"], [2208, "ivy_tests.test_ivy.helpers.function_testing.as_lists"]], "convtrue() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2205, "ivy_tests.test_ivy.helpers.function_testing.convtrue"], [2209, "ivy_tests.test_ivy.helpers.function_testing.convtrue"]], "create_args_kwargs() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2205, "ivy_tests.test_ivy.helpers.function_testing.create_args_kwargs"], [2210, "ivy_tests.test_ivy.helpers.function_testing.create_args_kwargs"]], "empty_func() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2205, "ivy_tests.test_ivy.helpers.function_testing.empty_func"], [2211, "ivy_tests.test_ivy.helpers.function_testing.empty_func"]], "flatten() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2205, "ivy_tests.test_ivy.helpers.function_testing.flatten"], [2212, "ivy_tests.test_ivy.helpers.function_testing.flatten"]], "flatten_and_to_np() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2205, "ivy_tests.test_ivy.helpers.function_testing.flatten_and_to_np"], [2213, "ivy_tests.test_ivy.helpers.function_testing.flatten_and_to_np"]], "flatten_fw_and_to_np() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2205, "ivy_tests.test_ivy.helpers.function_testing.flatten_fw_and_to_np"], [2214, "ivy_tests.test_ivy.helpers.function_testing.flatten_fw_and_to_np"]], "framework_comparator() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2205, "ivy_tests.test_ivy.helpers.function_testing.framework_comparator"], [2215, "ivy_tests.test_ivy.helpers.function_testing.framework_comparator"]], "get_frontend_ret() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2205, "ivy_tests.test_ivy.helpers.function_testing.get_frontend_ret"], [2216, "ivy_tests.test_ivy.helpers.function_testing.get_frontend_ret"]], "get_ret_and_flattened_np_array() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2205, "ivy_tests.test_ivy.helpers.function_testing.get_ret_and_flattened_np_array"], [2217, "ivy_tests.test_ivy.helpers.function_testing.get_ret_and_flattened_np_array"]], "gradient_incompatible_function() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2205, "ivy_tests.test_ivy.helpers.function_testing.gradient_incompatible_function"], [2218, "ivy_tests.test_ivy.helpers.function_testing.gradient_incompatible_function"]], "gradient_test() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2205, "ivy_tests.test_ivy.helpers.function_testing.gradient_test"], [2219, "ivy_tests.test_ivy.helpers.function_testing.gradient_test"]], "gradient_unsupported_dtypes() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2205, "ivy_tests.test_ivy.helpers.function_testing.gradient_unsupported_dtypes"], [2220, "ivy_tests.test_ivy.helpers.function_testing.gradient_unsupported_dtypes"]], "ivy_tests.test_ivy.helpers.function_testing": [[2205, "module-ivy_tests.test_ivy.helpers.function_testing"]], "kwargs_to_args_n_kwargs() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2205, "ivy_tests.test_ivy.helpers.function_testing.kwargs_to_args_n_kwargs"], [2221, "ivy_tests.test_ivy.helpers.function_testing.kwargs_to_args_n_kwargs"]], "make_json_pickable() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2205, "ivy_tests.test_ivy.helpers.function_testing.make_json_pickable"], [2222, "ivy_tests.test_ivy.helpers.function_testing.make_json_pickable"]], "test_frontend_function() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2205, "ivy_tests.test_ivy.helpers.function_testing.test_frontend_function"], [2223, "ivy_tests.test_ivy.helpers.function_testing.test_frontend_function"]], "test_frontend_method() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2205, "ivy_tests.test_ivy.helpers.function_testing.test_frontend_method"], [2224, "ivy_tests.test_ivy.helpers.function_testing.test_frontend_method"]], "test_function() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2205, "ivy_tests.test_ivy.helpers.function_testing.test_function"], [2225, "ivy_tests.test_ivy.helpers.function_testing.test_function"]], "test_method() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2205, "ivy_tests.test_ivy.helpers.function_testing.test_method"], [2226, "ivy_tests.test_ivy.helpers.function_testing.test_method"]], "var_fn() (in module ivy_tests.test_ivy.helpers.function_testing)": [[2205, "ivy_tests.test_ivy.helpers.function_testing.var_fn"], [2227, "ivy_tests.test_ivy.helpers.function_testing.var_fn"]], "interruptedtest": [[2228, "ivy_tests.test_ivy.helpers.globals.InterruptedTest"]], "testdata (class in ivy_tests.test_ivy.helpers.globals)": [[2228, "ivy_tests.test_ivy.helpers.globals.TestData"], [2230, "ivy_tests.test_ivy.helpers.globals.TestData"]], "__init__() (ivy_tests.test_ivy.helpers.globals.interruptedtest method)": [[2228, "ivy_tests.test_ivy.helpers.globals.InterruptedTest.__init__"], [2229, "ivy_tests.test_ivy.helpers.globals.InterruptedTest.__init__"]], "__init__() (ivy_tests.test_ivy.helpers.globals.testdata method)": [[2228, "ivy_tests.test_ivy.helpers.globals.TestData.__init__"], [2230, "ivy_tests.test_ivy.helpers.globals.TestData.__init__"]], "fn_name (ivy_tests.test_ivy.helpers.globals.testdata attribute)": [[2228, "ivy_tests.test_ivy.helpers.globals.TestData.fn_name"], [2230, "ivy_tests.test_ivy.helpers.globals.TestData.fn_name"]], "fn_tree (ivy_tests.test_ivy.helpers.globals.testdata attribute)": [[2228, "ivy_tests.test_ivy.helpers.globals.TestData.fn_tree"], [2230, "ivy_tests.test_ivy.helpers.globals.TestData.fn_tree"]], "ivy_tests.test_ivy.helpers.globals": [[2228, "module-ivy_tests.test_ivy.helpers.globals"]], "remove_all_current_framework() (in module ivy_tests.test_ivy.helpers.globals)": [[2228, "ivy_tests.test_ivy.helpers.globals.remove_all_current_framework"], [2231, "ivy_tests.test_ivy.helpers.globals.remove_all_current_framework"]], "setup_api_test() (in module ivy_tests.test_ivy.helpers.globals)": [[2228, "ivy_tests.test_ivy.helpers.globals.setup_api_test"], [2232, "ivy_tests.test_ivy.helpers.globals.setup_api_test"]], "setup_frontend_test() (in module ivy_tests.test_ivy.helpers.globals)": [[2228, "ivy_tests.test_ivy.helpers.globals.setup_frontend_test"], [2233, "ivy_tests.test_ivy.helpers.globals.setup_frontend_test"]], "supported_device_dtypes (ivy_tests.test_ivy.helpers.globals.testdata attribute)": [[2228, "ivy_tests.test_ivy.helpers.globals.TestData.supported_device_dtypes"], [2230, "ivy_tests.test_ivy.helpers.globals.TestData.supported_device_dtypes"]], "teardown_api_test() (in module ivy_tests.test_ivy.helpers.globals)": [[2228, "ivy_tests.test_ivy.helpers.globals.teardown_api_test"], [2234, "ivy_tests.test_ivy.helpers.globals.teardown_api_test"]], "teardown_frontend_test() (in module ivy_tests.test_ivy.helpers.globals)": [[2228, "ivy_tests.test_ivy.helpers.globals.teardown_frontend_test"], [2235, "ivy_tests.test_ivy.helpers.globals.teardown_frontend_test"]], "test_fn (ivy_tests.test_ivy.helpers.globals.testdata attribute)": [[2228, "ivy_tests.test_ivy.helpers.globals.TestData.test_fn"], [2230, "ivy_tests.test_ivy.helpers.globals.TestData.test_fn"]], "interruptedtest (class in ivy_tests.test_ivy.helpers.globals)": [[2229, "ivy_tests.test_ivy.helpers.globals.InterruptedTest"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers": [[2236, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers"]], "array_and_broadcastable_shape() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2237, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_and_broadcastable_shape"], [2238, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_and_broadcastable_shape"]], "array_bools() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2237, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_bools"], [2239, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_bools"]], "array_indices_axis() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2237, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_indices_axis"], [2240, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_indices_axis"]], "array_values() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2237, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_values"], [2241, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.array_values"]], "arrays_and_axes() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2237, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.arrays_and_axes"], [2242, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.arrays_and_axes"]], "arrays_for_pooling() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2237, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.arrays_for_pooling"], [2243, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.arrays_for_pooling"]], "broadcast_shapes() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2237, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.broadcast_shapes"], [2244, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.broadcast_shapes"]], "dtype_and_values() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2237, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.dtype_and_values"], [2245, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.dtype_and_values"]], "dtype_values_axis() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2237, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.dtype_values_axis"], [2246, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.dtype_values_axis"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers": [[2237, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers"]], "list_of_length() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2237, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.list_of_length"], [2247, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.list_of_length"]], "lists() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2237, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.lists"], [2248, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.lists"]], "mutually_broadcastable_shapes() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2237, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.mutually_broadcastable_shapes"], [2249, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.mutually_broadcastable_shapes"]], "prod() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers)": [[2237, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.prod"], [2250, "ivy_tests.test_ivy.helpers.hypothesis_helpers.array_helpers.prod"]], "array_dtypes() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers)": [[2251, "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers.array_dtypes"], [2252, "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers.array_dtypes"]], "get_castable_dtype() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers)": [[2251, "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers.get_castable_dtype"], [2253, "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers.get_castable_dtype"]], "get_dtypes() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers)": [[2251, "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers.get_dtypes"], [2254, "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers.get_dtypes"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers": [[2251, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.dtype_helpers"]], "apply_safety_factor() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2255, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.apply_safety_factor"], [2256, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.apply_safety_factor"]], "embedding_helper() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2255, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.embedding_helper"], [2257, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.embedding_helper"]], "get_axis() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2255, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_axis"], [2258, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_axis"]], "get_bounds() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2255, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_bounds"], [2259, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_bounds"]], "get_mean_std() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2255, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_mean_std"], [2260, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_mean_std"]], "get_shape() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2255, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_shape"], [2261, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.get_shape"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers": [[2255, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers"]], "matrix_is_stable() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2255, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.matrix_is_stable"], [2262, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.matrix_is_stable"]], "reshape_shapes() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2255, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.reshape_shapes"], [2263, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.reshape_shapes"]], "subsets() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2255, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.subsets"], [2264, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.subsets"]], "x_and_filters() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers)": [[2255, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.x_and_filters"], [2265, "ivy_tests.test_ivy.helpers.hypothesis_helpers.general_helpers.x_and_filters"]], "floats() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers)": [[2266, "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers.floats"], [2267, "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers.floats"]], "ints() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers)": [[2266, "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers.ints"], [2268, "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers.ints"]], "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers": [[2266, "module-ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers"]], "number() (in module ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers)": [[2266, "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers.number"], [2269, "ivy_tests.test_ivy.helpers.hypothesis_helpers.number_helpers.number"]], "frontendmethoddata (class in ivy_tests.test_ivy.helpers.structs)": [[2270, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData"], [2271, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData"]], "__init__() (ivy_tests.test_ivy.helpers.structs.frontendmethoddata method)": [[2270, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.__init__"], [2271, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.__init__"]], "framework_init_module (ivy_tests.test_ivy.helpers.structs.frontendmethoddata attribute)": [[2270, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.framework_init_module"], [2271, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.framework_init_module"]], "init_name (ivy_tests.test_ivy.helpers.structs.frontendmethoddata attribute)": [[2270, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.init_name"], [2271, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.init_name"]], "ivy_init_module (ivy_tests.test_ivy.helpers.structs.frontendmethoddata attribute)": [[2270, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.ivy_init_module"], [2271, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.ivy_init_module"]], "ivy_tests.test_ivy.helpers.structs": [[2270, "module-ivy_tests.test_ivy.helpers.structs"]], "method_name (ivy_tests.test_ivy.helpers.structs.frontendmethoddata attribute)": [[2270, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.method_name"], [2271, "ivy_tests.test_ivy.helpers.structs.FrontendMethodData.method_name"]], "frontendfunctiontestflags (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2272, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendFunctionTestFlags"], [2273, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendFunctionTestFlags"]], "frontendmethodtestflags (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2272, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendMethodTestFlags"], [2274, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendMethodTestFlags"]], "functiontestflags (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2272, "ivy_tests.test_ivy.helpers.test_parameter_flags.FunctionTestFlags"], [2275, "ivy_tests.test_ivy.helpers.test_parameter_flags.FunctionTestFlags"]], "methodtestflags (class in ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2272, "ivy_tests.test_ivy.helpers.test_parameter_flags.MethodTestFlags"], [2276, "ivy_tests.test_ivy.helpers.test_parameter_flags.MethodTestFlags"]], "__init__() (ivy_tests.test_ivy.helpers.test_parameter_flags.frontendfunctiontestflags method)": [[2272, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendFunctionTestFlags.__init__"], [2273, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendFunctionTestFlags.__init__"]], "__init__() (ivy_tests.test_ivy.helpers.test_parameter_flags.frontendmethodtestflags method)": [[2272, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendMethodTestFlags.__init__"], [2274, "ivy_tests.test_ivy.helpers.test_parameter_flags.FrontendMethodTestFlags.__init__"]], "__init__() (ivy_tests.test_ivy.helpers.test_parameter_flags.functiontestflags method)": [[2272, "ivy_tests.test_ivy.helpers.test_parameter_flags.FunctionTestFlags.__init__"], [2275, "ivy_tests.test_ivy.helpers.test_parameter_flags.FunctionTestFlags.__init__"]], "__init__() (ivy_tests.test_ivy.helpers.test_parameter_flags.methodtestflags method)": [[2272, "ivy_tests.test_ivy.helpers.test_parameter_flags.MethodTestFlags.__init__"], [2276, "ivy_tests.test_ivy.helpers.test_parameter_flags.MethodTestFlags.__init__"]], "build_flag() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2272, "ivy_tests.test_ivy.helpers.test_parameter_flags.build_flag"], [2277, "ivy_tests.test_ivy.helpers.test_parameter_flags.build_flag"]], "frontend_function_flags() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2272, "ivy_tests.test_ivy.helpers.test_parameter_flags.frontend_function_flags"], [2278, "ivy_tests.test_ivy.helpers.test_parameter_flags.frontend_function_flags"]], "frontend_method_flags() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2272, "ivy_tests.test_ivy.helpers.test_parameter_flags.frontend_method_flags"], [2279, "ivy_tests.test_ivy.helpers.test_parameter_flags.frontend_method_flags"]], "function_flags() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2272, "ivy_tests.test_ivy.helpers.test_parameter_flags.function_flags"], [2280, "ivy_tests.test_ivy.helpers.test_parameter_flags.function_flags"]], "ivy_tests.test_ivy.helpers.test_parameter_flags": [[2272, "module-ivy_tests.test_ivy.helpers.test_parameter_flags"]], "method_flags() (in module ivy_tests.test_ivy.helpers.test_parameter_flags)": [[2272, "ivy_tests.test_ivy.helpers.test_parameter_flags.method_flags"], [2281, "ivy_tests.test_ivy.helpers.test_parameter_flags.method_flags"]], "handle_frontend_method() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[2282, "ivy_tests.test_ivy.helpers.testing_helpers.handle_frontend_method"], [2283, "ivy_tests.test_ivy.helpers.testing_helpers.handle_frontend_method"]], "handle_frontend_test() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[2282, "ivy_tests.test_ivy.helpers.testing_helpers.handle_frontend_test"], [2284, "ivy_tests.test_ivy.helpers.testing_helpers.handle_frontend_test"]], "handle_method() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[2282, "ivy_tests.test_ivy.helpers.testing_helpers.handle_method"], [2285, "ivy_tests.test_ivy.helpers.testing_helpers.handle_method"]], "handle_test() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[2282, "ivy_tests.test_ivy.helpers.testing_helpers.handle_test"], [2286, "ivy_tests.test_ivy.helpers.testing_helpers.handle_test"]], "ivy_tests.test_ivy.helpers.testing_helpers": [[2282, "module-ivy_tests.test_ivy.helpers.testing_helpers"]], "num_positional_args() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[2282, "ivy_tests.test_ivy.helpers.testing_helpers.num_positional_args"], [2287, "ivy_tests.test_ivy.helpers.testing_helpers.num_positional_args"]], "num_positional_args_method() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[2282, "ivy_tests.test_ivy.helpers.testing_helpers.num_positional_args_method"], [2288, "ivy_tests.test_ivy.helpers.testing_helpers.num_positional_args_method"]], "seed() (in module ivy_tests.test_ivy.helpers.testing_helpers)": [[2282, "ivy_tests.test_ivy.helpers.testing_helpers.seed"], [2289, "ivy_tests.test_ivy.helpers.testing_helpers.seed"]], "cprint() (in module ivy.verbosity)": [[2290, "ivy.verbosity.cprint"], [2291, "ivy.verbosity.cprint"]], "ivy.verbosity": [[2290, "module-ivy.verbosity"]]}})